

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Aug 27 16:17:59 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    47                           	dabs	1,0x7E,2
    48     0000                     
    49                           ; Generated 22/03/2023 GMT
    50                           ; 
    51                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F887 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83     0000                     	;# 
    84     0001                     	;# 
    85     0002                     	;# 
    86     0003                     	;# 
    87     0004                     	;# 
    88     0005                     	;# 
    89     0006                     	;# 
    90     0007                     	;# 
    91     0008                     	;# 
    92     0009                     	;# 
    93     000A                     	;# 
    94     000B                     	;# 
    95     000C                     	;# 
    96     000D                     	;# 
    97     000E                     	;# 
    98     000E                     	;# 
    99     000F                     	;# 
   100     0010                     	;# 
   101     0011                     	;# 
   102     0012                     	;# 
   103     0013                     	;# 
   104     0014                     	;# 
   105     0015                     	;# 
   106     0015                     	;# 
   107     0016                     	;# 
   108     0017                     	;# 
   109     0018                     	;# 
   110     0019                     	;# 
   111     001A                     	;# 
   112     001B                     	;# 
   113     001B                     	;# 
   114     001C                     	;# 
   115     001D                     	;# 
   116     001E                     	;# 
   117     001F                     	;# 
   118     0081                     	;# 
   119     0085                     	;# 
   120     0086                     	;# 
   121     0087                     	;# 
   122     0088                     	;# 
   123     0089                     	;# 
   124     008C                     	;# 
   125     008D                     	;# 
   126     008E                     	;# 
   127     008F                     	;# 
   128     0090                     	;# 
   129     0091                     	;# 
   130     0092                     	;# 
   131     0093                     	;# 
   132     0093                     	;# 
   133     0093                     	;# 
   134     0094                     	;# 
   135     0095                     	;# 
   136     0096                     	;# 
   137     0097                     	;# 
   138     0098                     	;# 
   139     0099                     	;# 
   140     009A                     	;# 
   141     009B                     	;# 
   142     009C                     	;# 
   143     009D                     	;# 
   144     009E                     	;# 
   145     009F                     	;# 
   146     0105                     	;# 
   147     0107                     	;# 
   148     0108                     	;# 
   149     0109                     	;# 
   150     010C                     	;# 
   151     010C                     	;# 
   152     010D                     	;# 
   153     010E                     	;# 
   154     010F                     	;# 
   155     0185                     	;# 
   156     0187                     	;# 
   157     0188                     	;# 
   158     0189                     	;# 
   159     018C                     	;# 
   160     018D                     	;# 
   161     0000                     	;# 
   162     0001                     	;# 
   163     0002                     	;# 
   164     0003                     	;# 
   165     0004                     	;# 
   166     0005                     	;# 
   167     0006                     	;# 
   168     0007                     	;# 
   169     0008                     	;# 
   170     0009                     	;# 
   171     000A                     	;# 
   172     000B                     	;# 
   173     000C                     	;# 
   174     000D                     	;# 
   175     000E                     	;# 
   176     000E                     	;# 
   177     000F                     	;# 
   178     0010                     	;# 
   179     0011                     	;# 
   180     0012                     	;# 
   181     0013                     	;# 
   182     0014                     	;# 
   183     0015                     	;# 
   184     0015                     	;# 
   185     0016                     	;# 
   186     0017                     	;# 
   187     0018                     	;# 
   188     0019                     	;# 
   189     001A                     	;# 
   190     001B                     	;# 
   191     001B                     	;# 
   192     001C                     	;# 
   193     001D                     	;# 
   194     001E                     	;# 
   195     001F                     	;# 
   196     0081                     	;# 
   197     0085                     	;# 
   198     0086                     	;# 
   199     0087                     	;# 
   200     0088                     	;# 
   201     0089                     	;# 
   202     008C                     	;# 
   203     008D                     	;# 
   204     008E                     	;# 
   205     008F                     	;# 
   206     0090                     	;# 
   207     0091                     	;# 
   208     0092                     	;# 
   209     0093                     	;# 
   210     0093                     	;# 
   211     0093                     	;# 
   212     0094                     	;# 
   213     0095                     	;# 
   214     0096                     	;# 
   215     0097                     	;# 
   216     0098                     	;# 
   217     0099                     	;# 
   218     009A                     	;# 
   219     009B                     	;# 
   220     009C                     	;# 
   221     009D                     	;# 
   222     009E                     	;# 
   223     009F                     	;# 
   224     0105                     	;# 
   225     0107                     	;# 
   226     0108                     	;# 
   227     0109                     	;# 
   228     010C                     	;# 
   229     010C                     	;# 
   230     010D                     	;# 
   231     010E                     	;# 
   232     010F                     	;# 
   233     0185                     	;# 
   234     0187                     	;# 
   235     0188                     	;# 
   236     0189                     	;# 
   237     018C                     	;# 
   238     018D                     	;# 
   239     0000                     	;# 
   240     0001                     	;# 
   241     0002                     	;# 
   242     0003                     	;# 
   243     0004                     	;# 
   244     0005                     	;# 
   245     0006                     	;# 
   246     0007                     	;# 
   247     0008                     	;# 
   248     0009                     	;# 
   249     000A                     	;# 
   250     000B                     	;# 
   251     000C                     	;# 
   252     000D                     	;# 
   253     000E                     	;# 
   254     000E                     	;# 
   255     000F                     	;# 
   256     0010                     	;# 
   257     0011                     	;# 
   258     0012                     	;# 
   259     0013                     	;# 
   260     0014                     	;# 
   261     0015                     	;# 
   262     0015                     	;# 
   263     0016                     	;# 
   264     0017                     	;# 
   265     0018                     	;# 
   266     0019                     	;# 
   267     001A                     	;# 
   268     001B                     	;# 
   269     001B                     	;# 
   270     001C                     	;# 
   271     001D                     	;# 
   272     001E                     	;# 
   273     001F                     	;# 
   274     0081                     	;# 
   275     0085                     	;# 
   276     0086                     	;# 
   277     0087                     	;# 
   278     0088                     	;# 
   279     0089                     	;# 
   280     008C                     	;# 
   281     008D                     	;# 
   282     008E                     	;# 
   283     008F                     	;# 
   284     0090                     	;# 
   285     0091                     	;# 
   286     0092                     	;# 
   287     0093                     	;# 
   288     0093                     	;# 
   289     0093                     	;# 
   290     0094                     	;# 
   291     0095                     	;# 
   292     0096                     	;# 
   293     0097                     	;# 
   294     0098                     	;# 
   295     0099                     	;# 
   296     009A                     	;# 
   297     009B                     	;# 
   298     009C                     	;# 
   299     009D                     	;# 
   300     009E                     	;# 
   301     009F                     	;# 
   302     0105                     	;# 
   303     0107                     	;# 
   304     0108                     	;# 
   305     0109                     	;# 
   306     010C                     	;# 
   307     010C                     	;# 
   308     010D                     	;# 
   309     010E                     	;# 
   310     010F                     	;# 
   311     0185                     	;# 
   312     0187                     	;# 
   313     0188                     	;# 
   314     0189                     	;# 
   315     018C                     	;# 
   316     018D                     	;# 
   317     0000                     	;# 
   318     0001                     	;# 
   319     0002                     	;# 
   320     0003                     	;# 
   321     0004                     	;# 
   322     0005                     	;# 
   323     0006                     	;# 
   324     0007                     	;# 
   325     0008                     	;# 
   326     0009                     	;# 
   327     000A                     	;# 
   328     000B                     	;# 
   329     000C                     	;# 
   330     000D                     	;# 
   331     000E                     	;# 
   332     000E                     	;# 
   333     000F                     	;# 
   334     0010                     	;# 
   335     0011                     	;# 
   336     0012                     	;# 
   337     0013                     	;# 
   338     0014                     	;# 
   339     0015                     	;# 
   340     0015                     	;# 
   341     0016                     	;# 
   342     0017                     	;# 
   343     0018                     	;# 
   344     0019                     	;# 
   345     001A                     	;# 
   346     001B                     	;# 
   347     001B                     	;# 
   348     001C                     	;# 
   349     001D                     	;# 
   350     001E                     	;# 
   351     001F                     	;# 
   352     0081                     	;# 
   353     0085                     	;# 
   354     0086                     	;# 
   355     0087                     	;# 
   356     0088                     	;# 
   357     0089                     	;# 
   358     008C                     	;# 
   359     008D                     	;# 
   360     008E                     	;# 
   361     008F                     	;# 
   362     0090                     	;# 
   363     0091                     	;# 
   364     0092                     	;# 
   365     0093                     	;# 
   366     0093                     	;# 
   367     0093                     	;# 
   368     0094                     	;# 
   369     0095                     	;# 
   370     0096                     	;# 
   371     0097                     	;# 
   372     0098                     	;# 
   373     0099                     	;# 
   374     009A                     	;# 
   375     009B                     	;# 
   376     009C                     	;# 
   377     009D                     	;# 
   378     009E                     	;# 
   379     009F                     	;# 
   380     0105                     	;# 
   381     0107                     	;# 
   382     0108                     	;# 
   383     0109                     	;# 
   384     010C                     	;# 
   385     010C                     	;# 
   386     010D                     	;# 
   387     010E                     	;# 
   388     010F                     	;# 
   389     0185                     	;# 
   390     0187                     	;# 
   391     0188                     	;# 
   392     0189                     	;# 
   393     018C                     	;# 
   394     018D                     	;# 
   395     0000                     	;# 
   396     0001                     	;# 
   397     0002                     	;# 
   398     0003                     	;# 
   399     0004                     	;# 
   400     0005                     	;# 
   401     0006                     	;# 
   402     0007                     	;# 
   403     0008                     	;# 
   404     0009                     	;# 
   405     000A                     	;# 
   406     000B                     	;# 
   407     000C                     	;# 
   408     000D                     	;# 
   409     000E                     	;# 
   410     000E                     	;# 
   411     000F                     	;# 
   412     0010                     	;# 
   413     0011                     	;# 
   414     0012                     	;# 
   415     0013                     	;# 
   416     0014                     	;# 
   417     0015                     	;# 
   418     0015                     	;# 
   419     0016                     	;# 
   420     0017                     	;# 
   421     0018                     	;# 
   422     0019                     	;# 
   423     001A                     	;# 
   424     001B                     	;# 
   425     001B                     	;# 
   426     001C                     	;# 
   427     001D                     	;# 
   428     001E                     	;# 
   429     001F                     	;# 
   430     0081                     	;# 
   431     0085                     	;# 
   432     0086                     	;# 
   433     0087                     	;# 
   434     0088                     	;# 
   435     0089                     	;# 
   436     008C                     	;# 
   437     008D                     	;# 
   438     008E                     	;# 
   439     008F                     	;# 
   440     0090                     	;# 
   441     0091                     	;# 
   442     0092                     	;# 
   443     0093                     	;# 
   444     0093                     	;# 
   445     0093                     	;# 
   446     0094                     	;# 
   447     0095                     	;# 
   448     0096                     	;# 
   449     0097                     	;# 
   450     0098                     	;# 
   451     0099                     	;# 
   452     009A                     	;# 
   453     009B                     	;# 
   454     009C                     	;# 
   455     009D                     	;# 
   456     009E                     	;# 
   457     009F                     	;# 
   458     0105                     	;# 
   459     0107                     	;# 
   460     0108                     	;# 
   461     0109                     	;# 
   462     010C                     	;# 
   463     010C                     	;# 
   464     010D                     	;# 
   465     010E                     	;# 
   466     010F                     	;# 
   467     0185                     	;# 
   468     0187                     	;# 
   469     0188                     	;# 
   470     0189                     	;# 
   471     018C                     	;# 
   472     018D                     	;# 
   473     001A                     _RCREG	set	26
   474     0019                     _TXREG	set	25
   475     0008                     _PORTDbits	set	8
   476     0013                     _SSPBUF	set	19
   477     0014                     _SSPCON	set	20
   478     0008                     _PORTD	set	8
   479     0064                     _TXIF	set	100
   480     00C4                     _CREN	set	196
   481     00C7                     _SPEN	set	199
   482     0043                     _RD3	set	67
   483     0047                     _RD7	set	71
   484     0046                     _RD6	set	70
   485     0045                     _RD5	set	69
   486     0044                     _RD4	set	68
   487     0063                     _SSPIF	set	99
   488     005E                     _PEIE	set	94
   489     005F                     _GIE	set	95
   490     0065                     _RCIF	set	101
   491     009A                     _SPBRGH	set	154
   492     0099                     _SPBRG	set	153
   493     0091                     _SSPCON2bits	set	145
   494     0087                     _TRISCbits	set	135
   495     0094                     _SSPSTAT	set	148
   496     0093                     _SSPADD	set	147
   497     0091                     _SSPCON2	set	145
   498     008F                     _OSCCONbits	set	143
   499     0088                     _TRISD	set	136
   500     0464                     _TXIE	set	1124
   501     04C5                     _TXEN	set	1221
   502     0465                     _RCIE	set	1125
   503     04C4                     _SYNC	set	1220
   504     0463                     _SSPIE	set	1123
   505     043C                     _TRISC4	set	1084
   506     043B                     _TRISC3	set	1083
   507     0478                     _SCS	set	1144
   508     0189                     _ANSELH	set	393
   509     0188                     _ANSEL	set	392
   510                           
   511                           	psect	strings
   512     0800                     __pstrings:
   513     0800                     stringtab:
   514     0800                     __stringtab:
   515                           
   516                           ;	String table - string pointers are 1 byte each
   517     0800  1BFF               	btfsc	btemp+1,7
   518     0801  280A               	ljmp	stringcode
   519     0802  1383               	bcf	3,7
   520     0803  187F               	btfsc	btemp+1,0
   521     0804  1783               	bsf	3,7
   522     0805  0800               	movf	0,w
   523     0806  0A84               	incf	4,f
   524     0807  1903               	skipnz
   525     0808  0AFF               	incf	btemp+1,f
   526     0809  0008               	return
   527     080A                     stringcode:
   528     080A                     stringdir:
   529     080A  3008               	movlw	high stringdir
   530     080B  008A               	movwf	10
   531     080C  0804               	movf	4,w
   532     080D  0A84               	incf	4,f
   533     080E  0782               	addwf	2,f
   534     080F                     __stringbase:
   535     080F  3400               	retlw	0
   536     0810                     __end_of__stringtab:
   537     0810                     STR_7:
   538     0810  3450               	retlw	80	;'P'
   539     0811  3455               	retlw	85	;'U'
   540     0812  3445               	retlw	69	;'E'
   541     0813  3452               	retlw	82	;'R'
   542     0814  3454               	retlw	84	;'T'
   543     0815  3441               	retlw	65	;'A'
   544     0816  343A               	retlw	58	;':'
   545     0817  3400               	retlw	0
   546     0818                     STR_4:
   547     0818  3425               	retlw	37	;'%'
   548     0819  3452               	retlw	82	;'R'
   549     081A  3448               	retlw	72	;'H'
   550     081B  3400               	retlw	0
   551     081C                     STR_6:
   552     081C  3470               	retlw	112	;'p'
   553     081D  3470               	retlw	112	;'p'
   554     081E  346D               	retlw	109	;'m'
   555     081F  3400               	retlw	0
   556     0820                     STR_5:
   557     0820  3447               	retlw	71	;'G'
   558     0821  343A               	retlw	58	;':'
   559     0822  3400               	retlw	0
   560     0823                     STR_3:
   561     0823  3448               	retlw	72	;'H'
   562     0824  343A               	retlw	58	;':'
   563     0825  3400               	retlw	0
   564     0826                     STR_1:
   565     0826  3454               	retlw	84	;'T'
   566     0827  343A               	retlw	58	;':'
   567     0828  3400               	retlw	0
   568     0829                     STR_2:
   569     0829  345E               	retlw	94	;'^'
   570     082A  3443               	retlw	67	;'C'
   571     082B  3400               	retlw	0
   572                           
   573                           	psect	cinit
   574     000F                     start_initialization:	
   575                           ; #config settings
   576                           
   577     000F                     __initialization:
   578                           
   579                           ; Clear objects allocated to COMMON
   580     000F  01FA               	clrf	__pbssCOMMON& (0+127)
   581     0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   582                           
   583                           ; Clear objects allocated to BANK0
   584     0011  1383               	bcf	3,7	;select IRP bank0
   585     0012  304A               	movlw	low __pbssBANK0
   586     0013  0084               	movwf	4
   587     0014  305D               	movlw	low (__pbssBANK0+19)
   588     0015  120A  118A  27F8  120A  118A  	fcall	clear_ram0
   589     001A                     end_of_initialization:	
   590                           ;End of C runtime variable initialization code
   591                           
   592     001A                     __end_of__initialization:
   593     001A  0183               	clrf	3
   594     001B  120A  118A  2EA9   	ljmp	_main	;jump to C main() function
   595                           
   596                           	psect	bssCOMMON
   597     007A                     __pbssCOMMON:
   598     007A                     _servoPos:
   599     007A                     	ds	1
   600     007B                     _tempC:
   601     007B                     	ds	1
   602                           
   603                           	psect	bssBANK0
   604     004A                     __pbssBANK0:
   605     004A                     _gasPPM:
   606     004A                     	ds	2
   607     004C                     _prev:
   608     004C                     	ds	1
   609     004D                     _motorCon:
   610     004D                     	ds	1
   611     004E                     _counter:
   612     004E                     	ds	1
   613     004F                     _n_gas:
   614     004F                     	ds	1
   615     0050                     _n_hum:
   616     0050                     	ds	1
   617     0051                     _n_temp:
   618     0051                     	ds	1
   619     0052                     _S_gas:
   620     0052                     	ds	4
   621     0056                     _S_temp:
   622     0056                     	ds	4
   623     005A                     _S_hum:
   624     005A                     	ds	3
   625                           
   626                           	psect	clrtext
   627     07F8                     clear_ram0:	
   628                           ;	Called with FSR containing the base address, and
   629                           ;	W with the last address+1
   630                           
   631     07F8  0064               	clrwdt	;clear the watchdog before getting into this loop
   632     07F9                     clrloop0:
   633     07F9  0180               	clrf	0	;clear RAM location pointed to by FSR
   634     07FA  0A84               	incf	4,f	;increment pointer
   635     07FB  0604               	xorwf	4,w	;XOR with final address
   636     07FC  1903               	btfsc	3,2	;have we reached the end yet?
   637     07FD  3400               	retlw	0	;all done for this memory range, return
   638     07FE  0604               	xorwf	4,w	;XOR again to restore value
   639     07FF  2FF9               	goto	clrloop0	;do the next byte
   640                           
   641                           	psect	cstackCOMMON
   642     0070                     __pcstackCOMMON:
   643     0070                     ?_UART_read_char:
   644     0070                     ??_UART_read_char:	
   645                           ; 1 bytes @ 0x0
   646                           
   647     0070                     ?_setup:	
   648                           ; 1 bytes @ 0x0
   649                           
   650     0070                     ?_requestHum:	
   651                           ; 1 bytes @ 0x0
   652                           
   653     0070                     ?_requestTemp:	
   654                           ; 1 bytes @ 0x0
   655                           
   656     0070                     ?_requestGas:	
   657                           ; 1 bytes @ 0x0
   658                           
   659     0070                     ?_writeMotors:	
   660                           ; 1 bytes @ 0x0
   661                           
   662     0070                     ?_LDC_output:	
   663                           ; 1 bytes @ 0x0
   664                           
   665     0070                     ?_sendDataUART:	
   666                           ; 1 bytes @ 0x0
   667                           
   668     0070                     ?_Lcd_Init:	
   669                           ; 1 bytes @ 0x0
   670                           
   671     0070                     ?_I2C_Master_Start:	
   672                           ; 1 bytes @ 0x0
   673                           
   674     0070                     ?_I2C_Master_RepeatedStart:	
   675                           ; 1 bytes @ 0x0
   676                           
   677     0070                     ?_I2C_Master_Stop:	
   678                           ; 1 bytes @ 0x0
   679                           
   680     0070                     ?_Lcd_Clear:	
   681                           ; 1 bytes @ 0x0
   682                           
   683     0070                     ?_UART_write_char:	
   684                           ; 1 bytes @ 0x0
   685                           
   686     0070                     ?_isr:	
   687                           ; 1 bytes @ 0x0
   688                           
   689     0070                     ??_isr:	
   690                           ; 1 bytes @ 0x0
   691                           
   692     0070                     ?_I2C_Master_Wait:	
   693                           ; 1 bytes @ 0x0
   694                           
   695     0070                     ?_Lcd_Port:	
   696                           ; 1 bytes @ 0x0
   697                           
   698     0070                     ?_Lcd_Cmd:	
   699                           ; 1 bytes @ 0x0
   700                           
   701     0070                     ?_Lcd_Write_Char:	
   702                           ; 1 bytes @ 0x0
   703                           
   704     0070                     ?_main:	
   705                           ; 1 bytes @ 0x0
   706                           
   707                           
   708                           ; 2 bytes @ 0x0
   709     0070                     	ds	2
   710     0072                     ??_I2C_Master_Start:
   711     0072                     ?_I2C_Master_Write:	
   712                           ; 1 bytes @ 0x2
   713                           
   714     0072                     ??_I2C_Master_RepeatedStart:	
   715                           ; 1 bytes @ 0x2
   716                           
   717     0072                     ??_I2C_Master_Stop:	
   718                           ; 1 bytes @ 0x2
   719                           
   720     0072                     ??_UART_write_char:	
   721                           ; 1 bytes @ 0x2
   722                           
   723     0072                     ??_I2C_Master_Wait:	
   724                           ; 1 bytes @ 0x2
   725                           
   726     0072                     ??_Lcd_Port:	
   727                           ; 1 bytes @ 0x2
   728                           
   729     0072                     ?_I2C_Master_Read:	
   730                           ; 1 bytes @ 0x2
   731                           
   732     0072                     ?___lwdiv:	
   733                           ; 2 bytes @ 0x2
   734                           
   735     0072                     ?___lwmod:	
   736                           ; 2 bytes @ 0x2
   737                           
   738     0072                     ?___lmul:	
   739                           ; 2 bytes @ 0x2
   740                           
   741     0072                     ?___lldiv:	
   742                           ; 4 bytes @ 0x2
   743                           
   744     0072                     Lcd_Port@a:	
   745                           ; 4 bytes @ 0x2
   746                           
   747     0072                     UART_write_char@c:	
   748                           ; 1 bytes @ 0x2
   749                           
   750     0072                     I2C_Master_Write@d:	
   751                           ; 1 bytes @ 0x2
   752                           
   753     0072                     I2C_Master_Read@a:	
   754                           ; 2 bytes @ 0x2
   755                           
   756     0072                     ___lwdiv@divisor:	
   757                           ; 2 bytes @ 0x2
   758                           
   759     0072                     ___lwmod@divisor:	
   760                           ; 2 bytes @ 0x2
   761                           
   762     0072                     ___lmul@multiplier:	
   763                           ; 2 bytes @ 0x2
   764                           
   765     0072                     ___lldiv@divisor:	
   766                           ; 4 bytes @ 0x2
   767                           
   768                           
   769                           ; 4 bytes @ 0x2
   770     0072                     	ds	1
   771     0073                     ??_sendDataUART:
   772     0073                     ??_Lcd_Cmd:	
   773                           ; 1 bytes @ 0x3
   774                           
   775     0073                     ??_Lcd_Write_Char:	
   776                           ; 1 bytes @ 0x3
   777                           
   778                           
   779                           ; 1 bytes @ 0x3
   780     0073                     	ds	1
   781     0074                     ??_writeMotors:
   782     0074                     ??_I2C_Master_Write:	
   783                           ; 1 bytes @ 0x4
   784                           
   785     0074                     ??_I2C_Master_Read:	
   786                           ; 1 bytes @ 0x4
   787                           
   788     0074                     Lcd_Write_Char@temp:	
   789                           ; 1 bytes @ 0x4
   790                           
   791     0074                     ___lwdiv@dividend:	
   792                           ; 1 bytes @ 0x4
   793                           
   794     0074                     ___lwmod@dividend:	
   795                           ; 2 bytes @ 0x4
   796                           
   797                           
   798                           ; 2 bytes @ 0x4
   799     0074                     	ds	1
   800     0075                     Lcd_Cmd@a:
   801     0075                     Lcd_Write_Char@y:	
   802                           ; 1 bytes @ 0x5
   803                           
   804                           
   805                           ; 1 bytes @ 0x5
   806     0075                     	ds	1
   807     0076                     ??_Lcd_Init:
   808     0076                     ??_Lcd_Clear:	
   809                           ; 1 bytes @ 0x6
   810                           
   811     0076                     ?_Lcd_Set_Cursor:	
   812                           ; 1 bytes @ 0x6
   813                           
   814     0076                     ??___lwdiv:	
   815                           ; 1 bytes @ 0x6
   816                           
   817     0076                     ??___lwmod:	
   818                           ; 1 bytes @ 0x6
   819                           
   820     0076                     Lcd_Set_Cursor@b:	
   821                           ; 1 bytes @ 0x6
   822                           
   823     0076                     Lcd_Write_Char@a:	
   824                           ; 1 bytes @ 0x6
   825                           
   826     0076                     ___lwmod@counter:	
   827                           ; 1 bytes @ 0x6
   828                           
   829     0076                     I2C_Master_Read@temp:	
   830                           ; 1 bytes @ 0x6
   831                           
   832     0076                     ___lwdiv@quotient:	
   833                           ; 2 bytes @ 0x6
   834                           
   835     0076                     ___lmul@multiplicand:	
   836                           ; 2 bytes @ 0x6
   837                           
   838     0076                     ___lldiv@dividend:	
   839                           ; 4 bytes @ 0x6
   840                           
   841                           
   842                           ; 4 bytes @ 0x6
   843     0076                     	ds	1
   844     0077                     ??_Lcd_Set_Cursor:
   845     0077                     ?_Lcd_Write_String:	
   846                           ; 1 bytes @ 0x7
   847                           
   848     0077                     Lcd_Write_String@a:	
   849                           ; 1 bytes @ 0x7
   850                           
   851                           
   852                           ; 2 bytes @ 0x7
   853     0077                     	ds	1
   854     0078                     ??_requestHum:
   855     0078                     ___lwdiv@counter:	
   856                           ; 1 bytes @ 0x8
   857                           
   858                           
   859                           ; 1 bytes @ 0x8
   860     0078                     	ds	1
   861     0079                     ??_num_to_string:
   862                           
   863                           ; 1 bytes @ 0x9
   864     0079                     	ds	1
   865                           
   866                           	psect	cstackBANK0
   867     0020                     __pcstackBANK0:
   868     0020                     ?_num_to_string:
   869     0020                     ??_Lcd_Write_String:	
   870                           ; 1 bytes @ 0x0
   871                           
   872     0020                     ??___lmul:	
   873                           ; 1 bytes @ 0x0
   874                           
   875     0020                     ??___lldiv:	
   876                           ; 1 bytes @ 0x0
   877                           
   878     0020                     Lcd_Set_Cursor@a:	
   879                           ; 1 bytes @ 0x0
   880                           
   881     0020                     num_to_string@num:	
   882                           ; 1 bytes @ 0x0
   883                           
   884                           
   885                           ; 2 bytes @ 0x0
   886     0020                     	ds	1
   887     0021                     Lcd_Set_Cursor@z:
   888     0021                     ___lmul@product:	
   889                           ; 1 bytes @ 0x1
   890                           
   891     0021                     ___lldiv@quotient:	
   892                           ; 4 bytes @ 0x1
   893                           
   894                           
   895                           ; 4 bytes @ 0x1
   896     0021                     	ds	1
   897     0022                     num_to_string@dig8:
   898     0022                     Lcd_Set_Cursor@y:	
   899                           ; 1 bytes @ 0x2
   900                           
   901                           
   902                           ; 1 bytes @ 0x2
   903     0022                     	ds	1
   904     0023                     num_to_string@len:
   905     0023                     Lcd_Set_Cursor@temp:	
   906                           ; 1 bytes @ 0x3
   907                           
   908     0023                     Lcd_Write_String@i:	
   909                           ; 1 bytes @ 0x3
   910                           
   911                           
   912                           ; 2 bytes @ 0x3
   913     0023                     	ds	1
   914     0024                     num_to_string@div3:
   915                           
   916                           ; 2 bytes @ 0x4
   917     0024                     	ds	1
   918     0025                     ?___aldiv:
   919     0025                     ___lldiv@counter:	
   920                           ; 4 bytes @ 0x5
   921                           
   922     0025                     ___aldiv@divisor:	
   923                           ; 1 bytes @ 0x5
   924                           
   925                           
   926                           ; 4 bytes @ 0x5
   927     0025                     	ds	1
   928     0026                     ?_I2C_Master_Init:
   929     0026                     num_to_string@centenas:	
   930                           ; 1 bytes @ 0x6
   931                           
   932     0026                     I2C_Master_Init@c:	
   933                           ; 2 bytes @ 0x6
   934                           
   935                           
   936                           ; 4 bytes @ 0x6
   937     0026                     	ds	2
   938     0028                     num_to_string@div1:
   939                           
   940                           ; 2 bytes @ 0x8
   941     0028                     	ds	1
   942     0029                     ___aldiv@dividend:
   943                           
   944                           ; 4 bytes @ 0x9
   945     0029                     	ds	1
   946     002A                     ??_I2C_Master_Init:
   947     002A                     num_to_string@div2:	
   948                           ; 1 bytes @ 0xA
   949                           
   950                           
   951                           ; 2 bytes @ 0xA
   952     002A                     	ds	2
   953     002C                     num_to_string@decenas:
   954                           
   955                           ; 2 bytes @ 0xC
   956     002C                     	ds	1
   957     002D                     ??___aldiv:
   958                           
   959                           ; 1 bytes @ 0xD
   960     002D                     	ds	1
   961     002E                     ___aldiv@counter:
   962     002E                     num_to_string@unidades:	
   963                           ; 1 bytes @ 0xE
   964                           
   965                           
   966                           ; 2 bytes @ 0xE
   967     002E                     	ds	1
   968     002F                     ___aldiv@sign:
   969                           
   970                           ; 1 bytes @ 0xF
   971     002F                     	ds	1
   972     0030                     ??_LDC_output:
   973     0030                     ___aldiv@quotient:	
   974                           ; 1 bytes @ 0x10
   975                           
   976                           
   977                           ; 4 bytes @ 0x10
   978     0030                     	ds	4
   979     0034                     ?_UART_RX_config:
   980     0034                     ?_UART_TX_config:	
   981                           ; 1 bytes @ 0x14
   982                           
   983     0034                     ?_map:	
   984                           ; 1 bytes @ 0x14
   985                           
   986     0034                     map@min1:	
   987                           ; 2 bytes @ 0x14
   988                           
   989     0034                     UART_RX_config@baudrate:	
   990                           ; 1 bytes @ 0x14
   991                           
   992     0034                     UART_TX_config@baudrate:	
   993                           ; 4 bytes @ 0x14
   994                           
   995                           
   996                           ; 4 bytes @ 0x14
   997     0034                     	ds	1
   998     0035                     map@max1:
   999                           
  1000                           ; 1 bytes @ 0x15
  1001     0035                     	ds	1
  1002     0036                     map@min2:
  1003                           
  1004                           ; 1 bytes @ 0x16
  1005     0036                     	ds	1
  1006     0037                     map@max2:
  1007                           
  1008                           ; 4 bytes @ 0x17
  1009     0037                     	ds	1
  1010     0038                     ??_UART_RX_config:
  1011     0038                     ??_UART_TX_config:	
  1012                           ; 1 bytes @ 0x18
  1013                           
  1014                           
  1015                           ; 1 bytes @ 0x18
  1016     0038                     	ds	3
  1017     003B                     ??_map:
  1018                           
  1019                           ; 1 bytes @ 0x1B
  1020     003B                     	ds	2
  1021     003D                     _UART_RX_config$1019:
  1022     003D                     _UART_TX_config$1020:	
  1023                           ; 4 bytes @ 0x1D
  1024                           
  1025                           
  1026                           ; 4 bytes @ 0x1D
  1027     003D                     	ds	4
  1028     0041                     UART_RX_config@BR:
  1029     0041                     UART_TX_config@BR:	
  1030                           ; 4 bytes @ 0x21
  1031                           
  1032                           
  1033                           ; 4 bytes @ 0x21
  1034     0041                     	ds	2
  1035     0043                     map@val:
  1036                           
  1037                           ; 1 bytes @ 0x23
  1038     0043                     	ds	1
  1039     0044                     ??_requestTemp:
  1040     0044                     ??_requestGas:	
  1041                           ; 1 bytes @ 0x24
  1042                           
  1043                           
  1044                           ; 1 bytes @ 0x24
  1045     0044                     	ds	1
  1046     0045                     ??_setup:
  1047                           
  1048                           ; 1 bytes @ 0x25
  1049     0045                     	ds	2
  1050     0047                     ??_main:
  1051                           
  1052                           ; 1 bytes @ 0x27
  1053     0047                     	ds	3
  1054                           
  1055                           	psect	maintext
  1056     06A9                     __pmaintext:	
  1057 ;;
  1058 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1059 ;;
  1060 ;; *************** function _main *****************
  1061 ;; Defined at:
  1062 ;;		line 98 in file "master.c"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;		None
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;		None
  1067 ;; Return value:  Size  Location     Type
  1068 ;;                  2   94[None  ] int 
  1069 ;; Registers used:
  1070 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1071 ;; Tracked objects:
  1072 ;;		On entry : B00/0
  1073 ;;		On exit  : 0/0
  1074 ;;		Unchanged: 0/0
  1075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1076 ;;      Params:         0       0       0       0       0
  1077 ;;      Locals:         0       0       0       0       0
  1078 ;;      Temps:          0       3       0       0       0
  1079 ;;      Totals:         0       3       0       0       0
  1080 ;;Total ram usage:        3 bytes
  1081 ;; Hardware stack levels required when called: 6
  1082 ;; This function calls:
  1083 ;;		_LDC_output
  1084 ;;		_requestGas
  1085 ;;		_requestHum
  1086 ;;		_requestTemp
  1087 ;;		_sendDataUART
  1088 ;;		_setup
  1089 ;;		_writeMotors
  1090 ;; This function is called by:
  1091 ;;		Startup code after reset
  1092 ;; This function uses a non-reentrant model
  1093 ;;
  1094                           
  1095     06A9                     _main:	
  1096                           ;psect for function _main
  1097                           
  1098     06A9                     l2172:	
  1099                           ;incstack = 0
  1100                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1101                           
  1102                           
  1103                           ;master.c: 99:     setup();
  1104     06A9  120A  118A  257F  120A  118A  	fcall	_setup
  1105     06AE                     l2174:
  1106                           
  1107                           ;master.c: 103:         if (counter >= 25){
  1108     06AE  3019               	movlw	25
  1109     06AF  1283               	bcf	3,5	;RP0=0, select bank0
  1110     06B0  1303               	bcf	3,6	;RP1=0, select bank0
  1111     06B1  024E               	subwf	_counter,w
  1112     06B2  1C03               	skipc
  1113     06B3  2EB5               	goto	u1701
  1114     06B4  2EB6               	goto	u1700
  1115     06B5                     u1701:
  1116     06B5  2EBE               	goto	l2180
  1117     06B6                     u1700:
  1118     06B6                     l2176:
  1119                           
  1120                           ;master.c: 104:             requestHum();
  1121     06B6  120A  118A  2618  120A  118A  	fcall	_requestHum
  1122     06BB                     l2178:
  1123                           
  1124                           ;master.c: 105:             counter = 0;
  1125     06BB  1283               	bcf	3,5	;RP0=0, select bank0
  1126     06BC  1303               	bcf	3,6	;RP1=0, select bank0
  1127     06BD  01CE               	clrf	_counter
  1128     06BE                     l2180:
  1129                           
  1130                           ;master.c: 107:         requestTemp();
  1131     06BE  120A  118A  245E  120A  118A  	fcall	_requestTemp
  1132     06C3                     l2182:
  1133                           
  1134                           ;master.c: 108:         requestGas();
  1135     06C3  120A  118A  2393  120A  118A  	fcall	_requestGas
  1136     06C8                     l2184:
  1137                           
  1138                           ;master.c: 111:         writeMotors();
  1139     06C8  120A  118A  23F9  120A  118A  	fcall	_writeMotors
  1140     06CD                     l2186:
  1141                           
  1142                           ;master.c: 113:         LDC_output();
  1143     06CD  120A  118A  20D7  120A  118A  	fcall	_LDC_output
  1144     06D2                     l2188:
  1145                           
  1146                           ;master.c: 114:         sendDataUART();
  1147     06D2  120A  118A  2736  120A  118A  	fcall	_sendDataUART
  1148     06D7                     l2190:
  1149                           
  1150                           ;master.c: 116:         counter++;
  1151     06D7  3001               	movlw	1
  1152     06D8  00FF               	movwf	btemp+1
  1153     06D9  087F               	movf	btemp+1,w
  1154     06DA  1283               	bcf	3,5	;RP0=0, select bank0
  1155     06DB  1303               	bcf	3,6	;RP1=0, select bank0
  1156     06DC  07CE               	addwf	_counter,f
  1157     06DD                     l2192:
  1158                           
  1159                           ;master.c: 117:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1160     06DD  3002               	movlw	2
  1161     06DE  1283               	bcf	3,5	;RP0=0, select bank0
  1162     06DF  1303               	bcf	3,6	;RP1=0, select bank0
  1163     06E0  00C9               	movwf	??_main+2
  1164     06E1  3004               	movlw	4
  1165     06E2  00C8               	movwf	??_main+1
  1166     06E3  30B9               	movlw	185
  1167     06E4  00C7               	movwf	??_main
  1168     06E5                     u1717:
  1169     06E5  0BC7               	decfsz	??_main,f
  1170     06E6  2EE5               	goto	u1717
  1171     06E7  0BC8               	decfsz	??_main+1,f
  1172     06E8  2EE5               	goto	u1717
  1173     06E9  0BC9               	decfsz	??_main+2,f
  1174     06EA  2EE5               	goto	u1717
  1175     06EB  2EEC               	nop2
  1176     06EC  2EAE               	goto	l2174
  1177     06ED  120A  118A  280C   	ljmp	start
  1178     06F0                     __end_of_main:
  1179                           
  1180                           	psect	text1
  1181     03F9                     __ptext1:	
  1182 ;; *************** function _writeMotors *****************
  1183 ;; Defined at:
  1184 ;;		line 187 in file "master.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;		None
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;		None
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  1    wreg      void 
  1191 ;; Registers used:
  1192 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1198 ;;      Params:         0       0       0       0       0
  1199 ;;      Locals:         0       0       0       0       0
  1200 ;;      Temps:          2       0       0       0       0
  1201 ;;      Totals:         2       0       0       0       0
  1202 ;;Total ram usage:        2 bytes
  1203 ;; Hardware stack levels used: 1
  1204 ;; Hardware stack levels required when called: 4
  1205 ;; This function calls:
  1206 ;;		_I2C_Master_Start
  1207 ;;		_I2C_Master_Stop
  1208 ;;		_I2C_Master_Write
  1209 ;; This function is called by:
  1210 ;;		_main
  1211 ;; This function uses a non-reentrant model
  1212 ;;
  1213                           
  1214     03F9                     _writeMotors:	
  1215                           ;psect for function _writeMotors
  1216                           
  1217     03F9                     l1778:	
  1218                           ;incstack = 0
  1219                           ; Regs used in _writeMotors: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1220                           
  1221                           
  1222                           ;master.c: 189:     if(tempC > 50 && gasPPM > 400)
  1223     03F9  3033               	movlw	51
  1224     03FA  027B               	subwf	_tempC,w
  1225     03FB  1C03               	skipc
  1226     03FC  2BFE               	goto	u1261
  1227     03FD  2BFF               	goto	u1260
  1228     03FE                     u1261:
  1229     03FE  2C0C               	goto	l1784
  1230     03FF                     u1260:
  1231     03FF                     l1780:
  1232     03FF  3001               	movlw	1
  1233     0400  1283               	bcf	3,5	;RP0=0, select bank0
  1234     0401  1303               	bcf	3,6	;RP1=0, select bank0
  1235     0402  024B               	subwf	_gasPPM+1,w
  1236     0403  3091               	movlw	145
  1237     0404  1903               	skipnz
  1238     0405  024A               	subwf	_gasPPM,w
  1239     0406  1C03               	skipc
  1240     0407  2C09               	goto	u1271
  1241     0408  2C0A               	goto	u1270
  1242     0409                     u1271:
  1243     0409  2C0C               	goto	l1784
  1244     040A                     u1270:
  1245     040A                     l1782:
  1246                           
  1247                           ;master.c: 190:         motorCon |= 0x10;
  1248     040A  164D               	bsf	_motorCon,4
  1249     040B  2C12               	goto	l115
  1250     040C                     l1784:
  1251                           
  1252                           ;master.c: 192:         motorCon &= 0x0F;
  1253     040C  300F               	movlw	15
  1254     040D  00FF               	movwf	btemp+1
  1255     040E  087F               	movf	btemp+1,w
  1256     040F  1283               	bcf	3,5	;RP0=0, select bank0
  1257     0410  1303               	bcf	3,6	;RP1=0, select bank0
  1258     0411  05CD               	andwf	_motorCon,f
  1259     0412                     l115:
  1260                           
  1261                           ;master.c: 196:     motorCon &= 0xF0;
  1262     0412  30F0               	movlw	240
  1263     0413  00FF               	movwf	btemp+1
  1264     0414  087F               	movf	btemp+1,w
  1265     0415  05CD               	andwf	_motorCon,f
  1266                           
  1267                           ;master.c: 197:     switch(servoPos){
  1268     0416  2C20               	goto	l1790
  1269     0417                     l117:	
  1270                           ;master.c: 198:         case '0':
  1271                           
  1272                           
  1273                           ;master.c: 199:             motorCon |= 0x02;
  1274     0417  14CD               	bsf	_motorCon,1
  1275                           
  1276                           ;master.c: 200:             break;
  1277     0418  2C33               	goto	l1792
  1278     0419                     l1786:
  1279                           
  1280                           ;master.c: 202:             motorCon |= 0x03;
  1281     0419  3003               	movlw	3
  1282     041A  00FF               	movwf	btemp+1
  1283     041B  087F               	movf	btemp+1,w
  1284     041C  04CD               	iorwf	_motorCon,f
  1285                           
  1286                           ;master.c: 203:             break;
  1287     041D  2C33               	goto	l1792
  1288     041E                     l120:	
  1289                           ;master.c: 204:         case '2':
  1290                           
  1291                           
  1292                           ;master.c: 205:             motorCon |= 0x04;
  1293     041E  154D               	bsf	_motorCon,2
  1294                           
  1295                           ;master.c: 206:             break;
  1296     041F  2C33               	goto	l1792
  1297     0420                     l1790:
  1298     0420  087A               	movf	_servoPos,w
  1299     0421  00F4               	movwf	??_writeMotors
  1300     0422  01F5               	clrf	??_writeMotors+1
  1301                           
  1302                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1303                           ; Switch size 1, requested type "simple"
  1304                           ; Number of cases is 1, Range of values is 0 to 0
  1305                           ; switch strategies available:
  1306                           ; Name         Instructions Cycles
  1307                           ; simple_byte            4     3 (average)
  1308                           ; direct_byte           11     8 (fixed)
  1309                           ; jumptable            260     6 (fixed)
  1310                           ;	Chosen strategy is simple_byte
  1311     0423  0875               	movf	??_writeMotors+1,w
  1312     0424  3A00               	xorlw	0	; case 0
  1313     0425  1903               	skipnz
  1314     0426  2C28               	goto	l2218
  1315     0427  2C17               	goto	l117
  1316     0428                     l2218:
  1317                           
  1318                           ; Switch size 1, requested type "simple"
  1319                           ; Number of cases is 3, Range of values is 48 to 50
  1320                           ; switch strategies available:
  1321                           ; Name         Instructions Cycles
  1322                           ; simple_byte           10     6 (average)
  1323                           ; direct_byte           20    11 (fixed)
  1324                           ; jumptable            263     9 (fixed)
  1325                           ;	Chosen strategy is simple_byte
  1326     0428  0874               	movf	??_writeMotors,w
  1327     0429  3A30               	xorlw	48	; case 48
  1328     042A  1903               	skipnz
  1329     042B  2C17               	goto	l117
  1330     042C  3A01               	xorlw	1	; case 49
  1331     042D  1903               	skipnz
  1332     042E  2C19               	goto	l1786
  1333     042F  3A03               	xorlw	3	; case 50
  1334     0430  1903               	skipnz
  1335     0431  2C1E               	goto	l120
  1336     0432  2C17               	goto	l117
  1337     0433                     l1792:
  1338                           
  1339                           ;master.c: 213:     I2C_Master_Start();
  1340     0433  120A  158A  26D2  120A  118A  	fcall	_I2C_Master_Start
  1341                           
  1342                           ;master.c: 214:     I2C_Master_Write(0x30 +0);
  1343     0438  3030               	movlw	48
  1344     0439  00F2               	movwf	I2C_Master_Write@d
  1345     043A  3000               	movlw	0
  1346     043B  00F3               	movwf	I2C_Master_Write@d+1
  1347     043C  120A  158A  26E4  120A  118A  	fcall	_I2C_Master_Write
  1348                           
  1349                           ;master.c: 215:     I2C_Master_Write(motorCon);
  1350     0441  1283               	bcf	3,5	;RP0=0, select bank0
  1351     0442  1303               	bcf	3,6	;RP1=0, select bank0
  1352     0443  084D               	movf	_motorCon,w
  1353     0444  00F4               	movwf	??_writeMotors
  1354     0445  01F5               	clrf	??_writeMotors+1
  1355     0446  0874               	movf	??_writeMotors,w
  1356     0447  00F2               	movwf	I2C_Master_Write@d
  1357     0448  0875               	movf	??_writeMotors+1,w
  1358     0449  00F3               	movwf	I2C_Master_Write@d+1
  1359     044A  120A  158A  26E4  120A  118A  	fcall	_I2C_Master_Write
  1360                           
  1361                           ;master.c: 216:     I2C_Master_Stop();
  1362     044F  120A  158A  26DB  120A  118A  	fcall	_I2C_Master_Stop
  1363     0454                     l1794:
  1364                           
  1365                           ;master.c: 217:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1366     0454  3034               	movlw	52
  1367     0455  00F5               	movwf	??_writeMotors+1
  1368     0456  30F1               	movlw	241
  1369     0457  00F4               	movwf	??_writeMotors
  1370     0458                     u1727:
  1371     0458  0BF4               	decfsz	??_writeMotors,f
  1372     0459  2C58               	goto	u1727
  1373     045A  0BF5               	decfsz	??_writeMotors+1,f
  1374     045B  2C58               	goto	u1727
  1375     045C  2C5D               	nop2
  1376     045D                     l122:
  1377     045D  0008               	return
  1378     045E                     __end_of_writeMotors:
  1379                           
  1380                           	psect	text2
  1381     057F                     __ptext2:	
  1382 ;; *************** function _setup *****************
  1383 ;; Defined at:
  1384 ;;		line 121 in file "master.c"
  1385 ;; Parameters:    Size  Location     Type
  1386 ;;		None
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;		None
  1389 ;; Return value:  Size  Location     Type
  1390 ;;                  1    wreg      void 
  1391 ;; Registers used:
  1392 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1393 ;; Tracked objects:
  1394 ;;		On entry : 0/0
  1395 ;;		On exit  : 0/0
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1398 ;;      Params:         0       0       0       0       0
  1399 ;;      Locals:         0       0       0       0       0
  1400 ;;      Temps:          0       2       0       0       0
  1401 ;;      Totals:         0       2       0       0       0
  1402 ;;Total ram usage:        2 bytes
  1403 ;; Hardware stack levels used: 1
  1404 ;; Hardware stack levels required when called: 5
  1405 ;; This function calls:
  1406 ;;		_I2C_Master_Init
  1407 ;;		_Lcd_Init
  1408 ;;		_UART_RX_config
  1409 ;;		_UART_TX_config
  1410 ;; This function is called by:
  1411 ;;		_main
  1412 ;; This function uses a non-reentrant model
  1413 ;;
  1414                           
  1415     057F                     _setup:	
  1416                           ;psect for function _setup
  1417                           
  1418     057F                     l2098:	
  1419                           ;incstack = 0
  1420                           ; Regs used in _setup: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1421                           
  1422                           
  1423                           ;master.c: 122:     ANSEL = 0;
  1424     057F  1683               	bsf	3,5	;RP0=1, select bank3
  1425     0580  1703               	bsf	3,6	;RP1=1, select bank3
  1426     0581  0188               	clrf	8	;volatile
  1427                           
  1428                           ;master.c: 123:     ANSELH= 0;
  1429     0582  0189               	clrf	9	;volatile
  1430                           
  1431                           ;master.c: 125:     TRISD = 0;
  1432     0583  1683               	bsf	3,5	;RP0=1, select bank1
  1433     0584  1303               	bcf	3,6	;RP1=0, select bank1
  1434     0585  0188               	clrf	8	;volatile
  1435                           
  1436                           ;master.c: 126:     PORTD = 0;
  1437     0586  1283               	bcf	3,5	;RP0=0, select bank0
  1438     0587  1303               	bcf	3,6	;RP1=0, select bank0
  1439     0588  0188               	clrf	8	;volatile
  1440     0589                     l2100:
  1441                           
  1442                           ;master.c: 129:     OSCCONbits.IRCF = 0b111;
  1443     0589  3070               	movlw	112
  1444     058A  1683               	bsf	3,5	;RP0=1, select bank1
  1445     058B  1303               	bcf	3,6	;RP1=0, select bank1
  1446     058C  048F               	iorwf	15,f	;volatile
  1447     058D                     l2102:
  1448                           
  1449                           ;master.c: 130:     SCS = 1;
  1450     058D  140F               	bsf	15,0	;volatile
  1451     058E                     l2104:
  1452                           
  1453                           ;master.c: 133:     Lcd_Init();
  1454     058E  120A  118A  2522  120A  118A  	fcall	_Lcd_Init
  1455     0593                     l2106:
  1456                           
  1457                           ;master.c: 134:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1458     0593  301A               	movlw	26
  1459     0594  1283               	bcf	3,5	;RP0=0, select bank0
  1460     0595  1303               	bcf	3,6	;RP1=0, select bank0
  1461     0596  00C6               	movwf	??_setup+1
  1462     0597  30F7               	movlw	247
  1463     0598  00C5               	movwf	??_setup
  1464     0599                     u1737:
  1465     0599  0BC5               	decfsz	??_setup,f
  1466     059A  2D99               	goto	u1737
  1467     059B  0BC6               	decfsz	??_setup+1,f
  1468     059C  2D99               	goto	u1737
  1469     059D  2D9E               	nop2
  1470     059E                     l2108:
  1471                           
  1472                           ;master.c: 137:     I2C_Master_Init(100000);
  1473     059E  3000               	movlw	0
  1474     059F  1283               	bcf	3,5	;RP0=0, select bank0
  1475     05A0  1303               	bcf	3,6	;RP1=0, select bank0
  1476     05A1  00A9               	movwf	I2C_Master_Init@c+3
  1477     05A2  3001               	movlw	1
  1478     05A3  00A8               	movwf	I2C_Master_Init@c+2
  1479     05A4  3086               	movlw	134
  1480     05A5  00A7               	movwf	I2C_Master_Init@c+1
  1481     05A6  30A0               	movlw	160
  1482     05A7  00A6               	movwf	I2C_Master_Init@c
  1483     05A8  120A  158A  27C8  120A  118A  	fcall	_I2C_Master_Init
  1484     05AD                     l2110:
  1485                           
  1486                           ;master.c: 140:     UART_RX_config(9600);
  1487     05AD  3000               	movlw	0
  1488     05AE  1283               	bcf	3,5	;RP0=0, select bank0
  1489     05AF  1303               	bcf	3,6	;RP1=0, select bank0
  1490     05B0  00B7               	movwf	UART_RX_config@baudrate+3
  1491     05B1  3000               	movlw	0
  1492     05B2  00B6               	movwf	UART_RX_config@baudrate+2
  1493     05B3  3025               	movlw	37
  1494     05B4  00B5               	movwf	UART_RX_config@baudrate+1
  1495     05B5  3080               	movlw	128
  1496     05B6  00B4               	movwf	UART_RX_config@baudrate
  1497     05B7  120A  118A  2227  120A  118A  	fcall	_UART_RX_config
  1498     05BC                     l2112:
  1499                           
  1500                           ;master.c: 141:     UART_TX_config(9600);
  1501     05BC  3000               	movlw	0
  1502     05BD  1283               	bcf	3,5	;RP0=0, select bank0
  1503     05BE  1303               	bcf	3,6	;RP1=0, select bank0
  1504     05BF  00B7               	movwf	UART_TX_config@baudrate+3
  1505     05C0  3000               	movlw	0
  1506     05C1  00B6               	movwf	UART_TX_config@baudrate+2
  1507     05C2  3025               	movlw	37
  1508     05C3  00B5               	movwf	UART_TX_config@baudrate+1
  1509     05C4  3080               	movlw	128
  1510     05C5  00B4               	movwf	UART_TX_config@baudrate
  1511     05C6  120A  118A  22AA  120A  118A  	fcall	_UART_TX_config
  1512     05CB                     l102:
  1513     05CB  0008               	return
  1514     05CC                     __end_of_setup:
  1515                           
  1516                           	psect	text3
  1517     02AA                     __ptext3:	
  1518 ;; *************** function _UART_TX_config *****************
  1519 ;; Defined at:
  1520 ;;		line 25 in file "UART.c"
  1521 ;; Parameters:    Size  Location     Type
  1522 ;;  baudrate        4   20[BANK0 ] long 
  1523 ;; Auto vars:     Size  Location     Type
  1524 ;;  BR              4   33[BANK0 ] long 
  1525 ;; Return value:  Size  Location     Type
  1526 ;;                  1    wreg      void 
  1527 ;; Registers used:
  1528 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1529 ;; Tracked objects:
  1530 ;;		On entry : 0/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1534 ;;      Params:         0       4       0       0       0
  1535 ;;      Locals:         0       8       0       0       0
  1536 ;;      Temps:          0       5       0       0       0
  1537 ;;      Totals:         0      17       0       0       0
  1538 ;;Total ram usage:       17 bytes
  1539 ;; Hardware stack levels used: 1
  1540 ;; Hardware stack levels required when called: 3
  1541 ;; This function calls:
  1542 ;;		___aldiv
  1543 ;; This function is called by:
  1544 ;;		_setup
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548     02AA                     _UART_TX_config:	
  1549                           ;psect for function _UART_TX_config
  1550                           
  1551     02AA                     l2048:	
  1552                           ;incstack = 0
  1553                           ; Regs used in _UART_TX_config: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1554                           
  1555                           
  1556                           ;UART.c: 28:     long BR;;UART.c: 29:     BR = ((8000000/baudrate)/64) - 1;
  1557     02AA  1283               	bcf	3,5	;RP0=0, select bank0
  1558     02AB  1303               	bcf	3,6	;RP1=0, select bank0
  1559     02AC  0837               	movf	UART_TX_config@baudrate+3,w
  1560     02AD  00A8               	movwf	___aldiv@divisor+3
  1561     02AE  0836               	movf	UART_TX_config@baudrate+2,w
  1562     02AF  00A7               	movwf	___aldiv@divisor+2
  1563     02B0  0835               	movf	UART_TX_config@baudrate+1,w
  1564     02B1  00A6               	movwf	___aldiv@divisor+1
  1565     02B2  0834               	movf	UART_TX_config@baudrate,w
  1566     02B3  00A5               	movwf	___aldiv@divisor
  1567     02B4  3000               	movlw	0
  1568     02B5  00AC               	movwf	___aldiv@dividend+3
  1569     02B6  307A               	movlw	122
  1570     02B7  00AB               	movwf	___aldiv@dividend+2
  1571     02B8  3012               	movlw	18
  1572     02B9  00AA               	movwf	___aldiv@dividend+1
  1573     02BA  3000               	movlw	0
  1574     02BB  00A9               	movwf	___aldiv@dividend
  1575     02BC  120A  118A  218A  120A  118A  	fcall	___aldiv
  1576     02C1  1283               	bcf	3,5	;RP0=0, select bank0
  1577     02C2  1303               	bcf	3,6	;RP1=0, select bank0
  1578     02C3  0828               	movf	?___aldiv+3,w
  1579     02C4  00C0               	movwf	_UART_TX_config$1020+3
  1580     02C5  0827               	movf	?___aldiv+2,w
  1581     02C6  00BF               	movwf	_UART_TX_config$1020+2
  1582     02C7  0826               	movf	?___aldiv+1,w
  1583     02C8  00BE               	movwf	_UART_TX_config$1020+1
  1584     02C9  0825               	movf	?___aldiv,w
  1585     02CA  00BD               	movwf	_UART_TX_config$1020
  1586                           
  1587                           ;UART.c: 28:     long BR;;UART.c: 29:     BR = ((8000000/baudrate)/64) - 1;
  1588     02CB  30FF               	movlw	255
  1589     02CC  00B8               	movwf	??_UART_TX_config
  1590     02CD  30FF               	movlw	255
  1591     02CE  00B9               	movwf	??_UART_TX_config+1
  1592     02CF  30FF               	movlw	255
  1593     02D0  00BA               	movwf	??_UART_TX_config+2
  1594     02D1  30FF               	movlw	255
  1595     02D2  00BB               	movwf	??_UART_TX_config+3
  1596     02D3  3000               	movlw	0
  1597     02D4  00A8               	movwf	___aldiv@divisor+3
  1598     02D5  3000               	movlw	0
  1599     02D6  00A7               	movwf	___aldiv@divisor+2
  1600     02D7  3000               	movlw	0
  1601     02D8  00A6               	movwf	___aldiv@divisor+1
  1602     02D9  3040               	movlw	64
  1603     02DA  00A5               	movwf	___aldiv@divisor
  1604     02DB  0840               	movf	_UART_TX_config$1020+3,w
  1605     02DC  00AC               	movwf	___aldiv@dividend+3
  1606     02DD  083F               	movf	_UART_TX_config$1020+2,w
  1607     02DE  00AB               	movwf	___aldiv@dividend+2
  1608     02DF  083E               	movf	_UART_TX_config$1020+1,w
  1609     02E0  00AA               	movwf	___aldiv@dividend+1
  1610     02E1  083D               	movf	_UART_TX_config$1020,w
  1611     02E2  00A9               	movwf	___aldiv@dividend
  1612     02E3  120A  118A  218A  120A  118A  	fcall	___aldiv
  1613     02E8  1283               	bcf	3,5	;RP0=0, select bank0
  1614     02E9  1303               	bcf	3,6	;RP1=0, select bank0
  1615     02EA  0825               	movf	?___aldiv,w
  1616     02EB  07B8               	addwf	??_UART_TX_config,f
  1617     02EC  0826               	movf	?___aldiv+1,w
  1618     02ED  1803               	skipnc
  1619     02EE  0F26               	incfsz	?___aldiv+1,w
  1620     02EF  2AF1               	goto	u1600
  1621     02F0  2AF2               	goto	u1601
  1622     02F1                     u1600:
  1623     02F1  07B9               	addwf	??_UART_TX_config+1,f
  1624     02F2                     u1601:
  1625     02F2  0827               	movf	?___aldiv+2,w
  1626     02F3  1803               	skipnc
  1627     02F4  0F27               	incfsz	?___aldiv+2,w
  1628     02F5  2AF7               	goto	u1602
  1629     02F6  2AF8               	goto	u1603
  1630     02F7                     u1602:
  1631     02F7  07BA               	addwf	??_UART_TX_config+2,f
  1632     02F8                     u1603:
  1633     02F8  0828               	movf	?___aldiv+3,w
  1634     02F9  1803               	skipnc
  1635     02FA  0A28               	incf	?___aldiv+3,w
  1636     02FB  07BB               	addwf	??_UART_TX_config+3,f
  1637     02FC  083B               	movf	??_UART_TX_config+3,w
  1638     02FD  00C4               	movwf	UART_TX_config@BR+3
  1639     02FE  083A               	movf	??_UART_TX_config+2,w
  1640     02FF  00C3               	movwf	UART_TX_config@BR+2
  1641     0300  0839               	movf	??_UART_TX_config+1,w
  1642     0301  00C2               	movwf	UART_TX_config@BR+1
  1643     0302  0838               	movf	??_UART_TX_config,w
  1644     0303  00C1               	movwf	UART_TX_config@BR
  1645     0304                     l2050:
  1646                           
  1647                           ;UART.c: 30:     SPBRG = BR & 0x00FF;
  1648     0304  0841               	movf	UART_TX_config@BR,w
  1649     0305  1683               	bsf	3,5	;RP0=1, select bank1
  1650     0306  1303               	bcf	3,6	;RP1=0, select bank1
  1651     0307  0099               	movwf	25	;volatile
  1652     0308                     l2052:
  1653                           
  1654                           ;UART.c: 31:     SPBRGH = (BR & 0xFF00) >> 8;
  1655     0308  1283               	bcf	3,5	;RP0=0, select bank0
  1656     0309  1303               	bcf	3,6	;RP1=0, select bank0
  1657     030A  0841               	movf	UART_TX_config@BR,w
  1658     030B  00B8               	movwf	??_UART_TX_config
  1659     030C  0842               	movf	UART_TX_config@BR+1,w
  1660     030D  00B9               	movwf	??_UART_TX_config+1
  1661     030E  0843               	movf	UART_TX_config@BR+2,w
  1662     030F  00BA               	movwf	??_UART_TX_config+2
  1663     0310  0844               	movf	UART_TX_config@BR+3,w
  1664     0311  00BB               	movwf	??_UART_TX_config+3
  1665     0312  3008               	movlw	8
  1666     0313  00BC               	movwf	??_UART_TX_config+4
  1667     0314                     u1615:
  1668     0314  0D3B               	rlf	??_UART_TX_config+3,w
  1669     0315  0CBB               	rrf	??_UART_TX_config+3,f
  1670     0316  0CBA               	rrf	??_UART_TX_config+2,f
  1671     0317  0CB9               	rrf	??_UART_TX_config+1,f
  1672     0318  0CB8               	rrf	??_UART_TX_config,f
  1673     0319                     u1610:
  1674     0319  0BBC               	decfsz	??_UART_TX_config+4,f
  1675     031A  2B14               	goto	u1615
  1676     031B  0838               	movf	??_UART_TX_config,w
  1677     031C  1683               	bsf	3,5	;RP0=1, select bank1
  1678     031D  1303               	bcf	3,6	;RP1=0, select bank1
  1679     031E  009A               	movwf	26	;volatile
  1680     031F                     l2054:
  1681                           
  1682                           ;UART.c: 33:     SYNC = 0;
  1683     031F  1218               	bcf	24,4	;volatile
  1684     0320                     l2056:
  1685                           
  1686                           ;UART.c: 34:     SPEN = 1;
  1687     0320  1283               	bcf	3,5	;RP0=0, select bank0
  1688     0321  1303               	bcf	3,6	;RP1=0, select bank0
  1689     0322  1798               	bsf	24,7	;volatile
  1690     0323                     l2058:
  1691                           
  1692                           ;UART.c: 36:     TXEN = 1;
  1693     0323  1683               	bsf	3,5	;RP0=1, select bank1
  1694     0324  1303               	bcf	3,6	;RP1=0, select bank1
  1695     0325  1698               	bsf	24,5	;volatile
  1696     0326                     l2060:
  1697                           
  1698                           ;UART.c: 37:     TXIE = 0;
  1699     0326  120C               	bcf	12,4	;volatile
  1700     0327                     l2062:
  1701                           
  1702                           ;UART.c: 38:     TXIF = 0;
  1703     0327  1283               	bcf	3,5	;RP0=0, select bank0
  1704     0328  1303               	bcf	3,6	;RP1=0, select bank0
  1705     0329  120C               	bcf	12,4	;volatile
  1706     032A                     l285:
  1707     032A  0008               	return
  1708     032B                     __end_of_UART_TX_config:
  1709                           
  1710                           	psect	text4
  1711     0227                     __ptext4:	
  1712 ;; *************** function _UART_RX_config *****************
  1713 ;; Defined at:
  1714 ;;		line 6 in file "UART.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;  baudrate        4   20[BANK0 ] long 
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;  BR              4   33[BANK0 ] long 
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  1    wreg      void 
  1721 ;; Registers used:
  1722 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1728 ;;      Params:         0       4       0       0       0
  1729 ;;      Locals:         0       8       0       0       0
  1730 ;;      Temps:          0       5       0       0       0
  1731 ;;      Totals:         0      17       0       0       0
  1732 ;;Total ram usage:       17 bytes
  1733 ;; Hardware stack levels used: 1
  1734 ;; Hardware stack levels required when called: 3
  1735 ;; This function calls:
  1736 ;;		___aldiv
  1737 ;; This function is called by:
  1738 ;;		_setup
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742     0227                     _UART_RX_config:	
  1743                           ;psect for function _UART_RX_config
  1744                           
  1745     0227                     l2028:	
  1746                           ;incstack = 0
  1747                           ; Regs used in _UART_RX_config: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1748                           
  1749                           
  1750                           ;UART.c: 9:     long BR;;UART.c: 10:     BR = ((8000000/baudrate)/64) - 1;
  1751     0227  1283               	bcf	3,5	;RP0=0, select bank0
  1752     0228  1303               	bcf	3,6	;RP1=0, select bank0
  1753     0229  0837               	movf	UART_RX_config@baudrate+3,w
  1754     022A  00A8               	movwf	___aldiv@divisor+3
  1755     022B  0836               	movf	UART_RX_config@baudrate+2,w
  1756     022C  00A7               	movwf	___aldiv@divisor+2
  1757     022D  0835               	movf	UART_RX_config@baudrate+1,w
  1758     022E  00A6               	movwf	___aldiv@divisor+1
  1759     022F  0834               	movf	UART_RX_config@baudrate,w
  1760     0230  00A5               	movwf	___aldiv@divisor
  1761     0231  3000               	movlw	0
  1762     0232  00AC               	movwf	___aldiv@dividend+3
  1763     0233  307A               	movlw	122
  1764     0234  00AB               	movwf	___aldiv@dividend+2
  1765     0235  3012               	movlw	18
  1766     0236  00AA               	movwf	___aldiv@dividend+1
  1767     0237  3000               	movlw	0
  1768     0238  00A9               	movwf	___aldiv@dividend
  1769     0239  120A  118A  218A  120A  118A  	fcall	___aldiv
  1770     023E  1283               	bcf	3,5	;RP0=0, select bank0
  1771     023F  1303               	bcf	3,6	;RP1=0, select bank0
  1772     0240  0828               	movf	?___aldiv+3,w
  1773     0241  00C0               	movwf	_UART_RX_config$1019+3
  1774     0242  0827               	movf	?___aldiv+2,w
  1775     0243  00BF               	movwf	_UART_RX_config$1019+2
  1776     0244  0826               	movf	?___aldiv+1,w
  1777     0245  00BE               	movwf	_UART_RX_config$1019+1
  1778     0246  0825               	movf	?___aldiv,w
  1779     0247  00BD               	movwf	_UART_RX_config$1019
  1780                           
  1781                           ;UART.c: 9:     long BR;;UART.c: 10:     BR = ((8000000/baudrate)/64) - 1;
  1782     0248  30FF               	movlw	255
  1783     0249  00B8               	movwf	??_UART_RX_config
  1784     024A  30FF               	movlw	255
  1785     024B  00B9               	movwf	??_UART_RX_config+1
  1786     024C  30FF               	movlw	255
  1787     024D  00BA               	movwf	??_UART_RX_config+2
  1788     024E  30FF               	movlw	255
  1789     024F  00BB               	movwf	??_UART_RX_config+3
  1790     0250  3000               	movlw	0
  1791     0251  00A8               	movwf	___aldiv@divisor+3
  1792     0252  3000               	movlw	0
  1793     0253  00A7               	movwf	___aldiv@divisor+2
  1794     0254  3000               	movlw	0
  1795     0255  00A6               	movwf	___aldiv@divisor+1
  1796     0256  3040               	movlw	64
  1797     0257  00A5               	movwf	___aldiv@divisor
  1798     0258  0840               	movf	_UART_RX_config$1019+3,w
  1799     0259  00AC               	movwf	___aldiv@dividend+3
  1800     025A  083F               	movf	_UART_RX_config$1019+2,w
  1801     025B  00AB               	movwf	___aldiv@dividend+2
  1802     025C  083E               	movf	_UART_RX_config$1019+1,w
  1803     025D  00AA               	movwf	___aldiv@dividend+1
  1804     025E  083D               	movf	_UART_RX_config$1019,w
  1805     025F  00A9               	movwf	___aldiv@dividend
  1806     0260  120A  118A  218A  120A  118A  	fcall	___aldiv
  1807     0265  1283               	bcf	3,5	;RP0=0, select bank0
  1808     0266  1303               	bcf	3,6	;RP1=0, select bank0
  1809     0267  0825               	movf	?___aldiv,w
  1810     0268  07B8               	addwf	??_UART_RX_config,f
  1811     0269  0826               	movf	?___aldiv+1,w
  1812     026A  1803               	skipnc
  1813     026B  0F26               	incfsz	?___aldiv+1,w
  1814     026C  2A6E               	goto	u1580
  1815     026D  2A6F               	goto	u1581
  1816     026E                     u1580:
  1817     026E  07B9               	addwf	??_UART_RX_config+1,f
  1818     026F                     u1581:
  1819     026F  0827               	movf	?___aldiv+2,w
  1820     0270  1803               	skipnc
  1821     0271  0F27               	incfsz	?___aldiv+2,w
  1822     0272  2A74               	goto	u1582
  1823     0273  2A75               	goto	u1583
  1824     0274                     u1582:
  1825     0274  07BA               	addwf	??_UART_RX_config+2,f
  1826     0275                     u1583:
  1827     0275  0828               	movf	?___aldiv+3,w
  1828     0276  1803               	skipnc
  1829     0277  0A28               	incf	?___aldiv+3,w
  1830     0278  07BB               	addwf	??_UART_RX_config+3,f
  1831     0279  083B               	movf	??_UART_RX_config+3,w
  1832     027A  00C4               	movwf	UART_RX_config@BR+3
  1833     027B  083A               	movf	??_UART_RX_config+2,w
  1834     027C  00C3               	movwf	UART_RX_config@BR+2
  1835     027D  0839               	movf	??_UART_RX_config+1,w
  1836     027E  00C2               	movwf	UART_RX_config@BR+1
  1837     027F  0838               	movf	??_UART_RX_config,w
  1838     0280  00C1               	movwf	UART_RX_config@BR
  1839     0281                     l2030:
  1840                           
  1841                           ;UART.c: 11:     SPBRG = BR & 0x00FF;
  1842     0281  0841               	movf	UART_RX_config@BR,w
  1843     0282  1683               	bsf	3,5	;RP0=1, select bank1
  1844     0283  1303               	bcf	3,6	;RP1=0, select bank1
  1845     0284  0099               	movwf	25	;volatile
  1846     0285                     l2032:
  1847                           
  1848                           ;UART.c: 12:     SPBRGH = (BR & 0xFF00) >> 8;
  1849     0285  1283               	bcf	3,5	;RP0=0, select bank0
  1850     0286  1303               	bcf	3,6	;RP1=0, select bank0
  1851     0287  0841               	movf	UART_RX_config@BR,w
  1852     0288  00B8               	movwf	??_UART_RX_config
  1853     0289  0842               	movf	UART_RX_config@BR+1,w
  1854     028A  00B9               	movwf	??_UART_RX_config+1
  1855     028B  0843               	movf	UART_RX_config@BR+2,w
  1856     028C  00BA               	movwf	??_UART_RX_config+2
  1857     028D  0844               	movf	UART_RX_config@BR+3,w
  1858     028E  00BB               	movwf	??_UART_RX_config+3
  1859     028F  3008               	movlw	8
  1860     0290  00BC               	movwf	??_UART_RX_config+4
  1861     0291                     u1595:
  1862     0291  0D3B               	rlf	??_UART_RX_config+3,w
  1863     0292  0CBB               	rrf	??_UART_RX_config+3,f
  1864     0293  0CBA               	rrf	??_UART_RX_config+2,f
  1865     0294  0CB9               	rrf	??_UART_RX_config+1,f
  1866     0295  0CB8               	rrf	??_UART_RX_config,f
  1867     0296                     u1590:
  1868     0296  0BBC               	decfsz	??_UART_RX_config+4,f
  1869     0297  2A91               	goto	u1595
  1870     0298  0838               	movf	??_UART_RX_config,w
  1871     0299  1683               	bsf	3,5	;RP0=1, select bank1
  1872     029A  1303               	bcf	3,6	;RP1=0, select bank1
  1873     029B  009A               	movwf	26	;volatile
  1874     029C                     l2034:
  1875                           
  1876                           ;UART.c: 14:     SYNC = 0;
  1877     029C  1218               	bcf	24,4	;volatile
  1878     029D                     l2036:
  1879                           
  1880                           ;UART.c: 15:     SPEN = 1;
  1881     029D  1283               	bcf	3,5	;RP0=0, select bank0
  1882     029E  1303               	bcf	3,6	;RP1=0, select bank0
  1883     029F  1798               	bsf	24,7	;volatile
  1884     02A0                     l2038:
  1885                           
  1886                           ;UART.c: 17:     CREN = 1;
  1887     02A0  1618               	bsf	24,4	;volatile
  1888     02A1                     l2040:
  1889                           
  1890                           ;UART.c: 18:     RCIE = 1;
  1891     02A1  1683               	bsf	3,5	;RP0=1, select bank1
  1892     02A2  1303               	bcf	3,6	;RP1=0, select bank1
  1893     02A3  168C               	bsf	12,5	;volatile
  1894     02A4                     l2042:
  1895                           
  1896                           ;UART.c: 19:     PEIE = 1;
  1897     02A4  170B               	bsf	11,6	;volatile
  1898     02A5                     l2044:
  1899                           
  1900                           ;UART.c: 20:     GIE = 1;
  1901     02A5  178B               	bsf	11,7	;volatile
  1902     02A6                     l2046:
  1903                           
  1904                           ;UART.c: 21:     RCIF = 0;
  1905     02A6  1283               	bcf	3,5	;RP0=0, select bank0
  1906     02A7  1303               	bcf	3,6	;RP1=0, select bank0
  1907     02A8  128C               	bcf	12,5	;volatile
  1908     02A9                     l282:
  1909     02A9  0008               	return
  1910     02AA                     __end_of_UART_RX_config:
  1911                           
  1912                           	psect	text5
  1913     0522                     __ptext5:	
  1914 ;; *************** function _Lcd_Init *****************
  1915 ;; Defined at:
  1916 ;;		line 65 in file "LCD4b.c"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;		None
  1919 ;; Auto vars:     Size  Location     Type
  1920 ;;		None
  1921 ;; Return value:  Size  Location     Type
  1922 ;;                  1    wreg      void 
  1923 ;; Registers used:
  1924 ;;		wreg, status,2, status,0, pclath, cstack
  1925 ;; Tracked objects:
  1926 ;;		On entry : 0/0
  1927 ;;		On exit  : 0/0
  1928 ;;		Unchanged: 0/0
  1929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1930 ;;      Params:         0       0       0       0       0
  1931 ;;      Locals:         0       0       0       0       0
  1932 ;;      Temps:          2       0       0       0       0
  1933 ;;      Totals:         2       0       0       0       0
  1934 ;;Total ram usage:        2 bytes
  1935 ;; Hardware stack levels used: 1
  1936 ;; Hardware stack levels required when called: 4
  1937 ;; This function calls:
  1938 ;;		_Lcd_Cmd
  1939 ;;		_Lcd_Port
  1940 ;; This function is called by:
  1941 ;;		_setup
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945     0522                     _Lcd_Init:	
  1946                           ;psect for function _Lcd_Init
  1947                           
  1948     0522                     l2006:	
  1949                           ;incstack = 0
  1950                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1951                           
  1952                           
  1953                           ;LCD4b.c: 66:     Lcd_Port(0x00);
  1954     0522  3000               	movlw	0
  1955     0523  120A  158A  2743  120A  118A  	fcall	_Lcd_Port
  1956     0528                     l2008:
  1957                           
  1958                           ;LCD4b.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1959     0528  3034               	movlw	52
  1960     0529  00F7               	movwf	??_Lcd_Init+1
  1961     052A  30F1               	movlw	241
  1962     052B  00F6               	movwf	??_Lcd_Init
  1963     052C                     u1747:
  1964     052C  0BF6               	decfsz	??_Lcd_Init,f
  1965     052D  2D2C               	goto	u1747
  1966     052E  0BF7               	decfsz	??_Lcd_Init+1,f
  1967     052F  2D2C               	goto	u1747
  1968     0530  2D31               	nop2
  1969     0531                     l2010:
  1970                           
  1971                           ;LCD4b.c: 68:     Lcd_Cmd(0x03);
  1972     0531  3003               	movlw	3
  1973     0532  120A  158A  2729  120A  118A  	fcall	_Lcd_Cmd
  1974                           
  1975                           ;LCD4b.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1976     0537  300D               	movlw	13
  1977     0538  00F7               	movwf	??_Lcd_Init+1
  1978     0539  30FB               	movlw	251
  1979     053A  00F6               	movwf	??_Lcd_Init
  1980     053B                     u1757:
  1981     053B  0BF6               	decfsz	??_Lcd_Init,f
  1982     053C  2D3B               	goto	u1757
  1983     053D  0BF7               	decfsz	??_Lcd_Init+1,f
  1984     053E  2D3B               	goto	u1757
  1985     053F  2D40               	nop2
  1986     0540                     l2012:
  1987                           
  1988                           ;LCD4b.c: 70:     Lcd_Cmd(0x03);
  1989     0540  3003               	movlw	3
  1990     0541  120A  158A  2729  120A  118A  	fcall	_Lcd_Cmd
  1991     0546                     l2014:
  1992                           
  1993                           ;LCD4b.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  1994     0546  301D               	movlw	29
  1995     0547  00F7               	movwf	??_Lcd_Init+1
  1996     0548  3091               	movlw	145
  1997     0549  00F6               	movwf	??_Lcd_Init
  1998     054A                     u1767:
  1999     054A  0BF6               	decfsz	??_Lcd_Init,f
  2000     054B  2D4A               	goto	u1767
  2001     054C  0BF7               	decfsz	??_Lcd_Init+1,f
  2002     054D  2D4A               	goto	u1767
  2003                           
  2004                           ;LCD4b.c: 72:     Lcd_Cmd(0x03);
  2005     054E  3003               	movlw	3
  2006     054F  120A  158A  2729  120A  118A  	fcall	_Lcd_Cmd
  2007                           
  2008                           ;LCD4b.c: 74:     Lcd_Cmd(0x02);
  2009     0554  3002               	movlw	2
  2010     0555  120A  158A  2729  120A  118A  	fcall	_Lcd_Cmd
  2011                           
  2012                           ;LCD4b.c: 75:     Lcd_Cmd(0x02);
  2013     055A  3002               	movlw	2
  2014     055B  120A  158A  2729  120A  118A  	fcall	_Lcd_Cmd
  2015                           
  2016                           ;LCD4b.c: 76:     Lcd_Cmd(0x08);
  2017     0560  3008               	movlw	8
  2018     0561  120A  158A  2729  120A  118A  	fcall	_Lcd_Cmd
  2019                           
  2020                           ;LCD4b.c: 77:     Lcd_Cmd(0x00);
  2021     0566  3000               	movlw	0
  2022     0567  120A  158A  2729  120A  118A  	fcall	_Lcd_Cmd
  2023                           
  2024                           ;LCD4b.c: 78:     Lcd_Cmd(0x0C);
  2025     056C  300C               	movlw	12
  2026     056D  120A  158A  2729  120A  118A  	fcall	_Lcd_Cmd
  2027                           
  2028                           ;LCD4b.c: 79:     Lcd_Cmd(0x00);
  2029     0572  3000               	movlw	0
  2030     0573  120A  158A  2729  120A  118A  	fcall	_Lcd_Cmd
  2031                           
  2032                           ;LCD4b.c: 80:     Lcd_Cmd(0x06);
  2033     0578  3006               	movlw	6
  2034     0579  120A  158A  2729  120A  118A  	fcall	_Lcd_Cmd
  2035     057E                     l234:
  2036     057E  0008               	return
  2037     057F                     __end_of_Lcd_Init:
  2038                           
  2039                           	psect	text6
  2040     0FC8                     __ptext6:	
  2041 ;; *************** function _I2C_Master_Init *****************
  2042 ;; Defined at:
  2043 ;;		line 16 in file "I2C.c"
  2044 ;; Parameters:    Size  Location     Type
  2045 ;;  c               4    6[BANK0 ] const unsigned long 
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;		None
  2048 ;; Return value:  Size  Location     Type
  2049 ;;                  1    wreg      void 
  2050 ;; Registers used:
  2051 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2052 ;; Tracked objects:
  2053 ;;		On entry : 0/0
  2054 ;;		On exit  : 0/0
  2055 ;;		Unchanged: 0/0
  2056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2057 ;;      Params:         0       4       0       0       0
  2058 ;;      Locals:         0       0       0       0       0
  2059 ;;      Temps:          0       4       0       0       0
  2060 ;;      Totals:         0       8       0       0       0
  2061 ;;Total ram usage:        8 bytes
  2062 ;; Hardware stack levels used: 1
  2063 ;; Hardware stack levels required when called: 3
  2064 ;; This function calls:
  2065 ;;		___lldiv
  2066 ;; This function is called by:
  2067 ;;		_setup
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071     0FC8                     _I2C_Master_Init:	
  2072                           ;psect for function _I2C_Master_Init
  2073                           
  2074     0FC8                     l2016:	
  2075                           ;incstack = 0
  2076                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2077                           
  2078                           
  2079                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2080     0FC8  3028               	movlw	40
  2081     0FC9  1283               	bcf	3,5	;RP0=0, select bank0
  2082     0FCA  1303               	bcf	3,6	;RP1=0, select bank0
  2083     0FCB  0094               	movwf	20	;volatile
  2084     0FCC                     l2018:
  2085                           
  2086                           ;I2C.c: 19:     SSPCON2 = 0;
  2087     0FCC  1683               	bsf	3,5	;RP0=1, select bank1
  2088     0FCD  1303               	bcf	3,6	;RP1=0, select bank1
  2089     0FCE  0191               	clrf	17	;volatile
  2090     0FCF                     l2020:
  2091                           
  2092                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  2093     0FCF  1283               	bcf	3,5	;RP0=0, select bank0
  2094     0FD0  1303               	bcf	3,6	;RP1=0, select bank0
  2095     0FD1  0826               	movf	I2C_Master_Init@c,w
  2096     0FD2  00AA               	movwf	??_I2C_Master_Init
  2097     0FD3  0827               	movf	I2C_Master_Init@c+1,w
  2098     0FD4  00AB               	movwf	??_I2C_Master_Init+1
  2099     0FD5  0828               	movf	I2C_Master_Init@c+2,w
  2100     0FD6  00AC               	movwf	??_I2C_Master_Init+2
  2101     0FD7  0829               	movf	I2C_Master_Init@c+3,w
  2102     0FD8  00AD               	movwf	??_I2C_Master_Init+3
  2103     0FD9  3002               	movlw	2
  2104     0FDA                     u1575:
  2105     0FDA  1003               	clrc
  2106     0FDB  0DAA               	rlf	??_I2C_Master_Init,f
  2107     0FDC  0DAB               	rlf	??_I2C_Master_Init+1,f
  2108     0FDD  0DAC               	rlf	??_I2C_Master_Init+2,f
  2109     0FDE  0DAD               	rlf	??_I2C_Master_Init+3,f
  2110     0FDF                     u1570:
  2111     0FDF  3EFF               	addlw	-1
  2112     0FE0  1D03               	skipz
  2113     0FE1  2FDA               	goto	u1575
  2114     0FE2  082D               	movf	??_I2C_Master_Init+3,w
  2115     0FE3  00F5               	movwf	___lldiv@divisor+3
  2116     0FE4  082C               	movf	??_I2C_Master_Init+2,w
  2117     0FE5  00F4               	movwf	___lldiv@divisor+2
  2118     0FE6  082B               	movf	??_I2C_Master_Init+1,w
  2119     0FE7  00F3               	movwf	___lldiv@divisor+1
  2120     0FE8  082A               	movf	??_I2C_Master_Init,w
  2121     0FE9  00F2               	movwf	___lldiv@divisor
  2122     0FEA  3000               	movlw	0
  2123     0FEB  00F9               	movwf	___lldiv@dividend+3
  2124     0FEC  307A               	movlw	122
  2125     0FED  00F8               	movwf	___lldiv@dividend+2
  2126     0FEE  3012               	movlw	18
  2127     0FEF  00F7               	movwf	___lldiv@dividend+1
  2128     0FF0  3000               	movlw	0
  2129     0FF1  00F6               	movwf	___lldiv@dividend
  2130     0FF2  120A  118A  232B  120A  158A  	fcall	___lldiv
  2131     0FF7  0872               	movf	?___lldiv,w
  2132     0FF8  3EFF               	addlw	255
  2133     0FF9  1683               	bsf	3,5	;RP0=1, select bank1
  2134     0FFA  1303               	bcf	3,6	;RP1=0, select bank1
  2135     0FFB  0093               	movwf	19	;volatile
  2136     0FFC                     l2022:
  2137                           
  2138                           ;I2C.c: 21:     SSPSTAT = 0;
  2139     0FFC  0194               	clrf	20	;volatile
  2140     0FFD                     l2024:
  2141                           
  2142                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2143     0FFD  1587               	bsf	7,3	;volatile
  2144     0FFE                     l2026:
  2145                           
  2146                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2147     0FFE  1607               	bsf	7,4	;volatile
  2148     0FFF                     l168:
  2149     0FFF  0008               	return
  2150     1000                     __end_of_I2C_Master_Init:
  2151                           
  2152                           	psect	text7
  2153     032B                     __ptext7:	
  2154 ;; *************** function ___lldiv *****************
  2155 ;; Defined at:
  2156 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;  divisor         4    2[COMMON] unsigned long 
  2159 ;;  dividend        4    6[COMMON] unsigned long 
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;  quotient        4    1[BANK0 ] unsigned long 
  2162 ;;  counter         1    5[BANK0 ] unsigned char 
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  4    2[COMMON] unsigned long 
  2165 ;; Registers used:
  2166 ;;		wreg, status,2, status,0, btemp+1
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2172 ;;      Params:         8       0       0       0       0
  2173 ;;      Locals:         0       5       0       0       0
  2174 ;;      Temps:          0       1       0       0       0
  2175 ;;      Totals:         8       6       0       0       0
  2176 ;;Total ram usage:       14 bytes
  2177 ;; Hardware stack levels used: 1
  2178 ;; Hardware stack levels required when called: 2
  2179 ;; This function calls:
  2180 ;;		Nothing
  2181 ;; This function is called by:
  2182 ;;		_I2C_Master_Init
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186     032B                     ___lldiv:	
  2187                           ;psect for function ___lldiv
  2188                           
  2189     032B                     l1938:	
  2190                           ;incstack = 0
  2191                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  2192                           
  2193     032B  3000               	movlw	0
  2194     032C  1283               	bcf	3,5	;RP0=0, select bank0
  2195     032D  1303               	bcf	3,6	;RP1=0, select bank0
  2196     032E  00A4               	movwf	___lldiv@quotient+3
  2197     032F  3000               	movlw	0
  2198     0330  00A3               	movwf	___lldiv@quotient+2
  2199     0331  3000               	movlw	0
  2200     0332  00A2               	movwf	___lldiv@quotient+1
  2201     0333  3000               	movlw	0
  2202     0334  00A1               	movwf	___lldiv@quotient
  2203     0335  0875               	movf	___lldiv@divisor+3,w
  2204     0336  0474               	iorwf	___lldiv@divisor+2,w
  2205     0337  0473               	iorwf	___lldiv@divisor+1,w
  2206     0338  0472               	iorwf	___lldiv@divisor,w
  2207     0339  1903               	skipnz
  2208     033A  2B3C               	goto	u1401
  2209     033B  2B3D               	goto	u1400
  2210     033C                     u1401:
  2211     033C  2B8A               	goto	l1960
  2212     033D                     u1400:
  2213     033D                     l1940:
  2214     033D  01A5               	clrf	___lldiv@counter
  2215     033E  0AA5               	incf	___lldiv@counter,f
  2216     033F  2B4D               	goto	l1946
  2217     0340                     l1942:
  2218     0340  3001               	movlw	1
  2219     0341  00A0               	movwf	??___lldiv
  2220     0342                     u1415:
  2221     0342  1003               	clrc
  2222     0343  0DF2               	rlf	___lldiv@divisor,f
  2223     0344  0DF3               	rlf	___lldiv@divisor+1,f
  2224     0345  0DF4               	rlf	___lldiv@divisor+2,f
  2225     0346  0DF5               	rlf	___lldiv@divisor+3,f
  2226     0347  0BA0               	decfsz	??___lldiv,f
  2227     0348  2B42               	goto	u1415
  2228     0349                     l1944:
  2229     0349  3001               	movlw	1
  2230     034A  00FF               	movwf	btemp+1
  2231     034B  087F               	movf	btemp+1,w
  2232     034C  07A5               	addwf	___lldiv@counter,f
  2233     034D                     l1946:
  2234     034D  1FF5               	btfss	___lldiv@divisor+3,7
  2235     034E  2B50               	goto	u1421
  2236     034F  2B51               	goto	u1420
  2237     0350                     u1421:
  2238     0350  2B40               	goto	l1942
  2239     0351                     u1420:
  2240     0351                     l1948:
  2241     0351  3001               	movlw	1
  2242     0352  00A0               	movwf	??___lldiv
  2243     0353                     u1435:
  2244     0353  1003               	clrc
  2245     0354  0DA1               	rlf	___lldiv@quotient,f
  2246     0355  0DA2               	rlf	___lldiv@quotient+1,f
  2247     0356  0DA3               	rlf	___lldiv@quotient+2,f
  2248     0357  0DA4               	rlf	___lldiv@quotient+3,f
  2249     0358  0BA0               	decfsz	??___lldiv,f
  2250     0359  2B53               	goto	u1435
  2251     035A                     l1950:
  2252     035A  0875               	movf	___lldiv@divisor+3,w
  2253     035B  0279               	subwf	___lldiv@dividend+3,w
  2254     035C  1D03               	skipz
  2255     035D  2B68               	goto	u1445
  2256     035E  0874               	movf	___lldiv@divisor+2,w
  2257     035F  0278               	subwf	___lldiv@dividend+2,w
  2258     0360  1D03               	skipz
  2259     0361  2B68               	goto	u1445
  2260     0362  0873               	movf	___lldiv@divisor+1,w
  2261     0363  0277               	subwf	___lldiv@dividend+1,w
  2262     0364  1D03               	skipz
  2263     0365  2B68               	goto	u1445
  2264     0366  0872               	movf	___lldiv@divisor,w
  2265     0367  0276               	subwf	___lldiv@dividend,w
  2266     0368                     u1445:
  2267     0368  1C03               	skipc
  2268     0369  2B6B               	goto	u1441
  2269     036A  2B6C               	goto	u1440
  2270     036B                     u1441:
  2271     036B  2B7B               	goto	l1956
  2272     036C                     u1440:
  2273     036C                     l1952:
  2274     036C  0872               	movf	___lldiv@divisor,w
  2275     036D  02F6               	subwf	___lldiv@dividend,f
  2276     036E  0873               	movf	___lldiv@divisor+1,w
  2277     036F  1C03               	skipc
  2278     0370  0F73               	incfsz	___lldiv@divisor+1,w
  2279     0371  02F7               	subwf	___lldiv@dividend+1,f
  2280     0372  0874               	movf	___lldiv@divisor+2,w
  2281     0373  1C03               	skipc
  2282     0374  0F74               	incfsz	___lldiv@divisor+2,w
  2283     0375  02F8               	subwf	___lldiv@dividend+2,f
  2284     0376  0875               	movf	___lldiv@divisor+3,w
  2285     0377  1C03               	skipc
  2286     0378  0F75               	incfsz	___lldiv@divisor+3,w
  2287     0379  02F9               	subwf	___lldiv@dividend+3,f
  2288     037A                     l1954:
  2289     037A  1421               	bsf	___lldiv@quotient,0
  2290     037B                     l1956:
  2291     037B  3001               	movlw	1
  2292     037C                     u1455:
  2293     037C  1003               	clrc
  2294     037D  0CF5               	rrf	___lldiv@divisor+3,f
  2295     037E  0CF4               	rrf	___lldiv@divisor+2,f
  2296     037F  0CF3               	rrf	___lldiv@divisor+1,f
  2297     0380  0CF2               	rrf	___lldiv@divisor,f
  2298     0381  3EFF               	addlw	-1
  2299     0382  1D03               	skipz
  2300     0383  2B7C               	goto	u1455
  2301     0384                     l1958:
  2302     0384  3001               	movlw	1
  2303     0385  02A5               	subwf	___lldiv@counter,f
  2304     0386  1D03               	btfss	3,2
  2305     0387  2B89               	goto	u1461
  2306     0388  2B8A               	goto	u1460
  2307     0389                     u1461:
  2308     0389  2B51               	goto	l1948
  2309     038A                     u1460:
  2310     038A                     l1960:
  2311     038A  0824               	movf	___lldiv@quotient+3,w
  2312     038B  00F5               	movwf	?___lldiv+3
  2313     038C  0823               	movf	___lldiv@quotient+2,w
  2314     038D  00F4               	movwf	?___lldiv+2
  2315     038E  0822               	movf	___lldiv@quotient+1,w
  2316     038F  00F3               	movwf	?___lldiv+1
  2317     0390  0821               	movf	___lldiv@quotient,w
  2318     0391  00F2               	movwf	?___lldiv
  2319     0392                     l422:
  2320     0392  0008               	return
  2321     0393                     __end_of___lldiv:
  2322                           
  2323                           	psect	text8
  2324     0736                     __ptext8:	
  2325 ;; *************** function _sendDataUART *****************
  2326 ;; Defined at:
  2327 ;;		line 247 in file "master.c"
  2328 ;; Parameters:    Size  Location     Type
  2329 ;;		None
  2330 ;; Auto vars:     Size  Location     Type
  2331 ;;		None
  2332 ;; Return value:  Size  Location     Type
  2333 ;;                  1    wreg      void 
  2334 ;; Registers used:
  2335 ;;		wreg, status,2, status,0, pclath, cstack
  2336 ;; Tracked objects:
  2337 ;;		On entry : 0/0
  2338 ;;		On exit  : 0/0
  2339 ;;		Unchanged: 0/0
  2340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2341 ;;      Params:         0       0       0       0       0
  2342 ;;      Locals:         0       0       0       0       0
  2343 ;;      Temps:          3       0       0       0       0
  2344 ;;      Totals:         3       0       0       0       0
  2345 ;;Total ram usage:        3 bytes
  2346 ;; Hardware stack levels used: 1
  2347 ;; Hardware stack levels required when called: 3
  2348 ;; This function calls:
  2349 ;;		_UART_write_char
  2350 ;; This function is called by:
  2351 ;;		_main
  2352 ;; This function uses a non-reentrant model
  2353 ;;
  2354                           
  2355     0736                     _sendDataUART:	
  2356                           ;psect for function _sendDataUART
  2357                           
  2358     0736                     l1826:	
  2359                           ;incstack = 0
  2360                           ; Regs used in _sendDataUART: [wreg+status,2+status,0+pclath+cstack]
  2361                           
  2362                           
  2363                           ;master.c: 249:     UART_write_char('\n');
  2364     0736  300A               	movlw	10
  2365     0737  120A  158A  26EE  120A  118A  	fcall	_UART_write_char
  2366                           
  2367                           ;master.c: 250:     UART_write_char(tempC);
  2368     073C  087B               	movf	_tempC,w
  2369     073D  120A  158A  26EE  120A  118A  	fcall	_UART_write_char
  2370                           
  2371                           ;master.c: 251:     UART_write_char(' ');
  2372     0742  3020               	movlw	32
  2373     0743  120A  158A  26EE  120A  118A  	fcall	_UART_write_char
  2374                           
  2375                           ;master.c: 252:     UART_write_char(n_hum);
  2376     0748  1283               	bcf	3,5	;RP0=0, select bank0
  2377     0749  1303               	bcf	3,6	;RP1=0, select bank0
  2378     074A  0850               	movf	_n_hum,w
  2379     074B  120A  158A  26EE  120A  118A  	fcall	_UART_write_char
  2380                           
  2381                           ;master.c: 253:     UART_write_char(' ');
  2382     0750  3020               	movlw	32
  2383     0751  120A  158A  26EE  120A  118A  	fcall	_UART_write_char
  2384                           
  2385                           ;master.c: 254:     UART_write_char((gasPPM & 0xFF00) >> 8);
  2386     0756  1283               	bcf	3,5	;RP0=0, select bank0
  2387     0757  1303               	bcf	3,6	;RP1=0, select bank0
  2388     0758  084B               	movf	_gasPPM+1,w
  2389     0759  120A  158A  26EE  120A  118A  	fcall	_UART_write_char
  2390                           
  2391                           ;master.c: 255:     UART_write_char(gasPPM & 0x00FF);
  2392     075E  1283               	bcf	3,5	;RP0=0, select bank0
  2393     075F  1303               	bcf	3,6	;RP1=0, select bank0
  2394     0760  084A               	movf	_gasPPM,w
  2395     0761  120A  158A  26EE  120A  118A  	fcall	_UART_write_char
  2396                           
  2397                           ;master.c: 256:     UART_write_char(' ');
  2398     0766  3020               	movlw	32
  2399     0767  120A  158A  26EE  120A  118A  	fcall	_UART_write_char
  2400     076C                     l1828:
  2401                           
  2402                           ;master.c: 257:     _delay((unsigned long)((500)*(8000000/4000.0)));
  2403     076C  3006               	movlw	6
  2404     076D  00F5               	movwf	??_sendDataUART+2
  2405     076E  3013               	movlw	19
  2406     076F  00F4               	movwf	??_sendDataUART+1
  2407     0770  30AD               	movlw	173
  2408     0771  00F3               	movwf	??_sendDataUART
  2409     0772                     u1777:
  2410     0772  0BF3               	decfsz	??_sendDataUART,f
  2411     0773  2F72               	goto	u1777
  2412     0774  0BF4               	decfsz	??_sendDataUART+1,f
  2413     0775  2F72               	goto	u1777
  2414     0776  0BF5               	decfsz	??_sendDataUART+2,f
  2415     0777  2F72               	goto	u1777
  2416     0778  2F79               	nop2
  2417     0779                     l128:
  2418     0779  0008               	return
  2419     077A                     __end_of_sendDataUART:
  2420                           
  2421                           	psect	text9
  2422     0EEE                     __ptext9:	
  2423 ;; *************** function _UART_write_char *****************
  2424 ;; Defined at:
  2425 ;;		line 42 in file "UART.c"
  2426 ;; Parameters:    Size  Location     Type
  2427 ;;  c               1    wreg     unsigned char 
  2428 ;; Auto vars:     Size  Location     Type
  2429 ;;  c               1    2[COMMON] unsigned char 
  2430 ;; Return value:  Size  Location     Type
  2431 ;;                  1    wreg      void 
  2432 ;; Registers used:
  2433 ;;		wreg
  2434 ;; Tracked objects:
  2435 ;;		On entry : 0/0
  2436 ;;		On exit  : 0/0
  2437 ;;		Unchanged: 0/0
  2438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2439 ;;      Params:         0       0       0       0       0
  2440 ;;      Locals:         1       0       0       0       0
  2441 ;;      Temps:          0       0       0       0       0
  2442 ;;      Totals:         1       0       0       0       0
  2443 ;;Total ram usage:        1 bytes
  2444 ;; Hardware stack levels used: 1
  2445 ;; Hardware stack levels required when called: 2
  2446 ;; This function calls:
  2447 ;;		Nothing
  2448 ;; This function is called by:
  2449 ;;		_sendDataUART
  2450 ;;		_UART_write_string
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454     0EEE                     _UART_write_char:	
  2455                           ;psect for function _UART_write_char
  2456                           
  2457                           
  2458                           ;incstack = 0
  2459                           ; Regs used in _UART_write_char: [wreg]
  2460                           ;UART_write_char@c stored from wreg
  2461     0EEE  00F2               	movwf	UART_write_char@c
  2462     0EEF                     l1712:
  2463     0EEF                     l288:	
  2464                           ;UART.c: 43:     while(!TXIF);
  2465                           
  2466     0EEF  1283               	bcf	3,5	;RP0=0, select bank0
  2467     0EF0  1303               	bcf	3,6	;RP1=0, select bank0
  2468     0EF1  1E0C               	btfss	12,4	;volatile
  2469     0EF2  2EF4               	goto	u1251
  2470     0EF3  2EF5               	goto	u1250
  2471     0EF4                     u1251:
  2472     0EF4  2EEF               	goto	l288
  2473     0EF5                     u1250:
  2474     0EF5                     l290:
  2475                           
  2476                           ;UART.c: 44:     TXIF = 0;
  2477     0EF5  120C               	bcf	12,4	;volatile
  2478     0EF6                     l1714:
  2479                           
  2480                           ;UART.c: 45:     TXREG = c;
  2481     0EF6  0872               	movf	UART_write_char@c,w
  2482     0EF7  0099               	movwf	25	;volatile
  2483     0EF8                     l291:
  2484     0EF8  0008               	return
  2485     0EF9                     __end_of_UART_write_char:
  2486                           
  2487                           	psect	text10
  2488     045E                     __ptext10:	
  2489 ;; *************** function _requestTemp *****************
  2490 ;; Defined at:
  2491 ;;		line 144 in file "master.c"
  2492 ;; Parameters:    Size  Location     Type
  2493 ;;		None
  2494 ;; Auto vars:     Size  Location     Type
  2495 ;;		None
  2496 ;; Return value:  Size  Location     Type
  2497 ;;                  1    wreg      void 
  2498 ;; Registers used:
  2499 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2500 ;; Tracked objects:
  2501 ;;		On entry : 0/0
  2502 ;;		On exit  : 0/0
  2503 ;;		Unchanged: 0/0
  2504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2505 ;;      Params:         0       0       0       0       0
  2506 ;;      Locals:         0       0       0       0       0
  2507 ;;      Temps:          0       2       0       0       0
  2508 ;;      Totals:         0       2       0       0       0
  2509 ;;Total ram usage:        2 bytes
  2510 ;; Hardware stack levels used: 1
  2511 ;; Hardware stack levels required when called: 4
  2512 ;; This function calls:
  2513 ;;		_I2C_Master_Read
  2514 ;;		_I2C_Master_RepeatedStart
  2515 ;;		_I2C_Master_Start
  2516 ;;		_I2C_Master_Stop
  2517 ;;		_I2C_Master_Write
  2518 ;;		_map
  2519 ;; This function is called by:
  2520 ;;		_main
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524     045E                     _requestTemp:	
  2525                           ;psect for function _requestTemp
  2526                           
  2527     045E                     l2114:	
  2528                           ;incstack = 0
  2529                           ; Regs used in _requestTemp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2530                           
  2531                           
  2532                           ;master.c: 146:     I2C_Master_Start();
  2533     045E  120A  158A  26D2  120A  118A  	fcall	_I2C_Master_Start
  2534                           
  2535                           ;master.c: 147:     I2C_Master_Write(0x20 +0);
  2536     0463  3020               	movlw	32
  2537     0464  00F2               	movwf	I2C_Master_Write@d
  2538     0465  3000               	movlw	0
  2539     0466  00F3               	movwf	I2C_Master_Write@d+1
  2540     0467  120A  158A  26E4  120A  118A  	fcall	_I2C_Master_Write
  2541                           
  2542                           ;master.c: 148:     I2C_Master_Write('T');
  2543     046C  3054               	movlw	84
  2544     046D  00F2               	movwf	I2C_Master_Write@d
  2545     046E  3000               	movlw	0
  2546     046F  00F3               	movwf	I2C_Master_Write@d+1
  2547     0470  120A  158A  26E4  120A  118A  	fcall	_I2C_Master_Write
  2548     0475                     l2116:
  2549                           
  2550                           ;master.c: 149:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2551     0475  3034               	movlw	52
  2552     0476  1283               	bcf	3,5	;RP0=0, select bank0
  2553     0477  1303               	bcf	3,6	;RP1=0, select bank0
  2554     0478  00C5               	movwf	??_requestTemp+1
  2555     0479  30F1               	movlw	241
  2556     047A  00C4               	movwf	??_requestTemp
  2557     047B                     u1787:
  2558     047B  0BC4               	decfsz	??_requestTemp,f
  2559     047C  2C7B               	goto	u1787
  2560     047D  0BC5               	decfsz	??_requestTemp+1,f
  2561     047E  2C7B               	goto	u1787
  2562     047F                     l2118:
  2563                           
  2564                           ;master.c: 150:     I2C_Master_RepeatedStart();
  2565     047F  120A  158A  26C9  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2566     0484                     l2120:
  2567                           
  2568                           ;master.c: 151:     I2C_Master_Write(0x20 +1);
  2569     0484  3021               	movlw	33
  2570     0485  00F2               	movwf	I2C_Master_Write@d
  2571     0486  3000               	movlw	0
  2572     0487  00F3               	movwf	I2C_Master_Write@d+1
  2573     0488  120A  158A  26E4  120A  118A  	fcall	_I2C_Master_Write
  2574     048D                     l2122:
  2575                           
  2576                           ;master.c: 152:     n_temp = I2C_Master_Read(0);
  2577     048D  3000               	movlw	0
  2578     048E  00F2               	movwf	I2C_Master_Read@a
  2579     048F  00F3               	movwf	I2C_Master_Read@a+1
  2580     0490  120A  158A  2765  120A  118A  	fcall	_I2C_Master_Read
  2581     0495  0872               	movf	?_I2C_Master_Read,w
  2582     0496  1283               	bcf	3,5	;RP0=0, select bank0
  2583     0497  1303               	bcf	3,6	;RP1=0, select bank0
  2584     0498  00D1               	movwf	_n_temp
  2585     0499                     l2124:
  2586                           
  2587                           ;master.c: 153:     I2C_Master_Stop();
  2588     0499  120A  158A  26DB  120A  118A  	fcall	_I2C_Master_Stop
  2589     049E                     l2126:
  2590                           
  2591                           ;master.c: 154:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2592     049E  3034               	movlw	52
  2593     049F  1283               	bcf	3,5	;RP0=0, select bank0
  2594     04A0  1303               	bcf	3,6	;RP1=0, select bank0
  2595     04A1  00C5               	movwf	??_requestTemp+1
  2596     04A2  30F1               	movlw	241
  2597     04A3  00C4               	movwf	??_requestTemp
  2598     04A4                     u1797:
  2599     04A4  0BC4               	decfsz	??_requestTemp,f
  2600     04A5  2CA4               	goto	u1797
  2601     04A6  0BC5               	decfsz	??_requestTemp+1,f
  2602     04A7  2CA4               	goto	u1797
  2603     04A8                     l2128:
  2604                           
  2605                           ;master.c: 156:     tempC = map(n_temp,0,77,0,150);
  2606     04A8  1283               	bcf	3,5	;RP0=0, select bank0
  2607     04A9  1303               	bcf	3,6	;RP1=0, select bank0
  2608     04AA  01B4               	clrf	map@min1
  2609     04AB  304D               	movlw	77
  2610     04AC  00B5               	movwf	map@max1
  2611     04AD  01B6               	clrf	map@min2
  2612     04AE  3000               	movlw	0
  2613     04AF  00BA               	movwf	map@max2+3
  2614     04B0  3000               	movlw	0
  2615     04B1  00B9               	movwf	map@max2+2
  2616     04B2  3000               	movlw	0
  2617     04B3  00B8               	movwf	map@max2+1
  2618     04B4  3096               	movlw	150
  2619     04B5  00B7               	movwf	map@max2
  2620     04B6  0851               	movf	_n_temp,w
  2621     04B7  120A  118A  24C1  120A  118A  	fcall	_map
  2622     04BC  1283               	bcf	3,5	;RP0=0, select bank0
  2623     04BD  1303               	bcf	3,6	;RP1=0, select bank0
  2624     04BE  0834               	movf	?_map,w
  2625     04BF  00FB               	movwf	_tempC
  2626     04C0                     l105:
  2627     04C0  0008               	return
  2628     04C1                     __end_of_requestTemp:
  2629                           
  2630                           	psect	text11
  2631     0618                     __ptext11:	
  2632 ;; *************** function _requestHum *****************
  2633 ;; Defined at:
  2634 ;;		line 159 in file "master.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;		None
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;		None
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  1    wreg      void 
  2641 ;; Registers used:
  2642 ;;		wreg, status,2, status,0, pclath, cstack
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2648 ;;      Params:         0       0       0       0       0
  2649 ;;      Locals:         0       0       0       0       0
  2650 ;;      Temps:          2       0       0       0       0
  2651 ;;      Totals:         2       0       0       0       0
  2652 ;;Total ram usage:        2 bytes
  2653 ;; Hardware stack levels used: 1
  2654 ;; Hardware stack levels required when called: 4
  2655 ;; This function calls:
  2656 ;;		_I2C_Master_Read
  2657 ;;		_I2C_Master_RepeatedStart
  2658 ;;		_I2C_Master_Start
  2659 ;;		_I2C_Master_Stop
  2660 ;;		_I2C_Master_Write
  2661 ;; This function is called by:
  2662 ;;		_main
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666     0618                     _requestHum:	
  2667                           ;psect for function _requestHum
  2668                           
  2669     0618                     l1732:	
  2670                           ;incstack = 0
  2671                           ; Regs used in _requestHum: [wreg+status,2+status,0+pclath+cstack]
  2672                           
  2673                           
  2674                           ;master.c: 161:     I2C_Master_Start();
  2675     0618  120A  158A  26D2  120A  118A  	fcall	_I2C_Master_Start
  2676                           
  2677                           ;master.c: 162:     I2C_Master_Write(0x10 +0);
  2678     061D  3010               	movlw	16
  2679     061E  00F2               	movwf	I2C_Master_Write@d
  2680     061F  3000               	movlw	0
  2681     0620  00F3               	movwf	I2C_Master_Write@d+1
  2682     0621  120A  158A  26E4  120A  118A  	fcall	_I2C_Master_Write
  2683                           
  2684                           ;master.c: 163:     I2C_Master_Write('H');
  2685     0626  3048               	movlw	72
  2686     0627  00F2               	movwf	I2C_Master_Write@d
  2687     0628  3000               	movlw	0
  2688     0629  00F3               	movwf	I2C_Master_Write@d+1
  2689     062A  120A  158A  26E4  120A  118A  	fcall	_I2C_Master_Write
  2690     062F                     l1734:
  2691                           
  2692                           ;master.c: 164:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2693     062F  3034               	movlw	52
  2694     0630  00F9               	movwf	??_requestHum+1
  2695     0631  30F1               	movlw	241
  2696     0632  00F8               	movwf	??_requestHum
  2697     0633                     u1807:
  2698     0633  0BF8               	decfsz	??_requestHum,f
  2699     0634  2E33               	goto	u1807
  2700     0635  0BF9               	decfsz	??_requestHum+1,f
  2701     0636  2E33               	goto	u1807
  2702     0637  2E38               	nop2
  2703     0638                     l1736:
  2704                           
  2705                           ;master.c: 165:     I2C_Master_RepeatedStart();
  2706     0638  120A  158A  26C9  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2707     063D                     l1738:
  2708                           
  2709                           ;master.c: 166:     I2C_Master_Write(0x10 +1);
  2710     063D  3011               	movlw	17
  2711     063E  00F2               	movwf	I2C_Master_Write@d
  2712     063F  3000               	movlw	0
  2713     0640  00F3               	movwf	I2C_Master_Write@d+1
  2714     0641  120A  158A  26E4  120A  118A  	fcall	_I2C_Master_Write
  2715     0646                     l1740:
  2716                           
  2717                           ;master.c: 167:     n_hum = I2C_Master_Read(0);
  2718     0646  3000               	movlw	0
  2719     0647  00F2               	movwf	I2C_Master_Read@a
  2720     0648  00F3               	movwf	I2C_Master_Read@a+1
  2721     0649  120A  158A  2765  120A  118A  	fcall	_I2C_Master_Read
  2722     064E  0872               	movf	?_I2C_Master_Read,w
  2723     064F  1283               	bcf	3,5	;RP0=0, select bank0
  2724     0650  1303               	bcf	3,6	;RP1=0, select bank0
  2725     0651  00D0               	movwf	_n_hum
  2726     0652                     l1742:
  2727                           
  2728                           ;master.c: 168:     I2C_Master_Stop();
  2729     0652  120A  158A  26DB  120A  118A  	fcall	_I2C_Master_Stop
  2730     0657                     l1744:
  2731                           
  2732                           ;master.c: 169:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2733     0657  3034               	movlw	52
  2734     0658  00F9               	movwf	??_requestHum+1
  2735     0659  30F1               	movlw	241
  2736     065A  00F8               	movwf	??_requestHum
  2737     065B                     u1817:
  2738     065B  0BF8               	decfsz	??_requestHum,f
  2739     065C  2E5B               	goto	u1817
  2740     065D  0BF9               	decfsz	??_requestHum+1,f
  2741     065E  2E5B               	goto	u1817
  2742     065F  2E60               	nop2
  2743     0660                     l108:
  2744     0660  0008               	return
  2745     0661                     __end_of_requestHum:
  2746                           
  2747                           	psect	text12
  2748     0393                     __ptext12:	
  2749 ;; *************** function _requestGas *****************
  2750 ;; Defined at:
  2751 ;;		line 172 in file "master.c"
  2752 ;; Parameters:    Size  Location     Type
  2753 ;;		None
  2754 ;; Auto vars:     Size  Location     Type
  2755 ;;		None
  2756 ;; Return value:  Size  Location     Type
  2757 ;;                  1    wreg      void 
  2758 ;; Registers used:
  2759 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2760 ;; Tracked objects:
  2761 ;;		On entry : 0/0
  2762 ;;		On exit  : 0/0
  2763 ;;		Unchanged: 0/0
  2764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2765 ;;      Params:         0       0       0       0       0
  2766 ;;      Locals:         0       0       0       0       0
  2767 ;;      Temps:          0       2       0       0       0
  2768 ;;      Totals:         0       2       0       0       0
  2769 ;;Total ram usage:        2 bytes
  2770 ;; Hardware stack levels used: 1
  2771 ;; Hardware stack levels required when called: 4
  2772 ;; This function calls:
  2773 ;;		_I2C_Master_Read
  2774 ;;		_I2C_Master_RepeatedStart
  2775 ;;		_I2C_Master_Start
  2776 ;;		_I2C_Master_Stop
  2777 ;;		_I2C_Master_Write
  2778 ;;		_map
  2779 ;; This function is called by:
  2780 ;;		_main
  2781 ;; This function uses a non-reentrant model
  2782 ;;
  2783                           
  2784     0393                     _requestGas:	
  2785                           ;psect for function _requestGas
  2786                           
  2787     0393                     l2130:	
  2788                           ;incstack = 0
  2789                           ; Regs used in _requestGas: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2790                           
  2791                           
  2792                           ;master.c: 174:     I2C_Master_Start();
  2793     0393  120A  158A  26D2  120A  118A  	fcall	_I2C_Master_Start
  2794                           
  2795                           ;master.c: 175:     I2C_Master_Write(0x20 +0);
  2796     0398  3020               	movlw	32
  2797     0399  00F2               	movwf	I2C_Master_Write@d
  2798     039A  3000               	movlw	0
  2799     039B  00F3               	movwf	I2C_Master_Write@d+1
  2800     039C  120A  158A  26E4  120A  118A  	fcall	_I2C_Master_Write
  2801                           
  2802                           ;master.c: 176:     I2C_Master_Write('G');
  2803     03A1  3047               	movlw	71
  2804     03A2  00F2               	movwf	I2C_Master_Write@d
  2805     03A3  3000               	movlw	0
  2806     03A4  00F3               	movwf	I2C_Master_Write@d+1
  2807     03A5  120A  158A  26E4  120A  118A  	fcall	_I2C_Master_Write
  2808     03AA                     l2132:
  2809                           
  2810                           ;master.c: 177:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2811     03AA  3034               	movlw	52
  2812     03AB  1283               	bcf	3,5	;RP0=0, select bank0
  2813     03AC  1303               	bcf	3,6	;RP1=0, select bank0
  2814     03AD  00C5               	movwf	??_requestGas+1
  2815     03AE  30F1               	movlw	241
  2816     03AF  00C4               	movwf	??_requestGas
  2817     03B0                     u1827:
  2818     03B0  0BC4               	decfsz	??_requestGas,f
  2819     03B1  2BB0               	goto	u1827
  2820     03B2  0BC5               	decfsz	??_requestGas+1,f
  2821     03B3  2BB0               	goto	u1827
  2822     03B4                     l2134:
  2823                           
  2824                           ;master.c: 178:     I2C_Master_RepeatedStart();
  2825     03B4  120A  158A  26C9  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2826     03B9                     l2136:
  2827                           
  2828                           ;master.c: 179:     I2C_Master_Write(0x20 +1);
  2829     03B9  3021               	movlw	33
  2830     03BA  00F2               	movwf	I2C_Master_Write@d
  2831     03BB  3000               	movlw	0
  2832     03BC  00F3               	movwf	I2C_Master_Write@d+1
  2833     03BD  120A  158A  26E4  120A  118A  	fcall	_I2C_Master_Write
  2834     03C2                     l2138:
  2835                           
  2836                           ;master.c: 180:     n_gas = I2C_Master_Read(0);
  2837     03C2  3000               	movlw	0
  2838     03C3  00F2               	movwf	I2C_Master_Read@a
  2839     03C4  00F3               	movwf	I2C_Master_Read@a+1
  2840     03C5  120A  158A  2765  120A  118A  	fcall	_I2C_Master_Read
  2841     03CA  0872               	movf	?_I2C_Master_Read,w
  2842     03CB  1283               	bcf	3,5	;RP0=0, select bank0
  2843     03CC  1303               	bcf	3,6	;RP1=0, select bank0
  2844     03CD  00CF               	movwf	_n_gas
  2845     03CE                     l2140:
  2846                           
  2847                           ;master.c: 181:     I2C_Master_Stop();
  2848     03CE  120A  158A  26DB  120A  118A  	fcall	_I2C_Master_Stop
  2849     03D3                     l2142:
  2850                           
  2851                           ;master.c: 182:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2852     03D3  3034               	movlw	52
  2853     03D4  1283               	bcf	3,5	;RP0=0, select bank0
  2854     03D5  1303               	bcf	3,6	;RP1=0, select bank0
  2855     03D6  00C5               	movwf	??_requestGas+1
  2856     03D7  30F1               	movlw	241
  2857     03D8  00C4               	movwf	??_requestGas
  2858     03D9                     u1837:
  2859     03D9  0BC4               	decfsz	??_requestGas,f
  2860     03DA  2BD9               	goto	u1837
  2861     03DB  0BC5               	decfsz	??_requestGas+1,f
  2862     03DC  2BD9               	goto	u1837
  2863     03DD                     l2144:
  2864                           
  2865                           ;master.c: 184:     gasPPM = map(n_gas,0,255,100,800);
  2866     03DD  1283               	bcf	3,5	;RP0=0, select bank0
  2867     03DE  1303               	bcf	3,6	;RP1=0, select bank0
  2868     03DF  01B4               	clrf	map@min1
  2869     03E0  30FF               	movlw	255
  2870     03E1  00B5               	movwf	map@max1
  2871     03E2  3064               	movlw	100
  2872     03E3  00B6               	movwf	map@min2
  2873     03E4  3000               	movlw	0
  2874     03E5  00BA               	movwf	map@max2+3
  2875     03E6  3000               	movlw	0
  2876     03E7  00B9               	movwf	map@max2+2
  2877     03E8  3003               	movlw	3
  2878     03E9  00B8               	movwf	map@max2+1
  2879     03EA  3020               	movlw	32
  2880     03EB  00B7               	movwf	map@max2
  2881     03EC  084F               	movf	_n_gas,w
  2882     03ED  120A  118A  24C1  120A  118A  	fcall	_map
  2883     03F2  1283               	bcf	3,5	;RP0=0, select bank0
  2884     03F3  1303               	bcf	3,6	;RP1=0, select bank0
  2885     03F4  0835               	movf	?_map+1,w
  2886     03F5  00CB               	movwf	_gasPPM+1
  2887     03F6  0834               	movf	?_map,w
  2888     03F7  00CA               	movwf	_gasPPM
  2889     03F8                     l111:
  2890     03F8  0008               	return
  2891     03F9                     __end_of_requestGas:
  2892                           
  2893                           	psect	text13
  2894     04C1                     __ptext13:	
  2895 ;; *************** function _map *****************
  2896 ;; Defined at:
  2897 ;;		line 284 in file "master.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;  val             1    wreg     unsigned char 
  2900 ;;  min1            1   20[BANK0 ] unsigned char 
  2901 ;;  max1            1   21[BANK0 ] unsigned char 
  2902 ;;  min2            1   22[BANK0 ] unsigned char 
  2903 ;;  max2            4   23[BANK0 ] long 
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;  val             1   35[BANK0 ] unsigned char 
  2906 ;; Return value:  Size  Location     Type
  2907 ;;                  2   20[BANK0 ] unsigned int 
  2908 ;; Registers used:
  2909 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2910 ;; Tracked objects:
  2911 ;;		On entry : 0/0
  2912 ;;		On exit  : 0/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2915 ;;      Params:         0       7       0       0       0
  2916 ;;      Locals:         0       1       0       0       0
  2917 ;;      Temps:          0       8       0       0       0
  2918 ;;      Totals:         0      16       0       0       0
  2919 ;;Total ram usage:       16 bytes
  2920 ;; Hardware stack levels used: 1
  2921 ;; Hardware stack levels required when called: 3
  2922 ;; This function calls:
  2923 ;;		___aldiv
  2924 ;;		___lmul
  2925 ;; This function is called by:
  2926 ;;		_requestTemp
  2927 ;;		_requestGas
  2928 ;; This function uses a non-reentrant model
  2929 ;;
  2930                           
  2931     04C1                     _map:	
  2932                           ;psect for function _map
  2933                           
  2934                           
  2935                           ;incstack = 0
  2936                           ; Regs used in _map: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2937                           ;map@val stored from wreg
  2938     04C1  1283               	bcf	3,5	;RP0=0, select bank0
  2939     04C2  1303               	bcf	3,6	;RP1=0, select bank0
  2940     04C3  00C3               	movwf	map@val
  2941     04C4                     l2064:
  2942                           
  2943                           ;master.c: 285:     return ((val-min1)*(max2-min2)/(max1-min1))+min2;
  2944     04C4  0834               	movf	map@min1,w
  2945     04C5  0235               	subwf	map@max1,w
  2946     04C6  00A5               	movwf	___aldiv@divisor
  2947     04C7  01A6               	clrf	___aldiv@divisor+1
  2948     04C8  1C03               	skipc
  2949     04C9  03A6               	decf	___aldiv@divisor+1,f
  2950     04CA  01A7               	clrf	___aldiv@divisor+2
  2951     04CB  1BA6               	btfsc	___aldiv@divisor+1,7
  2952     04CC  03A7               	decf	___aldiv@divisor+2,f
  2953     04CD  0827               	movf	___aldiv@divisor+2,w
  2954     04CE  00A8               	movwf	___aldiv@divisor+3
  2955     04CF  0834               	movf	map@min1,w
  2956     04D0  0243               	subwf	map@val,w
  2957     04D1  00F2               	movwf	___lmul@multiplier
  2958     04D2  01F3               	clrf	___lmul@multiplier+1
  2959     04D3  1C03               	skipc
  2960     04D4  03F3               	decf	___lmul@multiplier+1,f
  2961     04D5  01F4               	clrf	___lmul@multiplier+2
  2962     04D6  1BF3               	btfsc	___lmul@multiplier+1,7
  2963     04D7  03F4               	decf	___lmul@multiplier+2,f
  2964     04D8  0874               	movf	___lmul@multiplier+2,w
  2965     04D9  00F5               	movwf	___lmul@multiplier+3
  2966     04DA  0836               	movf	map@min2,w
  2967     04DB  00BB               	movwf	??_map
  2968     04DC  01BC               	clrf	??_map+1
  2969     04DD  01BD               	clrf	??_map+2
  2970     04DE  01BE               	clrf	??_map+3
  2971     04DF  0837               	movf	map@max2,w
  2972     04E0  00BF               	movwf	??_map+4
  2973     04E1  0838               	movf	map@max2+1,w
  2974     04E2  00C0               	movwf	??_map+5
  2975     04E3  0839               	movf	map@max2+2,w
  2976     04E4  00C1               	movwf	??_map+6
  2977     04E5  083A               	movf	map@max2+3,w
  2978     04E6  00C2               	movwf	??_map+7
  2979     04E7  083B               	movf	??_map,w
  2980     04E8  02BF               	subwf	??_map+4,f
  2981     04E9  083C               	movf	??_map+1,w
  2982     04EA  1C03               	skipc
  2983     04EB  0F3C               	incfsz	??_map+1,w
  2984     04EC  2CEE               	goto	u1621
  2985     04ED  2CEF               	goto	u1622
  2986     04EE                     u1621:
  2987     04EE  02C0               	subwf	??_map+5,f
  2988     04EF                     u1622:
  2989     04EF  083D               	movf	??_map+2,w
  2990     04F0  1C03               	skipc
  2991     04F1  0F3D               	incfsz	??_map+2,w
  2992     04F2  2CF4               	goto	u1623
  2993     04F3  2CF5               	goto	u1624
  2994     04F4                     u1623:
  2995     04F4  02C1               	subwf	??_map+6,f
  2996     04F5                     u1624:
  2997     04F5  083E               	movf	??_map+3,w
  2998     04F6  1C03               	skipc
  2999     04F7  0F3E               	incfsz	??_map+3,w
  3000     04F8  2CFA               	goto	u1625
  3001     04F9  2CFB               	goto	u1626
  3002     04FA                     u1625:
  3003     04FA  02C2               	subwf	??_map+7,f
  3004     04FB                     u1626:
  3005     04FB  0842               	movf	??_map+7,w
  3006     04FC  00F9               	movwf	___lmul@multiplicand+3
  3007     04FD  0841               	movf	??_map+6,w
  3008     04FE  00F8               	movwf	___lmul@multiplicand+2
  3009     04FF  0840               	movf	??_map+5,w
  3010     0500  00F7               	movwf	___lmul@multiplicand+1
  3011     0501  083F               	movf	??_map+4,w
  3012     0502  00F6               	movwf	___lmul@multiplicand
  3013     0503  120A  118A  2661  120A  118A  	fcall	___lmul
  3014     0508  0875               	movf	?___lmul+3,w
  3015     0509  1283               	bcf	3,5	;RP0=0, select bank0
  3016     050A  1303               	bcf	3,6	;RP1=0, select bank0
  3017     050B  00AC               	movwf	___aldiv@dividend+3
  3018     050C  0874               	movf	?___lmul+2,w
  3019     050D  00AB               	movwf	___aldiv@dividend+2
  3020     050E  0873               	movf	?___lmul+1,w
  3021     050F  00AA               	movwf	___aldiv@dividend+1
  3022     0510  0872               	movf	?___lmul,w
  3023     0511  00A9               	movwf	___aldiv@dividend
  3024     0512  120A  118A  218A  120A  118A  	fcall	___aldiv
  3025     0517  1283               	bcf	3,5	;RP0=0, select bank0
  3026     0518  1303               	bcf	3,6	;RP1=0, select bank0
  3027     0519  0836               	movf	map@min2,w
  3028     051A  0725               	addwf	?___aldiv,w
  3029     051B  00B4               	movwf	?_map
  3030     051C  3000               	movlw	0
  3031     051D  1803               	skipnc
  3032     051E  3001               	movlw	1
  3033     051F  0726               	addwf	?___aldiv+1,w
  3034     0520  00B5               	movwf	?_map+1
  3035     0521                     l139:
  3036     0521  0008               	return
  3037     0522                     __end_of_map:
  3038                           
  3039                           	psect	text14
  3040     0661                     __ptext14:	
  3041 ;; *************** function ___lmul *****************
  3042 ;; Defined at:
  3043 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul32.c"
  3044 ;; Parameters:    Size  Location     Type
  3045 ;;  multiplier      4    2[COMMON] unsigned long 
  3046 ;;  multiplicand    4    6[COMMON] unsigned long 
  3047 ;; Auto vars:     Size  Location     Type
  3048 ;;  product         4    1[BANK0 ] unsigned long 
  3049 ;; Return value:  Size  Location     Type
  3050 ;;                  4    2[COMMON] unsigned long 
  3051 ;; Registers used:
  3052 ;;		wreg, status,2, status,0
  3053 ;; Tracked objects:
  3054 ;;		On entry : 0/0
  3055 ;;		On exit  : 0/0
  3056 ;;		Unchanged: 0/0
  3057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3058 ;;      Params:         8       0       0       0       0
  3059 ;;      Locals:         0       4       0       0       0
  3060 ;;      Temps:          0       1       0       0       0
  3061 ;;      Totals:         8       5       0       0       0
  3062 ;;Total ram usage:       13 bytes
  3063 ;; Hardware stack levels used: 1
  3064 ;; Hardware stack levels required when called: 2
  3065 ;; This function calls:
  3066 ;;		Nothing
  3067 ;; This function is called by:
  3068 ;;		_map
  3069 ;; This function uses a non-reentrant model
  3070 ;;
  3071                           
  3072     0661                     ___lmul:	
  3073                           ;psect for function ___lmul
  3074                           
  3075     0661                     l1924:	
  3076                           ;incstack = 0
  3077                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3078                           
  3079     0661  3000               	movlw	0
  3080     0662  1283               	bcf	3,5	;RP0=0, select bank0
  3081     0663  1303               	bcf	3,6	;RP1=0, select bank0
  3082     0664  00A4               	movwf	___lmul@product+3
  3083     0665  3000               	movlw	0
  3084     0666  00A3               	movwf	___lmul@product+2
  3085     0667  3000               	movlw	0
  3086     0668  00A2               	movwf	___lmul@product+1
  3087     0669  3000               	movlw	0
  3088     066A  00A1               	movwf	___lmul@product
  3089     066B                     l1926:
  3090     066B  1C72               	btfss	___lmul@multiplier,0
  3091     066C  2E6E               	goto	u1351
  3092     066D  2E6F               	goto	u1350
  3093     066E                     u1351:
  3094     066E  2E86               	goto	l1930
  3095     066F                     u1350:
  3096     066F                     l1928:
  3097     066F  0876               	movf	___lmul@multiplicand,w
  3098     0670  07A1               	addwf	___lmul@product,f
  3099     0671  0877               	movf	___lmul@multiplicand+1,w
  3100     0672  1103               	clrz
  3101     0673  1803               	skipnc
  3102     0674  3E01               	addlw	1
  3103     0675  1903               	skipnz
  3104     0676  2E78               	goto	u1361
  3105     0677  07A2               	addwf	___lmul@product+1,f
  3106     0678                     u1361:
  3107     0678  0878               	movf	___lmul@multiplicand+2,w
  3108     0679  1103               	clrz
  3109     067A  1803               	skipnc
  3110     067B  3E01               	addlw	1
  3111     067C  1903               	skipnz
  3112     067D  2E7F               	goto	u1362
  3113     067E  07A3               	addwf	___lmul@product+2,f
  3114     067F                     u1362:
  3115     067F  0879               	movf	___lmul@multiplicand+3,w
  3116     0680  1103               	clrz
  3117     0681  1803               	skipnc
  3118     0682  3E01               	addlw	1
  3119     0683  1903               	skipnz
  3120     0684  2E86               	goto	u1363
  3121     0685  07A4               	addwf	___lmul@product+3,f
  3122     0686                     u1363:
  3123     0686                     l1930:
  3124     0686  3001               	movlw	1
  3125     0687  00A0               	movwf	??___lmul
  3126     0688                     u1375:
  3127     0688  1003               	clrc
  3128     0689  0DF6               	rlf	___lmul@multiplicand,f
  3129     068A  0DF7               	rlf	___lmul@multiplicand+1,f
  3130     068B  0DF8               	rlf	___lmul@multiplicand+2,f
  3131     068C  0DF9               	rlf	___lmul@multiplicand+3,f
  3132     068D  0BA0               	decfsz	??___lmul,f
  3133     068E  2E88               	goto	u1375
  3134     068F                     l1932:
  3135     068F  3001               	movlw	1
  3136     0690                     u1385:
  3137     0690  1003               	clrc
  3138     0691  0CF5               	rrf	___lmul@multiplier+3,f
  3139     0692  0CF4               	rrf	___lmul@multiplier+2,f
  3140     0693  0CF3               	rrf	___lmul@multiplier+1,f
  3141     0694  0CF2               	rrf	___lmul@multiplier,f
  3142     0695  3EFF               	addlw	-1
  3143     0696  1D03               	skipz
  3144     0697  2E90               	goto	u1385
  3145     0698  0875               	movf	___lmul@multiplier+3,w
  3146     0699  0474               	iorwf	___lmul@multiplier+2,w
  3147     069A  0473               	iorwf	___lmul@multiplier+1,w
  3148     069B  0472               	iorwf	___lmul@multiplier,w
  3149     069C  1D03               	skipz
  3150     069D  2E9F               	goto	u1391
  3151     069E  2EA0               	goto	u1390
  3152     069F                     u1391:
  3153     069F  2E6B               	goto	l1926
  3154     06A0                     u1390:
  3155     06A0                     l1934:
  3156     06A0  0824               	movf	___lmul@product+3,w
  3157     06A1  00F5               	movwf	?___lmul+3
  3158     06A2  0823               	movf	___lmul@product+2,w
  3159     06A3  00F4               	movwf	?___lmul+2
  3160     06A4  0822               	movf	___lmul@product+1,w
  3161     06A5  00F3               	movwf	?___lmul+1
  3162     06A6  0821               	movf	___lmul@product,w
  3163     06A7  00F2               	movwf	?___lmul
  3164     06A8                     l400:
  3165     06A8  0008               	return
  3166     06A9                     __end_of___lmul:
  3167                           
  3168                           	psect	text15
  3169     018A                     __ptext15:	
  3170 ;; *************** function ___aldiv *****************
  3171 ;; Defined at:
  3172 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\aldiv.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;  divisor         4    5[BANK0 ] long 
  3175 ;;  dividend        4    9[BANK0 ] long 
  3176 ;; Auto vars:     Size  Location     Type
  3177 ;;  quotient        4   16[BANK0 ] long 
  3178 ;;  sign            1   15[BANK0 ] unsigned char 
  3179 ;;  counter         1   14[BANK0 ] unsigned char 
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  4    5[BANK0 ] long 
  3182 ;; Registers used:
  3183 ;;		wreg, status,2, status,0, btemp+1
  3184 ;; Tracked objects:
  3185 ;;		On entry : 0/0
  3186 ;;		On exit  : 0/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3189 ;;      Params:         0       8       0       0       0
  3190 ;;      Locals:         0       6       0       0       0
  3191 ;;      Temps:          0       1       0       0       0
  3192 ;;      Totals:         0      15       0       0       0
  3193 ;;Total ram usage:       15 bytes
  3194 ;; Hardware stack levels used: 1
  3195 ;; Hardware stack levels required when called: 2
  3196 ;; This function calls:
  3197 ;;		Nothing
  3198 ;; This function is called by:
  3199 ;;		_map
  3200 ;;		_UART_RX_config
  3201 ;;		_UART_TX_config
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205     018A                     ___aldiv:	
  3206                           ;psect for function ___aldiv
  3207                           
  3208     018A                     l1964:	
  3209                           ;incstack = 0
  3210                           ; Regs used in ___aldiv: [wreg+status,2+status,0+btemp+1]
  3211                           
  3212     018A  1283               	bcf	3,5	;RP0=0, select bank0
  3213     018B  1303               	bcf	3,6	;RP1=0, select bank0
  3214     018C  01AF               	clrf	___aldiv@sign
  3215     018D                     l1966:
  3216     018D  1FA8               	btfss	___aldiv@divisor+3,7
  3217     018E  2990               	goto	u1471
  3218     018F  2991               	goto	u1470
  3219     0190                     u1471:
  3220     0190  299E               	goto	l451
  3221     0191                     u1470:
  3222     0191                     l1968:
  3223     0191  09A5               	comf	___aldiv@divisor,f
  3224     0192  09A6               	comf	___aldiv@divisor+1,f
  3225     0193  09A7               	comf	___aldiv@divisor+2,f
  3226     0194  09A8               	comf	___aldiv@divisor+3,f
  3227     0195  0AA5               	incf	___aldiv@divisor,f
  3228     0196  1903               	skipnz
  3229     0197  0AA6               	incf	___aldiv@divisor+1,f
  3230     0198  1903               	skipnz
  3231     0199  0AA7               	incf	___aldiv@divisor+2,f
  3232     019A  1903               	skipnz
  3233     019B  0AA8               	incf	___aldiv@divisor+3,f
  3234     019C  01AF               	clrf	___aldiv@sign
  3235     019D  0AAF               	incf	___aldiv@sign,f
  3236     019E                     l451:
  3237     019E  1FAC               	btfss	___aldiv@dividend+3,7
  3238     019F  29A1               	goto	u1481
  3239     01A0  29A2               	goto	u1480
  3240     01A1                     u1481:
  3241     01A1  29B1               	goto	l1974
  3242     01A2                     u1480:
  3243     01A2                     l1970:
  3244     01A2  09A9               	comf	___aldiv@dividend,f
  3245     01A3  09AA               	comf	___aldiv@dividend+1,f
  3246     01A4  09AB               	comf	___aldiv@dividend+2,f
  3247     01A5  09AC               	comf	___aldiv@dividend+3,f
  3248     01A6  0AA9               	incf	___aldiv@dividend,f
  3249     01A7  1903               	skipnz
  3250     01A8  0AAA               	incf	___aldiv@dividend+1,f
  3251     01A9  1903               	skipnz
  3252     01AA  0AAB               	incf	___aldiv@dividend+2,f
  3253     01AB  1903               	skipnz
  3254     01AC  0AAC               	incf	___aldiv@dividend+3,f
  3255     01AD                     l1972:
  3256     01AD  3001               	movlw	1
  3257     01AE  00FF               	movwf	btemp+1
  3258     01AF  087F               	movf	btemp+1,w
  3259     01B0  06AF               	xorwf	___aldiv@sign,f
  3260     01B1                     l1974:
  3261     01B1  3000               	movlw	0
  3262     01B2  00B3               	movwf	___aldiv@quotient+3
  3263     01B3  3000               	movlw	0
  3264     01B4  00B2               	movwf	___aldiv@quotient+2
  3265     01B5  3000               	movlw	0
  3266     01B6  00B1               	movwf	___aldiv@quotient+1
  3267     01B7  3000               	movlw	0
  3268     01B8  00B0               	movwf	___aldiv@quotient
  3269     01B9                     l1976:
  3270     01B9  0828               	movf	___aldiv@divisor+3,w
  3271     01BA  0427               	iorwf	___aldiv@divisor+2,w
  3272     01BB  0426               	iorwf	___aldiv@divisor+1,w
  3273     01BC  0425               	iorwf	___aldiv@divisor,w
  3274     01BD  1903               	skipnz
  3275     01BE  29C0               	goto	u1491
  3276     01BF  29C1               	goto	u1490
  3277     01C0                     u1491:
  3278     01C0  2A0E               	goto	l1998
  3279     01C1                     u1490:
  3280     01C1                     l1978:
  3281     01C1  01AE               	clrf	___aldiv@counter
  3282     01C2  0AAE               	incf	___aldiv@counter,f
  3283     01C3  29D1               	goto	l1984
  3284     01C4                     l1980:
  3285     01C4  3001               	movlw	1
  3286     01C5  00AD               	movwf	??___aldiv
  3287     01C6                     u1505:
  3288     01C6  1003               	clrc
  3289     01C7  0DA5               	rlf	___aldiv@divisor,f
  3290     01C8  0DA6               	rlf	___aldiv@divisor+1,f
  3291     01C9  0DA7               	rlf	___aldiv@divisor+2,f
  3292     01CA  0DA8               	rlf	___aldiv@divisor+3,f
  3293     01CB  0BAD               	decfsz	??___aldiv,f
  3294     01CC  29C6               	goto	u1505
  3295     01CD                     l1982:
  3296     01CD  3001               	movlw	1
  3297     01CE  00FF               	movwf	btemp+1
  3298     01CF  087F               	movf	btemp+1,w
  3299     01D0  07AE               	addwf	___aldiv@counter,f
  3300     01D1                     l1984:
  3301     01D1  1FA8               	btfss	___aldiv@divisor+3,7
  3302     01D2  29D4               	goto	u1511
  3303     01D3  29D5               	goto	u1510
  3304     01D4                     u1511:
  3305     01D4  29C4               	goto	l1980
  3306     01D5                     u1510:
  3307     01D5                     l1986:
  3308     01D5  3001               	movlw	1
  3309     01D6  00AD               	movwf	??___aldiv
  3310     01D7                     u1525:
  3311     01D7  1003               	clrc
  3312     01D8  0DB0               	rlf	___aldiv@quotient,f
  3313     01D9  0DB1               	rlf	___aldiv@quotient+1,f
  3314     01DA  0DB2               	rlf	___aldiv@quotient+2,f
  3315     01DB  0DB3               	rlf	___aldiv@quotient+3,f
  3316     01DC  0BAD               	decfsz	??___aldiv,f
  3317     01DD  29D7               	goto	u1525
  3318     01DE                     l1988:
  3319     01DE  0828               	movf	___aldiv@divisor+3,w
  3320     01DF  022C               	subwf	___aldiv@dividend+3,w
  3321     01E0  1D03               	skipz
  3322     01E1  29EC               	goto	u1535
  3323     01E2  0827               	movf	___aldiv@divisor+2,w
  3324     01E3  022B               	subwf	___aldiv@dividend+2,w
  3325     01E4  1D03               	skipz
  3326     01E5  29EC               	goto	u1535
  3327     01E6  0826               	movf	___aldiv@divisor+1,w
  3328     01E7  022A               	subwf	___aldiv@dividend+1,w
  3329     01E8  1D03               	skipz
  3330     01E9  29EC               	goto	u1535
  3331     01EA  0825               	movf	___aldiv@divisor,w
  3332     01EB  0229               	subwf	___aldiv@dividend,w
  3333     01EC                     u1535:
  3334     01EC  1C03               	skipc
  3335     01ED  29EF               	goto	u1531
  3336     01EE  29F0               	goto	u1530
  3337     01EF                     u1531:
  3338     01EF  29FF               	goto	l1994
  3339     01F0                     u1530:
  3340     01F0                     l1990:
  3341     01F0  0825               	movf	___aldiv@divisor,w
  3342     01F1  02A9               	subwf	___aldiv@dividend,f
  3343     01F2  0826               	movf	___aldiv@divisor+1,w
  3344     01F3  1C03               	skipc
  3345     01F4  0F26               	incfsz	___aldiv@divisor+1,w
  3346     01F5  02AA               	subwf	___aldiv@dividend+1,f
  3347     01F6  0827               	movf	___aldiv@divisor+2,w
  3348     01F7  1C03               	skipc
  3349     01F8  0F27               	incfsz	___aldiv@divisor+2,w
  3350     01F9  02AB               	subwf	___aldiv@dividend+2,f
  3351     01FA  0828               	movf	___aldiv@divisor+3,w
  3352     01FB  1C03               	skipc
  3353     01FC  0F28               	incfsz	___aldiv@divisor+3,w
  3354     01FD  02AC               	subwf	___aldiv@dividend+3,f
  3355     01FE                     l1992:
  3356     01FE  1430               	bsf	___aldiv@quotient,0
  3357     01FF                     l1994:
  3358     01FF  3001               	movlw	1
  3359     0200                     u1545:
  3360     0200  1003               	clrc
  3361     0201  0CA8               	rrf	___aldiv@divisor+3,f
  3362     0202  0CA7               	rrf	___aldiv@divisor+2,f
  3363     0203  0CA6               	rrf	___aldiv@divisor+1,f
  3364     0204  0CA5               	rrf	___aldiv@divisor,f
  3365     0205  3EFF               	addlw	-1
  3366     0206  1D03               	skipz
  3367     0207  2A00               	goto	u1545
  3368     0208                     l1996:
  3369     0208  3001               	movlw	1
  3370     0209  02AE               	subwf	___aldiv@counter,f
  3371     020A  1D03               	btfss	3,2
  3372     020B  2A0D               	goto	u1551
  3373     020C  2A0E               	goto	u1550
  3374     020D                     u1551:
  3375     020D  29D5               	goto	l1986
  3376     020E                     u1550:
  3377     020E                     l1998:
  3378     020E  082F               	movf	___aldiv@sign,w
  3379     020F  1903               	btfsc	3,2
  3380     0210  2A12               	goto	u1561
  3381     0211  2A13               	goto	u1560
  3382     0212                     u1561:
  3383     0212  2A1E               	goto	l2002
  3384     0213                     u1560:
  3385     0213                     l2000:
  3386     0213  09B0               	comf	___aldiv@quotient,f
  3387     0214  09B1               	comf	___aldiv@quotient+1,f
  3388     0215  09B2               	comf	___aldiv@quotient+2,f
  3389     0216  09B3               	comf	___aldiv@quotient+3,f
  3390     0217  0AB0               	incf	___aldiv@quotient,f
  3391     0218  1903               	skipnz
  3392     0219  0AB1               	incf	___aldiv@quotient+1,f
  3393     021A  1903               	skipnz
  3394     021B  0AB2               	incf	___aldiv@quotient+2,f
  3395     021C  1903               	skipnz
  3396     021D  0AB3               	incf	___aldiv@quotient+3,f
  3397     021E                     l2002:
  3398     021E  0833               	movf	___aldiv@quotient+3,w
  3399     021F  00A8               	movwf	?___aldiv+3
  3400     0220  0832               	movf	___aldiv@quotient+2,w
  3401     0221  00A7               	movwf	?___aldiv+2
  3402     0222  0831               	movf	___aldiv@quotient+1,w
  3403     0223  00A6               	movwf	?___aldiv+1
  3404     0224  0830               	movf	___aldiv@quotient,w
  3405     0225  00A5               	movwf	?___aldiv
  3406     0226                     l461:
  3407     0226  0008               	return
  3408     0227                     __end_of___aldiv:
  3409                           
  3410                           	psect	text16
  3411     0EE4                     __ptext16:	
  3412 ;; *************** function _I2C_Master_Write *****************
  3413 ;; Defined at:
  3414 ;;		line 65 in file "I2C.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;  d               2    2[COMMON] unsigned int 
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;		None
  3419 ;; Return value:  Size  Location     Type
  3420 ;;                  1    wreg      void 
  3421 ;; Registers used:
  3422 ;;		wreg, status,2, status,0, pclath, cstack
  3423 ;; Tracked objects:
  3424 ;;		On entry : 0/0
  3425 ;;		On exit  : 0/0
  3426 ;;		Unchanged: 0/0
  3427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3428 ;;      Params:         2       0       0       0       0
  3429 ;;      Locals:         0       0       0       0       0
  3430 ;;      Temps:          0       0       0       0       0
  3431 ;;      Totals:         2       0       0       0       0
  3432 ;;Total ram usage:        2 bytes
  3433 ;; Hardware stack levels used: 1
  3434 ;; Hardware stack levels required when called: 3
  3435 ;; This function calls:
  3436 ;;		_I2C_Master_Wait
  3437 ;; This function is called by:
  3438 ;;		_requestTemp
  3439 ;;		_requestHum
  3440 ;;		_requestGas
  3441 ;;		_writeMotors
  3442 ;; This function uses a non-reentrant model
  3443 ;;
  3444                           
  3445     0EE4                     _I2C_Master_Write:	
  3446                           ;psect for function _I2C_Master_Write
  3447                           
  3448     0EE4                     l1636:	
  3449                           ;incstack = 0
  3450                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3451                           
  3452                           
  3453                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3454     0EE4  120A  158A  2706  120A  158A  	fcall	_I2C_Master_Wait
  3455     0EE9                     l1638:
  3456                           
  3457                           ;I2C.c: 68:     SSPBUF = d;
  3458     0EE9  0872               	movf	I2C_Master_Write@d,w
  3459     0EEA  1283               	bcf	3,5	;RP0=0, select bank0
  3460     0EEB  1303               	bcf	3,6	;RP1=0, select bank0
  3461     0EEC  0093               	movwf	19	;volatile
  3462     0EED                     l186:
  3463     0EED  0008               	return
  3464     0EEE                     __end_of_I2C_Master_Write:
  3465                           
  3466                           	psect	text17
  3467     0EDB                     __ptext17:	
  3468 ;; *************** function _I2C_Master_Stop *****************
  3469 ;; Defined at:
  3470 ;;		line 55 in file "I2C.c"
  3471 ;; Parameters:    Size  Location     Type
  3472 ;;		None
  3473 ;; Auto vars:     Size  Location     Type
  3474 ;;		None
  3475 ;; Return value:  Size  Location     Type
  3476 ;;                  1    wreg      void 
  3477 ;; Registers used:
  3478 ;;		wreg, status,2, status,0, pclath, cstack
  3479 ;; Tracked objects:
  3480 ;;		On entry : 0/0
  3481 ;;		On exit  : 0/0
  3482 ;;		Unchanged: 0/0
  3483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3484 ;;      Params:         0       0       0       0       0
  3485 ;;      Locals:         0       0       0       0       0
  3486 ;;      Temps:          0       0       0       0       0
  3487 ;;      Totals:         0       0       0       0       0
  3488 ;;Total ram usage:        0 bytes
  3489 ;; Hardware stack levels used: 1
  3490 ;; Hardware stack levels required when called: 3
  3491 ;; This function calls:
  3492 ;;		_I2C_Master_Wait
  3493 ;; This function is called by:
  3494 ;;		_requestTemp
  3495 ;;		_requestHum
  3496 ;;		_requestGas
  3497 ;;		_writeMotors
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501     0EDB                     _I2C_Master_Stop:	
  3502                           ;psect for function _I2C_Master_Stop
  3503                           
  3504     0EDB                     l1660:	
  3505                           ;incstack = 0
  3506                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3507                           
  3508                           
  3509                           ;I2C.c: 57:     I2C_Master_Wait();
  3510     0EDB  120A  158A  2706  120A  158A  	fcall	_I2C_Master_Wait
  3511     0EE0                     l1662:
  3512                           
  3513                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3514     0EE0  1683               	bsf	3,5	;RP0=1, select bank1
  3515     0EE1  1303               	bcf	3,6	;RP1=0, select bank1
  3516     0EE2  1511               	bsf	17,2	;volatile
  3517     0EE3                     l183:
  3518     0EE3  0008               	return
  3519     0EE4                     __end_of_I2C_Master_Stop:
  3520                           
  3521                           	psect	text18
  3522     0ED2                     __ptext18:	
  3523 ;; *************** function _I2C_Master_Start *****************
  3524 ;; Defined at:
  3525 ;;		line 39 in file "I2C.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;		None
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;		None
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  1    wreg      void 
  3532 ;; Registers used:
  3533 ;;		wreg, status,2, status,0, pclath, cstack
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3539 ;;      Params:         0       0       0       0       0
  3540 ;;      Locals:         0       0       0       0       0
  3541 ;;      Temps:          0       0       0       0       0
  3542 ;;      Totals:         0       0       0       0       0
  3543 ;;Total ram usage:        0 bytes
  3544 ;; Hardware stack levels used: 1
  3545 ;; Hardware stack levels required when called: 3
  3546 ;; This function calls:
  3547 ;;		_I2C_Master_Wait
  3548 ;; This function is called by:
  3549 ;;		_requestTemp
  3550 ;;		_requestHum
  3551 ;;		_requestGas
  3552 ;;		_writeMotors
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555                           
  3556     0ED2                     _I2C_Master_Start:	
  3557                           ;psect for function _I2C_Master_Start
  3558                           
  3559     0ED2                     l1632:	
  3560                           ;incstack = 0
  3561                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3562                           
  3563                           
  3564                           ;I2C.c: 41:     I2C_Master_Wait();
  3565     0ED2  120A  158A  2706  120A  158A  	fcall	_I2C_Master_Wait
  3566     0ED7                     l1634:
  3567                           
  3568                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  3569     0ED7  1683               	bsf	3,5	;RP0=1, select bank1
  3570     0ED8  1303               	bcf	3,6	;RP1=0, select bank1
  3571     0ED9  1411               	bsf	17,0	;volatile
  3572     0EDA                     l177:
  3573     0EDA  0008               	return
  3574     0EDB                     __end_of_I2C_Master_Start:
  3575                           
  3576                           	psect	text19
  3577     0EC9                     __ptext19:	
  3578 ;; *************** function _I2C_Master_RepeatedStart *****************
  3579 ;; Defined at:
  3580 ;;		line 47 in file "I2C.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;		None
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;		None
  3585 ;; Return value:  Size  Location     Type
  3586 ;;                  1    wreg      void 
  3587 ;; Registers used:
  3588 ;;		wreg, status,2, status,0, pclath, cstack
  3589 ;; Tracked objects:
  3590 ;;		On entry : 0/0
  3591 ;;		On exit  : 0/0
  3592 ;;		Unchanged: 0/0
  3593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3594 ;;      Params:         0       0       0       0       0
  3595 ;;      Locals:         0       0       0       0       0
  3596 ;;      Temps:          0       0       0       0       0
  3597 ;;      Totals:         0       0       0       0       0
  3598 ;;Total ram usage:        0 bytes
  3599 ;; Hardware stack levels used: 1
  3600 ;; Hardware stack levels required when called: 3
  3601 ;; This function calls:
  3602 ;;		_I2C_Master_Wait
  3603 ;; This function is called by:
  3604 ;;		_requestTemp
  3605 ;;		_requestHum
  3606 ;;		_requestGas
  3607 ;; This function uses a non-reentrant model
  3608 ;;
  3609                           
  3610     0EC9                     _I2C_Master_RepeatedStart:	
  3611                           ;psect for function _I2C_Master_RepeatedStart
  3612                           
  3613     0EC9                     l1640:	
  3614                           ;incstack = 0
  3615                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3616                           
  3617                           
  3618                           ;I2C.c: 49:     I2C_Master_Wait();
  3619     0EC9  120A  158A  2706  120A  158A  	fcall	_I2C_Master_Wait
  3620     0ECE                     l1642:
  3621                           
  3622                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  3623     0ECE  1683               	bsf	3,5	;RP0=1, select bank1
  3624     0ECF  1303               	bcf	3,6	;RP1=0, select bank1
  3625     0ED0  1491               	bsf	17,1	;volatile
  3626     0ED1                     l180:
  3627     0ED1  0008               	return
  3628     0ED2                     __end_of_I2C_Master_RepeatedStart:
  3629                           
  3630                           	psect	text20
  3631     0F65                     __ptext20:	
  3632 ;; *************** function _I2C_Master_Read *****************
  3633 ;; Defined at:
  3634 ;;		line 74 in file "I2C.c"
  3635 ;; Parameters:    Size  Location     Type
  3636 ;;  a               2    2[COMMON] unsigned short 
  3637 ;; Auto vars:     Size  Location     Type
  3638 ;;  temp            2    6[COMMON] unsigned short 
  3639 ;; Return value:  Size  Location     Type
  3640 ;;                  2    2[COMMON] unsigned short 
  3641 ;; Registers used:
  3642 ;;		wreg, status,2, status,0, pclath, cstack
  3643 ;; Tracked objects:
  3644 ;;		On entry : 0/0
  3645 ;;		On exit  : 0/0
  3646 ;;		Unchanged: 0/0
  3647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3648 ;;      Params:         2       0       0       0       0
  3649 ;;      Locals:         2       0       0       0       0
  3650 ;;      Temps:          2       0       0       0       0
  3651 ;;      Totals:         6       0       0       0       0
  3652 ;;Total ram usage:        6 bytes
  3653 ;; Hardware stack levels used: 1
  3654 ;; Hardware stack levels required when called: 3
  3655 ;; This function calls:
  3656 ;;		_I2C_Master_Wait
  3657 ;; This function is called by:
  3658 ;;		_requestTemp
  3659 ;;		_requestHum
  3660 ;;		_requestGas
  3661 ;; This function uses a non-reentrant model
  3662 ;;
  3663                           
  3664     0F65                     _I2C_Master_Read:	
  3665                           ;psect for function _I2C_Master_Read
  3666                           
  3667     0F65                     l1644:	
  3668                           ;incstack = 0
  3669                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3670                           
  3671                           
  3672                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3673     0F65  120A  158A  2706  120A  158A  	fcall	_I2C_Master_Wait
  3674     0F6A                     l1646:
  3675                           
  3676                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3677     0F6A  1683               	bsf	3,5	;RP0=1, select bank1
  3678     0F6B  1303               	bcf	3,6	;RP1=0, select bank1
  3679     0F6C  1591               	bsf	17,3	;volatile
  3680                           
  3681                           ;I2C.c: 79:     I2C_Master_Wait();
  3682     0F6D  120A  158A  2706  120A  158A  	fcall	_I2C_Master_Wait
  3683     0F72                     l1648:
  3684                           
  3685                           ;I2C.c: 80:     temp = SSPBUF;
  3686     0F72  1283               	bcf	3,5	;RP0=0, select bank0
  3687     0F73  1303               	bcf	3,6	;RP1=0, select bank0
  3688     0F74  0813               	movf	19,w	;volatile
  3689     0F75  00F4               	movwf	??_I2C_Master_Read
  3690     0F76  01F5               	clrf	??_I2C_Master_Read+1
  3691     0F77  0874               	movf	??_I2C_Master_Read,w
  3692     0F78  00F6               	movwf	I2C_Master_Read@temp
  3693     0F79  0875               	movf	??_I2C_Master_Read+1,w
  3694     0F7A  00F7               	movwf	I2C_Master_Read@temp+1
  3695     0F7B                     l1650:
  3696                           
  3697                           ;I2C.c: 81:     I2C_Master_Wait();
  3698     0F7B  120A  158A  2706  120A  158A  	fcall	_I2C_Master_Wait
  3699     0F80                     l1652:
  3700                           
  3701                           ;I2C.c: 82:     if(a == 1){
  3702     0F80  0372               	decf	I2C_Master_Read@a,w
  3703     0F81  0473               	iorwf	I2C_Master_Read@a+1,w
  3704     0F82  1D03               	btfss	3,2
  3705     0F83  2F85               	goto	u1131
  3706     0F84  2F86               	goto	u1130
  3707     0F85                     u1131:
  3708     0F85  2F8A               	goto	l189
  3709     0F86                     u1130:
  3710     0F86                     l1654:
  3711                           
  3712                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3713     0F86  1683               	bsf	3,5	;RP0=1, select bank1
  3714     0F87  1303               	bcf	3,6	;RP1=0, select bank1
  3715     0F88  1291               	bcf	17,5	;volatile
  3716                           
  3717                           ;I2C.c: 84:     }else{
  3718     0F89  2F8D               	goto	l190
  3719     0F8A                     l189:
  3720                           
  3721                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3722     0F8A  1683               	bsf	3,5	;RP0=1, select bank1
  3723     0F8B  1303               	bcf	3,6	;RP1=0, select bank1
  3724     0F8C  1691               	bsf	17,5	;volatile
  3725     0F8D                     l190:	
  3726                           ;I2C.c: 86:     }
  3727                           
  3728                           
  3729                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3730     0F8D  1611               	bsf	17,4	;volatile
  3731     0F8E                     l1656:
  3732                           
  3733                           ;I2C.c: 88:     return temp;
  3734     0F8E  0877               	movf	I2C_Master_Read@temp+1,w
  3735     0F8F  00F3               	movwf	?_I2C_Master_Read+1
  3736     0F90  0876               	movf	I2C_Master_Read@temp,w
  3737     0F91  00F2               	movwf	?_I2C_Master_Read
  3738     0F92                     l191:
  3739     0F92  0008               	return
  3740     0F93                     __end_of_I2C_Master_Read:
  3741                           
  3742                           	psect	text21
  3743     0F06                     __ptext21:	
  3744 ;; *************** function _I2C_Master_Wait *****************
  3745 ;; Defined at:
  3746 ;;		line 32 in file "I2C.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;		None
  3749 ;; Auto vars:     Size  Location     Type
  3750 ;;		None
  3751 ;; Return value:  Size  Location     Type
  3752 ;;                  1    wreg      void 
  3753 ;; Registers used:
  3754 ;;		wreg, status,2
  3755 ;; Tracked objects:
  3756 ;;		On entry : 0/0
  3757 ;;		On exit  : 0/0
  3758 ;;		Unchanged: 0/0
  3759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3760 ;;      Params:         0       0       0       0       0
  3761 ;;      Locals:         0       0       0       0       0
  3762 ;;      Temps:          0       0       0       0       0
  3763 ;;      Totals:         0       0       0       0       0
  3764 ;;Total ram usage:        0 bytes
  3765 ;; Hardware stack levels used: 1
  3766 ;; Hardware stack levels required when called: 2
  3767 ;; This function calls:
  3768 ;;		Nothing
  3769 ;; This function is called by:
  3770 ;;		_I2C_Master_Start
  3771 ;;		_I2C_Master_RepeatedStart
  3772 ;;		_I2C_Master_Stop
  3773 ;;		_I2C_Master_Write
  3774 ;;		_I2C_Master_Read
  3775 ;; This function uses a non-reentrant model
  3776 ;;
  3777                           
  3778     0F06                     _I2C_Master_Wait:	
  3779                           ;psect for function _I2C_Master_Wait
  3780                           
  3781     0F06                     l1410:	
  3782                           ;incstack = 0
  3783                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3784                           
  3785     0F06                     l171:	
  3786                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3787                           
  3788     0F06  1683               	bsf	3,5	;RP0=1, select bank1
  3789     0F07  1303               	bcf	3,6	;RP1=0, select bank1
  3790     0F08  1914               	btfsc	20,2	;volatile
  3791     0F09  2F0B               	goto	u701
  3792     0F0A  2F0C               	goto	u700
  3793     0F0B                     u701:
  3794     0F0B  2F06               	goto	l171
  3795     0F0C                     u700:
  3796     0F0C                     l1412:
  3797     0F0C  0811               	movf	17,w	;volatile
  3798     0F0D  391F               	andlw	31
  3799     0F0E  1D03               	btfss	3,2
  3800     0F0F  2F11               	goto	u711
  3801     0F10  2F12               	goto	u710
  3802     0F11                     u711:
  3803     0F11  2F06               	goto	l171
  3804     0F12                     u710:
  3805     0F12                     l174:
  3806     0F12  0008               	return
  3807     0F13                     __end_of_I2C_Master_Wait:
  3808                           
  3809                           	psect	text22
  3810     00D7                     __ptext22:	
  3811 ;; *************** function _LDC_output *****************
  3812 ;; Defined at:
  3813 ;;		line 220 in file "master.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;		None
  3816 ;; Auto vars:     Size  Location     Type
  3817 ;;		None
  3818 ;; Return value:  Size  Location     Type
  3819 ;;                  1    wreg      void 
  3820 ;; Registers used:
  3821 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3822 ;; Tracked objects:
  3823 ;;		On entry : 0/0
  3824 ;;		On exit  : 0/0
  3825 ;;		Unchanged: 0/0
  3826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3827 ;;      Params:         0       0       0       0       0
  3828 ;;      Locals:         0       0       0       0       0
  3829 ;;      Temps:          0       2       0       0       0
  3830 ;;      Totals:         0       2       0       0       0
  3831 ;;Total ram usage:        2 bytes
  3832 ;; Hardware stack levels used: 1
  3833 ;; Hardware stack levels required when called: 5
  3834 ;; This function calls:
  3835 ;;		_Lcd_Clear
  3836 ;;		_Lcd_Set_Cursor
  3837 ;;		_Lcd_Write_String
  3838 ;;		_num_to_string
  3839 ;; This function is called by:
  3840 ;;		_main
  3841 ;; This function uses a non-reentrant model
  3842 ;;
  3843                           
  3844     00D7                     _LDC_output:	
  3845                           ;psect for function _LDC_output
  3846                           
  3847     00D7                     l2146:	
  3848                           ;incstack = 0
  3849                           ; Regs used in _LDC_output: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3850                           
  3851                           
  3852                           ;master.c: 221:     Lcd_Clear();
  3853     00D7  120A  158A  26F9  120A  118A  	fcall	_Lcd_Clear
  3854     00DC                     l2148:
  3855                           
  3856                           ;master.c: 223:     num_to_string(tempC,S_temp,3);
  3857     00DC  087B               	movf	_tempC,w
  3858     00DD  1283               	bcf	3,5	;RP0=0, select bank0
  3859     00DE  1303               	bcf	3,6	;RP1=0, select bank0
  3860     00DF  00B0               	movwf	??_LDC_output
  3861     00E0  01B1               	clrf	??_LDC_output+1
  3862     00E1  0830               	movf	??_LDC_output,w
  3863     00E2  00A0               	movwf	num_to_string@num
  3864     00E3  0831               	movf	??_LDC_output+1,w
  3865     00E4  00A1               	movwf	num_to_string@num+1
  3866     00E5  3056               	movlw	(low (_S_temp| 0))& (0+255)
  3867     00E6  00A2               	movwf	num_to_string@dig8
  3868     00E7  3003               	movlw	3
  3869     00E8  00A3               	movwf	num_to_string@len
  3870     00E9  120A  118A  201E  120A  118A  	fcall	_num_to_string
  3871     00EE                     l2150:
  3872                           
  3873                           ;master.c: 224:     num_to_string(n_hum,S_hum,2);
  3874     00EE  1283               	bcf	3,5	;RP0=0, select bank0
  3875     00EF  1303               	bcf	3,6	;RP1=0, select bank0
  3876     00F0  0850               	movf	_n_hum,w
  3877     00F1  00B0               	movwf	??_LDC_output
  3878     00F2  01B1               	clrf	??_LDC_output+1
  3879     00F3  0830               	movf	??_LDC_output,w
  3880     00F4  00A0               	movwf	num_to_string@num
  3881     00F5  0831               	movf	??_LDC_output+1,w
  3882     00F6  00A1               	movwf	num_to_string@num+1
  3883     00F7  305A               	movlw	(low (_S_hum| 0))& (0+255)
  3884     00F8  00A2               	movwf	num_to_string@dig8
  3885     00F9  3002               	movlw	2
  3886     00FA  00A3               	movwf	num_to_string@len
  3887     00FB  120A  118A  201E  120A  118A  	fcall	_num_to_string
  3888     0100                     l2152:
  3889                           
  3890                           ;master.c: 225:     num_to_string(gasPPM,S_gas,3);
  3891     0100  1283               	bcf	3,5	;RP0=0, select bank0
  3892     0101  1303               	bcf	3,6	;RP1=0, select bank0
  3893     0102  084B               	movf	_gasPPM+1,w
  3894     0103  00A1               	movwf	num_to_string@num+1
  3895     0104  084A               	movf	_gasPPM,w
  3896     0105  00A0               	movwf	num_to_string@num
  3897     0106  3052               	movlw	(low (_S_gas| 0))& (0+255)
  3898     0107  00A2               	movwf	num_to_string@dig8
  3899     0108  3003               	movlw	3
  3900     0109  00A3               	movwf	num_to_string@len
  3901     010A  120A  118A  201E  120A  118A  	fcall	_num_to_string
  3902     010F                     l2154:
  3903                           
  3904                           ;master.c: 228:     Lcd_Set_Cursor(1,1);
  3905     010F  01F6               	clrf	Lcd_Set_Cursor@b
  3906     0110  0AF6               	incf	Lcd_Set_Cursor@b,f
  3907     0111  3001               	movlw	1
  3908     0112  120A  118A  25CC  120A  118A  	fcall	_Lcd_Set_Cursor
  3909                           
  3910                           ;master.c: 229:     Lcd_Write_String("T:");
  3911     0117  3017               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3912     0118  00F7               	movwf	Lcd_Write_String@a
  3913     0119  3080               	movlw	128
  3914     011A  00F8               	movwf	Lcd_Write_String@a+1
  3915     011B  120A  118A  26F0  120A  118A  	fcall	_Lcd_Write_String
  3916                           
  3917                           ;master.c: 230:     Lcd_Write_String(S_temp);
  3918     0120  3056               	movlw	(low (_S_temp| 0))& (0+255)
  3919     0121  00F7               	movwf	Lcd_Write_String@a
  3920     0122  3000               	movlw	0
  3921     0123  00F8               	movwf	Lcd_Write_String@a+1
  3922     0124  120A  118A  26F0  120A  118A  	fcall	_Lcd_Write_String
  3923                           
  3924                           ;master.c: 231:     Lcd_Write_String("^C");
  3925     0129  301A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3926     012A  00F7               	movwf	Lcd_Write_String@a
  3927     012B  3080               	movlw	128
  3928     012C  00F8               	movwf	Lcd_Write_String@a+1
  3929     012D  120A  118A  26F0  120A  118A  	fcall	_Lcd_Write_String
  3930     0132                     l2156:
  3931                           
  3932                           ;master.c: 233:     Lcd_Set_Cursor(2,1);
  3933     0132  01F6               	clrf	Lcd_Set_Cursor@b
  3934     0133  0AF6               	incf	Lcd_Set_Cursor@b,f
  3935     0134  3002               	movlw	2
  3936     0135  120A  118A  25CC  120A  118A  	fcall	_Lcd_Set_Cursor
  3937     013A                     l2158:
  3938                           
  3939                           ;master.c: 234:     Lcd_Write_String("H:");
  3940     013A  3014               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  3941     013B  00F7               	movwf	Lcd_Write_String@a
  3942     013C  3080               	movlw	128
  3943     013D  00F8               	movwf	Lcd_Write_String@a+1
  3944     013E  120A  118A  26F0  120A  118A  	fcall	_Lcd_Write_String
  3945     0143                     l2160:
  3946                           
  3947                           ;master.c: 235:     Lcd_Write_String(S_hum);
  3948     0143  305A               	movlw	(low (_S_hum| 0))& (0+255)
  3949     0144  00F7               	movwf	Lcd_Write_String@a
  3950     0145  3000               	movlw	0
  3951     0146  00F8               	movwf	Lcd_Write_String@a+1
  3952     0147  120A  118A  26F0  120A  118A  	fcall	_Lcd_Write_String
  3953     014C                     l2162:
  3954                           
  3955                           ;master.c: 236:     Lcd_Write_String("%RH");
  3956     014C  3009               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  3957     014D  00F7               	movwf	Lcd_Write_String@a
  3958     014E  3080               	movlw	128
  3959     014F  00F8               	movwf	Lcd_Write_String@a+1
  3960     0150  120A  118A  26F0  120A  118A  	fcall	_Lcd_Write_String
  3961                           
  3962                           ;master.c: 238:     Lcd_Set_Cursor(1,9);
  3963     0155  3009               	movlw	9
  3964     0156  00F6               	movwf	Lcd_Set_Cursor@b
  3965     0157  3001               	movlw	1
  3966     0158  120A  118A  25CC  120A  118A  	fcall	_Lcd_Set_Cursor
  3967     015D                     l2164:
  3968                           
  3969                           ;master.c: 239:     Lcd_Write_String("G:");
  3970     015D  3011               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  3971     015E  00F7               	movwf	Lcd_Write_String@a
  3972     015F  3080               	movlw	128
  3973     0160  00F8               	movwf	Lcd_Write_String@a+1
  3974     0161  120A  118A  26F0  120A  118A  	fcall	_Lcd_Write_String
  3975     0166                     l2166:
  3976                           
  3977                           ;master.c: 240:     Lcd_Write_String(S_gas);
  3978     0166  3052               	movlw	(low (_S_gas| 0))& (0+255)
  3979     0167  00F7               	movwf	Lcd_Write_String@a
  3980     0168  3000               	movlw	0
  3981     0169  00F8               	movwf	Lcd_Write_String@a+1
  3982     016A  120A  118A  26F0  120A  118A  	fcall	_Lcd_Write_String
  3983     016F                     l2168:
  3984                           
  3985                           ;master.c: 241:     Lcd_Write_String("ppm");
  3986     016F  300D               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  3987     0170  00F7               	movwf	Lcd_Write_String@a
  3988     0171  3080               	movlw	128
  3989     0172  00F8               	movwf	Lcd_Write_String@a+1
  3990     0173  120A  118A  26F0  120A  118A  	fcall	_Lcd_Write_String
  3991     0178                     l2170:
  3992                           
  3993                           ;master.c: 243:     Lcd_Set_Cursor(2,9);
  3994     0178  3009               	movlw	9
  3995     0179  00F6               	movwf	Lcd_Set_Cursor@b
  3996     017A  3002               	movlw	2
  3997     017B  120A  118A  25CC  120A  118A  	fcall	_Lcd_Set_Cursor
  3998                           
  3999                           ;master.c: 244:     Lcd_Write_String("PUERTA:");
  4000     0180  3001               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  4001     0181  00F7               	movwf	Lcd_Write_String@a
  4002     0182  3080               	movlw	128
  4003     0183  00F8               	movwf	Lcd_Write_String@a+1
  4004     0184  120A  118A  26F0  120A  118A  	fcall	_Lcd_Write_String
  4005     0189                     l125:
  4006     0189  0008               	return
  4007     018A                     __end_of_LDC_output:
  4008                           
  4009                           	psect	text23
  4010     001E                     __ptext23:	
  4011 ;; *************** function _num_to_string *****************
  4012 ;; Defined at:
  4013 ;;		line 260 in file "master.c"
  4014 ;; Parameters:    Size  Location     Type
  4015 ;;  num             2    0[BANK0 ] unsigned int 
  4016 ;;  dig8            1    2[BANK0 ] PTR unsigned char 
  4017 ;;		 -> S_gas(4), S_hum(3), S_temp(4), 
  4018 ;;  len             1    3[BANK0 ] unsigned char 
  4019 ;; Auto vars:     Size  Location     Type
  4020 ;;  unidades        2   14[BANK0 ] unsigned int 
  4021 ;;  decenas         2   12[BANK0 ] unsigned int 
  4022 ;;  div2            2   10[BANK0 ] unsigned int 
  4023 ;;  div1            2    8[BANK0 ] unsigned int 
  4024 ;;  centenas        2    6[BANK0 ] unsigned int 
  4025 ;;  div3            2    4[BANK0 ] unsigned int 
  4026 ;;  miles           2    0        unsigned int 
  4027 ;; Return value:  Size  Location     Type
  4028 ;;                  1    wreg      void 
  4029 ;; Registers used:
  4030 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 0/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4036 ;;      Params:         0       4       0       0       0
  4037 ;;      Locals:         0      12       0       0       0
  4038 ;;      Temps:          0       0       0       0       0
  4039 ;;      Totals:         0      16       0       0       0
  4040 ;;Total ram usage:       16 bytes
  4041 ;; Hardware stack levels used: 1
  4042 ;; Hardware stack levels required when called: 3
  4043 ;; This function calls:
  4044 ;;		___lwdiv
  4045 ;;		___lwmod
  4046 ;; This function is called by:
  4047 ;;		_LDC_output
  4048 ;; This function uses a non-reentrant model
  4049 ;;
  4050                           
  4051     001E                     _num_to_string:	
  4052                           ;psect for function _num_to_string
  4053                           
  4054     001E                     l1670:	
  4055                           ;incstack = 0
  4056                           ; Regs used in _num_to_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4057                           
  4058                           
  4059                           ;master.c: 261:     uint16_t div1,div2,div3,miles,centenas,decenas,unidades;;master.c: 2
      +                          62:     div1 = num / 10;
  4060     001E  300A               	movlw	10
  4061     001F  00F2               	movwf	___lwdiv@divisor
  4062     0020  3000               	movlw	0
  4063     0021  00F3               	movwf	___lwdiv@divisor+1
  4064     0022  1283               	bcf	3,5	;RP0=0, select bank0
  4065     0023  1303               	bcf	3,6	;RP1=0, select bank0
  4066     0024  0821               	movf	num_to_string@num+1,w
  4067     0025  00F5               	movwf	___lwdiv@dividend+1
  4068     0026  0820               	movf	num_to_string@num,w
  4069     0027  00F4               	movwf	___lwdiv@dividend
  4070     0028  120A  118A  277A  120A  118A  	fcall	___lwdiv
  4071     002D  0873               	movf	?___lwdiv+1,w
  4072     002E  1283               	bcf	3,5	;RP0=0, select bank0
  4073     002F  1303               	bcf	3,6	;RP1=0, select bank0
  4074     0030  00A9               	movwf	num_to_string@div1+1
  4075     0031  0872               	movf	?___lwdiv,w
  4076     0032  00A8               	movwf	num_to_string@div1
  4077                           
  4078                           ;master.c: 263:     unidades = num % 10;
  4079     0033  300A               	movlw	10
  4080     0034  00F2               	movwf	___lwmod@divisor
  4081     0035  3000               	movlw	0
  4082     0036  00F3               	movwf	___lwmod@divisor+1
  4083     0037  0821               	movf	num_to_string@num+1,w
  4084     0038  00F5               	movwf	___lwmod@dividend+1
  4085     0039  0820               	movf	num_to_string@num,w
  4086     003A  00F4               	movwf	___lwmod@dividend
  4087     003B  120A  118A  27BE  120A  118A  	fcall	___lwmod
  4088     0040  0873               	movf	?___lwmod+1,w
  4089     0041  1283               	bcf	3,5	;RP0=0, select bank0
  4090     0042  1303               	bcf	3,6	;RP1=0, select bank0
  4091     0043  00AF               	movwf	num_to_string@unidades+1
  4092     0044  0872               	movf	?___lwmod,w
  4093     0045  00AE               	movwf	num_to_string@unidades
  4094                           
  4095                           ;master.c: 264:     div2 = div1 / 10;
  4096     0046  300A               	movlw	10
  4097     0047  00F2               	movwf	___lwdiv@divisor
  4098     0048  3000               	movlw	0
  4099     0049  00F3               	movwf	___lwdiv@divisor+1
  4100     004A  0829               	movf	num_to_string@div1+1,w
  4101     004B  00F5               	movwf	___lwdiv@dividend+1
  4102     004C  0828               	movf	num_to_string@div1,w
  4103     004D  00F4               	movwf	___lwdiv@dividend
  4104     004E  120A  118A  277A  120A  118A  	fcall	___lwdiv
  4105     0053  0873               	movf	?___lwdiv+1,w
  4106     0054  1283               	bcf	3,5	;RP0=0, select bank0
  4107     0055  1303               	bcf	3,6	;RP1=0, select bank0
  4108     0056  00AB               	movwf	num_to_string@div2+1
  4109     0057  0872               	movf	?___lwdiv,w
  4110     0058  00AA               	movwf	num_to_string@div2
  4111                           
  4112                           ;master.c: 265:     decenas = div1 % 10;
  4113     0059  300A               	movlw	10
  4114     005A  00F2               	movwf	___lwmod@divisor
  4115     005B  3000               	movlw	0
  4116     005C  00F3               	movwf	___lwmod@divisor+1
  4117     005D  0829               	movf	num_to_string@div1+1,w
  4118     005E  00F5               	movwf	___lwmod@dividend+1
  4119     005F  0828               	movf	num_to_string@div1,w
  4120     0060  00F4               	movwf	___lwmod@dividend
  4121     0061  120A  118A  27BE  120A  118A  	fcall	___lwmod
  4122     0066  0873               	movf	?___lwmod+1,w
  4123     0067  1283               	bcf	3,5	;RP0=0, select bank0
  4124     0068  1303               	bcf	3,6	;RP1=0, select bank0
  4125     0069  00AD               	movwf	num_to_string@decenas+1
  4126     006A  0872               	movf	?___lwmod,w
  4127     006B  00AC               	movwf	num_to_string@decenas
  4128                           
  4129                           ;master.c: 266:     div3 = div2 / 10;
  4130     006C  300A               	movlw	10
  4131     006D  00F2               	movwf	___lwdiv@divisor
  4132     006E  3000               	movlw	0
  4133     006F  00F3               	movwf	___lwdiv@divisor+1
  4134     0070  082B               	movf	num_to_string@div2+1,w
  4135     0071  00F5               	movwf	___lwdiv@dividend+1
  4136     0072  082A               	movf	num_to_string@div2,w
  4137     0073  00F4               	movwf	___lwdiv@dividend
  4138     0074  120A  118A  277A  120A  118A  	fcall	___lwdiv
  4139     0079  0873               	movf	?___lwdiv+1,w
  4140     007A  1283               	bcf	3,5	;RP0=0, select bank0
  4141     007B  1303               	bcf	3,6	;RP1=0, select bank0
  4142     007C  00A5               	movwf	num_to_string@div3+1
  4143     007D  0872               	movf	?___lwdiv,w
  4144     007E  00A4               	movwf	num_to_string@div3
  4145                           
  4146                           ;master.c: 267:     centenas = div2 % 10;
  4147     007F  300A               	movlw	10
  4148     0080  00F2               	movwf	___lwmod@divisor
  4149     0081  3000               	movlw	0
  4150     0082  00F3               	movwf	___lwmod@divisor+1
  4151     0083  082B               	movf	num_to_string@div2+1,w
  4152     0084  00F5               	movwf	___lwmod@dividend+1
  4153     0085  082A               	movf	num_to_string@div2,w
  4154     0086  00F4               	movwf	___lwmod@dividend
  4155     0087  120A  118A  27BE  120A  118A  	fcall	___lwmod
  4156     008C  0873               	movf	?___lwmod+1,w
  4157     008D  1283               	bcf	3,5	;RP0=0, select bank0
  4158     008E  1303               	bcf	3,6	;RP1=0, select bank0
  4159     008F  00A7               	movwf	num_to_string@centenas+1
  4160     0090  0872               	movf	?___lwmod,w
  4161     0091  00A6               	movwf	num_to_string@centenas
  4162     0092  300A               	movlw	10
  4163     0093  00F2               	movwf	___lwmod@divisor
  4164     0094  3000               	movlw	0
  4165     0095  00F3               	movwf	___lwmod@divisor+1
  4166     0096  0825               	movf	num_to_string@div3+1,w
  4167     0097  00F5               	movwf	___lwmod@dividend+1
  4168     0098  0824               	movf	num_to_string@div3,w
  4169     0099  00F4               	movwf	___lwmod@dividend
  4170     009A  120A  118A  27BE  120A  118A  	fcall	___lwmod
  4171     009F                     l1672:
  4172                           
  4173                           ;master.c: 270:     if(len == 1){
  4174     009F  1283               	bcf	3,5	;RP0=0, select bank0
  4175     00A0  1303               	bcf	3,6	;RP1=0, select bank0
  4176     00A1  0323               	decf	num_to_string@len,w
  4177     00A2  1D03               	btfss	3,2
  4178     00A3  28A5               	goto	u1151
  4179     00A4  28A6               	goto	u1150
  4180     00A5                     u1151:
  4181     00A5  28AD               	goto	l1676
  4182     00A6                     u1150:
  4183     00A6                     l1674:
  4184                           
  4185                           ;master.c: 271:         dig8[0] = unidades + '0';
  4186     00A6  0822               	movf	num_to_string@dig8,w
  4187     00A7  0084               	movwf	4
  4188     00A8  082E               	movf	num_to_string@unidades,w
  4189     00A9  3E30               	addlw	48
  4190     00AA  1383               	bcf	3,7	;select IRP bank0
  4191     00AB  0080               	movwf	0
  4192                           
  4193                           ;master.c: 272:     }
  4194     00AC  28D6               	goto	l136
  4195     00AD                     l1676:
  4196     00AD  3002               	movlw	2
  4197     00AE  0623               	xorwf	num_to_string@len,w
  4198     00AF  1D03               	btfss	3,2
  4199     00B0  28B2               	goto	u1161
  4200     00B1  28B3               	goto	u1160
  4201     00B2                     u1161:
  4202     00B2  28BF               	goto	l1680
  4203     00B3                     u1160:
  4204     00B3                     l1678:
  4205                           
  4206                           ;master.c: 274:         dig8[1] = unidades + '0';
  4207     00B3  0A22               	incf	num_to_string@dig8,w
  4208     00B4  0084               	movwf	4
  4209     00B5  082E               	movf	num_to_string@unidades,w
  4210     00B6  3E30               	addlw	48
  4211     00B7  1383               	bcf	3,7	;select IRP bank0
  4212     00B8  0080               	movwf	0
  4213                           
  4214                           ;master.c: 275:         dig8[0] = decenas + '0';
  4215     00B9  0822               	movf	num_to_string@dig8,w
  4216     00BA  0084               	movwf	4
  4217     00BB  082C               	movf	num_to_string@decenas,w
  4218     00BC  3E30               	addlw	48
  4219     00BD  0080               	movwf	0
  4220                           
  4221                           ;master.c: 276:     }
  4222     00BE  28D6               	goto	l136
  4223     00BF                     l1680:
  4224     00BF  3003               	movlw	3
  4225     00C0  0623               	xorwf	num_to_string@len,w
  4226     00C1  1D03               	btfss	3,2
  4227     00C2  28C4               	goto	u1171
  4228     00C3  28C5               	goto	u1170
  4229     00C4                     u1171:
  4230     00C4  28D6               	goto	l136
  4231     00C5                     u1170:
  4232     00C5                     l1682:
  4233                           
  4234                           ;master.c: 278:         dig8[2] = unidades + '0';
  4235     00C5  0822               	movf	num_to_string@dig8,w
  4236     00C6  3E02               	addlw	2
  4237     00C7  0084               	movwf	4
  4238     00C8  082E               	movf	num_to_string@unidades,w
  4239     00C9  3E30               	addlw	48
  4240     00CA  1383               	bcf	3,7	;select IRP bank0
  4241     00CB  0080               	movwf	0
  4242                           
  4243                           ;master.c: 279:         dig8[1] = decenas + '0';
  4244     00CC  0A22               	incf	num_to_string@dig8,w
  4245     00CD  0084               	movwf	4
  4246     00CE  082C               	movf	num_to_string@decenas,w
  4247     00CF  3E30               	addlw	48
  4248     00D0  0080               	movwf	0
  4249                           
  4250                           ;master.c: 280:         dig8[0] = centenas + '0';
  4251     00D1  0822               	movf	num_to_string@dig8,w
  4252     00D2  0084               	movwf	4
  4253     00D3  0826               	movf	num_to_string@centenas,w
  4254     00D4  3E30               	addlw	48
  4255     00D5  0080               	movwf	0
  4256     00D6                     l136:
  4257     00D6  0008               	return
  4258     00D7                     __end_of_num_to_string:
  4259                           
  4260                           	psect	text24
  4261     07BE                     __ptext24:	
  4262 ;; *************** function ___lwmod *****************
  4263 ;; Defined at:
  4264 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  4265 ;; Parameters:    Size  Location     Type
  4266 ;;  divisor         2    2[COMMON] unsigned int 
  4267 ;;  dividend        2    4[COMMON] unsigned int 
  4268 ;; Auto vars:     Size  Location     Type
  4269 ;;  counter         1    6[COMMON] unsigned char 
  4270 ;; Return value:  Size  Location     Type
  4271 ;;                  2    2[COMMON] unsigned int 
  4272 ;; Registers used:
  4273 ;;		wreg, status,2, status,0, btemp+1
  4274 ;; Tracked objects:
  4275 ;;		On entry : 0/0
  4276 ;;		On exit  : 0/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4279 ;;      Params:         4       0       0       0       0
  4280 ;;      Locals:         1       0       0       0       0
  4281 ;;      Temps:          0       0       0       0       0
  4282 ;;      Totals:         5       0       0       0       0
  4283 ;;Total ram usage:        5 bytes
  4284 ;; Hardware stack levels used: 1
  4285 ;; Hardware stack levels required when called: 2
  4286 ;; This function calls:
  4287 ;;		Nothing
  4288 ;; This function is called by:
  4289 ;;		_num_to_string
  4290 ;; This function uses a non-reentrant model
  4291 ;;
  4292                           
  4293     07BE                     ___lwmod:	
  4294                           ;psect for function ___lwmod
  4295                           
  4296     07BE                     l1552:	
  4297                           ;incstack = 0
  4298                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  4299                           
  4300     07BE  0872               	movf	___lwmod@divisor,w
  4301     07BF  0473               	iorwf	___lwmod@divisor+1,w
  4302     07C0  1903               	btfsc	3,2
  4303     07C1  2FC3               	goto	u1021
  4304     07C2  2FC4               	goto	u1020
  4305     07C3                     u1021:
  4306     07C3  2FF3               	goto	l1570
  4307     07C4                     u1020:
  4308     07C4                     l1554:
  4309     07C4  01F6               	clrf	___lwmod@counter
  4310     07C5  0AF6               	incf	___lwmod@counter,f
  4311     07C6  2FD2               	goto	l1560
  4312     07C7                     l1556:
  4313     07C7  3001               	movlw	1
  4314     07C8                     u1035:
  4315     07C8  1003               	clrc
  4316     07C9  0DF2               	rlf	___lwmod@divisor,f
  4317     07CA  0DF3               	rlf	___lwmod@divisor+1,f
  4318     07CB  3EFF               	addlw	-1
  4319     07CC  1D03               	skipz
  4320     07CD  2FC8               	goto	u1035
  4321     07CE                     l1558:
  4322     07CE  3001               	movlw	1
  4323     07CF  00FF               	movwf	btemp+1
  4324     07D0  087F               	movf	btemp+1,w
  4325     07D1  07F6               	addwf	___lwmod@counter,f
  4326     07D2                     l1560:
  4327     07D2  1FF3               	btfss	___lwmod@divisor+1,7
  4328     07D3  2FD5               	goto	u1041
  4329     07D4  2FD6               	goto	u1040
  4330     07D5                     u1041:
  4331     07D5  2FC7               	goto	l1556
  4332     07D6                     u1040:
  4333     07D6                     l1562:
  4334     07D6  0873               	movf	___lwmod@divisor+1,w
  4335     07D7  0275               	subwf	___lwmod@dividend+1,w
  4336     07D8  1D03               	skipz
  4337     07D9  2FDC               	goto	u1055
  4338     07DA  0872               	movf	___lwmod@divisor,w
  4339     07DB  0274               	subwf	___lwmod@dividend,w
  4340     07DC                     u1055:
  4341     07DC  1C03               	skipc
  4342     07DD  2FDF               	goto	u1051
  4343     07DE  2FE0               	goto	u1050
  4344     07DF                     u1051:
  4345     07DF  2FE6               	goto	l1566
  4346     07E0                     u1050:
  4347     07E0                     l1564:
  4348     07E0  0872               	movf	___lwmod@divisor,w
  4349     07E1  02F4               	subwf	___lwmod@dividend,f
  4350     07E2  0873               	movf	___lwmod@divisor+1,w
  4351     07E3  1C03               	skipc
  4352     07E4  03F5               	decf	___lwmod@dividend+1,f
  4353     07E5  02F5               	subwf	___lwmod@dividend+1,f
  4354     07E6                     l1566:
  4355     07E6  3001               	movlw	1
  4356     07E7                     u1065:
  4357     07E7  1003               	clrc
  4358     07E8  0CF3               	rrf	___lwmod@divisor+1,f
  4359     07E9  0CF2               	rrf	___lwmod@divisor,f
  4360     07EA  3EFF               	addlw	-1
  4361     07EB  1D03               	skipz
  4362     07EC  2FE7               	goto	u1065
  4363     07ED                     l1568:
  4364     07ED  3001               	movlw	1
  4365     07EE  02F6               	subwf	___lwmod@counter,f
  4366     07EF  1D03               	btfss	3,2
  4367     07F0  2FF2               	goto	u1071
  4368     07F1  2FF3               	goto	u1070
  4369     07F2                     u1071:
  4370     07F2  2FD6               	goto	l1562
  4371     07F3                     u1070:
  4372     07F3                     l1570:
  4373     07F3  0875               	movf	___lwmod@dividend+1,w
  4374     07F4  00F3               	movwf	?___lwmod+1
  4375     07F5  0874               	movf	___lwmod@dividend,w
  4376     07F6  00F2               	movwf	?___lwmod
  4377     07F7                     l668:
  4378     07F7  0008               	return
  4379     07F8                     __end_of___lwmod:
  4380                           
  4381                           	psect	text25
  4382     077A                     __ptext25:	
  4383 ;; *************** function ___lwdiv *****************
  4384 ;; Defined at:
  4385 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  4386 ;; Parameters:    Size  Location     Type
  4387 ;;  divisor         2    2[COMMON] unsigned int 
  4388 ;;  dividend        2    4[COMMON] unsigned int 
  4389 ;; Auto vars:     Size  Location     Type
  4390 ;;  quotient        2    6[COMMON] unsigned int 
  4391 ;;  counter         1    8[COMMON] unsigned char 
  4392 ;; Return value:  Size  Location     Type
  4393 ;;                  2    2[COMMON] unsigned int 
  4394 ;; Registers used:
  4395 ;;		wreg, status,2, status,0, btemp+1
  4396 ;; Tracked objects:
  4397 ;;		On entry : 0/0
  4398 ;;		On exit  : 0/0
  4399 ;;		Unchanged: 0/0
  4400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4401 ;;      Params:         4       0       0       0       0
  4402 ;;      Locals:         3       0       0       0       0
  4403 ;;      Temps:          0       0       0       0       0
  4404 ;;      Totals:         7       0       0       0       0
  4405 ;;Total ram usage:        7 bytes
  4406 ;; Hardware stack levels used: 1
  4407 ;; Hardware stack levels required when called: 2
  4408 ;; This function calls:
  4409 ;;		Nothing
  4410 ;; This function is called by:
  4411 ;;		_num_to_string
  4412 ;; This function uses a non-reentrant model
  4413 ;;
  4414                           
  4415     077A                     ___lwdiv:	
  4416                           ;psect for function ___lwdiv
  4417                           
  4418     077A                     l1526:	
  4419                           ;incstack = 0
  4420                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  4421                           
  4422     077A  01F6               	clrf	___lwdiv@quotient
  4423     077B  01F7               	clrf	___lwdiv@quotient+1
  4424     077C                     l1528:
  4425     077C  0872               	movf	___lwdiv@divisor,w
  4426     077D  0473               	iorwf	___lwdiv@divisor+1,w
  4427     077E  1903               	btfsc	3,2
  4428     077F  2F81               	goto	u951
  4429     0780  2F82               	goto	u950
  4430     0781                     u951:
  4431     0781  2FB9               	goto	l1548
  4432     0782                     u950:
  4433     0782                     l1530:
  4434     0782  01F8               	clrf	___lwdiv@counter
  4435     0783  0AF8               	incf	___lwdiv@counter,f
  4436     0784  2F90               	goto	l1536
  4437     0785                     l1532:
  4438     0785  3001               	movlw	1
  4439     0786                     u965:
  4440     0786  1003               	clrc
  4441     0787  0DF2               	rlf	___lwdiv@divisor,f
  4442     0788  0DF3               	rlf	___lwdiv@divisor+1,f
  4443     0789  3EFF               	addlw	-1
  4444     078A  1D03               	skipz
  4445     078B  2F86               	goto	u965
  4446     078C                     l1534:
  4447     078C  3001               	movlw	1
  4448     078D  00FF               	movwf	btemp+1
  4449     078E  087F               	movf	btemp+1,w
  4450     078F  07F8               	addwf	___lwdiv@counter,f
  4451     0790                     l1536:
  4452     0790  1FF3               	btfss	___lwdiv@divisor+1,7
  4453     0791  2F93               	goto	u971
  4454     0792  2F94               	goto	u970
  4455     0793                     u971:
  4456     0793  2F85               	goto	l1532
  4457     0794                     u970:
  4458     0794                     l1538:
  4459     0794  3001               	movlw	1
  4460     0795                     u985:
  4461     0795  1003               	clrc
  4462     0796  0DF6               	rlf	___lwdiv@quotient,f
  4463     0797  0DF7               	rlf	___lwdiv@quotient+1,f
  4464     0798  3EFF               	addlw	-1
  4465     0799  1D03               	skipz
  4466     079A  2F95               	goto	u985
  4467     079B  0873               	movf	___lwdiv@divisor+1,w
  4468     079C  0275               	subwf	___lwdiv@dividend+1,w
  4469     079D  1D03               	skipz
  4470     079E  2FA1               	goto	u995
  4471     079F  0872               	movf	___lwdiv@divisor,w
  4472     07A0  0274               	subwf	___lwdiv@dividend,w
  4473     07A1                     u995:
  4474     07A1  1C03               	skipc
  4475     07A2  2FA4               	goto	u991
  4476     07A3  2FA5               	goto	u990
  4477     07A4                     u991:
  4478     07A4  2FAC               	goto	l1544
  4479     07A5                     u990:
  4480     07A5                     l1540:
  4481     07A5  0872               	movf	___lwdiv@divisor,w
  4482     07A6  02F4               	subwf	___lwdiv@dividend,f
  4483     07A7  0873               	movf	___lwdiv@divisor+1,w
  4484     07A8  1C03               	skipc
  4485     07A9  03F5               	decf	___lwdiv@dividend+1,f
  4486     07AA  02F5               	subwf	___lwdiv@dividend+1,f
  4487     07AB                     l1542:
  4488     07AB  1476               	bsf	___lwdiv@quotient,0
  4489     07AC                     l1544:
  4490     07AC  3001               	movlw	1
  4491     07AD                     u1005:
  4492     07AD  1003               	clrc
  4493     07AE  0CF3               	rrf	___lwdiv@divisor+1,f
  4494     07AF  0CF2               	rrf	___lwdiv@divisor,f
  4495     07B0  3EFF               	addlw	-1
  4496     07B1  1D03               	skipz
  4497     07B2  2FAD               	goto	u1005
  4498     07B3                     l1546:
  4499     07B3  3001               	movlw	1
  4500     07B4  02F8               	subwf	___lwdiv@counter,f
  4501     07B5  1D03               	btfss	3,2
  4502     07B6  2FB8               	goto	u1011
  4503     07B7  2FB9               	goto	u1010
  4504     07B8                     u1011:
  4505     07B8  2F94               	goto	l1538
  4506     07B9                     u1010:
  4507     07B9                     l1548:
  4508     07B9  0877               	movf	___lwdiv@quotient+1,w
  4509     07BA  00F3               	movwf	?___lwdiv+1
  4510     07BB  0876               	movf	___lwdiv@quotient,w
  4511     07BC  00F2               	movwf	?___lwdiv
  4512     07BD                     l658:
  4513     07BD  0008               	return
  4514     07BE                     __end_of___lwdiv:
  4515                           
  4516                           	psect	text26
  4517     06F0                     __ptext26:	
  4518 ;; *************** function _Lcd_Write_String *****************
  4519 ;; Defined at:
  4520 ;;		line 98 in file "LCD4b.c"
  4521 ;; Parameters:    Size  Location     Type
  4522 ;;  a               2    7[COMMON] PTR unsigned char 
  4523 ;;		 -> STR_7(8), STR_6(4), STR_5(3), STR_4(4), 
  4524 ;;		 -> STR_3(3), STR_2(3), STR_1(3), S_gas(4), 
  4525 ;;		 -> S_hum(3), S_temp(4), 
  4526 ;; Auto vars:     Size  Location     Type
  4527 ;;  i               2    3[BANK0 ] int 
  4528 ;; Return value:  Size  Location     Type
  4529 ;;                  1    wreg      void 
  4530 ;; Registers used:
  4531 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4532 ;; Tracked objects:
  4533 ;;		On entry : 0/0
  4534 ;;		On exit  : 0/0
  4535 ;;		Unchanged: 0/0
  4536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4537 ;;      Params:         2       0       0       0       0
  4538 ;;      Locals:         0       2       0       0       0
  4539 ;;      Temps:          0       3       0       0       0
  4540 ;;      Totals:         2       5       0       0       0
  4541 ;;Total ram usage:        7 bytes
  4542 ;; Hardware stack levels used: 1
  4543 ;; Hardware stack levels required when called: 4
  4544 ;; This function calls:
  4545 ;;		_Lcd_Write_Char
  4546 ;; This function is called by:
  4547 ;;		_LDC_output
  4548 ;; This function uses a non-reentrant model
  4549 ;;
  4550                           
  4551     06F0                     _Lcd_Write_String:	
  4552                           ;psect for function _Lcd_Write_String
  4553                           
  4554     06F0                     l2090:	
  4555                           ;incstack = 0
  4556                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4557                           
  4558                           
  4559                           ;LCD4b.c: 99:     int i;;LCD4b.c: 100:     for (i = 0; a[i] != '\0'; i++)
  4560     06F0  1283               	bcf	3,5	;RP0=0, select bank0
  4561     06F1  1303               	bcf	3,6	;RP1=0, select bank0
  4562     06F2  01A3               	clrf	Lcd_Write_String@i
  4563     06F3  01A4               	clrf	Lcd_Write_String@i+1
  4564     06F4  2F19               	goto	l2096
  4565     06F5                     l2092:
  4566                           
  4567                           ;LCD4b.c: 101:         Lcd_Write_Char(a[i]);
  4568     06F5  0823               	movf	Lcd_Write_String@i,w
  4569     06F6  0777               	addwf	Lcd_Write_String@a,w
  4570     06F7  00A1               	movwf	??_Lcd_Write_String+1
  4571     06F8  0878               	movf	Lcd_Write_String@a+1,w
  4572     06F9  00A0               	movwf	??_Lcd_Write_String
  4573     06FA  1803               	skipnc
  4574     06FB  0AA0               	incf	??_Lcd_Write_String,f
  4575     06FC  1FA3               	btfss	Lcd_Write_String@i,7
  4576     06FD  2EFF               	goto	u1670
  4577     06FE  03A0               	decf	??_Lcd_Write_String,f
  4578     06FF                     u1670:
  4579     06FF  1283               	bcf	3,5	;RP0=0, select bank0
  4580     0700  1303               	bcf	3,6	;RP1=0, select bank0
  4581     0701  0820               	movf	??_Lcd_Write_String,w
  4582     0702  00A2               	movwf	??_Lcd_Write_String+2
  4583     0703  0822               	movf	??_Lcd_Write_String+2,w
  4584     0704  00FF               	movwf	btemp+1
  4585     0705  0821               	movf	??_Lcd_Write_String+1,w
  4586     0706  0084               	movwf	4
  4587     0707  120A  158A  2000  120A  118A  	fcall	stringtab
  4588     070C  120A  158A  2793  120A  118A  	fcall	_Lcd_Write_Char
  4589     0711                     l2094:
  4590     0711  3001               	movlw	1
  4591     0712  1283               	bcf	3,5	;RP0=0, select bank0
  4592     0713  1303               	bcf	3,6	;RP1=0, select bank0
  4593     0714  07A3               	addwf	Lcd_Write_String@i,f
  4594     0715  1803               	skipnc
  4595     0716  0AA4               	incf	Lcd_Write_String@i+1,f
  4596     0717  3000               	movlw	0
  4597     0718  07A4               	addwf	Lcd_Write_String@i+1,f
  4598     0719                     l2096:
  4599     0719  0823               	movf	Lcd_Write_String@i,w
  4600     071A  0777               	addwf	Lcd_Write_String@a,w
  4601     071B  00A1               	movwf	??_Lcd_Write_String+1
  4602     071C  0878               	movf	Lcd_Write_String@a+1,w
  4603     071D  00A0               	movwf	??_Lcd_Write_String
  4604     071E  1803               	skipnc
  4605     071F  0AA0               	incf	??_Lcd_Write_String,f
  4606     0720  1FA3               	btfss	Lcd_Write_String@i,7
  4607     0721  2F23               	goto	u1680
  4608     0722  03A0               	decf	??_Lcd_Write_String,f
  4609     0723                     u1680:
  4610     0723  1283               	bcf	3,5	;RP0=0, select bank0
  4611     0724  1303               	bcf	3,6	;RP1=0, select bank0
  4612     0725  0820               	movf	??_Lcd_Write_String,w
  4613     0726  00A2               	movwf	??_Lcd_Write_String+2
  4614     0727  0822               	movf	??_Lcd_Write_String+2,w
  4615     0728  00FF               	movwf	btemp+1
  4616     0729  0821               	movf	??_Lcd_Write_String+1,w
  4617     072A  0084               	movwf	4
  4618     072B  120A  158A  2000  120A  118A  	fcall	stringtab
  4619     0730  3A00               	xorlw	0
  4620     0731  1D03               	skipz
  4621     0732  2F34               	goto	u1691
  4622     0733  2F35               	goto	u1690
  4623     0734                     u1691:
  4624     0734  2EF5               	goto	l2092
  4625     0735                     u1690:
  4626     0735                     l243:
  4627     0735  0008               	return
  4628     0736                     __end_of_Lcd_Write_String:
  4629                           
  4630                           	psect	text27
  4631     0F93                     __ptext27:	
  4632 ;; *************** function _Lcd_Write_Char *****************
  4633 ;; Defined at:
  4634 ;;		line 83 in file "LCD4b.c"
  4635 ;; Parameters:    Size  Location     Type
  4636 ;;  a               1    wreg     unsigned char 
  4637 ;; Auto vars:     Size  Location     Type
  4638 ;;  a               1    6[COMMON] unsigned char 
  4639 ;;  y               1    5[COMMON] unsigned char 
  4640 ;;  temp            1    4[COMMON] unsigned char 
  4641 ;; Return value:  Size  Location     Type
  4642 ;;                  1    wreg      void 
  4643 ;; Registers used:
  4644 ;;		wreg, status,2, status,0, pclath, cstack
  4645 ;; Tracked objects:
  4646 ;;		On entry : 0/0
  4647 ;;		On exit  : 0/0
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4650 ;;      Params:         0       0       0       0       0
  4651 ;;      Locals:         3       0       0       0       0
  4652 ;;      Temps:          1       0       0       0       0
  4653 ;;      Totals:         4       0       0       0       0
  4654 ;;Total ram usage:        4 bytes
  4655 ;; Hardware stack levels used: 1
  4656 ;; Hardware stack levels required when called: 3
  4657 ;; This function calls:
  4658 ;;		_Lcd_Port
  4659 ;; This function is called by:
  4660 ;;		_Lcd_Write_String
  4661 ;; This function uses a non-reentrant model
  4662 ;;
  4663                           
  4664     0F93                     _Lcd_Write_Char:	
  4665                           ;psect for function _Lcd_Write_Char
  4666                           
  4667                           
  4668                           ;incstack = 0
  4669                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4670                           ;Lcd_Write_Char@a stored from wreg
  4671     0F93  00F6               	movwf	Lcd_Write_Char@a
  4672     0F94                     l1904:
  4673                           
  4674                           ;LCD4b.c: 84:     char temp, y;;LCD4b.c: 85:     temp = a & 0x0F;
  4675     0F94  0876               	movf	Lcd_Write_Char@a,w
  4676     0F95  390F               	andlw	15
  4677     0F96  00F4               	movwf	Lcd_Write_Char@temp
  4678                           
  4679                           ;LCD4b.c: 86:     y = a & 0xF0;
  4680     0F97  0876               	movf	Lcd_Write_Char@a,w
  4681     0F98  39F0               	andlw	240
  4682     0F99  00F5               	movwf	Lcd_Write_Char@y
  4683     0F9A                     l1906:
  4684                           
  4685                           ;LCD4b.c: 87:     PORTDbits.RD2 = 1;
  4686     0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  4687     0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  4688     0F9C  1508               	bsf	8,2	;volatile
  4689     0F9D                     l1908:
  4690                           
  4691                           ;LCD4b.c: 88:     Lcd_Port(y >> 4);
  4692     0F9D  0875               	movf	Lcd_Write_Char@y,w
  4693     0F9E  00F3               	movwf	??_Lcd_Write_Char
  4694     0F9F  3004               	movlw	4
  4695     0FA0                     u1345:
  4696     0FA0  1003               	clrc
  4697     0FA1  0CF3               	rrf	??_Lcd_Write_Char,f
  4698     0FA2  3EFF               	addlw	-1
  4699     0FA3  1D03               	skipz
  4700     0FA4  2FA0               	goto	u1345
  4701     0FA5  0873               	movf	??_Lcd_Write_Char,w
  4702     0FA6  120A  158A  2743  120A  158A  	fcall	_Lcd_Port
  4703     0FAB                     l1910:
  4704                           
  4705                           ;LCD4b.c: 89:     RD3 = 1;
  4706     0FAB  1283               	bcf	3,5	;RP0=0, select bank0
  4707     0FAC  1303               	bcf	3,6	;RP1=0, select bank0
  4708     0FAD  1588               	bsf	8,3	;volatile
  4709     0FAE                     l1912:
  4710                           
  4711                           ;LCD4b.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4712     0FAE  301A               	movlw	26
  4713     0FAF  00F3               	movwf	??_Lcd_Write_Char
  4714     0FB0                     u1847:
  4715     0FB0  0BF3               	decfsz	??_Lcd_Write_Char,f
  4716     0FB1  2FB0               	goto	u1847
  4717     0FB2  0000               	nop
  4718     0FB3                     l1914:
  4719                           
  4720                           ;LCD4b.c: 91:     RD3 = 0;
  4721     0FB3  1283               	bcf	3,5	;RP0=0, select bank0
  4722     0FB4  1303               	bcf	3,6	;RP1=0, select bank0
  4723     0FB5  1188               	bcf	8,3	;volatile
  4724     0FB6                     l1916:
  4725                           
  4726                           ;LCD4b.c: 92:     Lcd_Port(temp);
  4727     0FB6  0874               	movf	Lcd_Write_Char@temp,w
  4728     0FB7  120A  158A  2743  120A  158A  	fcall	_Lcd_Port
  4729     0FBC                     l1918:
  4730                           
  4731                           ;LCD4b.c: 93:     RD3 = 1;
  4732     0FBC  1283               	bcf	3,5	;RP0=0, select bank0
  4733     0FBD  1303               	bcf	3,6	;RP1=0, select bank0
  4734     0FBE  1588               	bsf	8,3	;volatile
  4735     0FBF                     l1920:
  4736                           
  4737                           ;LCD4b.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4738     0FBF  301A               	movlw	26
  4739     0FC0  00F3               	movwf	??_Lcd_Write_Char
  4740     0FC1                     u1857:
  4741     0FC1  0BF3               	decfsz	??_Lcd_Write_Char,f
  4742     0FC2  2FC1               	goto	u1857
  4743     0FC3  0000               	nop
  4744     0FC4                     l1922:
  4745                           
  4746                           ;LCD4b.c: 95:     RD3 = 0;
  4747     0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  4748     0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  4749     0FC6  1188               	bcf	8,3	;volatile
  4750     0FC7                     l237:
  4751     0FC7  0008               	return
  4752     0FC8                     __end_of_Lcd_Write_Char:
  4753                           
  4754                           	psect	text28
  4755     05CC                     __ptext28:	
  4756 ;; *************** function _Lcd_Set_Cursor *****************
  4757 ;; Defined at:
  4758 ;;		line 48 in file "LCD4b.c"
  4759 ;; Parameters:    Size  Location     Type
  4760 ;;  a               1    wreg     unsigned char 
  4761 ;;  b               1    6[COMMON] unsigned char 
  4762 ;; Auto vars:     Size  Location     Type
  4763 ;;  a               1    0[BANK0 ] unsigned char 
  4764 ;;  temp            1    3[BANK0 ] unsigned char 
  4765 ;;  y               1    2[BANK0 ] unsigned char 
  4766 ;;  z               1    1[BANK0 ] unsigned char 
  4767 ;; Return value:  Size  Location     Type
  4768 ;;                  1    wreg      void 
  4769 ;; Registers used:
  4770 ;;		wreg, status,2, status,0, pclath, cstack
  4771 ;; Tracked objects:
  4772 ;;		On entry : 0/0
  4773 ;;		On exit  : 0/0
  4774 ;;		Unchanged: 0/0
  4775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4776 ;;      Params:         1       0       0       0       0
  4777 ;;      Locals:         0       4       0       0       0
  4778 ;;      Temps:          1       0       0       0       0
  4779 ;;      Totals:         2       4       0       0       0
  4780 ;;Total ram usage:        6 bytes
  4781 ;; Hardware stack levels used: 1
  4782 ;; Hardware stack levels required when called: 4
  4783 ;; This function calls:
  4784 ;;		_Lcd_Cmd
  4785 ;; This function is called by:
  4786 ;;		_LDC_output
  4787 ;; This function uses a non-reentrant model
  4788 ;;
  4789                           
  4790     05CC                     _Lcd_Set_Cursor:	
  4791                           ;psect for function _Lcd_Set_Cursor
  4792                           
  4793                           
  4794                           ;incstack = 0
  4795                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4796                           ;Lcd_Set_Cursor@a stored from wreg
  4797     05CC  1283               	bcf	3,5	;RP0=0, select bank0
  4798     05CD  1303               	bcf	3,6	;RP1=0, select bank0
  4799     05CE  00A0               	movwf	Lcd_Set_Cursor@a
  4800     05CF                     l2070:
  4801                           
  4802                           ;LCD4b.c: 49:     char temp, z, y;;LCD4b.c: 50:     if (a == 1) {
  4803     05CF  0320               	decf	Lcd_Set_Cursor@a,w
  4804     05D0  1D03               	btfss	3,2
  4805     05D1  2DD3               	goto	u1631
  4806     05D2  2DD4               	goto	u1630
  4807     05D3                     u1631:
  4808     05D3  2DF3               	goto	l2080
  4809     05D4                     u1630:
  4810     05D4                     l2072:
  4811                           
  4812                           ;LCD4b.c: 51:         temp = 0x80 + b - 1;
  4813     05D4  0876               	movf	Lcd_Set_Cursor@b,w
  4814     05D5  3E7F               	addlw	127
  4815     05D6  00A3               	movwf	Lcd_Set_Cursor@temp
  4816                           
  4817                           ;LCD4b.c: 52:         z = temp >> 4;
  4818     05D7  0823               	movf	Lcd_Set_Cursor@temp,w
  4819     05D8  00F7               	movwf	??_Lcd_Set_Cursor
  4820     05D9  3004               	movlw	4
  4821     05DA                     u1645:
  4822     05DA  1003               	clrc
  4823     05DB  0CF7               	rrf	??_Lcd_Set_Cursor,f
  4824     05DC  3EFF               	addlw	-1
  4825     05DD  1D03               	skipz
  4826     05DE  2DDA               	goto	u1645
  4827     05DF  0877               	movf	??_Lcd_Set_Cursor,w
  4828     05E0  00A1               	movwf	Lcd_Set_Cursor@z
  4829     05E1                     l2074:
  4830                           
  4831                           ;LCD4b.c: 53:         y = temp & 0x0F;
  4832     05E1  0823               	movf	Lcd_Set_Cursor@temp,w
  4833     05E2  390F               	andlw	15
  4834     05E3  00A2               	movwf	Lcd_Set_Cursor@y
  4835     05E4                     l2076:
  4836                           
  4837                           ;LCD4b.c: 54:         Lcd_Cmd(z);
  4838     05E4  0821               	movf	Lcd_Set_Cursor@z,w
  4839     05E5  120A  158A  2729  120A  118A  	fcall	_Lcd_Cmd
  4840     05EA                     l2078:
  4841                           
  4842                           ;LCD4b.c: 55:         Lcd_Cmd(y);
  4843     05EA  1283               	bcf	3,5	;RP0=0, select bank0
  4844     05EB  1303               	bcf	3,6	;RP1=0, select bank0
  4845     05EC  0822               	movf	Lcd_Set_Cursor@y,w
  4846     05ED  120A  158A  2729  120A  118A  	fcall	_Lcd_Cmd
  4847                           
  4848                           ;LCD4b.c: 56:     } else if (a == 2) {
  4849     05F2  2E17               	goto	l231
  4850     05F3                     l2080:
  4851     05F3  3002               	movlw	2
  4852     05F4  0620               	xorwf	Lcd_Set_Cursor@a,w
  4853     05F5  1D03               	btfss	3,2
  4854     05F6  2DF8               	goto	u1651
  4855     05F7  2DF9               	goto	u1650
  4856     05F8                     u1651:
  4857     05F8  2E17               	goto	l231
  4858     05F9                     u1650:
  4859     05F9                     l2082:
  4860                           
  4861                           ;LCD4b.c: 57:         temp = 0xC0 + b - 1;
  4862     05F9  0876               	movf	Lcd_Set_Cursor@b,w
  4863     05FA  3EBF               	addlw	191
  4864     05FB  00A3               	movwf	Lcd_Set_Cursor@temp
  4865                           
  4866                           ;LCD4b.c: 58:         z = temp >> 4;
  4867     05FC  0823               	movf	Lcd_Set_Cursor@temp,w
  4868     05FD  00F7               	movwf	??_Lcd_Set_Cursor
  4869     05FE  3004               	movlw	4
  4870     05FF                     u1665:
  4871     05FF  1003               	clrc
  4872     0600  0CF7               	rrf	??_Lcd_Set_Cursor,f
  4873     0601  3EFF               	addlw	-1
  4874     0602  1D03               	skipz
  4875     0603  2DFF               	goto	u1665
  4876     0604  0877               	movf	??_Lcd_Set_Cursor,w
  4877     0605  00A1               	movwf	Lcd_Set_Cursor@z
  4878     0606                     l2084:
  4879                           
  4880                           ;LCD4b.c: 59:         y = temp & 0x0F;
  4881     0606  0823               	movf	Lcd_Set_Cursor@temp,w
  4882     0607  390F               	andlw	15
  4883     0608  00A2               	movwf	Lcd_Set_Cursor@y
  4884     0609                     l2086:
  4885                           
  4886                           ;LCD4b.c: 60:         Lcd_Cmd(z);
  4887     0609  0821               	movf	Lcd_Set_Cursor@z,w
  4888     060A  120A  158A  2729  120A  118A  	fcall	_Lcd_Cmd
  4889     060F                     l2088:
  4890                           
  4891                           ;LCD4b.c: 61:         Lcd_Cmd(y);
  4892     060F  1283               	bcf	3,5	;RP0=0, select bank0
  4893     0610  1303               	bcf	3,6	;RP1=0, select bank0
  4894     0611  0822               	movf	Lcd_Set_Cursor@y,w
  4895     0612  120A  158A  2729  120A  118A  	fcall	_Lcd_Cmd
  4896     0617                     l231:
  4897     0617  0008               	return
  4898     0618                     __end_of_Lcd_Set_Cursor:
  4899                           
  4900                           	psect	text29
  4901     0EF9                     __ptext29:	
  4902 ;; *************** function _Lcd_Clear *****************
  4903 ;; Defined at:
  4904 ;;		line 43 in file "LCD4b.c"
  4905 ;; Parameters:    Size  Location     Type
  4906 ;;		None
  4907 ;; Auto vars:     Size  Location     Type
  4908 ;;		None
  4909 ;; Return value:  Size  Location     Type
  4910 ;;                  1    wreg      void 
  4911 ;; Registers used:
  4912 ;;		wreg, status,2, status,0, pclath, cstack
  4913 ;; Tracked objects:
  4914 ;;		On entry : 0/0
  4915 ;;		On exit  : 0/0
  4916 ;;		Unchanged: 0/0
  4917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4918 ;;      Params:         0       0       0       0       0
  4919 ;;      Locals:         0       0       0       0       0
  4920 ;;      Temps:          0       0       0       0       0
  4921 ;;      Totals:         0       0       0       0       0
  4922 ;;Total ram usage:        0 bytes
  4923 ;; Hardware stack levels used: 1
  4924 ;; Hardware stack levels required when called: 4
  4925 ;; This function calls:
  4926 ;;		_Lcd_Cmd
  4927 ;; This function is called by:
  4928 ;;		_LDC_output
  4929 ;; This function uses a non-reentrant model
  4930 ;;
  4931                           
  4932     0EF9                     _Lcd_Clear:	
  4933                           ;psect for function _Lcd_Clear
  4934                           
  4935     0EF9                     l2068:	
  4936                           ;incstack = 0
  4937                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4938                           
  4939                           
  4940                           ;LCD4b.c: 44:     Lcd_Cmd(0);
  4941     0EF9  3000               	movlw	0
  4942     0EFA  120A  158A  2729  120A  158A  	fcall	_Lcd_Cmd
  4943                           
  4944                           ;LCD4b.c: 45:     Lcd_Cmd(1);
  4945     0EFF  3001               	movlw	1
  4946     0F00  120A  158A  2729  120A  158A  	fcall	_Lcd_Cmd
  4947     0F05                     l225:
  4948     0F05  0008               	return
  4949     0F06                     __end_of_Lcd_Clear:
  4950                           
  4951                           	psect	text30
  4952     0F29                     __ptext30:	
  4953 ;; *************** function _Lcd_Cmd *****************
  4954 ;; Defined at:
  4955 ;;		line 35 in file "LCD4b.c"
  4956 ;; Parameters:    Size  Location     Type
  4957 ;;  a               1    wreg     unsigned char 
  4958 ;; Auto vars:     Size  Location     Type
  4959 ;;  a               1    5[COMMON] unsigned char 
  4960 ;; Return value:  Size  Location     Type
  4961 ;;                  1    wreg      void 
  4962 ;; Registers used:
  4963 ;;		wreg, status,2, status,0, pclath, cstack
  4964 ;; Tracked objects:
  4965 ;;		On entry : 0/0
  4966 ;;		On exit  : 0/0
  4967 ;;		Unchanged: 0/0
  4968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4969 ;;      Params:         0       0       0       0       0
  4970 ;;      Locals:         1       0       0       0       0
  4971 ;;      Temps:          2       0       0       0       0
  4972 ;;      Totals:         3       0       0       0       0
  4973 ;;Total ram usage:        3 bytes
  4974 ;; Hardware stack levels used: 1
  4975 ;; Hardware stack levels required when called: 3
  4976 ;; This function calls:
  4977 ;;		_Lcd_Port
  4978 ;; This function is called by:
  4979 ;;		_Lcd_Clear
  4980 ;;		_Lcd_Set_Cursor
  4981 ;;		_Lcd_Init
  4982 ;;		_Lcd_Shift_Right
  4983 ;;		_Lcd_Shift_Left
  4984 ;; This function uses a non-reentrant model
  4985 ;;
  4986                           
  4987     0F29                     _Lcd_Cmd:	
  4988                           ;psect for function _Lcd_Cmd
  4989                           
  4990                           
  4991                           ;incstack = 0
  4992                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4993                           ;Lcd_Cmd@a stored from wreg
  4994     0F29  00F5               	movwf	Lcd_Cmd@a
  4995     0F2A                     l1894:
  4996                           
  4997                           ;LCD4b.c: 36:     PORTDbits.RD2 = 0;
  4998     0F2A  1283               	bcf	3,5	;RP0=0, select bank0
  4999     0F2B  1303               	bcf	3,6	;RP1=0, select bank0
  5000     0F2C  1108               	bcf	8,2	;volatile
  5001     0F2D                     l1896:
  5002                           
  5003                           ;LCD4b.c: 37:     Lcd_Port(a);
  5004     0F2D  0875               	movf	Lcd_Cmd@a,w
  5005     0F2E  120A  158A  2743  120A  158A  	fcall	_Lcd_Port
  5006     0F33                     l1898:
  5007                           
  5008                           ;LCD4b.c: 38:     RD3 = 1;
  5009     0F33  1283               	bcf	3,5	;RP0=0, select bank0
  5010     0F34  1303               	bcf	3,6	;RP1=0, select bank0
  5011     0F35  1588               	bsf	8,3	;volatile
  5012     0F36                     l1900:
  5013                           
  5014                           ;LCD4b.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  5015     0F36  300B               	movlw	11
  5016     0F37  00F4               	movwf	??_Lcd_Cmd+1
  5017     0F38  3062               	movlw	98
  5018     0F39  00F3               	movwf	??_Lcd_Cmd
  5019     0F3A                     u1867:
  5020     0F3A  0BF3               	decfsz	??_Lcd_Cmd,f
  5021     0F3B  2F3A               	goto	u1867
  5022     0F3C  0BF4               	decfsz	??_Lcd_Cmd+1,f
  5023     0F3D  2F3A               	goto	u1867
  5024     0F3E  0000               	nop
  5025     0F3F                     l1902:
  5026                           
  5027                           ;LCD4b.c: 40:     RD3 = 0;
  5028     0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  5029     0F40  1303               	bcf	3,6	;RP1=0, select bank0
  5030     0F41  1188               	bcf	8,3	;volatile
  5031     0F42                     l222:
  5032     0F42  0008               	return
  5033     0F43                     __end_of_Lcd_Cmd:
  5034                           
  5035                           	psect	text31
  5036     0F43                     __ptext31:	
  5037 ;; *************** function _Lcd_Port *****************
  5038 ;; Defined at:
  5039 ;;		line 13 in file "LCD4b.c"
  5040 ;; Parameters:    Size  Location     Type
  5041 ;;  a               1    wreg     unsigned char 
  5042 ;; Auto vars:     Size  Location     Type
  5043 ;;  a               1    2[COMMON] unsigned char 
  5044 ;; Return value:  Size  Location     Type
  5045 ;;                  1    wreg      void 
  5046 ;; Registers used:
  5047 ;;		wreg
  5048 ;; Tracked objects:
  5049 ;;		On entry : 0/0
  5050 ;;		On exit  : 0/0
  5051 ;;		Unchanged: 0/0
  5052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5053 ;;      Params:         0       0       0       0       0
  5054 ;;      Locals:         1       0       0       0       0
  5055 ;;      Temps:          0       0       0       0       0
  5056 ;;      Totals:         1       0       0       0       0
  5057 ;;Total ram usage:        1 bytes
  5058 ;; Hardware stack levels used: 1
  5059 ;; Hardware stack levels required when called: 2
  5060 ;; This function calls:
  5061 ;;		Nothing
  5062 ;; This function is called by:
  5063 ;;		_Lcd_Cmd
  5064 ;;		_Lcd_Init
  5065 ;;		_Lcd_Write_Char
  5066 ;; This function uses a non-reentrant model
  5067 ;;
  5068                           
  5069     0F43                     _Lcd_Port:	
  5070                           ;psect for function _Lcd_Port
  5071                           
  5072                           
  5073                           ;incstack = 0
  5074                           ; Regs used in _Lcd_Port: [wreg]
  5075                           ;Lcd_Port@a stored from wreg
  5076     0F43  00F2               	movwf	Lcd_Port@a
  5077     0F44                     l1884:
  5078                           
  5079                           ;LCD4b.c: 14:     if (a & 1)
  5080     0F44  1C72               	btfss	Lcd_Port@a,0
  5081     0F45  2F47               	goto	u1301
  5082     0F46  2F48               	goto	u1300
  5083     0F47                     u1301:
  5084     0F47  2F4C               	goto	l211
  5085     0F48                     u1300:
  5086     0F48                     l1886:
  5087                           
  5088                           ;LCD4b.c: 15:         RD4 = 1;
  5089     0F48  1283               	bcf	3,5	;RP0=0, select bank0
  5090     0F49  1303               	bcf	3,6	;RP1=0, select bank0
  5091     0F4A  1608               	bsf	8,4	;volatile
  5092     0F4B  2F4F               	goto	l212
  5093     0F4C                     l211:	
  5094                           ;LCD4b.c: 16:     else
  5095                           
  5096                           
  5097                           ;LCD4b.c: 17:         RD4 = 0;
  5098     0F4C  1283               	bcf	3,5	;RP0=0, select bank0
  5099     0F4D  1303               	bcf	3,6	;RP1=0, select bank0
  5100     0F4E  1208               	bcf	8,4	;volatile
  5101     0F4F                     l212:
  5102                           
  5103                           ;LCD4b.c: 19:     if (a & 2)
  5104     0F4F  1CF2               	btfss	Lcd_Port@a,1
  5105     0F50  2F52               	goto	u1311
  5106     0F51  2F53               	goto	u1310
  5107     0F52                     u1311:
  5108     0F52  2F55               	goto	l213
  5109     0F53                     u1310:
  5110     0F53                     l1888:
  5111                           
  5112                           ;LCD4b.c: 20:         RD5 = 1;
  5113     0F53  1688               	bsf	8,5	;volatile
  5114     0F54  2F56               	goto	l214
  5115     0F55                     l213:	
  5116                           ;LCD4b.c: 21:     else
  5117                           
  5118                           
  5119                           ;LCD4b.c: 22:         RD5 = 0;
  5120     0F55  1288               	bcf	8,5	;volatile
  5121     0F56                     l214:
  5122                           
  5123                           ;LCD4b.c: 24:     if (a & 4)
  5124     0F56  1D72               	btfss	Lcd_Port@a,2
  5125     0F57  2F59               	goto	u1321
  5126     0F58  2F5A               	goto	u1320
  5127     0F59                     u1321:
  5128     0F59  2F5C               	goto	l215
  5129     0F5A                     u1320:
  5130     0F5A                     l1890:
  5131                           
  5132                           ;LCD4b.c: 25:         RD6 = 1;
  5133     0F5A  1708               	bsf	8,6	;volatile
  5134     0F5B  2F5D               	goto	l216
  5135     0F5C                     l215:	
  5136                           ;LCD4b.c: 26:     else
  5137                           
  5138                           
  5139                           ;LCD4b.c: 27:         RD6 = 0;
  5140     0F5C  1308               	bcf	8,6	;volatile
  5141     0F5D                     l216:
  5142                           
  5143                           ;LCD4b.c: 29:     if (a & 8)
  5144     0F5D  1DF2               	btfss	Lcd_Port@a,3
  5145     0F5E  2F60               	goto	u1331
  5146     0F5F  2F61               	goto	u1330
  5147     0F60                     u1331:
  5148     0F60  2F63               	goto	l217
  5149     0F61                     u1330:
  5150     0F61                     l1892:
  5151                           
  5152                           ;LCD4b.c: 30:         RD7 = 1;
  5153     0F61  1788               	bsf	8,7	;volatile
  5154     0F62  2F64               	goto	l219
  5155     0F63                     l217:	
  5156                           ;LCD4b.c: 31:     else
  5157                           
  5158                           
  5159                           ;LCD4b.c: 32:         RD7 = 0;
  5160     0F63  1388               	bcf	8,7	;volatile
  5161     0F64                     l219:
  5162     0F64  0008               	return
  5163     0F65                     __end_of_Lcd_Port:
  5164                           
  5165                           	psect	text32
  5166     0F13                     __ptext32:	
  5167 ;; *************** function _isr *****************
  5168 ;; Defined at:
  5169 ;;		line 87 in file "master.c"
  5170 ;; Parameters:    Size  Location     Type
  5171 ;;		None
  5172 ;; Auto vars:     Size  Location     Type
  5173 ;;		None
  5174 ;; Return value:  Size  Location     Type
  5175 ;;                  1    wreg      void 
  5176 ;; Registers used:
  5177 ;;		wreg, pclath, cstack
  5178 ;; Tracked objects:
  5179 ;;		On entry : 0/0
  5180 ;;		On exit  : 0/0
  5181 ;;		Unchanged: 0/0
  5182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5183 ;;      Params:         0       0       0       0       0
  5184 ;;      Locals:         0       0       0       0       0
  5185 ;;      Temps:          2       0       0       0       0
  5186 ;;      Totals:         2       0       0       0       0
  5187 ;;Total ram usage:        2 bytes
  5188 ;; Hardware stack levels used: 1
  5189 ;; Hardware stack levels required when called: 1
  5190 ;; This function calls:
  5191 ;;		_UART_read_char
  5192 ;; This function is called by:
  5193 ;;		Interrupt level 1
  5194 ;; This function uses a non-reentrant model
  5195 ;;
  5196                           
  5197     0F13                     _isr:	
  5198                           ;psect for function _isr
  5199                           
  5200     0F13                     i1l1326:
  5201                           
  5202                           ;master.c: 88:     if(RCIF){
  5203     0F13  1283               	bcf	3,5	;RP0=0, select bank0
  5204     0F14  1303               	bcf	3,6	;RP1=0, select bank0
  5205     0F15  1E8C               	btfss	12,5	;volatile
  5206     0F16  2F18               	goto	u63_21
  5207     0F17  2F19               	goto	u63_20
  5208     0F18                     u63_21:
  5209     0F18  2F22               	goto	i1l90
  5210     0F19                     u63_20:
  5211     0F19                     i1l1328:
  5212                           
  5213                           ;master.c: 89:         servoPos = UART_read_char();
  5214     0F19  120A  158A  26C5  120A  158A  	fcall	_UART_read_char
  5215     0F1E  00FA               	movwf	_servoPos
  5216     0F1F                     i1l1330:
  5217                           
  5218                           ;master.c: 90:         RCIF = 0;
  5219     0F1F  1283               	bcf	3,5	;RP0=0, select bank0
  5220     0F20  1303               	bcf	3,6	;RP1=0, select bank0
  5221     0F21  128C               	bcf	12,5	;volatile
  5222     0F22                     i1l90:
  5223     0F22  0871               	movf	??_isr+1,w
  5224     0F23  008A               	movwf	10
  5225     0F24  0E70               	swapf	??_isr,w
  5226     0F25  0083               	movwf	3
  5227     0F26  0EFE               	swapf	btemp,f
  5228     0F27  0E7E               	swapf	btemp,w
  5229     0F28  0009               	retfie
  5230     0F29                     __end_of_isr:
  5231                           
  5232                           	psect	intentry
  5233     0004                     __pintentry:	
  5234                           ;incstack = 0
  5235                           ; Regs used in _isr: [wreg+pclath+cstack]
  5236                           
  5237     0004                     interrupt_function:
  5238     007E                     saved_w	set	btemp
  5239     0004  00FE               	movwf	btemp
  5240     0005  0E03               	swapf	3,w
  5241     0006  00F0               	movwf	??_isr
  5242     0007  080A               	movf	10,w
  5243     0008  00F1               	movwf	??_isr+1
  5244     0009  120A  158A  2F13   	ljmp	_isr
  5245                           
  5246                           	psect	text33
  5247     0EC5                     __ptext33:	
  5248 ;; *************** function _UART_read_char *****************
  5249 ;; Defined at:
  5250 ;;		line 57 in file "UART.c"
  5251 ;; Parameters:    Size  Location     Type
  5252 ;;		None
  5253 ;; Auto vars:     Size  Location     Type
  5254 ;;		None
  5255 ;; Return value:  Size  Location     Type
  5256 ;;                  1    wreg      unsigned char 
  5257 ;; Registers used:
  5258 ;;		wreg
  5259 ;; Tracked objects:
  5260 ;;		On entry : 0/0
  5261 ;;		On exit  : 0/0
  5262 ;;		Unchanged: 0/0
  5263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5264 ;;      Params:         0       0       0       0       0
  5265 ;;      Locals:         0       0       0       0       0
  5266 ;;      Temps:          0       0       0       0       0
  5267 ;;      Totals:         0       0       0       0       0
  5268 ;;Total ram usage:        0 bytes
  5269 ;; Hardware stack levels used: 1
  5270 ;; This function calls:
  5271 ;;		Nothing
  5272 ;; This function is called by:
  5273 ;;		_isr
  5274 ;; This function uses a non-reentrant model
  5275 ;;
  5276                           
  5277     0EC5                     _UART_read_char:	
  5278                           ;psect for function _UART_read_char
  5279                           
  5280     0EC5                     i1l1208:	
  5281                           ;incstack = 0
  5282                           ; Regs used in _UART_read_char: [wreg]
  5283                           
  5284                           
  5285                           ;UART.c: 68:     return RCREG;
  5286     0EC5  1283               	bcf	3,5	;RP0=0, select bank0
  5287     0EC6  1303               	bcf	3,6	;RP1=0, select bank0
  5288     0EC7  081A               	movf	26,w	;volatile
  5289     0EC8                     i1l300:
  5290     0EC8  0008               	return
  5291     0EC9                     __end_of_UART_read_char:
  5292     007E                     btemp	set	126	;btemp
  5293     007E                     wtemp0	set	126
  5294                           
  5295                           	psect	config
  5296                           
  5297                           ;Config register CONFIG1 @ 0x2007
  5298                           ;	Oscillator Selection bits
  5299                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5300                           ;	Watchdog Timer Enable bit
  5301                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5302                           ;	Power-up Timer Enable bit
  5303                           ;	PWRTE = OFF, PWRT disabled
  5304                           ;	RE3/MCLR pin function select bit
  5305                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5306                           ;	Code Protection bit
  5307                           ;	CP = OFF, Program memory code protection is disabled
  5308                           ;	Data Code Protection bit
  5309                           ;	CPD = OFF, Data memory code protection is disabled
  5310                           ;	Brown Out Reset Selection bits
  5311                           ;	BOREN = OFF, BOR disabled
  5312                           ;	Internal External Switchover bit
  5313                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5314                           ;	Fail-Safe Clock Monitor Enabled bit
  5315                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5316                           ;	Low Voltage Programming Enable bit
  5317                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5318                           ;	In-Circuit Debugger Mode bit
  5319                           ;	DEBUG = 0x1, unprogrammed default
  5320     2007                     	org	8199
  5321     2007  20D4               	dw	8404
  5322                           
  5323                           ;Config register CONFIG2 @ 0x2008
  5324                           ;	Brown-out Reset Selection bit
  5325                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5326                           ;	Flash Program Memory Self Write Enable bits
  5327                           ;	WRT = OFF, Write protection off
  5328     2008                     	org	8200
  5329     2008  3FFF               	dw	16383

Data Sizes:
    Strings     28
    Constant    0
    Data        0
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     42      61
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 8
		 -> STR_7(CODE[8]), STR_6(CODE[4]), STR_5(CODE[3]), STR_4(CODE[4]), 
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), S_gas(BANK0[4]), 
		 -> S_hum(BANK0[3]), S_temp(BANK0[4]), 

    num_to_string@dig8	PTR unsigned char  size(1) Largest target is 4
		 -> S_gas(BANK0[4]), S_hum(BANK0[3]), S_temp(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_requestHum
    _writeMotors->_I2C_Master_Write
    _Lcd_Init->_Lcd_Cmd
    _I2C_Master_Init->___lldiv
    _sendDataUART->_UART_write_char
    _requestHum->_I2C_Master_Read
    _map->___lmul
    ___aldiv->___lmul
    _LDC_output->_Lcd_Write_String
    _num_to_string->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_setup
    _setup->_UART_RX_config
    _setup->_UART_TX_config
    _UART_TX_config->___aldiv
    _UART_RX_config->___aldiv
    _I2C_Master_Init->___lldiv
    _requestTemp->_map
    _requestGas->_map
    _map->___aldiv
    ___aldiv->___lmul
    _LDC_output->_num_to_string

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   18324
                                             39 BANK0      3     3      0
                         _LDC_output
                         _requestGas
                         _requestHum
                        _requestTemp
                       _sendDataUART
                              _setup
                        _writeMotors
 ---------------------------------------------------------------------------------
 (1) _writeMotors                                          2     2      0     858
                                              4 COMMON     2     2      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _setup                                                2     2      0    3951
                                             37 BANK0      2     2      0
                    _I2C_Master_Init
                           _Lcd_Init
                     _UART_RX_config
                     _UART_TX_config
 ---------------------------------------------------------------------------------
 (2) _UART_TX_config                                      17    13      4    1565
                                             20 BANK0     17    13      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) _UART_RX_config                                      17    13      4    1565
                                             20 BANK0     17    13      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     279
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _sendDataUART                                         3     3      0      22
                                              3 COMMON     3     3      0
                    _UART_write_char
 ---------------------------------------------------------------------------------
 (2) _UART_write_char                                      1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _requestTemp                                          2     2      0    3729
                                             36 BANK0      2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                                _map
 ---------------------------------------------------------------------------------
 (1) _requestHum                                           2     2      0    1131
                                              8 COMMON     2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _requestGas                                           2     2      0    3729
                                             36 BANK0      2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                                _map
 ---------------------------------------------------------------------------------
 (2) _map                                                 16     9      7    2598
                                             20 BANK0     16     9      7
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     316
                                              2 COMMON     8     0      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8    1345
                                              5 BANK0     15     7      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     858
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     273
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LDC_output                                           2     2      0    4904
                                             16 BANK0      2     2      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                      _num_to_string
 ---------------------------------------------------------------------------------
 (2) _num_to_string                                       18    14      4    2560
                                              0 BANK0     16    12      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     767
                                              2 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2    1284
                                              7 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     254
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1     905
                                              6 COMMON     2     1      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     155
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
                     _UART_read_char
 ---------------------------------------------------------------------------------
 (6) _UART_read_char                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LDC_output
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _num_to_string
       ___lwdiv
       ___lwmod
   _requestGas
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _map
       ___aldiv
         ___lmul (ARG)
       ___lmul
   _requestHum
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
   _requestTemp
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _map
   _sendDataUART
     _UART_write_char
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Init
       _Lcd_Cmd
       _Lcd_Port
     _UART_RX_config
       ___aldiv
     _UART_TX_config
       ___aldiv
   _writeMotors
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write

 _isr (ROOT)
   _UART_read_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      49       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2A      3D       5       76.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      49      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Aug 27 16:17:59 2023

                               pc 0002                                fsr 0004                               l102 05CB  
                             l111 03F8                               l120 041E                               l105 04C0  
                             l122 045D                               l211 0F4C                               l115 0412  
                             l212 0F4F                               l108 0660                               l213 0F55  
                             l125 0189                               l117 0417                               l214 0F56  
                             l222 0F42                               l215 0F5C                               l231 0617  
                             l216 0F5D                               l136 00D6                               l400 06A8  
                             l128 0779                               l217 0F63                               l225 0F05  
                             l234 057E                               l219 0F64                               l243 0735  
                             l171 0F06                               l139 0521                               l180 0ED1  
                             l237 0FC7                               l174 0F12                               l190 0F8D  
                             l422 0392                               l191 0F92                               l183 0EE3  
                             l168 0FFF                               l177 0EDA                               l186 0EED  
                             l290 0EF5                               l282 02A9                               l451 019E  
                             l291 0EF8                               l189 0F8A                               l461 0226  
                             l285 032A                               l288 0EEF                               l658 07BD  
                             l668 07F7                               _GIE 005F                               _RD3 0043  
                             _RD4 0044                               _RD5 0045                               _RD6 0046  
                             _RD7 0047                               u700 0F0C                               u701 0F0B  
                             u710 0F12                               u711 0F11                               _SCS 0478  
                             u950 0782                               u951 0781                               u970 0794  
                             u971 0793                               u965 0786                               u990 07A5  
                             u991 07A4                               u985 0795                               u995 07A1  
                             _map 04C1                               _isr 0F13                               fsr0 0004  
                             indf 0000                       ?_LDC_output 0070                              l2000 0213  
                            l2002 021E                              l2010 0531                              l2020 0FCF  
                            l2012 0540                              l2100 0589                              l2022 0FFC  
                            l2014 0546                              l2006 0522                              l2030 0281  
                            l2110 05AD                              l2102 058D                              l2120 0484  
                            l2024 0FFD                              l2016 0FC8                              l2008 0528  
                            l2040 02A1                              l2032 0285                              l2112 05BC  
                            l2104 058E                              l1410 0F06                              l2130 0393  
                            l2122 048D                              l2114 045E                              l2026 0FFE  
                            l2018 0FCC                              l2042 02A4                              l2034 029C  
                            l2050 0304                              l2106 0593                              l1412 0F0C  
                            l2140 03CE                              l2132 03AA                              l2124 0499  
                            l2116 0475                              l2044 02A5                              l2036 029D  
                            l2028 0227                              l2060 0326                              l2052 0308  
                            l2108 059E                              l2070 05CF                              l2150 00EE  
                            l2142 03D3                              l2134 03B4                              l2126 049E  
                            l2118 047F                              l2046 02A6                              l2038 02A0  
                            l2062 0327                              l2054 031F                              l2072 05D4  
                            l2080 05F3                              l2160 0143                              l2152 0100  
                            l2064 04C4                              l2144 03DD                              l2136 03B9  
                            l2128 04A8                              l2056 0320                              l2048 02AA  
                            l2082 05F9                              l2074 05E1                              l2090 06F0  
                            l1530 0782                              l2170 0178                              l2162 014C  
                            l2154 010F                              l2146 00D7                              l2138 03C2  
                            l2058 0323                              l2218 0428                              l2068 0EF9  
                            l2084 0606                              l2076 05E4                              l2092 06F5  
                            l1540 07A5                              l1532 0785                              l2164 015D  
                            l2156 0132                              l2148 00DC                              l2180 06BE  
                            l2172 06A9                              l2086 0609                              l2078 05EA  
                            l2094 0711                              l1542 07AB                              l1534 078C  
                            l1526 077A                              l2166 0166                              l2158 013A  
                            l2190 06D7                              l2182 06C3                              l2174 06AE  
                            l2088 060F                              l2096 0719                              l1544 07AC  
                            l1536 0790                              l1528 077C                              l1560 07D2  
                            l1552 07BE                              l2168 016F                              l1640 0EC9  
                            l1632 0ED2                              l1712 0EEF                              l2192 06DD  
                            l2184 06C8                              l2176 06B6                              l1546 07B3  
                            l1538 0794                              l1562 07D6                              l1554 07C4  
                            l1570 07F3                              l1650 0F7B                              l1642 0ECE  
                            l1634 0ED7                              l1714 0EF6                              l2098 057F  
                            l2186 06CD                              l2178 06BB                              l1900 0F36  
                            l1548 07B9                              l1564 07E0                              l1556 07C7  
                            l1652 0F80                              l1644 0F65                              l1660 0EDB  
                            l1636 0EE4                              l1740 0646                              l1732 0618  
                            l2188 06D2                              l1902 0F3F                              l1910 0FAB  
                            l1566 07E6                              l1558 07CE                              l1670 001E  
                            l1654 0F86                              l1646 0F6A                              l1662 0EE0  
                            l1638 0EE9                              l1742 0652                              l1734 062F  
                            l1920 0FBF                              l1912 0FAE                              l1904 0F94  
                            l1568 07ED                              l1680 00BF                              l1672 009F  
                            l1656 0F8E                              l1648 0F72                              l1744 0657  
                            l1736 0638                              l1922 0FC4                              l1914 0FB3  
                            l1906 0F9A                              l1682 00C5                              l1674 00A6  
                            l1930 0686                              l1738 063D                              l1826 0736  
                            l1916 0FB6                              l1908 0F9D                              l1676 00AD  
                            l1932 068F                              l1924 0661                              l1828 076C  
                            l1940 033D                              l1780 03FF                              l1918 0FBC  
                            l1678 00B3                              l1934 06A0                              l1926 066B  
                            l1950 035A                              l1942 0340                              l1790 0420  
                            l1782 040A                              l1928 066F                              l1952 036C  
                            l1944 0349                              l1960 038A                              l1792 0433  
                            l1784 040C                              l1890 0F5A                              l1970 01A2  
                            l1954 037A                              l1946 034D                              l1938 032B  
                            l1794 0454                              l1786 0419                              l1778 03F9  
                            l1892 0F61                              l1884 0F44                              l1980 01C4  
                            l1972 01AD                              l1964 018A                              l1956 037B  
                            l1948 0351                              l1886 0F48                              l1894 0F2A  
                            l1990 01F0                              l1982 01CD                              l1974 01B1  
                            l1966 018D                              l1958 0384                              ?_map 0034  
                            l1888 0F53                              l1896 0F2D                              l1992 01FE  
                            l1984 01D1                              l1976 01B9                              l1968 0191  
                            l1898 0F33                              l1994 01FF                              l1986 01D5  
                            l1978 01C1                              l1996 0208                              l1988 01DE  
                            l1998 020E                              ?_isr 0070                              STR_1 0826  
                            STR_2 0829                              STR_3 0823                              STR_4 0818  
                            STR_5 0820                              STR_6 081C                              STR_7 0810  
                            _CREN 00C4                              u1010 07B9                              u1011 07B8  
                            u1020 07C4                              u1005 07AD                              u1021 07C3  
                            u1040 07D6                              u1041 07D5                              u1050 07E0  
                            u1130 0F86                              u1051 07DF                              u1035 07C8  
                            u1131 0F85                              u1300 0F48                              u1301 0F47  
                            u1310 0F53                              u1070 07F3                              u1150 00A6  
                            u1311 0F52                              u1071 07F2                              u1055 07DC  
                            u1151 00A5                              u1320 0F5A                              u1160 00B3  
                            u1400 033D                              u1321 0F59                              u1065 07E7  
                            u1161 00B2                              u1401 033C                              u1330 0F61  
                            u1170 00C5                              u1250 0EF5                              u1331 0F60  
                            u1171 00C4                              u1251 0EF4                              u1420 0351  
                            u1260 03FF                              u1421 0350                              u1261 03FE  
                            u1510 01D5                              u1350 066F                              u1270 040A  
                            u1511 01D4                              u1351 066E                              u1415 0342  
                            u1271 0409                              u1440 036C                              u1600 02F1  
                            u1345 0FA0                              u1505 01C6                              u1361 0678  
                            u1441 036B                              u1601 02F2                              u1530 01F0  
                            u1362 067F                              u1610 0319                              u1602 02F7  
                            u1531 01EF                              u1363 0686                              u1435 0353  
                            u1603 02F8                              u1460 038A                              u1700 06B6  
                            u1525 01D7                              u1621 04EE                              u1461 0389  
                            u1445 0368                              u1701 06B5                              u1630 05D4  
                            u1550 020E                              u1470 0191                              u1390 06A0  
                            u1622 04EF                              u1631 05D3                              u1551 020D  
                            u1535 01EC                              u1471 0190                              u1391 069F  
                            u1375 0688                              u1623 04F4                              u1455 037C  
                            u1615 0314                              u1560 0213                              u1480 01A2  
                            u1624 04F5                              u1561 0212                              u1545 0200  
                            u1481 01A1                              u1385 0690                              u1625 04FA  
                            u1650 05F9                              u1490 01C1                              u1626 04FB  
                            u1570 0FDF                              u1651 05F8                              u1491 01C0  
                            u1580 026E                              u1645 05DA                              u1581 026F  
                            u1717 06E5                              u1670 06FF                              u1590 0296  
                            u1582 0274                              u1807 0633                              u1575 0FDA  
                            u1583 0275                              u1727 0458                              u1680 0723  
                            u1665 05FF                              u1817 065B                              u1737 0599  
                            u1690 0735                              u1691 0734                              u1827 03B0  
                            u1747 052C                              u1595 0291                              u1837 03D9  
                            u1757 053B                              u1847 0FB0                              u1767 054A  
                            u1857 0FC1                              u1777 0772                              u1867 0F3A  
                            u1787 047B                              _PEIE 005E                              u1797 04A4  
                            _RCIE 0465                              _RCIF 0065                              i1l90 0F22  
                            _SPEN 00C7                              _TXIE 0464                              _TXEN 04C5  
                            _TXIF 0064                              _SYNC 04C4                 ?_Lcd_Write_String 0077  
__end_of_I2C_Master_RepeatedStart 0ED2                              _main 06A9                              _prev 004C  
                            btemp 007E                   ??_num_to_string 0079                              start 000C  
              ??_Lcd_Write_String 0020                   __end_of_Lcd_Cmd 0F43                  UART_write_char@c 0072  
                           ??_map 003B                             ??_isr 0070                  num_to_string@len 0023  
                num_to_string@num 0020                  ?_I2C_Master_Init 0026                  ?_I2C_Master_Read 0072  
                ?_I2C_Master_Wait 0070                  ?_I2C_Master_Stop 0070                   __end_of___aldiv 0227  
                           ?_main 0070                             _ANSEL 0188                   __end_of___lldiv 0393  
                 __end_of___lwdiv 07BE                             i1l300 0EC8                   __end_of___lwmod 07F8  
                           _RCREG 001A                       _writeMotors 03F9                             _SPBRG 0099  
                           _PORTD 0008                             u63_20 0F19                             u63_21 0F18  
                           _TRISD 0088                             _SSPIE 0463                             _SSPIF 0063  
                           _TXREG 0019               ___lmul@multiplicand 0076                             _S_gas 0052  
                           _S_hum 005A                             _n_gas 004F                             _n_hum 0050  
                           _tempC 007B                             _setup 057F                             pclath 000A  
                           status 0003                             wtemp0 007E                  __end_of_Lcd_Init 057F  
                __end_of_Lcd_Port 0F65                   __initialization 000F                      __end_of_main 06F0  
                          ??_main 0047                 num_to_string@dig8 0022                 num_to_string@div1 0028  
               num_to_string@div2 002A                 num_to_string@div3 0024                 ?_I2C_Master_Start 0070  
               ?_I2C_Master_Write 0072                ??_I2C_Master_Start 0072                ??_I2C_Master_Write 0074  
                          ?_setup 0070                            _ANSELH 0189                            i1l1208 0EC5  
                          i1l1330 0F1F                            i1l1326 0F13                            i1l1328 0F19  
                       ??_Lcd_Cmd 0073                            _SPBRGH 009A                            _SSPADD 0093  
                          _TRISC3 043B                            _TRISC4 043C                            _SSPCON 0014  
                          _SSPBUF 0013                            _S_temp 0056          _I2C_Master_RepeatedStart 0EC9  
                          ___lmul 0661                         ??___aldiv 002D                            _gasPPM 004A  
                       ??___lldiv 0020                         ??___lwdiv 0076                         ??___lwmod 0076  
                          _n_temp 0051                      ?_requestTemp 0070                            map@val 0043  
                 _UART_write_char 0EEE                            saved_w 007E                   Lcd_Set_Cursor@a 0020  
                 Lcd_Set_Cursor@b 0076                   Lcd_Set_Cursor@y 0022                   Lcd_Set_Cursor@z 0021  
            num_to_string@decenas 002C           __end_of__initialization 001A                  UART_RX_config@BR 0041  
               __end_of_Lcd_Clear 0F06                    __pcstackCOMMON 0070                     ?_sendDataUART 0070  
                   __end_of_setup 05CC                    _Lcd_Set_Cursor 05CC                      ??_LDC_output 0030  
                       ?_Lcd_Init 0070                         ?_Lcd_Port 0070                           ??_setup 0045  
                      __pbssBANK0 004A                  UART_TX_config@BR 0041                        __pmaintext 06A9  
                         ?___lmul 0072                    ??_sendDataUART 0073                        __pintentry 0004  
              __end_of_LDC_output 018A           __end_of_UART_write_char 0EF9                    ___lmul@product 0021  
          __end_of_Lcd_Set_Cursor 0618                      ?_writeMotors 0070                        ??_Lcd_Init 0076  
                      ??_Lcd_Port 0072               _UART_RX_config$1019 003D                           _SSPCON2 0091  
                         _SSPSTAT 0094                        __stringtab 0800                    _Lcd_Write_Char 0F93  
                         _Lcd_Cmd 0F29                    _UART_RX_config 0227                    _UART_TX_config 02AA  
           __end_of_num_to_string 00D7                           ___aldiv 018A                           ___lldiv 032B  
                         ___lwdiv 077A                           ___lwmod 07BE                   ?_Lcd_Set_Cursor 0076  
                         __ptext1 03F9                           __ptext2 057F                           __ptext3 02AA  
                         __ptext4 0227                           __ptext5 0522                           __ptext6 0FC8  
                         __ptext7 032B                           __ptext8 0736                           __ptext9 0EEE  
                         _counter 004E                  ___aldiv@dividend 0029                           map@max1 0035  
                         map@max2 0037                           map@min1 0034                           map@min2 0036  
                         clrloop0 07F9            __end_of_Lcd_Write_Char 0FC8              end_of_initialization 001A  
          __end_of_UART_RX_config 02AA        ??_I2C_Master_RepeatedStart 0072            __end_of_UART_TX_config 032B  
                 ___lldiv@divisor 0072                   ___lldiv@counter 0025                  ___aldiv@quotient 0030  
                I2C_Master_Init@c 0026                  I2C_Master_Read@a 0072                        _requestGas 0393  
                       Lcd_Port@a 0072                        _requestHum 0618                  ?_UART_write_char 0070  
                       _PORTDbits 0008             num_to_string@centenas 0026                         _TRISCbits 0087  
            __end_of_sendDataUART 077A                   ?_Lcd_Write_Char 0070                 Lcd_Write_String@a 0077  
               Lcd_Write_String@i 0023                   ?_UART_RX_config 0034                   ?_UART_TX_config 0034  
                       _Lcd_Clear 0EF9             num_to_string@unidades 002E            UART_RX_config@baudrate 0034  
                  __end_of___lmul 06A9                    _UART_read_char 0EC5                  _Lcd_Write_String 06F0  
             start_initialization 000F                       __end_of_map 0522                       __end_of_isr 0F29  
               ??_I2C_Master_Init 002A                 ??_I2C_Master_Read 0074                 ??_I2C_Master_Wait 0072  
               ??_I2C_Master_Stop 0072                        ?_Lcd_Clear 0070                          ??___lmul 0020  
          __end_of_UART_read_char 0EC9                       ?_requestGas 0070                       ?_requestHum 0070  
                 Lcd_Write_Char@a 0076                   Lcd_Write_Char@y 0075                       __pbssCOMMON 007A  
                       ___latbits 0002                     __pcstackBANK0 0020               _UART_TX_config$1020 003D  
                        ?_Lcd_Cmd 0070                  _I2C_Master_Start 0ED2                  _I2C_Master_Write 0EE4  
                ___lwdiv@dividend 0074                  ??_Lcd_Set_Cursor 0077                          ?___aldiv 0025  
                 ?_UART_read_char 0070                          ?___lldiv 0072                          ?___lwdiv 0072  
                        ?___lwmod 0072                         __pstrings 0800                  ___lwdiv@quotient 0076  
                 ___aldiv@divisor 0025                 interrupt_function 0004                   ___aldiv@counter 002E  
                       clear_ram0 07F8                          Lcd_Cmd@a 0075                       ??_Lcd_Clear 0076  
                    _sendDataUART 0736                     ??_requestTemp 0044                       __stringbase 080F  
                ??_Lcd_Write_Char 0073                  ??_UART_RX_config 0038                          _Lcd_Init 0522  
                        _Lcd_Port 0F43               I2C_Master_Read@temp 0076                  ??_UART_TX_config 0038  
               ___lmul@multiplier 0072          __end_of_Lcd_Write_String 0736         ?_I2C_Master_RepeatedStart 0070  
              __end_of__stringtab 0810                   _I2C_Master_Init 0FC8                   _I2C_Master_Read 0F65  
                 _I2C_Master_Wait 0F06                   _I2C_Master_Stop 0EDB               __end_of_requestTemp 04C1  
                 ___lwdiv@divisor 0072                   ___lwdiv@counter 0078                          __ptext10 045E  
                        __ptext11 0618                          __ptext20 0F65                          __ptext12 0393  
                        __ptext21 0F06                          __ptext13 04C1                          __ptext30 0F29  
                        __ptext22 00D7                          __ptext14 0661                          __ptext31 0F43  
                        __ptext23 001E                          __ptext15 018A                          __ptext32 0F13  
                        __ptext24 07BE                          __ptext16 0EE4                          __ptext33 0EC5  
                        __ptext25 077A                          __ptext17 0EDB                          __ptext26 06F0  
                        __ptext18 0ED2                          __ptext27 0F93                          __ptext19 0EC9  
                        __ptext28 05CC                          __ptext29 0EF9                          _motorCon 004D  
                   _num_to_string 001E                          _servoPos 007A                      ??_requestGas 0044  
                    ??_requestHum 0078            UART_TX_config@baudrate 0034                     ??_writeMotors 0074  
        __end_of_I2C_Master_Start 0EDB          __end_of_I2C_Master_Write 0EEE                        _LDC_output 00D7  
              Lcd_Write_Char@temp 0074                          intlevel1 0000                __end_of_requestGas 03F9  
              __end_of_requestHum 0661                  ___lwmod@dividend 0074                  ___lldiv@dividend 0076  
                ??_UART_read_char 0070                         stringcode 080A                        _OSCCONbits 008F  
                  ?_num_to_string 0020           __end_of_I2C_Master_Init 1000           __end_of_I2C_Master_Read 0F93  
         __end_of_I2C_Master_Wait 0F13           __end_of_I2C_Master_Stop 0EE4                Lcd_Set_Cursor@temp 0023  
                     _requestTemp 045E                  ___lldiv@quotient 0021                 I2C_Master_Write@d 0072  
                 ___lwmod@divisor 0072                   ___lwmod@counter 0076                          stringdir 080A  
                        stringtab 0800                      ___aldiv@sign 002F                       _SSPCON2bits 0091  
             __end_of_writeMotors 045E                 ??_UART_write_char 0072  
