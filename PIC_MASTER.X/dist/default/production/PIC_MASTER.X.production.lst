

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Aug 24 17:36:28 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	intentry,global,class=CODE,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    48                           	dabs	1,0x7E,2
    49     0000                     
    50                           ; Generated 22/03/2023 GMT
    51                           ; 
    52                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F887 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84     0000                     	;# 
    85     0001                     	;# 
    86     0002                     	;# 
    87     0003                     	;# 
    88     0004                     	;# 
    89     0005                     	;# 
    90     0006                     	;# 
    91     0007                     	;# 
    92     0008                     	;# 
    93     0009                     	;# 
    94     000A                     	;# 
    95     000B                     	;# 
    96     000C                     	;# 
    97     000D                     	;# 
    98     000E                     	;# 
    99     000E                     	;# 
   100     000F                     	;# 
   101     0010                     	;# 
   102     0011                     	;# 
   103     0012                     	;# 
   104     0013                     	;# 
   105     0014                     	;# 
   106     0015                     	;# 
   107     0015                     	;# 
   108     0016                     	;# 
   109     0017                     	;# 
   110     0018                     	;# 
   111     0019                     	;# 
   112     001A                     	;# 
   113     001B                     	;# 
   114     001B                     	;# 
   115     001C                     	;# 
   116     001D                     	;# 
   117     001E                     	;# 
   118     001F                     	;# 
   119     0081                     	;# 
   120     0085                     	;# 
   121     0086                     	;# 
   122     0087                     	;# 
   123     0088                     	;# 
   124     0089                     	;# 
   125     008C                     	;# 
   126     008D                     	;# 
   127     008E                     	;# 
   128     008F                     	;# 
   129     0090                     	;# 
   130     0091                     	;# 
   131     0092                     	;# 
   132     0093                     	;# 
   133     0093                     	;# 
   134     0093                     	;# 
   135     0094                     	;# 
   136     0095                     	;# 
   137     0096                     	;# 
   138     0097                     	;# 
   139     0098                     	;# 
   140     0099                     	;# 
   141     009A                     	;# 
   142     009B                     	;# 
   143     009C                     	;# 
   144     009D                     	;# 
   145     009E                     	;# 
   146     009F                     	;# 
   147     0105                     	;# 
   148     0107                     	;# 
   149     0108                     	;# 
   150     0109                     	;# 
   151     010C                     	;# 
   152     010C                     	;# 
   153     010D                     	;# 
   154     010E                     	;# 
   155     010F                     	;# 
   156     0185                     	;# 
   157     0187                     	;# 
   158     0188                     	;# 
   159     0189                     	;# 
   160     018C                     	;# 
   161     018D                     	;# 
   162     0000                     	;# 
   163     0001                     	;# 
   164     0002                     	;# 
   165     0003                     	;# 
   166     0004                     	;# 
   167     0005                     	;# 
   168     0006                     	;# 
   169     0007                     	;# 
   170     0008                     	;# 
   171     0009                     	;# 
   172     000A                     	;# 
   173     000B                     	;# 
   174     000C                     	;# 
   175     000D                     	;# 
   176     000E                     	;# 
   177     000E                     	;# 
   178     000F                     	;# 
   179     0010                     	;# 
   180     0011                     	;# 
   181     0012                     	;# 
   182     0013                     	;# 
   183     0014                     	;# 
   184     0015                     	;# 
   185     0015                     	;# 
   186     0016                     	;# 
   187     0017                     	;# 
   188     0018                     	;# 
   189     0019                     	;# 
   190     001A                     	;# 
   191     001B                     	;# 
   192     001B                     	;# 
   193     001C                     	;# 
   194     001D                     	;# 
   195     001E                     	;# 
   196     001F                     	;# 
   197     0081                     	;# 
   198     0085                     	;# 
   199     0086                     	;# 
   200     0087                     	;# 
   201     0088                     	;# 
   202     0089                     	;# 
   203     008C                     	;# 
   204     008D                     	;# 
   205     008E                     	;# 
   206     008F                     	;# 
   207     0090                     	;# 
   208     0091                     	;# 
   209     0092                     	;# 
   210     0093                     	;# 
   211     0093                     	;# 
   212     0093                     	;# 
   213     0094                     	;# 
   214     0095                     	;# 
   215     0096                     	;# 
   216     0097                     	;# 
   217     0098                     	;# 
   218     0099                     	;# 
   219     009A                     	;# 
   220     009B                     	;# 
   221     009C                     	;# 
   222     009D                     	;# 
   223     009E                     	;# 
   224     009F                     	;# 
   225     0105                     	;# 
   226     0107                     	;# 
   227     0108                     	;# 
   228     0109                     	;# 
   229     010C                     	;# 
   230     010C                     	;# 
   231     010D                     	;# 
   232     010E                     	;# 
   233     010F                     	;# 
   234     0185                     	;# 
   235     0187                     	;# 
   236     0188                     	;# 
   237     0189                     	;# 
   238     018C                     	;# 
   239     018D                     	;# 
   240     0000                     	;# 
   241     0001                     	;# 
   242     0002                     	;# 
   243     0003                     	;# 
   244     0004                     	;# 
   245     0005                     	;# 
   246     0006                     	;# 
   247     0007                     	;# 
   248     0008                     	;# 
   249     0009                     	;# 
   250     000A                     	;# 
   251     000B                     	;# 
   252     000C                     	;# 
   253     000D                     	;# 
   254     000E                     	;# 
   255     000E                     	;# 
   256     000F                     	;# 
   257     0010                     	;# 
   258     0011                     	;# 
   259     0012                     	;# 
   260     0013                     	;# 
   261     0014                     	;# 
   262     0015                     	;# 
   263     0015                     	;# 
   264     0016                     	;# 
   265     0017                     	;# 
   266     0018                     	;# 
   267     0019                     	;# 
   268     001A                     	;# 
   269     001B                     	;# 
   270     001B                     	;# 
   271     001C                     	;# 
   272     001D                     	;# 
   273     001E                     	;# 
   274     001F                     	;# 
   275     0081                     	;# 
   276     0085                     	;# 
   277     0086                     	;# 
   278     0087                     	;# 
   279     0088                     	;# 
   280     0089                     	;# 
   281     008C                     	;# 
   282     008D                     	;# 
   283     008E                     	;# 
   284     008F                     	;# 
   285     0090                     	;# 
   286     0091                     	;# 
   287     0092                     	;# 
   288     0093                     	;# 
   289     0093                     	;# 
   290     0093                     	;# 
   291     0094                     	;# 
   292     0095                     	;# 
   293     0096                     	;# 
   294     0097                     	;# 
   295     0098                     	;# 
   296     0099                     	;# 
   297     009A                     	;# 
   298     009B                     	;# 
   299     009C                     	;# 
   300     009D                     	;# 
   301     009E                     	;# 
   302     009F                     	;# 
   303     0105                     	;# 
   304     0107                     	;# 
   305     0108                     	;# 
   306     0109                     	;# 
   307     010C                     	;# 
   308     010C                     	;# 
   309     010D                     	;# 
   310     010E                     	;# 
   311     010F                     	;# 
   312     0185                     	;# 
   313     0187                     	;# 
   314     0188                     	;# 
   315     0189                     	;# 
   316     018C                     	;# 
   317     018D                     	;# 
   318     0000                     	;# 
   319     0001                     	;# 
   320     0002                     	;# 
   321     0003                     	;# 
   322     0004                     	;# 
   323     0005                     	;# 
   324     0006                     	;# 
   325     0007                     	;# 
   326     0008                     	;# 
   327     0009                     	;# 
   328     000A                     	;# 
   329     000B                     	;# 
   330     000C                     	;# 
   331     000D                     	;# 
   332     000E                     	;# 
   333     000E                     	;# 
   334     000F                     	;# 
   335     0010                     	;# 
   336     0011                     	;# 
   337     0012                     	;# 
   338     0013                     	;# 
   339     0014                     	;# 
   340     0015                     	;# 
   341     0015                     	;# 
   342     0016                     	;# 
   343     0017                     	;# 
   344     0018                     	;# 
   345     0019                     	;# 
   346     001A                     	;# 
   347     001B                     	;# 
   348     001B                     	;# 
   349     001C                     	;# 
   350     001D                     	;# 
   351     001E                     	;# 
   352     001F                     	;# 
   353     0081                     	;# 
   354     0085                     	;# 
   355     0086                     	;# 
   356     0087                     	;# 
   357     0088                     	;# 
   358     0089                     	;# 
   359     008C                     	;# 
   360     008D                     	;# 
   361     008E                     	;# 
   362     008F                     	;# 
   363     0090                     	;# 
   364     0091                     	;# 
   365     0092                     	;# 
   366     0093                     	;# 
   367     0093                     	;# 
   368     0093                     	;# 
   369     0094                     	;# 
   370     0095                     	;# 
   371     0096                     	;# 
   372     0097                     	;# 
   373     0098                     	;# 
   374     0099                     	;# 
   375     009A                     	;# 
   376     009B                     	;# 
   377     009C                     	;# 
   378     009D                     	;# 
   379     009E                     	;# 
   380     009F                     	;# 
   381     0105                     	;# 
   382     0107                     	;# 
   383     0108                     	;# 
   384     0109                     	;# 
   385     010C                     	;# 
   386     010C                     	;# 
   387     010D                     	;# 
   388     010E                     	;# 
   389     010F                     	;# 
   390     0185                     	;# 
   391     0187                     	;# 
   392     0188                     	;# 
   393     0189                     	;# 
   394     018C                     	;# 
   395     018D                     	;# 
   396     0000                     	;# 
   397     0001                     	;# 
   398     0002                     	;# 
   399     0003                     	;# 
   400     0004                     	;# 
   401     0005                     	;# 
   402     0006                     	;# 
   403     0007                     	;# 
   404     0008                     	;# 
   405     0009                     	;# 
   406     000A                     	;# 
   407     000B                     	;# 
   408     000C                     	;# 
   409     000D                     	;# 
   410     000E                     	;# 
   411     000E                     	;# 
   412     000F                     	;# 
   413     0010                     	;# 
   414     0011                     	;# 
   415     0012                     	;# 
   416     0013                     	;# 
   417     0014                     	;# 
   418     0015                     	;# 
   419     0015                     	;# 
   420     0016                     	;# 
   421     0017                     	;# 
   422     0018                     	;# 
   423     0019                     	;# 
   424     001A                     	;# 
   425     001B                     	;# 
   426     001B                     	;# 
   427     001C                     	;# 
   428     001D                     	;# 
   429     001E                     	;# 
   430     001F                     	;# 
   431     0081                     	;# 
   432     0085                     	;# 
   433     0086                     	;# 
   434     0087                     	;# 
   435     0088                     	;# 
   436     0089                     	;# 
   437     008C                     	;# 
   438     008D                     	;# 
   439     008E                     	;# 
   440     008F                     	;# 
   441     0090                     	;# 
   442     0091                     	;# 
   443     0092                     	;# 
   444     0093                     	;# 
   445     0093                     	;# 
   446     0093                     	;# 
   447     0094                     	;# 
   448     0095                     	;# 
   449     0096                     	;# 
   450     0097                     	;# 
   451     0098                     	;# 
   452     0099                     	;# 
   453     009A                     	;# 
   454     009B                     	;# 
   455     009C                     	;# 
   456     009D                     	;# 
   457     009E                     	;# 
   458     009F                     	;# 
   459     0105                     	;# 
   460     0107                     	;# 
   461     0108                     	;# 
   462     0109                     	;# 
   463     010C                     	;# 
   464     010C                     	;# 
   465     010D                     	;# 
   466     010E                     	;# 
   467     010F                     	;# 
   468     0185                     	;# 
   469     0187                     	;# 
   470     0188                     	;# 
   471     0189                     	;# 
   472     018C                     	;# 
   473     018D                     	;# 
   474     001A                     _RCREG	set	26
   475     0019                     _TXREG	set	25
   476     0008                     _PORTDbits	set	8
   477     0013                     _SSPBUF	set	19
   478     0014                     _SSPCON	set	20
   479     0008                     _PORTD	set	8
   480     0064                     _TXIF	set	100
   481     00C4                     _CREN	set	196
   482     00C7                     _SPEN	set	199
   483     0043                     _RD3	set	67
   484     0047                     _RD7	set	71
   485     0046                     _RD6	set	70
   486     0045                     _RD5	set	69
   487     0044                     _RD4	set	68
   488     0063                     _SSPIF	set	99
   489     005E                     _PEIE	set	94
   490     005F                     _GIE	set	95
   491     0065                     _RCIF	set	101
   492     009A                     _SPBRGH	set	154
   493     0099                     _SPBRG	set	153
   494     0091                     _SSPCON2bits	set	145
   495     0087                     _TRISCbits	set	135
   496     0094                     _SSPSTAT	set	148
   497     0093                     _SSPADD	set	147
   498     0091                     _SSPCON2	set	145
   499     008F                     _OSCCONbits	set	143
   500     0088                     _TRISD	set	136
   501     0464                     _TXIE	set	1124
   502     04C5                     _TXEN	set	1221
   503     0465                     _RCIE	set	1125
   504     04C4                     _SYNC	set	1220
   505     0463                     _SSPIE	set	1123
   506     043C                     _TRISC4	set	1084
   507     043B                     _TRISC3	set	1083
   508     0478                     _SCS	set	1144
   509     0189                     _ANSELH	set	393
   510     0188                     _ANSEL	set	392
   511                           
   512                           	psect	strings
   513     0800                     __pstrings:
   514     0800                     stringtab:
   515     0800                     __stringtab:
   516                           
   517                           ;	String table - string pointers are 1 byte each
   518     0800  1BFF               	btfsc	btemp+1,7
   519     0801  280A               	ljmp	stringcode
   520     0802  1383               	bcf	3,7
   521     0803  187F               	btfsc	btemp+1,0
   522     0804  1783               	bsf	3,7
   523     0805  0800               	movf	0,w
   524     0806  0A84               	incf	4,f
   525     0807  1903               	skipnz
   526     0808  0AFF               	incf	btemp+1,f
   527     0809  0008               	return
   528     080A                     stringcode:
   529     080A                     stringdir:
   530     080A  3008               	movlw	high stringdir
   531     080B  008A               	movwf	10
   532     080C  0804               	movf	4,w
   533     080D  0A84               	incf	4,f
   534     080E  0782               	addwf	2,f
   535     080F                     __stringbase:
   536     080F  3400               	retlw	0
   537     0810                     __end_of__stringtab:
   538     0810                     STR_7:
   539     0810  3449               	retlw	73	;'I'
   540     0811  3452               	retlw	82	;'R'
   541     0812  343A               	retlw	58	;':'
   542     0813  3400               	retlw	0
   543     0814                     STR_4:
   544     0814  3425               	retlw	37	;'%'
   545     0815  3452               	retlw	82	;'R'
   546     0816  3448               	retlw	72	;'H'
   547     0817  3400               	retlw	0
   548     0818                     STR_6:
   549     0818  3470               	retlw	112	;'p'
   550     0819  3470               	retlw	112	;'p'
   551     081A  346D               	retlw	109	;'m'
   552     081B  3400               	retlw	0
   553     081C                     STR_5:
   554     081C  3447               	retlw	71	;'G'
   555     081D  343A               	retlw	58	;':'
   556     081E  3400               	retlw	0
   557     081F                     STR_3:
   558     081F  3448               	retlw	72	;'H'
   559     0820  343A               	retlw	58	;':'
   560     0821  3400               	retlw	0
   561     0822                     STR_1:
   562     0822  3454               	retlw	84	;'T'
   563     0823  343A               	retlw	58	;':'
   564     0824  3400               	retlw	0
   565     0825                     STR_2:
   566     0825  345E               	retlw	94	;'^'
   567     0826  3443               	retlw	67	;'C'
   568     0827  3400               	retlw	0
   569                           
   570                           	psect	cinit
   571     000F                     start_initialization:	
   572                           ; #config settings
   573                           
   574     000F                     __initialization:
   575                           
   576                           ; Clear objects allocated to COMMON
   577     000F  01FA               	clrf	__pbssCOMMON& (0+127)
   578     0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   579                           
   580                           ; Clear objects allocated to BANK0
   581     0011  1383               	bcf	3,7	;select IRP bank0
   582     0012  304A               	movlw	low __pbssBANK0
   583     0013  0084               	movwf	4
   584     0014  3060               	movlw	low (__pbssBANK0+22)
   585     0015  120A  158A  2650  120A  118A  	fcall	clear_ram0
   586     001A                     end_of_initialization:	
   587                           ;End of C runtime variable initialization code
   588                           
   589     001A                     __end_of__initialization:
   590     001A  0183               	clrf	3
   591     001B  120A  118A  2E39   	ljmp	_main	;jump to C main() function
   592                           
   593                           	psect	bssCOMMON
   594     007A                     __pbssCOMMON:
   595     007A                     _servoPos:
   596     007A                     	ds	1
   597     007B                     _tempC:
   598     007B                     	ds	1
   599                           
   600                           	psect	bssBANK0
   601     004A                     __pbssBANK0:
   602     004A                     _gasPPM:
   603     004A                     	ds	2
   604     004C                     _prev:
   605     004C                     	ds	1
   606     004D                     _motorCon:
   607     004D                     	ds	1
   608     004E                     _counter:
   609     004E                     	ds	1
   610     004F                     _n_ired:
   611     004F                     	ds	1
   612     0050                     _n_gas:
   613     0050                     	ds	1
   614     0051                     _n_hum:
   615     0051                     	ds	1
   616     0052                     _n_temp:
   617     0052                     	ds	1
   618     0053                     _S_gas:
   619     0053                     	ds	4
   620     0057                     _S_temp:
   621     0057                     	ds	4
   622     005B                     _S_hum:
   623     005B                     	ds	3
   624     005E                     _S_ired:
   625     005E                     	ds	2
   626                           
   627                           	psect	clrtext
   628     0E50                     clear_ram0:	
   629                           ;	Called with FSR containing the base address, and
   630                           ;	W with the last address+1
   631                           
   632     0E50  0064               	clrwdt	;clear the watchdog before getting into this loop
   633     0E51                     clrloop0:
   634     0E51  0180               	clrf	0	;clear RAM location pointed to by FSR
   635     0E52  0A84               	incf	4,f	;increment pointer
   636     0E53  0604               	xorwf	4,w	;XOR with final address
   637     0E54  1903               	btfsc	3,2	;have we reached the end yet?
   638     0E55  3400               	retlw	0	;all done for this memory range, return
   639     0E56  0604               	xorwf	4,w	;XOR again to restore value
   640     0E57  2E51               	goto	clrloop0	;do the next byte
   641                           
   642                           	psect	cstackCOMMON
   643     0070                     __pcstackCOMMON:
   644     0070                     ?_UART_read_char:
   645     0070                     ??_UART_read_char:	
   646                           ; 1 bytes @ 0x0
   647                           
   648     0070                     ?_setup:	
   649                           ; 1 bytes @ 0x0
   650                           
   651     0070                     ?_requestHum:	
   652                           ; 1 bytes @ 0x0
   653                           
   654     0070                     ?_requestTemp:	
   655                           ; 1 bytes @ 0x0
   656                           
   657     0070                     ?_requestGas:	
   658                           ; 1 bytes @ 0x0
   659                           
   660     0070                     ?_requestIR:	
   661                           ; 1 bytes @ 0x0
   662                           
   663     0070                     ?_writeMotors:	
   664                           ; 1 bytes @ 0x0
   665                           
   666     0070                     ?_LDC_output:	
   667                           ; 1 bytes @ 0x0
   668                           
   669     0070                     ?_sendDataUART:	
   670                           ; 1 bytes @ 0x0
   671                           
   672     0070                     ?_Lcd_Init:	
   673                           ; 1 bytes @ 0x0
   674                           
   675     0070                     ?_I2C_Master_Start:	
   676                           ; 1 bytes @ 0x0
   677                           
   678     0070                     ?_I2C_Master_RepeatedStart:	
   679                           ; 1 bytes @ 0x0
   680                           
   681     0070                     ?_I2C_Master_Stop:	
   682                           ; 1 bytes @ 0x0
   683                           
   684     0070                     ?_Lcd_Clear:	
   685                           ; 1 bytes @ 0x0
   686                           
   687     0070                     ?_UART_write_char:	
   688                           ; 1 bytes @ 0x0
   689                           
   690     0070                     ?_isr:	
   691                           ; 1 bytes @ 0x0
   692                           
   693     0070                     ??_isr:	
   694                           ; 1 bytes @ 0x0
   695                           
   696     0070                     ?_I2C_Master_Wait:	
   697                           ; 1 bytes @ 0x0
   698                           
   699     0070                     ?_Lcd_Port:	
   700                           ; 1 bytes @ 0x0
   701                           
   702     0070                     ?_Lcd_Cmd:	
   703                           ; 1 bytes @ 0x0
   704                           
   705     0070                     ?_Lcd_Write_Char:	
   706                           ; 1 bytes @ 0x0
   707                           
   708     0070                     ?_main:	
   709                           ; 1 bytes @ 0x0
   710                           
   711                           
   712                           ; 2 bytes @ 0x0
   713     0070                     	ds	2
   714     0072                     ??_I2C_Master_Start:
   715     0072                     ?_I2C_Master_Write:	
   716                           ; 1 bytes @ 0x2
   717                           
   718     0072                     ??_I2C_Master_RepeatedStart:	
   719                           ; 1 bytes @ 0x2
   720                           
   721     0072                     ??_I2C_Master_Stop:	
   722                           ; 1 bytes @ 0x2
   723                           
   724     0072                     ??_UART_write_char:	
   725                           ; 1 bytes @ 0x2
   726                           
   727     0072                     ??_I2C_Master_Wait:	
   728                           ; 1 bytes @ 0x2
   729                           
   730     0072                     ??_Lcd_Port:	
   731                           ; 1 bytes @ 0x2
   732                           
   733     0072                     ?_I2C_Master_Read:	
   734                           ; 1 bytes @ 0x2
   735                           
   736     0072                     ?___lwdiv:	
   737                           ; 2 bytes @ 0x2
   738                           
   739     0072                     ?___lwmod:	
   740                           ; 2 bytes @ 0x2
   741                           
   742     0072                     ?___lmul:	
   743                           ; 2 bytes @ 0x2
   744                           
   745     0072                     ?___lldiv:	
   746                           ; 4 bytes @ 0x2
   747                           
   748     0072                     Lcd_Port@a:	
   749                           ; 4 bytes @ 0x2
   750                           
   751     0072                     UART_write_char@c:	
   752                           ; 1 bytes @ 0x2
   753                           
   754     0072                     I2C_Master_Write@d:	
   755                           ; 1 bytes @ 0x2
   756                           
   757     0072                     I2C_Master_Read@a:	
   758                           ; 2 bytes @ 0x2
   759                           
   760     0072                     ___lwdiv@divisor:	
   761                           ; 2 bytes @ 0x2
   762                           
   763     0072                     ___lwmod@divisor:	
   764                           ; 2 bytes @ 0x2
   765                           
   766     0072                     ___lmul@multiplier:	
   767                           ; 2 bytes @ 0x2
   768                           
   769     0072                     ___lldiv@divisor:	
   770                           ; 4 bytes @ 0x2
   771                           
   772                           
   773                           ; 4 bytes @ 0x2
   774     0072                     	ds	1
   775     0073                     ??_sendDataUART:
   776     0073                     ??_Lcd_Cmd:	
   777                           ; 1 bytes @ 0x3
   778                           
   779     0073                     ??_Lcd_Write_Char:	
   780                           ; 1 bytes @ 0x3
   781                           
   782                           
   783                           ; 1 bytes @ 0x3
   784     0073                     	ds	1
   785     0074                     ??_writeMotors:
   786     0074                     ??_I2C_Master_Write:	
   787                           ; 1 bytes @ 0x4
   788                           
   789     0074                     ??_I2C_Master_Read:	
   790                           ; 1 bytes @ 0x4
   791                           
   792     0074                     Lcd_Write_Char@temp:	
   793                           ; 1 bytes @ 0x4
   794                           
   795     0074                     ___lwdiv@dividend:	
   796                           ; 1 bytes @ 0x4
   797                           
   798     0074                     ___lwmod@dividend:	
   799                           ; 2 bytes @ 0x4
   800                           
   801                           
   802                           ; 2 bytes @ 0x4
   803     0074                     	ds	1
   804     0075                     Lcd_Cmd@a:
   805     0075                     Lcd_Write_Char@y:	
   806                           ; 1 bytes @ 0x5
   807                           
   808                           
   809                           ; 1 bytes @ 0x5
   810     0075                     	ds	1
   811     0076                     ??_Lcd_Init:
   812     0076                     ??_Lcd_Clear:	
   813                           ; 1 bytes @ 0x6
   814                           
   815     0076                     ?_Lcd_Set_Cursor:	
   816                           ; 1 bytes @ 0x6
   817                           
   818     0076                     ??___lwdiv:	
   819                           ; 1 bytes @ 0x6
   820                           
   821     0076                     ??___lwmod:	
   822                           ; 1 bytes @ 0x6
   823                           
   824     0076                     Lcd_Set_Cursor@b:	
   825                           ; 1 bytes @ 0x6
   826                           
   827     0076                     Lcd_Write_Char@a:	
   828                           ; 1 bytes @ 0x6
   829                           
   830     0076                     ___lwmod@counter:	
   831                           ; 1 bytes @ 0x6
   832                           
   833     0076                     I2C_Master_Read@temp:	
   834                           ; 1 bytes @ 0x6
   835                           
   836     0076                     ___lwdiv@quotient:	
   837                           ; 2 bytes @ 0x6
   838                           
   839     0076                     ___lmul@multiplicand:	
   840                           ; 2 bytes @ 0x6
   841                           
   842     0076                     ___lldiv@dividend:	
   843                           ; 4 bytes @ 0x6
   844                           
   845                           
   846                           ; 4 bytes @ 0x6
   847     0076                     	ds	1
   848     0077                     ??_Lcd_Set_Cursor:
   849     0077                     ?_Lcd_Write_String:	
   850                           ; 1 bytes @ 0x7
   851                           
   852     0077                     Lcd_Write_String@a:	
   853                           ; 1 bytes @ 0x7
   854                           
   855                           
   856                           ; 2 bytes @ 0x7
   857     0077                     	ds	1
   858     0078                     ??_requestHum:
   859     0078                     ??_requestIR:	
   860                           ; 1 bytes @ 0x8
   861                           
   862     0078                     ___lwdiv@counter:	
   863                           ; 1 bytes @ 0x8
   864                           
   865                           
   866                           ; 1 bytes @ 0x8
   867     0078                     	ds	1
   868     0079                     ??_num_to_string:
   869                           
   870                           ; 1 bytes @ 0x9
   871     0079                     	ds	1
   872                           
   873                           	psect	cstackBANK0
   874     0020                     __pcstackBANK0:
   875     0020                     ?_num_to_string:
   876     0020                     ??_Lcd_Write_String:	
   877                           ; 1 bytes @ 0x0
   878                           
   879     0020                     ??___lmul:	
   880                           ; 1 bytes @ 0x0
   881                           
   882     0020                     ??___lldiv:	
   883                           ; 1 bytes @ 0x0
   884                           
   885     0020                     Lcd_Set_Cursor@a:	
   886                           ; 1 bytes @ 0x0
   887                           
   888     0020                     num_to_string@num:	
   889                           ; 1 bytes @ 0x0
   890                           
   891                           
   892                           ; 2 bytes @ 0x0
   893     0020                     	ds	1
   894     0021                     Lcd_Set_Cursor@z:
   895     0021                     ___lmul@product:	
   896                           ; 1 bytes @ 0x1
   897                           
   898     0021                     ___lldiv@quotient:	
   899                           ; 4 bytes @ 0x1
   900                           
   901                           
   902                           ; 4 bytes @ 0x1
   903     0021                     	ds	1
   904     0022                     num_to_string@dig8:
   905     0022                     Lcd_Set_Cursor@y:	
   906                           ; 1 bytes @ 0x2
   907                           
   908                           
   909                           ; 1 bytes @ 0x2
   910     0022                     	ds	1
   911     0023                     num_to_string@len:
   912     0023                     Lcd_Set_Cursor@temp:	
   913                           ; 1 bytes @ 0x3
   914                           
   915     0023                     Lcd_Write_String@i:	
   916                           ; 1 bytes @ 0x3
   917                           
   918                           
   919                           ; 2 bytes @ 0x3
   920     0023                     	ds	1
   921     0024                     num_to_string@div3:
   922                           
   923                           ; 2 bytes @ 0x4
   924     0024                     	ds	1
   925     0025                     ?___aldiv:
   926     0025                     ___lldiv@counter:	
   927                           ; 4 bytes @ 0x5
   928                           
   929     0025                     ___aldiv@divisor:	
   930                           ; 1 bytes @ 0x5
   931                           
   932                           
   933                           ; 4 bytes @ 0x5
   934     0025                     	ds	1
   935     0026                     ?_I2C_Master_Init:
   936     0026                     num_to_string@centenas:	
   937                           ; 1 bytes @ 0x6
   938                           
   939     0026                     I2C_Master_Init@c:	
   940                           ; 2 bytes @ 0x6
   941                           
   942                           
   943                           ; 4 bytes @ 0x6
   944     0026                     	ds	2
   945     0028                     num_to_string@div1:
   946                           
   947                           ; 2 bytes @ 0x8
   948     0028                     	ds	1
   949     0029                     ___aldiv@dividend:
   950                           
   951                           ; 4 bytes @ 0x9
   952     0029                     	ds	1
   953     002A                     ??_I2C_Master_Init:
   954     002A                     num_to_string@div2:	
   955                           ; 1 bytes @ 0xA
   956                           
   957                           
   958                           ; 2 bytes @ 0xA
   959     002A                     	ds	2
   960     002C                     num_to_string@decenas:
   961                           
   962                           ; 2 bytes @ 0xC
   963     002C                     	ds	1
   964     002D                     ??___aldiv:
   965                           
   966                           ; 1 bytes @ 0xD
   967     002D                     	ds	1
   968     002E                     ___aldiv@counter:
   969     002E                     num_to_string@unidades:	
   970                           ; 1 bytes @ 0xE
   971                           
   972                           
   973                           ; 2 bytes @ 0xE
   974     002E                     	ds	1
   975     002F                     ___aldiv@sign:
   976                           
   977                           ; 1 bytes @ 0xF
   978     002F                     	ds	1
   979     0030                     ??_LDC_output:
   980     0030                     ___aldiv@quotient:	
   981                           ; 1 bytes @ 0x10
   982                           
   983                           
   984                           ; 4 bytes @ 0x10
   985     0030                     	ds	4
   986     0034                     ?_UART_RX_config:
   987     0034                     ?_UART_TX_config:	
   988                           ; 1 bytes @ 0x14
   989                           
   990     0034                     ?_map:	
   991                           ; 1 bytes @ 0x14
   992                           
   993     0034                     map@min1:	
   994                           ; 2 bytes @ 0x14
   995                           
   996     0034                     UART_RX_config@baudrate:	
   997                           ; 1 bytes @ 0x14
   998                           
   999     0034                     UART_TX_config@baudrate:	
  1000                           ; 4 bytes @ 0x14
  1001                           
  1002                           
  1003                           ; 4 bytes @ 0x14
  1004     0034                     	ds	1
  1005     0035                     map@max1:
  1006                           
  1007                           ; 1 bytes @ 0x15
  1008     0035                     	ds	1
  1009     0036                     map@min2:
  1010                           
  1011                           ; 1 bytes @ 0x16
  1012     0036                     	ds	1
  1013     0037                     map@max2:
  1014                           
  1015                           ; 4 bytes @ 0x17
  1016     0037                     	ds	1
  1017     0038                     ??_UART_RX_config:
  1018     0038                     ??_UART_TX_config:	
  1019                           ; 1 bytes @ 0x18
  1020                           
  1021                           
  1022                           ; 1 bytes @ 0x18
  1023     0038                     	ds	3
  1024     003B                     ??_map:
  1025                           
  1026                           ; 1 bytes @ 0x1B
  1027     003B                     	ds	2
  1028     003D                     _UART_RX_config$1026:
  1029     003D                     _UART_TX_config$1027:	
  1030                           ; 4 bytes @ 0x1D
  1031                           
  1032                           
  1033                           ; 4 bytes @ 0x1D
  1034     003D                     	ds	4
  1035     0041                     UART_RX_config@BR:
  1036     0041                     UART_TX_config@BR:	
  1037                           ; 4 bytes @ 0x21
  1038                           
  1039                           
  1040                           ; 4 bytes @ 0x21
  1041     0041                     	ds	2
  1042     0043                     map@val:
  1043                           
  1044                           ; 1 bytes @ 0x23
  1045     0043                     	ds	1
  1046     0044                     ??_requestTemp:
  1047     0044                     ??_requestGas:	
  1048                           ; 1 bytes @ 0x24
  1049                           
  1050                           
  1051                           ; 1 bytes @ 0x24
  1052     0044                     	ds	1
  1053     0045                     ??_setup:
  1054                           
  1055                           ; 1 bytes @ 0x25
  1056     0045                     	ds	2
  1057     0047                     ??_main:
  1058                           
  1059                           ; 1 bytes @ 0x27
  1060     0047                     	ds	3
  1061                           
  1062                           	psect	maintext
  1063     0639                     __pmaintext:	
  1064 ;;
  1065 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1066 ;;
  1067 ;; *************** function _main *****************
  1068 ;; Defined at:
  1069 ;;		line 99 in file "master.c"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;		None
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;		None
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  2  100[None  ] int 
  1076 ;; Registers used:
  1077 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1078 ;; Tracked objects:
  1079 ;;		On entry : B00/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1083 ;;      Params:         0       0       0       0       0
  1084 ;;      Locals:         0       0       0       0       0
  1085 ;;      Temps:          0       3       0       0       0
  1086 ;;      Totals:         0       3       0       0       0
  1087 ;;Total ram usage:        3 bytes
  1088 ;; Hardware stack levels required when called: 6
  1089 ;; This function calls:
  1090 ;;		_LDC_output
  1091 ;;		_requestGas
  1092 ;;		_requestHum
  1093 ;;		_requestIR
  1094 ;;		_requestTemp
  1095 ;;		_sendDataUART
  1096 ;;		_setup
  1097 ;;		_writeMotors
  1098 ;; This function is called by:
  1099 ;;		Startup code after reset
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103     0639                     _main:	
  1104                           ;psect for function _main
  1105                           
  1106     0639                     l2225:	
  1107                           ;incstack = 0
  1108                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1109                           
  1110                           
  1111                           ;master.c: 100:     setup();
  1112     0639  120A  118A  25EC  120A  118A  	fcall	_setup
  1113     063E                     l2227:
  1114                           
  1115                           ;master.c: 104:         if (counter >= 25){
  1116     063E  3019               	movlw	25
  1117     063F  1283               	bcf	3,5	;RP0=0, select bank0
  1118     0640  1303               	bcf	3,6	;RP1=0, select bank0
  1119     0641  024E               	subwf	_counter,w
  1120     0642  1C03               	skipc
  1121     0643  2E45               	goto	u1701
  1122     0644  2E46               	goto	u1700
  1123     0645                     u1701:
  1124     0645  2E4E               	goto	l2233
  1125     0646                     u1700:
  1126     0646                     l2229:
  1127                           
  1128                           ;master.c: 105:             requestHum();
  1129     0646  120A  118A  271A  120A  118A  	fcall	_requestHum
  1130     064B                     l2231:
  1131                           
  1132                           ;master.c: 106:             counter = 0;
  1133     064B  1283               	bcf	3,5	;RP0=0, select bank0
  1134     064C  1303               	bcf	3,6	;RP1=0, select bank0
  1135     064D  01CE               	clrf	_counter
  1136     064E                     l2233:
  1137                           
  1138                           ;master.c: 108:         requestTemp();
  1139     064E  120A  118A  2479  120A  118A  	fcall	_requestTemp
  1140     0653                     l2235:
  1141                           
  1142                           ;master.c: 109:         requestGas();
  1143     0653  120A  118A  23AE  120A  118A  	fcall	_requestGas
  1144     0658                     l2237:
  1145                           
  1146                           ;master.c: 110:         requestIR();
  1147     0658  120A  118A  26D1  120A  118A  	fcall	_requestIR
  1148     065D                     l2239:
  1149                           
  1150                           ;master.c: 113:         writeMotors();
  1151     065D  120A  118A  2414  120A  118A  	fcall	_writeMotors
  1152     0662                     l2241:
  1153                           
  1154                           ;master.c: 115:         LDC_output();
  1155     0662  120A  118A  201E  120A  118A  	fcall	_LDC_output
  1156     0667                     l2243:
  1157                           
  1158                           ;master.c: 116:         sendDataUART();
  1159     0667  120A  118A  259A  120A  118A  	fcall	_sendDataUART
  1160     066C                     l2245:
  1161                           
  1162                           ;master.c: 118:         counter++;
  1163     066C  3001               	movlw	1
  1164     066D  00FF               	movwf	btemp+1
  1165     066E  087F               	movf	btemp+1,w
  1166     066F  1283               	bcf	3,5	;RP0=0, select bank0
  1167     0670  1303               	bcf	3,6	;RP1=0, select bank0
  1168     0671  07CE               	addwf	_counter,f
  1169     0672                     l2247:
  1170                           
  1171                           ;master.c: 119:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1172     0672  3002               	movlw	2
  1173     0673  1283               	bcf	3,5	;RP0=0, select bank0
  1174     0674  1303               	bcf	3,6	;RP1=0, select bank0
  1175     0675  00C9               	movwf	??_main+2
  1176     0676  3004               	movlw	4
  1177     0677  00C8               	movwf	??_main+1
  1178     0678  30B9               	movlw	185
  1179     0679  00C7               	movwf	??_main
  1180     067A                     u1717:
  1181     067A  0BC7               	decfsz	??_main,f
  1182     067B  2E7A               	goto	u1717
  1183     067C  0BC8               	decfsz	??_main+1,f
  1184     067D  2E7A               	goto	u1717
  1185     067E  0BC9               	decfsz	??_main+2,f
  1186     067F  2E7A               	goto	u1717
  1187     0680  2E81               	nop2
  1188     0681  2E3E               	goto	l2227
  1189     0682  120A  118A  280C   	ljmp	start
  1190     0685                     __end_of_main:
  1191                           
  1192                           	psect	text1
  1193     0414                     __ptext1:	
  1194 ;; *************** function _writeMotors *****************
  1195 ;; Defined at:
  1196 ;;		line 202 in file "master.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;		None
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;		None
  1201 ;; Return value:  Size  Location     Type
  1202 ;;                  1    wreg      void 
  1203 ;; Registers used:
  1204 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1205 ;; Tracked objects:
  1206 ;;		On entry : 0/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1210 ;;      Params:         0       0       0       0       0
  1211 ;;      Locals:         0       0       0       0       0
  1212 ;;      Temps:          2       0       0       0       0
  1213 ;;      Totals:         2       0       0       0       0
  1214 ;;Total ram usage:        2 bytes
  1215 ;; Hardware stack levels used: 1
  1216 ;; Hardware stack levels required when called: 4
  1217 ;; This function calls:
  1218 ;;		_I2C_Master_Start
  1219 ;;		_I2C_Master_Stop
  1220 ;;		_I2C_Master_Write
  1221 ;; This function is called by:
  1222 ;;		_main
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226     0414                     _writeMotors:	
  1227                           ;psect for function _writeMotors
  1228                           
  1229     0414                     l1821:	
  1230                           ;incstack = 0
  1231                           ; Regs used in _writeMotors: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1232                           
  1233                           
  1234                           ;master.c: 204:     if(tempC > 50 && gasPPM > 400)
  1235     0414  3033               	movlw	51
  1236     0415  027B               	subwf	_tempC,w
  1237     0416  1C03               	skipc
  1238     0417  2C19               	goto	u1261
  1239     0418  2C1A               	goto	u1260
  1240     0419                     u1261:
  1241     0419  2C27               	goto	l1827
  1242     041A                     u1260:
  1243     041A                     l1823:
  1244     041A  3001               	movlw	1
  1245     041B  1283               	bcf	3,5	;RP0=0, select bank0
  1246     041C  1303               	bcf	3,6	;RP1=0, select bank0
  1247     041D  024B               	subwf	_gasPPM+1,w
  1248     041E  3091               	movlw	145
  1249     041F  1903               	skipnz
  1250     0420  024A               	subwf	_gasPPM,w
  1251     0421  1C03               	skipc
  1252     0422  2C24               	goto	u1271
  1253     0423  2C25               	goto	u1270
  1254     0424                     u1271:
  1255     0424  2C27               	goto	l1827
  1256     0425                     u1270:
  1257     0425                     l1825:
  1258                           
  1259                           ;master.c: 205:         motorCon |= 0x10;
  1260     0425  164D               	bsf	_motorCon,4
  1261     0426  2C2D               	goto	l124
  1262     0427                     l1827:
  1263                           
  1264                           ;master.c: 207:         motorCon &= 0x0F;
  1265     0427  300F               	movlw	15
  1266     0428  00FF               	movwf	btemp+1
  1267     0429  087F               	movf	btemp+1,w
  1268     042A  1283               	bcf	3,5	;RP0=0, select bank0
  1269     042B  1303               	bcf	3,6	;RP1=0, select bank0
  1270     042C  05CD               	andwf	_motorCon,f
  1271     042D                     l124:
  1272                           
  1273                           ;master.c: 211:     motorCon &= 0xF0;
  1274     042D  30F0               	movlw	240
  1275     042E  00FF               	movwf	btemp+1
  1276     042F  087F               	movf	btemp+1,w
  1277     0430  05CD               	andwf	_motorCon,f
  1278                           
  1279                           ;master.c: 212:     switch(servoPos){
  1280     0431  2C3B               	goto	l1833
  1281     0432                     l126:	
  1282                           ;master.c: 213:         case '0':
  1283                           
  1284                           
  1285                           ;master.c: 214:             motorCon |= 0x02;
  1286     0432  14CD               	bsf	_motorCon,1
  1287                           
  1288                           ;master.c: 215:             break;
  1289     0433  2C4E               	goto	l1835
  1290     0434                     l1829:
  1291                           
  1292                           ;master.c: 217:             motorCon |= 0x03;
  1293     0434  3003               	movlw	3
  1294     0435  00FF               	movwf	btemp+1
  1295     0436  087F               	movf	btemp+1,w
  1296     0437  04CD               	iorwf	_motorCon,f
  1297                           
  1298                           ;master.c: 218:             break;
  1299     0438  2C4E               	goto	l1835
  1300     0439                     l129:	
  1301                           ;master.c: 219:         case '2':
  1302                           
  1303                           
  1304                           ;master.c: 220:             motorCon |= 0x04;
  1305     0439  154D               	bsf	_motorCon,2
  1306                           
  1307                           ;master.c: 221:             break;
  1308     043A  2C4E               	goto	l1835
  1309     043B                     l1833:
  1310     043B  087A               	movf	_servoPos,w
  1311     043C  00F4               	movwf	??_writeMotors
  1312     043D  01F5               	clrf	??_writeMotors+1
  1313                           
  1314                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1315                           ; Switch size 1, requested type "simple"
  1316                           ; Number of cases is 1, Range of values is 0 to 0
  1317                           ; switch strategies available:
  1318                           ; Name         Instructions Cycles
  1319                           ; simple_byte            4     3 (average)
  1320                           ; direct_byte           11     8 (fixed)
  1321                           ; jumptable            260     6 (fixed)
  1322                           ;	Chosen strategy is simple_byte
  1323     043E  0875               	movf	??_writeMotors+1,w
  1324     043F  3A00               	xorlw	0	; case 0
  1325     0440  1903               	skipnz
  1326     0441  2C43               	goto	l2273
  1327     0442  2C32               	goto	l126
  1328     0443                     l2273:
  1329                           
  1330                           ; Switch size 1, requested type "simple"
  1331                           ; Number of cases is 3, Range of values is 48 to 50
  1332                           ; switch strategies available:
  1333                           ; Name         Instructions Cycles
  1334                           ; simple_byte           10     6 (average)
  1335                           ; direct_byte           20    11 (fixed)
  1336                           ; jumptable            263     9 (fixed)
  1337                           ;	Chosen strategy is simple_byte
  1338     0443  0874               	movf	??_writeMotors,w
  1339     0444  3A30               	xorlw	48	; case 48
  1340     0445  1903               	skipnz
  1341     0446  2C32               	goto	l126
  1342     0447  3A01               	xorlw	1	; case 49
  1343     0448  1903               	skipnz
  1344     0449  2C34               	goto	l1829
  1345     044A  3A03               	xorlw	3	; case 50
  1346     044B  1903               	skipnz
  1347     044C  2C39               	goto	l129
  1348     044D  2C32               	goto	l126
  1349     044E                     l1835:
  1350                           
  1351                           ;master.c: 228:     I2C_Master_Start();
  1352     044E  120A  158A  2661  120A  118A  	fcall	_I2C_Master_Start
  1353                           
  1354                           ;master.c: 229:     I2C_Master_Write(0x30 +0);
  1355     0453  3030               	movlw	48
  1356     0454  00F2               	movwf	I2C_Master_Write@d
  1357     0455  3000               	movlw	0
  1358     0456  00F3               	movwf	I2C_Master_Write@d+1
  1359     0457  120A  158A  2673  120A  118A  	fcall	_I2C_Master_Write
  1360                           
  1361                           ;master.c: 230:     I2C_Master_Write(motorCon);
  1362     045C  1283               	bcf	3,5	;RP0=0, select bank0
  1363     045D  1303               	bcf	3,6	;RP1=0, select bank0
  1364     045E  084D               	movf	_motorCon,w
  1365     045F  00F4               	movwf	??_writeMotors
  1366     0460  01F5               	clrf	??_writeMotors+1
  1367     0461  0874               	movf	??_writeMotors,w
  1368     0462  00F2               	movwf	I2C_Master_Write@d
  1369     0463  0875               	movf	??_writeMotors+1,w
  1370     0464  00F3               	movwf	I2C_Master_Write@d+1
  1371     0465  120A  158A  2673  120A  118A  	fcall	_I2C_Master_Write
  1372                           
  1373                           ;master.c: 231:     I2C_Master_Stop();
  1374     046A  120A  158A  266A  120A  118A  	fcall	_I2C_Master_Stop
  1375     046F                     l1837:
  1376                           
  1377                           ;master.c: 232:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1378     046F  3034               	movlw	52
  1379     0470  00F5               	movwf	??_writeMotors+1
  1380     0471  30F1               	movlw	241
  1381     0472  00F4               	movwf	??_writeMotors
  1382     0473                     u1727:
  1383     0473  0BF4               	decfsz	??_writeMotors,f
  1384     0474  2C73               	goto	u1727
  1385     0475  0BF5               	decfsz	??_writeMotors+1,f
  1386     0476  2C73               	goto	u1727
  1387     0477  2C78               	nop2
  1388     0478                     l131:
  1389     0478  0008               	return
  1390     0479                     __end_of_writeMotors:
  1391                           
  1392                           	psect	text2
  1393     05EC                     __ptext2:	
  1394 ;; *************** function _setup *****************
  1395 ;; Defined at:
  1396 ;;		line 123 in file "master.c"
  1397 ;; Parameters:    Size  Location     Type
  1398 ;;		None
  1399 ;; Auto vars:     Size  Location     Type
  1400 ;;		None
  1401 ;; Return value:  Size  Location     Type
  1402 ;;                  1    wreg      void 
  1403 ;; Registers used:
  1404 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1405 ;; Tracked objects:
  1406 ;;		On entry : 0/0
  1407 ;;		On exit  : 0/0
  1408 ;;		Unchanged: 0/0
  1409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1410 ;;      Params:         0       0       0       0       0
  1411 ;;      Locals:         0       0       0       0       0
  1412 ;;      Temps:          0       2       0       0       0
  1413 ;;      Totals:         0       2       0       0       0
  1414 ;;Total ram usage:        2 bytes
  1415 ;; Hardware stack levels used: 1
  1416 ;; Hardware stack levels required when called: 5
  1417 ;; This function calls:
  1418 ;;		_I2C_Master_Init
  1419 ;;		_Lcd_Init
  1420 ;;		_UART_RX_config
  1421 ;;		_UART_TX_config
  1422 ;; This function is called by:
  1423 ;;		_main
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427     05EC                     _setup:	
  1428                           ;psect for function _setup
  1429                           
  1430     05EC                     l2147:	
  1431                           ;incstack = 0
  1432                           ; Regs used in _setup: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1433                           
  1434                           
  1435                           ;master.c: 124:     ANSEL = 0;
  1436     05EC  1683               	bsf	3,5	;RP0=1, select bank3
  1437     05ED  1703               	bsf	3,6	;RP1=1, select bank3
  1438     05EE  0188               	clrf	8	;volatile
  1439                           
  1440                           ;master.c: 125:     ANSELH= 0;
  1441     05EF  0189               	clrf	9	;volatile
  1442                           
  1443                           ;master.c: 127:     TRISD = 0;
  1444     05F0  1683               	bsf	3,5	;RP0=1, select bank1
  1445     05F1  1303               	bcf	3,6	;RP1=0, select bank1
  1446     05F2  0188               	clrf	8	;volatile
  1447                           
  1448                           ;master.c: 128:     PORTD = 0;
  1449     05F3  1283               	bcf	3,5	;RP0=0, select bank0
  1450     05F4  1303               	bcf	3,6	;RP1=0, select bank0
  1451     05F5  0188               	clrf	8	;volatile
  1452     05F6                     l2149:
  1453                           
  1454                           ;master.c: 131:     OSCCONbits.IRCF = 0b111;
  1455     05F6  3070               	movlw	112
  1456     05F7  1683               	bsf	3,5	;RP0=1, select bank1
  1457     05F8  1303               	bcf	3,6	;RP1=0, select bank1
  1458     05F9  048F               	iorwf	15,f	;volatile
  1459     05FA                     l2151:
  1460                           
  1461                           ;master.c: 132:     SCS = 1;
  1462     05FA  140F               	bsf	15,0	;volatile
  1463     05FB                     l2153:
  1464                           
  1465                           ;master.c: 135:     Lcd_Init();
  1466     05FB  120A  118A  253D  120A  118A  	fcall	_Lcd_Init
  1467     0600                     l2155:
  1468                           
  1469                           ;master.c: 136:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1470     0600  301A               	movlw	26
  1471     0601  1283               	bcf	3,5	;RP0=0, select bank0
  1472     0602  1303               	bcf	3,6	;RP1=0, select bank0
  1473     0603  00C6               	movwf	??_setup+1
  1474     0604  30F7               	movlw	247
  1475     0605  00C5               	movwf	??_setup
  1476     0606                     u1737:
  1477     0606  0BC5               	decfsz	??_setup,f
  1478     0607  2E06               	goto	u1737
  1479     0608  0BC6               	decfsz	??_setup+1,f
  1480     0609  2E06               	goto	u1737
  1481     060A  2E0B               	nop2
  1482     060B                     l2157:
  1483                           
  1484                           ;master.c: 139:     I2C_Master_Init(100000);
  1485     060B  3000               	movlw	0
  1486     060C  1283               	bcf	3,5	;RP0=0, select bank0
  1487     060D  1303               	bcf	3,6	;RP1=0, select bank0
  1488     060E  00A9               	movwf	I2C_Master_Init@c+3
  1489     060F  3001               	movlw	1
  1490     0610  00A8               	movwf	I2C_Master_Init@c+2
  1491     0611  3086               	movlw	134
  1492     0612  00A7               	movwf	I2C_Master_Init@c+1
  1493     0613  30A0               	movlw	160
  1494     0614  00A6               	movwf	I2C_Master_Init@c
  1495     0615  120A  158A  274A  120A  118A  	fcall	_I2C_Master_Init
  1496     061A                     l2159:
  1497                           
  1498                           ;master.c: 142:     UART_RX_config(9600);
  1499     061A  3000               	movlw	0
  1500     061B  1283               	bcf	3,5	;RP0=0, select bank0
  1501     061C  1303               	bcf	3,6	;RP1=0, select bank0
  1502     061D  00B7               	movwf	UART_RX_config@baudrate+3
  1503     061E  3000               	movlw	0
  1504     061F  00B6               	movwf	UART_RX_config@baudrate+2
  1505     0620  3025               	movlw	37
  1506     0621  00B5               	movwf	UART_RX_config@baudrate+1
  1507     0622  3080               	movlw	128
  1508     0623  00B4               	movwf	UART_RX_config@baudrate
  1509     0624  120A  118A  2242  120A  118A  	fcall	_UART_RX_config
  1510     0629                     l2161:
  1511                           
  1512                           ;master.c: 143:     UART_TX_config(9600);
  1513     0629  3000               	movlw	0
  1514     062A  1283               	bcf	3,5	;RP0=0, select bank0
  1515     062B  1303               	bcf	3,6	;RP1=0, select bank0
  1516     062C  00B7               	movwf	UART_TX_config@baudrate+3
  1517     062D  3000               	movlw	0
  1518     062E  00B6               	movwf	UART_TX_config@baudrate+2
  1519     062F  3025               	movlw	37
  1520     0630  00B5               	movwf	UART_TX_config@baudrate+1
  1521     0631  3080               	movlw	128
  1522     0632  00B4               	movwf	UART_TX_config@baudrate
  1523     0633  120A  118A  22C5  120A  118A  	fcall	_UART_TX_config
  1524     0638                     l108:
  1525     0638  0008               	return
  1526     0639                     __end_of_setup:
  1527                           
  1528                           	psect	text3
  1529     02C5                     __ptext3:	
  1530 ;; *************** function _UART_TX_config *****************
  1531 ;; Defined at:
  1532 ;;		line 25 in file "UART.c"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;  baudrate        4   20[BANK0 ] long 
  1535 ;; Auto vars:     Size  Location     Type
  1536 ;;  BR              4   33[BANK0 ] long 
  1537 ;; Return value:  Size  Location     Type
  1538 ;;                  1    wreg      void 
  1539 ;; Registers used:
  1540 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1541 ;; Tracked objects:
  1542 ;;		On entry : 0/0
  1543 ;;		On exit  : 0/0
  1544 ;;		Unchanged: 0/0
  1545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1546 ;;      Params:         0       4       0       0       0
  1547 ;;      Locals:         0       8       0       0       0
  1548 ;;      Temps:          0       5       0       0       0
  1549 ;;      Totals:         0      17       0       0       0
  1550 ;;Total ram usage:       17 bytes
  1551 ;; Hardware stack levels used: 1
  1552 ;; Hardware stack levels required when called: 3
  1553 ;; This function calls:
  1554 ;;		___aldiv
  1555 ;; This function is called by:
  1556 ;;		_setup
  1557 ;; This function uses a non-reentrant model
  1558 ;;
  1559                           
  1560     02C5                     _UART_TX_config:	
  1561                           ;psect for function _UART_TX_config
  1562                           
  1563     02C5                     l2097:	
  1564                           ;incstack = 0
  1565                           ; Regs used in _UART_TX_config: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1566                           
  1567                           
  1568                           ;UART.c: 28:     long BR;;UART.c: 29:     BR = ((8000000/baudrate)/64) - 1;
  1569     02C5  1283               	bcf	3,5	;RP0=0, select bank0
  1570     02C6  1303               	bcf	3,6	;RP1=0, select bank0
  1571     02C7  0837               	movf	UART_TX_config@baudrate+3,w
  1572     02C8  00A8               	movwf	___aldiv@divisor+3
  1573     02C9  0836               	movf	UART_TX_config@baudrate+2,w
  1574     02CA  00A7               	movwf	___aldiv@divisor+2
  1575     02CB  0835               	movf	UART_TX_config@baudrate+1,w
  1576     02CC  00A6               	movwf	___aldiv@divisor+1
  1577     02CD  0834               	movf	UART_TX_config@baudrate,w
  1578     02CE  00A5               	movwf	___aldiv@divisor
  1579     02CF  3000               	movlw	0
  1580     02D0  00AC               	movwf	___aldiv@dividend+3
  1581     02D1  307A               	movlw	122
  1582     02D2  00AB               	movwf	___aldiv@dividend+2
  1583     02D3  3012               	movlw	18
  1584     02D4  00AA               	movwf	___aldiv@dividend+1
  1585     02D5  3000               	movlw	0
  1586     02D6  00A9               	movwf	___aldiv@dividend
  1587     02D7  120A  118A  21A5  120A  118A  	fcall	___aldiv
  1588     02DC  1283               	bcf	3,5	;RP0=0, select bank0
  1589     02DD  1303               	bcf	3,6	;RP1=0, select bank0
  1590     02DE  0828               	movf	?___aldiv+3,w
  1591     02DF  00C0               	movwf	_UART_TX_config$1027+3
  1592     02E0  0827               	movf	?___aldiv+2,w
  1593     02E1  00BF               	movwf	_UART_TX_config$1027+2
  1594     02E2  0826               	movf	?___aldiv+1,w
  1595     02E3  00BE               	movwf	_UART_TX_config$1027+1
  1596     02E4  0825               	movf	?___aldiv,w
  1597     02E5  00BD               	movwf	_UART_TX_config$1027
  1598                           
  1599                           ;UART.c: 28:     long BR;;UART.c: 29:     BR = ((8000000/baudrate)/64) - 1;
  1600     02E6  30FF               	movlw	255
  1601     02E7  00B8               	movwf	??_UART_TX_config
  1602     02E8  30FF               	movlw	255
  1603     02E9  00B9               	movwf	??_UART_TX_config+1
  1604     02EA  30FF               	movlw	255
  1605     02EB  00BA               	movwf	??_UART_TX_config+2
  1606     02EC  30FF               	movlw	255
  1607     02ED  00BB               	movwf	??_UART_TX_config+3
  1608     02EE  3000               	movlw	0
  1609     02EF  00A8               	movwf	___aldiv@divisor+3
  1610     02F0  3000               	movlw	0
  1611     02F1  00A7               	movwf	___aldiv@divisor+2
  1612     02F2  3000               	movlw	0
  1613     02F3  00A6               	movwf	___aldiv@divisor+1
  1614     02F4  3040               	movlw	64
  1615     02F5  00A5               	movwf	___aldiv@divisor
  1616     02F6  0840               	movf	_UART_TX_config$1027+3,w
  1617     02F7  00AC               	movwf	___aldiv@dividend+3
  1618     02F8  083F               	movf	_UART_TX_config$1027+2,w
  1619     02F9  00AB               	movwf	___aldiv@dividend+2
  1620     02FA  083E               	movf	_UART_TX_config$1027+1,w
  1621     02FB  00AA               	movwf	___aldiv@dividend+1
  1622     02FC  083D               	movf	_UART_TX_config$1027,w
  1623     02FD  00A9               	movwf	___aldiv@dividend
  1624     02FE  120A  118A  21A5  120A  118A  	fcall	___aldiv
  1625     0303  1283               	bcf	3,5	;RP0=0, select bank0
  1626     0304  1303               	bcf	3,6	;RP1=0, select bank0
  1627     0305  0825               	movf	?___aldiv,w
  1628     0306  07B8               	addwf	??_UART_TX_config,f
  1629     0307  0826               	movf	?___aldiv+1,w
  1630     0308  1803               	skipnc
  1631     0309  0F26               	incfsz	?___aldiv+1,w
  1632     030A  2B0C               	goto	u1600
  1633     030B  2B0D               	goto	u1601
  1634     030C                     u1600:
  1635     030C  07B9               	addwf	??_UART_TX_config+1,f
  1636     030D                     u1601:
  1637     030D  0827               	movf	?___aldiv+2,w
  1638     030E  1803               	skipnc
  1639     030F  0F27               	incfsz	?___aldiv+2,w
  1640     0310  2B12               	goto	u1602
  1641     0311  2B13               	goto	u1603
  1642     0312                     u1602:
  1643     0312  07BA               	addwf	??_UART_TX_config+2,f
  1644     0313                     u1603:
  1645     0313  0828               	movf	?___aldiv+3,w
  1646     0314  1803               	skipnc
  1647     0315  0A28               	incf	?___aldiv+3,w
  1648     0316  07BB               	addwf	??_UART_TX_config+3,f
  1649     0317  083B               	movf	??_UART_TX_config+3,w
  1650     0318  00C4               	movwf	UART_TX_config@BR+3
  1651     0319  083A               	movf	??_UART_TX_config+2,w
  1652     031A  00C3               	movwf	UART_TX_config@BR+2
  1653     031B  0839               	movf	??_UART_TX_config+1,w
  1654     031C  00C2               	movwf	UART_TX_config@BR+1
  1655     031D  0838               	movf	??_UART_TX_config,w
  1656     031E  00C1               	movwf	UART_TX_config@BR
  1657     031F                     l2099:
  1658                           
  1659                           ;UART.c: 30:     SPBRG = BR & 0x00FF;
  1660     031F  0841               	movf	UART_TX_config@BR,w
  1661     0320  1683               	bsf	3,5	;RP0=1, select bank1
  1662     0321  1303               	bcf	3,6	;RP1=0, select bank1
  1663     0322  0099               	movwf	25	;volatile
  1664     0323                     l2101:
  1665                           
  1666                           ;UART.c: 31:     SPBRGH = (BR & 0xFF00) >> 8;
  1667     0323  1283               	bcf	3,5	;RP0=0, select bank0
  1668     0324  1303               	bcf	3,6	;RP1=0, select bank0
  1669     0325  0841               	movf	UART_TX_config@BR,w
  1670     0326  00B8               	movwf	??_UART_TX_config
  1671     0327  0842               	movf	UART_TX_config@BR+1,w
  1672     0328  00B9               	movwf	??_UART_TX_config+1
  1673     0329  0843               	movf	UART_TX_config@BR+2,w
  1674     032A  00BA               	movwf	??_UART_TX_config+2
  1675     032B  0844               	movf	UART_TX_config@BR+3,w
  1676     032C  00BB               	movwf	??_UART_TX_config+3
  1677     032D  3008               	movlw	8
  1678     032E  00BC               	movwf	??_UART_TX_config+4
  1679     032F                     u1615:
  1680     032F  0D3B               	rlf	??_UART_TX_config+3,w
  1681     0330  0CBB               	rrf	??_UART_TX_config+3,f
  1682     0331  0CBA               	rrf	??_UART_TX_config+2,f
  1683     0332  0CB9               	rrf	??_UART_TX_config+1,f
  1684     0333  0CB8               	rrf	??_UART_TX_config,f
  1685     0334                     u1610:
  1686     0334  0BBC               	decfsz	??_UART_TX_config+4,f
  1687     0335  2B2F               	goto	u1615
  1688     0336  0838               	movf	??_UART_TX_config,w
  1689     0337  1683               	bsf	3,5	;RP0=1, select bank1
  1690     0338  1303               	bcf	3,6	;RP1=0, select bank1
  1691     0339  009A               	movwf	26	;volatile
  1692     033A                     l2103:
  1693                           
  1694                           ;UART.c: 33:     SYNC = 0;
  1695     033A  1218               	bcf	24,4	;volatile
  1696     033B                     l2105:
  1697                           
  1698                           ;UART.c: 34:     SPEN = 1;
  1699     033B  1283               	bcf	3,5	;RP0=0, select bank0
  1700     033C  1303               	bcf	3,6	;RP1=0, select bank0
  1701     033D  1798               	bsf	24,7	;volatile
  1702     033E                     l2107:
  1703                           
  1704                           ;UART.c: 36:     TXEN = 1;
  1705     033E  1683               	bsf	3,5	;RP0=1, select bank1
  1706     033F  1303               	bcf	3,6	;RP1=0, select bank1
  1707     0340  1698               	bsf	24,5	;volatile
  1708     0341                     l2109:
  1709                           
  1710                           ;UART.c: 37:     TXIE = 0;
  1711     0341  120C               	bcf	12,4	;volatile
  1712     0342                     l2111:
  1713                           
  1714                           ;UART.c: 38:     TXIF = 0;
  1715     0342  1283               	bcf	3,5	;RP0=0, select bank0
  1716     0343  1303               	bcf	3,6	;RP1=0, select bank0
  1717     0344  120C               	bcf	12,4	;volatile
  1718     0345                     l294:
  1719     0345  0008               	return
  1720     0346                     __end_of_UART_TX_config:
  1721                           
  1722                           	psect	text4
  1723     0242                     __ptext4:	
  1724 ;; *************** function _UART_RX_config *****************
  1725 ;; Defined at:
  1726 ;;		line 6 in file "UART.c"
  1727 ;; Parameters:    Size  Location     Type
  1728 ;;  baudrate        4   20[BANK0 ] long 
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;  BR              4   33[BANK0 ] long 
  1731 ;; Return value:  Size  Location     Type
  1732 ;;                  1    wreg      void 
  1733 ;; Registers used:
  1734 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1740 ;;      Params:         0       4       0       0       0
  1741 ;;      Locals:         0       8       0       0       0
  1742 ;;      Temps:          0       5       0       0       0
  1743 ;;      Totals:         0      17       0       0       0
  1744 ;;Total ram usage:       17 bytes
  1745 ;; Hardware stack levels used: 1
  1746 ;; Hardware stack levels required when called: 3
  1747 ;; This function calls:
  1748 ;;		___aldiv
  1749 ;; This function is called by:
  1750 ;;		_setup
  1751 ;; This function uses a non-reentrant model
  1752 ;;
  1753                           
  1754     0242                     _UART_RX_config:	
  1755                           ;psect for function _UART_RX_config
  1756                           
  1757     0242                     l2077:	
  1758                           ;incstack = 0
  1759                           ; Regs used in _UART_RX_config: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1760                           
  1761                           
  1762                           ;UART.c: 9:     long BR;;UART.c: 10:     BR = ((8000000/baudrate)/64) - 1;
  1763     0242  1283               	bcf	3,5	;RP0=0, select bank0
  1764     0243  1303               	bcf	3,6	;RP1=0, select bank0
  1765     0244  0837               	movf	UART_RX_config@baudrate+3,w
  1766     0245  00A8               	movwf	___aldiv@divisor+3
  1767     0246  0836               	movf	UART_RX_config@baudrate+2,w
  1768     0247  00A7               	movwf	___aldiv@divisor+2
  1769     0248  0835               	movf	UART_RX_config@baudrate+1,w
  1770     0249  00A6               	movwf	___aldiv@divisor+1
  1771     024A  0834               	movf	UART_RX_config@baudrate,w
  1772     024B  00A5               	movwf	___aldiv@divisor
  1773     024C  3000               	movlw	0
  1774     024D  00AC               	movwf	___aldiv@dividend+3
  1775     024E  307A               	movlw	122
  1776     024F  00AB               	movwf	___aldiv@dividend+2
  1777     0250  3012               	movlw	18
  1778     0251  00AA               	movwf	___aldiv@dividend+1
  1779     0252  3000               	movlw	0
  1780     0253  00A9               	movwf	___aldiv@dividend
  1781     0254  120A  118A  21A5  120A  118A  	fcall	___aldiv
  1782     0259  1283               	bcf	3,5	;RP0=0, select bank0
  1783     025A  1303               	bcf	3,6	;RP1=0, select bank0
  1784     025B  0828               	movf	?___aldiv+3,w
  1785     025C  00C0               	movwf	_UART_RX_config$1026+3
  1786     025D  0827               	movf	?___aldiv+2,w
  1787     025E  00BF               	movwf	_UART_RX_config$1026+2
  1788     025F  0826               	movf	?___aldiv+1,w
  1789     0260  00BE               	movwf	_UART_RX_config$1026+1
  1790     0261  0825               	movf	?___aldiv,w
  1791     0262  00BD               	movwf	_UART_RX_config$1026
  1792                           
  1793                           ;UART.c: 9:     long BR;;UART.c: 10:     BR = ((8000000/baudrate)/64) - 1;
  1794     0263  30FF               	movlw	255
  1795     0264  00B8               	movwf	??_UART_RX_config
  1796     0265  30FF               	movlw	255
  1797     0266  00B9               	movwf	??_UART_RX_config+1
  1798     0267  30FF               	movlw	255
  1799     0268  00BA               	movwf	??_UART_RX_config+2
  1800     0269  30FF               	movlw	255
  1801     026A  00BB               	movwf	??_UART_RX_config+3
  1802     026B  3000               	movlw	0
  1803     026C  00A8               	movwf	___aldiv@divisor+3
  1804     026D  3000               	movlw	0
  1805     026E  00A7               	movwf	___aldiv@divisor+2
  1806     026F  3000               	movlw	0
  1807     0270  00A6               	movwf	___aldiv@divisor+1
  1808     0271  3040               	movlw	64
  1809     0272  00A5               	movwf	___aldiv@divisor
  1810     0273  0840               	movf	_UART_RX_config$1026+3,w
  1811     0274  00AC               	movwf	___aldiv@dividend+3
  1812     0275  083F               	movf	_UART_RX_config$1026+2,w
  1813     0276  00AB               	movwf	___aldiv@dividend+2
  1814     0277  083E               	movf	_UART_RX_config$1026+1,w
  1815     0278  00AA               	movwf	___aldiv@dividend+1
  1816     0279  083D               	movf	_UART_RX_config$1026,w
  1817     027A  00A9               	movwf	___aldiv@dividend
  1818     027B  120A  118A  21A5  120A  118A  	fcall	___aldiv
  1819     0280  1283               	bcf	3,5	;RP0=0, select bank0
  1820     0281  1303               	bcf	3,6	;RP1=0, select bank0
  1821     0282  0825               	movf	?___aldiv,w
  1822     0283  07B8               	addwf	??_UART_RX_config,f
  1823     0284  0826               	movf	?___aldiv+1,w
  1824     0285  1803               	skipnc
  1825     0286  0F26               	incfsz	?___aldiv+1,w
  1826     0287  2A89               	goto	u1580
  1827     0288  2A8A               	goto	u1581
  1828     0289                     u1580:
  1829     0289  07B9               	addwf	??_UART_RX_config+1,f
  1830     028A                     u1581:
  1831     028A  0827               	movf	?___aldiv+2,w
  1832     028B  1803               	skipnc
  1833     028C  0F27               	incfsz	?___aldiv+2,w
  1834     028D  2A8F               	goto	u1582
  1835     028E  2A90               	goto	u1583
  1836     028F                     u1582:
  1837     028F  07BA               	addwf	??_UART_RX_config+2,f
  1838     0290                     u1583:
  1839     0290  0828               	movf	?___aldiv+3,w
  1840     0291  1803               	skipnc
  1841     0292  0A28               	incf	?___aldiv+3,w
  1842     0293  07BB               	addwf	??_UART_RX_config+3,f
  1843     0294  083B               	movf	??_UART_RX_config+3,w
  1844     0295  00C4               	movwf	UART_RX_config@BR+3
  1845     0296  083A               	movf	??_UART_RX_config+2,w
  1846     0297  00C3               	movwf	UART_RX_config@BR+2
  1847     0298  0839               	movf	??_UART_RX_config+1,w
  1848     0299  00C2               	movwf	UART_RX_config@BR+1
  1849     029A  0838               	movf	??_UART_RX_config,w
  1850     029B  00C1               	movwf	UART_RX_config@BR
  1851     029C                     l2079:
  1852                           
  1853                           ;UART.c: 11:     SPBRG = BR & 0x00FF;
  1854     029C  0841               	movf	UART_RX_config@BR,w
  1855     029D  1683               	bsf	3,5	;RP0=1, select bank1
  1856     029E  1303               	bcf	3,6	;RP1=0, select bank1
  1857     029F  0099               	movwf	25	;volatile
  1858     02A0                     l2081:
  1859                           
  1860                           ;UART.c: 12:     SPBRGH = (BR & 0xFF00) >> 8;
  1861     02A0  1283               	bcf	3,5	;RP0=0, select bank0
  1862     02A1  1303               	bcf	3,6	;RP1=0, select bank0
  1863     02A2  0841               	movf	UART_RX_config@BR,w
  1864     02A3  00B8               	movwf	??_UART_RX_config
  1865     02A4  0842               	movf	UART_RX_config@BR+1,w
  1866     02A5  00B9               	movwf	??_UART_RX_config+1
  1867     02A6  0843               	movf	UART_RX_config@BR+2,w
  1868     02A7  00BA               	movwf	??_UART_RX_config+2
  1869     02A8  0844               	movf	UART_RX_config@BR+3,w
  1870     02A9  00BB               	movwf	??_UART_RX_config+3
  1871     02AA  3008               	movlw	8
  1872     02AB  00BC               	movwf	??_UART_RX_config+4
  1873     02AC                     u1595:
  1874     02AC  0D3B               	rlf	??_UART_RX_config+3,w
  1875     02AD  0CBB               	rrf	??_UART_RX_config+3,f
  1876     02AE  0CBA               	rrf	??_UART_RX_config+2,f
  1877     02AF  0CB9               	rrf	??_UART_RX_config+1,f
  1878     02B0  0CB8               	rrf	??_UART_RX_config,f
  1879     02B1                     u1590:
  1880     02B1  0BBC               	decfsz	??_UART_RX_config+4,f
  1881     02B2  2AAC               	goto	u1595
  1882     02B3  0838               	movf	??_UART_RX_config,w
  1883     02B4  1683               	bsf	3,5	;RP0=1, select bank1
  1884     02B5  1303               	bcf	3,6	;RP1=0, select bank1
  1885     02B6  009A               	movwf	26	;volatile
  1886     02B7                     l2083:
  1887                           
  1888                           ;UART.c: 14:     SYNC = 0;
  1889     02B7  1218               	bcf	24,4	;volatile
  1890     02B8                     l2085:
  1891                           
  1892                           ;UART.c: 15:     SPEN = 1;
  1893     02B8  1283               	bcf	3,5	;RP0=0, select bank0
  1894     02B9  1303               	bcf	3,6	;RP1=0, select bank0
  1895     02BA  1798               	bsf	24,7	;volatile
  1896     02BB                     l2087:
  1897                           
  1898                           ;UART.c: 17:     CREN = 1;
  1899     02BB  1618               	bsf	24,4	;volatile
  1900     02BC                     l2089:
  1901                           
  1902                           ;UART.c: 18:     RCIE = 1;
  1903     02BC  1683               	bsf	3,5	;RP0=1, select bank1
  1904     02BD  1303               	bcf	3,6	;RP1=0, select bank1
  1905     02BE  168C               	bsf	12,5	;volatile
  1906     02BF                     l2091:
  1907                           
  1908                           ;UART.c: 19:     PEIE = 1;
  1909     02BF  170B               	bsf	11,6	;volatile
  1910     02C0                     l2093:
  1911                           
  1912                           ;UART.c: 20:     GIE = 1;
  1913     02C0  178B               	bsf	11,7	;volatile
  1914     02C1                     l2095:
  1915                           
  1916                           ;UART.c: 21:     RCIF = 0;
  1917     02C1  1283               	bcf	3,5	;RP0=0, select bank0
  1918     02C2  1303               	bcf	3,6	;RP1=0, select bank0
  1919     02C3  128C               	bcf	12,5	;volatile
  1920     02C4                     l291:
  1921     02C4  0008               	return
  1922     02C5                     __end_of_UART_RX_config:
  1923                           
  1924                           	psect	text5
  1925     053D                     __ptext5:	
  1926 ;; *************** function _Lcd_Init *****************
  1927 ;; Defined at:
  1928 ;;		line 65 in file "LCD4b.c"
  1929 ;; Parameters:    Size  Location     Type
  1930 ;;		None
  1931 ;; Auto vars:     Size  Location     Type
  1932 ;;		None
  1933 ;; Return value:  Size  Location     Type
  1934 ;;                  1    wreg      void 
  1935 ;; Registers used:
  1936 ;;		wreg, status,2, status,0, pclath, cstack
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1942 ;;      Params:         0       0       0       0       0
  1943 ;;      Locals:         0       0       0       0       0
  1944 ;;      Temps:          2       0       0       0       0
  1945 ;;      Totals:         2       0       0       0       0
  1946 ;;Total ram usage:        2 bytes
  1947 ;; Hardware stack levels used: 1
  1948 ;; Hardware stack levels required when called: 4
  1949 ;; This function calls:
  1950 ;;		_Lcd_Cmd
  1951 ;;		_Lcd_Port
  1952 ;; This function is called by:
  1953 ;;		_setup
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957     053D                     _Lcd_Init:	
  1958                           ;psect for function _Lcd_Init
  1959                           
  1960     053D                     l2055:	
  1961                           ;incstack = 0
  1962                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1963                           
  1964                           
  1965                           ;LCD4b.c: 66:     Lcd_Port(0x00);
  1966     053D  3000               	movlw	0
  1967     053E  120A  158A  26C5  120A  118A  	fcall	_Lcd_Port
  1968     0543                     l2057:
  1969                           
  1970                           ;LCD4b.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1971     0543  3034               	movlw	52
  1972     0544  00F7               	movwf	??_Lcd_Init+1
  1973     0545  30F1               	movlw	241
  1974     0546  00F6               	movwf	??_Lcd_Init
  1975     0547                     u1747:
  1976     0547  0BF6               	decfsz	??_Lcd_Init,f
  1977     0548  2D47               	goto	u1747
  1978     0549  0BF7               	decfsz	??_Lcd_Init+1,f
  1979     054A  2D47               	goto	u1747
  1980     054B  2D4C               	nop2
  1981     054C                     l2059:
  1982                           
  1983                           ;LCD4b.c: 68:     Lcd_Cmd(0x03);
  1984     054C  3003               	movlw	3
  1985     054D  120A  158A  26AB  120A  118A  	fcall	_Lcd_Cmd
  1986                           
  1987                           ;LCD4b.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1988     0552  300D               	movlw	13
  1989     0553  00F7               	movwf	??_Lcd_Init+1
  1990     0554  30FB               	movlw	251
  1991     0555  00F6               	movwf	??_Lcd_Init
  1992     0556                     u1757:
  1993     0556  0BF6               	decfsz	??_Lcd_Init,f
  1994     0557  2D56               	goto	u1757
  1995     0558  0BF7               	decfsz	??_Lcd_Init+1,f
  1996     0559  2D56               	goto	u1757
  1997     055A  2D5B               	nop2
  1998     055B                     l2061:
  1999                           
  2000                           ;LCD4b.c: 70:     Lcd_Cmd(0x03);
  2001     055B  3003               	movlw	3
  2002     055C  120A  158A  26AB  120A  118A  	fcall	_Lcd_Cmd
  2003     0561                     l2063:
  2004                           
  2005                           ;LCD4b.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2006     0561  301D               	movlw	29
  2007     0562  00F7               	movwf	??_Lcd_Init+1
  2008     0563  3091               	movlw	145
  2009     0564  00F6               	movwf	??_Lcd_Init
  2010     0565                     u1767:
  2011     0565  0BF6               	decfsz	??_Lcd_Init,f
  2012     0566  2D65               	goto	u1767
  2013     0567  0BF7               	decfsz	??_Lcd_Init+1,f
  2014     0568  2D65               	goto	u1767
  2015                           
  2016                           ;LCD4b.c: 72:     Lcd_Cmd(0x03);
  2017     0569  3003               	movlw	3
  2018     056A  120A  158A  26AB  120A  118A  	fcall	_Lcd_Cmd
  2019                           
  2020                           ;LCD4b.c: 74:     Lcd_Cmd(0x02);
  2021     056F  3002               	movlw	2
  2022     0570  120A  158A  26AB  120A  118A  	fcall	_Lcd_Cmd
  2023                           
  2024                           ;LCD4b.c: 75:     Lcd_Cmd(0x02);
  2025     0575  3002               	movlw	2
  2026     0576  120A  158A  26AB  120A  118A  	fcall	_Lcd_Cmd
  2027                           
  2028                           ;LCD4b.c: 76:     Lcd_Cmd(0x08);
  2029     057B  3008               	movlw	8
  2030     057C  120A  158A  26AB  120A  118A  	fcall	_Lcd_Cmd
  2031                           
  2032                           ;LCD4b.c: 77:     Lcd_Cmd(0x00);
  2033     0581  3000               	movlw	0
  2034     0582  120A  158A  26AB  120A  118A  	fcall	_Lcd_Cmd
  2035                           
  2036                           ;LCD4b.c: 78:     Lcd_Cmd(0x0C);
  2037     0587  300C               	movlw	12
  2038     0588  120A  158A  26AB  120A  118A  	fcall	_Lcd_Cmd
  2039                           
  2040                           ;LCD4b.c: 79:     Lcd_Cmd(0x00);
  2041     058D  3000               	movlw	0
  2042     058E  120A  158A  26AB  120A  118A  	fcall	_Lcd_Cmd
  2043                           
  2044                           ;LCD4b.c: 80:     Lcd_Cmd(0x06);
  2045     0593  3006               	movlw	6
  2046     0594  120A  158A  26AB  120A  118A  	fcall	_Lcd_Cmd
  2047     0599                     l243:
  2048     0599  0008               	return
  2049     059A                     __end_of_Lcd_Init:
  2050                           
  2051                           	psect	text6
  2052     0F4A                     __ptext6:	
  2053 ;; *************** function _I2C_Master_Init *****************
  2054 ;; Defined at:
  2055 ;;		line 16 in file "I2C.c"
  2056 ;; Parameters:    Size  Location     Type
  2057 ;;  c               4    6[BANK0 ] const unsigned long 
  2058 ;; Auto vars:     Size  Location     Type
  2059 ;;		None
  2060 ;; Return value:  Size  Location     Type
  2061 ;;                  1    wreg      void 
  2062 ;; Registers used:
  2063 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2064 ;; Tracked objects:
  2065 ;;		On entry : 0/0
  2066 ;;		On exit  : 0/0
  2067 ;;		Unchanged: 0/0
  2068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2069 ;;      Params:         0       4       0       0       0
  2070 ;;      Locals:         0       0       0       0       0
  2071 ;;      Temps:          0       4       0       0       0
  2072 ;;      Totals:         0       8       0       0       0
  2073 ;;Total ram usage:        8 bytes
  2074 ;; Hardware stack levels used: 1
  2075 ;; Hardware stack levels required when called: 3
  2076 ;; This function calls:
  2077 ;;		___lldiv
  2078 ;; This function is called by:
  2079 ;;		_setup
  2080 ;; This function uses a non-reentrant model
  2081 ;;
  2082                           
  2083     0F4A                     _I2C_Master_Init:	
  2084                           ;psect for function _I2C_Master_Init
  2085                           
  2086     0F4A                     l2065:	
  2087                           ;incstack = 0
  2088                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2089                           
  2090                           
  2091                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2092     0F4A  3028               	movlw	40
  2093     0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  2094     0F4C  1303               	bcf	3,6	;RP1=0, select bank0
  2095     0F4D  0094               	movwf	20	;volatile
  2096     0F4E                     l2067:
  2097                           
  2098                           ;I2C.c: 19:     SSPCON2 = 0;
  2099     0F4E  1683               	bsf	3,5	;RP0=1, select bank1
  2100     0F4F  1303               	bcf	3,6	;RP1=0, select bank1
  2101     0F50  0191               	clrf	17	;volatile
  2102     0F51                     l2069:
  2103                           
  2104                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  2105     0F51  1283               	bcf	3,5	;RP0=0, select bank0
  2106     0F52  1303               	bcf	3,6	;RP1=0, select bank0
  2107     0F53  0826               	movf	I2C_Master_Init@c,w
  2108     0F54  00AA               	movwf	??_I2C_Master_Init
  2109     0F55  0827               	movf	I2C_Master_Init@c+1,w
  2110     0F56  00AB               	movwf	??_I2C_Master_Init+1
  2111     0F57  0828               	movf	I2C_Master_Init@c+2,w
  2112     0F58  00AC               	movwf	??_I2C_Master_Init+2
  2113     0F59  0829               	movf	I2C_Master_Init@c+3,w
  2114     0F5A  00AD               	movwf	??_I2C_Master_Init+3
  2115     0F5B  3002               	movlw	2
  2116     0F5C                     u1575:
  2117     0F5C  1003               	clrc
  2118     0F5D  0DAA               	rlf	??_I2C_Master_Init,f
  2119     0F5E  0DAB               	rlf	??_I2C_Master_Init+1,f
  2120     0F5F  0DAC               	rlf	??_I2C_Master_Init+2,f
  2121     0F60  0DAD               	rlf	??_I2C_Master_Init+3,f
  2122     0F61                     u1570:
  2123     0F61  3EFF               	addlw	-1
  2124     0F62  1D03               	skipz
  2125     0F63  2F5C               	goto	u1575
  2126     0F64  082D               	movf	??_I2C_Master_Init+3,w
  2127     0F65  00F5               	movwf	___lldiv@divisor+3
  2128     0F66  082C               	movf	??_I2C_Master_Init+2,w
  2129     0F67  00F4               	movwf	___lldiv@divisor+2
  2130     0F68  082B               	movf	??_I2C_Master_Init+1,w
  2131     0F69  00F3               	movwf	___lldiv@divisor+1
  2132     0F6A  082A               	movf	??_I2C_Master_Init,w
  2133     0F6B  00F2               	movwf	___lldiv@divisor
  2134     0F6C  3000               	movlw	0
  2135     0F6D  00F9               	movwf	___lldiv@dividend+3
  2136     0F6E  307A               	movlw	122
  2137     0F6F  00F8               	movwf	___lldiv@dividend+2
  2138     0F70  3012               	movlw	18
  2139     0F71  00F7               	movwf	___lldiv@dividend+1
  2140     0F72  3000               	movlw	0
  2141     0F73  00F6               	movwf	___lldiv@dividend
  2142     0F74  120A  118A  2346  120A  158A  	fcall	___lldiv
  2143     0F79  0872               	movf	?___lldiv,w
  2144     0F7A  3EFF               	addlw	255
  2145     0F7B  1683               	bsf	3,5	;RP0=1, select bank1
  2146     0F7C  1303               	bcf	3,6	;RP1=0, select bank1
  2147     0F7D  0093               	movwf	19	;volatile
  2148     0F7E                     l2071:
  2149                           
  2150                           ;I2C.c: 21:     SSPSTAT = 0;
  2151     0F7E  0194               	clrf	20	;volatile
  2152     0F7F                     l2073:
  2153                           
  2154                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2155     0F7F  1587               	bsf	7,3	;volatile
  2156     0F80                     l2075:
  2157                           
  2158                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2159     0F80  1607               	bsf	7,4	;volatile
  2160     0F81                     l177:
  2161     0F81  0008               	return
  2162     0F82                     __end_of_I2C_Master_Init:
  2163                           
  2164                           	psect	text7
  2165     0346                     __ptext7:	
  2166 ;; *************** function ___lldiv *****************
  2167 ;; Defined at:
  2168 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;  divisor         4    2[COMMON] unsigned long 
  2171 ;;  dividend        4    6[COMMON] unsigned long 
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;  quotient        4    1[BANK0 ] unsigned long 
  2174 ;;  counter         1    5[BANK0 ] unsigned char 
  2175 ;; Return value:  Size  Location     Type
  2176 ;;                  4    2[COMMON] unsigned long 
  2177 ;; Registers used:
  2178 ;;		wreg, status,2, status,0, btemp+1
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2184 ;;      Params:         8       0       0       0       0
  2185 ;;      Locals:         0       5       0       0       0
  2186 ;;      Temps:          0       1       0       0       0
  2187 ;;      Totals:         8       6       0       0       0
  2188 ;;Total ram usage:       14 bytes
  2189 ;; Hardware stack levels used: 1
  2190 ;; Hardware stack levels required when called: 2
  2191 ;; This function calls:
  2192 ;;		Nothing
  2193 ;; This function is called by:
  2194 ;;		_I2C_Master_Init
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198     0346                     ___lldiv:	
  2199                           ;psect for function ___lldiv
  2200                           
  2201     0346                     l1987:	
  2202                           ;incstack = 0
  2203                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  2204                           
  2205     0346  3000               	movlw	0
  2206     0347  1283               	bcf	3,5	;RP0=0, select bank0
  2207     0348  1303               	bcf	3,6	;RP1=0, select bank0
  2208     0349  00A4               	movwf	___lldiv@quotient+3
  2209     034A  3000               	movlw	0
  2210     034B  00A3               	movwf	___lldiv@quotient+2
  2211     034C  3000               	movlw	0
  2212     034D  00A2               	movwf	___lldiv@quotient+1
  2213     034E  3000               	movlw	0
  2214     034F  00A1               	movwf	___lldiv@quotient
  2215     0350  0875               	movf	___lldiv@divisor+3,w
  2216     0351  0474               	iorwf	___lldiv@divisor+2,w
  2217     0352  0473               	iorwf	___lldiv@divisor+1,w
  2218     0353  0472               	iorwf	___lldiv@divisor,w
  2219     0354  1903               	skipnz
  2220     0355  2B57               	goto	u1401
  2221     0356  2B58               	goto	u1400
  2222     0357                     u1401:
  2223     0357  2BA5               	goto	l2009
  2224     0358                     u1400:
  2225     0358                     l1989:
  2226     0358  01A5               	clrf	___lldiv@counter
  2227     0359  0AA5               	incf	___lldiv@counter,f
  2228     035A  2B68               	goto	l1995
  2229     035B                     l1991:
  2230     035B  3001               	movlw	1
  2231     035C  00A0               	movwf	??___lldiv
  2232     035D                     u1415:
  2233     035D  1003               	clrc
  2234     035E  0DF2               	rlf	___lldiv@divisor,f
  2235     035F  0DF3               	rlf	___lldiv@divisor+1,f
  2236     0360  0DF4               	rlf	___lldiv@divisor+2,f
  2237     0361  0DF5               	rlf	___lldiv@divisor+3,f
  2238     0362  0BA0               	decfsz	??___lldiv,f
  2239     0363  2B5D               	goto	u1415
  2240     0364                     l1993:
  2241     0364  3001               	movlw	1
  2242     0365  00FF               	movwf	btemp+1
  2243     0366  087F               	movf	btemp+1,w
  2244     0367  07A5               	addwf	___lldiv@counter,f
  2245     0368                     l1995:
  2246     0368  1FF5               	btfss	___lldiv@divisor+3,7
  2247     0369  2B6B               	goto	u1421
  2248     036A  2B6C               	goto	u1420
  2249     036B                     u1421:
  2250     036B  2B5B               	goto	l1991
  2251     036C                     u1420:
  2252     036C                     l1997:
  2253     036C  3001               	movlw	1
  2254     036D  00A0               	movwf	??___lldiv
  2255     036E                     u1435:
  2256     036E  1003               	clrc
  2257     036F  0DA1               	rlf	___lldiv@quotient,f
  2258     0370  0DA2               	rlf	___lldiv@quotient+1,f
  2259     0371  0DA3               	rlf	___lldiv@quotient+2,f
  2260     0372  0DA4               	rlf	___lldiv@quotient+3,f
  2261     0373  0BA0               	decfsz	??___lldiv,f
  2262     0374  2B6E               	goto	u1435
  2263     0375                     l1999:
  2264     0375  0875               	movf	___lldiv@divisor+3,w
  2265     0376  0279               	subwf	___lldiv@dividend+3,w
  2266     0377  1D03               	skipz
  2267     0378  2B83               	goto	u1445
  2268     0379  0874               	movf	___lldiv@divisor+2,w
  2269     037A  0278               	subwf	___lldiv@dividend+2,w
  2270     037B  1D03               	skipz
  2271     037C  2B83               	goto	u1445
  2272     037D  0873               	movf	___lldiv@divisor+1,w
  2273     037E  0277               	subwf	___lldiv@dividend+1,w
  2274     037F  1D03               	skipz
  2275     0380  2B83               	goto	u1445
  2276     0381  0872               	movf	___lldiv@divisor,w
  2277     0382  0276               	subwf	___lldiv@dividend,w
  2278     0383                     u1445:
  2279     0383  1C03               	skipc
  2280     0384  2B86               	goto	u1441
  2281     0385  2B87               	goto	u1440
  2282     0386                     u1441:
  2283     0386  2B96               	goto	l2005
  2284     0387                     u1440:
  2285     0387                     l2001:
  2286     0387  0872               	movf	___lldiv@divisor,w
  2287     0388  02F6               	subwf	___lldiv@dividend,f
  2288     0389  0873               	movf	___lldiv@divisor+1,w
  2289     038A  1C03               	skipc
  2290     038B  0F73               	incfsz	___lldiv@divisor+1,w
  2291     038C  02F7               	subwf	___lldiv@dividend+1,f
  2292     038D  0874               	movf	___lldiv@divisor+2,w
  2293     038E  1C03               	skipc
  2294     038F  0F74               	incfsz	___lldiv@divisor+2,w
  2295     0390  02F8               	subwf	___lldiv@dividend+2,f
  2296     0391  0875               	movf	___lldiv@divisor+3,w
  2297     0392  1C03               	skipc
  2298     0393  0F75               	incfsz	___lldiv@divisor+3,w
  2299     0394  02F9               	subwf	___lldiv@dividend+3,f
  2300     0395                     l2003:
  2301     0395  1421               	bsf	___lldiv@quotient,0
  2302     0396                     l2005:
  2303     0396  3001               	movlw	1
  2304     0397                     u1455:
  2305     0397  1003               	clrc
  2306     0398  0CF5               	rrf	___lldiv@divisor+3,f
  2307     0399  0CF4               	rrf	___lldiv@divisor+2,f
  2308     039A  0CF3               	rrf	___lldiv@divisor+1,f
  2309     039B  0CF2               	rrf	___lldiv@divisor,f
  2310     039C  3EFF               	addlw	-1
  2311     039D  1D03               	skipz
  2312     039E  2B97               	goto	u1455
  2313     039F                     l2007:
  2314     039F  3001               	movlw	1
  2315     03A0  02A5               	subwf	___lldiv@counter,f
  2316     03A1  1D03               	btfss	3,2
  2317     03A2  2BA4               	goto	u1461
  2318     03A3  2BA5               	goto	u1460
  2319     03A4                     u1461:
  2320     03A4  2B6C               	goto	l1997
  2321     03A5                     u1460:
  2322     03A5                     l2009:
  2323     03A5  0824               	movf	___lldiv@quotient+3,w
  2324     03A6  00F5               	movwf	?___lldiv+3
  2325     03A7  0823               	movf	___lldiv@quotient+2,w
  2326     03A8  00F4               	movwf	?___lldiv+2
  2327     03A9  0822               	movf	___lldiv@quotient+1,w
  2328     03AA  00F3               	movwf	?___lldiv+1
  2329     03AB  0821               	movf	___lldiv@quotient,w
  2330     03AC  00F2               	movwf	?___lldiv
  2331     03AD                     l431:
  2332     03AD  0008               	return
  2333     03AE                     __end_of___lldiv:
  2334                           
  2335                           	psect	text8
  2336     059A                     __ptext8:	
  2337 ;; *************** function _sendDataUART *****************
  2338 ;; Defined at:
  2339 ;;		line 264 in file "master.c"
  2340 ;; Parameters:    Size  Location     Type
  2341 ;;		None
  2342 ;; Auto vars:     Size  Location     Type
  2343 ;;		None
  2344 ;; Return value:  Size  Location     Type
  2345 ;;                  1    wreg      void 
  2346 ;; Registers used:
  2347 ;;		wreg, status,2, status,0, pclath, cstack
  2348 ;; Tracked objects:
  2349 ;;		On entry : 0/0
  2350 ;;		On exit  : 0/0
  2351 ;;		Unchanged: 0/0
  2352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2353 ;;      Params:         0       0       0       0       0
  2354 ;;      Locals:         0       0       0       0       0
  2355 ;;      Temps:          3       0       0       0       0
  2356 ;;      Totals:         3       0       0       0       0
  2357 ;;Total ram usage:        3 bytes
  2358 ;; Hardware stack levels used: 1
  2359 ;; Hardware stack levels required when called: 3
  2360 ;; This function calls:
  2361 ;;		_UART_write_char
  2362 ;; This function is called by:
  2363 ;;		_main
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           
  2367     059A                     _sendDataUART:	
  2368                           ;psect for function _sendDataUART
  2369                           
  2370     059A                     l1873:	
  2371                           ;incstack = 0
  2372                           ; Regs used in _sendDataUART: [wreg+status,2+status,0+pclath+cstack]
  2373                           
  2374                           
  2375                           ;master.c: 266:     UART_write_char('\n');
  2376     059A  300A               	movlw	10
  2377     059B  120A  158A  267D  120A  118A  	fcall	_UART_write_char
  2378                           
  2379                           ;master.c: 267:     UART_write_char(tempC);
  2380     05A0  087B               	movf	_tempC,w
  2381     05A1  120A  158A  267D  120A  118A  	fcall	_UART_write_char
  2382                           
  2383                           ;master.c: 268:     UART_write_char(' ');
  2384     05A6  3020               	movlw	32
  2385     05A7  120A  158A  267D  120A  118A  	fcall	_UART_write_char
  2386                           
  2387                           ;master.c: 269:     UART_write_char(n_hum);
  2388     05AC  1283               	bcf	3,5	;RP0=0, select bank0
  2389     05AD  1303               	bcf	3,6	;RP1=0, select bank0
  2390     05AE  0851               	movf	_n_hum,w
  2391     05AF  120A  158A  267D  120A  118A  	fcall	_UART_write_char
  2392                           
  2393                           ;master.c: 270:     UART_write_char(' ');
  2394     05B4  3020               	movlw	32
  2395     05B5  120A  158A  267D  120A  118A  	fcall	_UART_write_char
  2396                           
  2397                           ;master.c: 271:     UART_write_char((gasPPM & 0xFF00) >> 8);
  2398     05BA  1283               	bcf	3,5	;RP0=0, select bank0
  2399     05BB  1303               	bcf	3,6	;RP1=0, select bank0
  2400     05BC  084B               	movf	_gasPPM+1,w
  2401     05BD  120A  158A  267D  120A  118A  	fcall	_UART_write_char
  2402                           
  2403                           ;master.c: 272:     UART_write_char(gasPPM & 0x00FF);
  2404     05C2  1283               	bcf	3,5	;RP0=0, select bank0
  2405     05C3  1303               	bcf	3,6	;RP1=0, select bank0
  2406     05C4  084A               	movf	_gasPPM,w
  2407     05C5  120A  158A  267D  120A  118A  	fcall	_UART_write_char
  2408                           
  2409                           ;master.c: 273:     UART_write_char(' ');
  2410     05CA  3020               	movlw	32
  2411     05CB  120A  158A  267D  120A  118A  	fcall	_UART_write_char
  2412                           
  2413                           ;master.c: 274:     UART_write_char(n_ired);
  2414     05D0  1283               	bcf	3,5	;RP0=0, select bank0
  2415     05D1  1303               	bcf	3,6	;RP1=0, select bank0
  2416     05D2  084F               	movf	_n_ired,w
  2417     05D3  120A  158A  267D  120A  118A  	fcall	_UART_write_char
  2418                           
  2419                           ;master.c: 275:     UART_write_char(' ');
  2420     05D8  3020               	movlw	32
  2421     05D9  120A  158A  267D  120A  118A  	fcall	_UART_write_char
  2422     05DE                     l1875:
  2423                           
  2424                           ;master.c: 276:     _delay((unsigned long)((500)*(8000000/4000.0)));
  2425     05DE  3006               	movlw	6
  2426     05DF  00F5               	movwf	??_sendDataUART+2
  2427     05E0  3013               	movlw	19
  2428     05E1  00F4               	movwf	??_sendDataUART+1
  2429     05E2  30AD               	movlw	173
  2430     05E3  00F3               	movwf	??_sendDataUART
  2431     05E4                     u1777:
  2432     05E4  0BF3               	decfsz	??_sendDataUART,f
  2433     05E5  2DE4               	goto	u1777
  2434     05E6  0BF4               	decfsz	??_sendDataUART+1,f
  2435     05E7  2DE4               	goto	u1777
  2436     05E8  0BF5               	decfsz	??_sendDataUART+2,f
  2437     05E9  2DE4               	goto	u1777
  2438     05EA  2DEB               	nop2
  2439     05EB                     l137:
  2440     05EB  0008               	return
  2441     05EC                     __end_of_sendDataUART:
  2442                           
  2443                           	psect	text9
  2444     0E7D                     __ptext9:	
  2445 ;; *************** function _UART_write_char *****************
  2446 ;; Defined at:
  2447 ;;		line 42 in file "UART.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;  c               1    wreg     unsigned char 
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;  c               1    2[COMMON] unsigned char 
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  1    wreg      void 
  2454 ;; Registers used:
  2455 ;;		wreg
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2461 ;;      Params:         0       0       0       0       0
  2462 ;;      Locals:         1       0       0       0       0
  2463 ;;      Temps:          0       0       0       0       0
  2464 ;;      Totals:         1       0       0       0       0
  2465 ;;Total ram usage:        1 bytes
  2466 ;; Hardware stack levels used: 1
  2467 ;; Hardware stack levels required when called: 2
  2468 ;; This function calls:
  2469 ;;		Nothing
  2470 ;; This function is called by:
  2471 ;;		_sendDataUART
  2472 ;;		_UART_write_string
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476     0E7D                     _UART_write_char:	
  2477                           ;psect for function _UART_write_char
  2478                           
  2479                           
  2480                           ;incstack = 0
  2481                           ; Regs used in _UART_write_char: [wreg]
  2482                           ;UART_write_char@c stored from wreg
  2483     0E7D  00F2               	movwf	UART_write_char@c
  2484     0E7E                     l1741:
  2485     0E7E                     l297:	
  2486                           ;UART.c: 43:     while(!TXIF);
  2487                           
  2488     0E7E  1283               	bcf	3,5	;RP0=0, select bank0
  2489     0E7F  1303               	bcf	3,6	;RP1=0, select bank0
  2490     0E80  1E0C               	btfss	12,4	;volatile
  2491     0E81  2E83               	goto	u1251
  2492     0E82  2E84               	goto	u1250
  2493     0E83                     u1251:
  2494     0E83  2E7E               	goto	l297
  2495     0E84                     u1250:
  2496     0E84                     l299:
  2497                           
  2498                           ;UART.c: 44:     TXIF = 0;
  2499     0E84  120C               	bcf	12,4	;volatile
  2500     0E85                     l1743:
  2501                           
  2502                           ;UART.c: 45:     TXREG = c;
  2503     0E85  0872               	movf	UART_write_char@c,w
  2504     0E86  0099               	movwf	25	;volatile
  2505     0E87                     l300:
  2506     0E87  0008               	return
  2507     0E88                     __end_of_UART_write_char:
  2508                           
  2509                           	psect	text10
  2510     0479                     __ptext10:	
  2511 ;; *************** function _requestTemp *****************
  2512 ;; Defined at:
  2513 ;;		line 146 in file "master.c"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;		None
  2516 ;; Auto vars:     Size  Location     Type
  2517 ;;		None
  2518 ;; Return value:  Size  Location     Type
  2519 ;;                  1    wreg      void 
  2520 ;; Registers used:
  2521 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2522 ;; Tracked objects:
  2523 ;;		On entry : 0/0
  2524 ;;		On exit  : 0/0
  2525 ;;		Unchanged: 0/0
  2526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2527 ;;      Params:         0       0       0       0       0
  2528 ;;      Locals:         0       0       0       0       0
  2529 ;;      Temps:          0       2       0       0       0
  2530 ;;      Totals:         0       2       0       0       0
  2531 ;;Total ram usage:        2 bytes
  2532 ;; Hardware stack levels used: 1
  2533 ;; Hardware stack levels required when called: 4
  2534 ;; This function calls:
  2535 ;;		_I2C_Master_Read
  2536 ;;		_I2C_Master_RepeatedStart
  2537 ;;		_I2C_Master_Start
  2538 ;;		_I2C_Master_Stop
  2539 ;;		_I2C_Master_Write
  2540 ;;		_map
  2541 ;; This function is called by:
  2542 ;;		_main
  2543 ;; This function uses a non-reentrant model
  2544 ;;
  2545                           
  2546     0479                     _requestTemp:	
  2547                           ;psect for function _requestTemp
  2548                           
  2549     0479                     l2163:	
  2550                           ;incstack = 0
  2551                           ; Regs used in _requestTemp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2552                           
  2553                           
  2554                           ;master.c: 148:     I2C_Master_Start();
  2555     0479  120A  158A  2661  120A  118A  	fcall	_I2C_Master_Start
  2556                           
  2557                           ;master.c: 149:     I2C_Master_Write(0x20 +0);
  2558     047E  3020               	movlw	32
  2559     047F  00F2               	movwf	I2C_Master_Write@d
  2560     0480  3000               	movlw	0
  2561     0481  00F3               	movwf	I2C_Master_Write@d+1
  2562     0482  120A  158A  2673  120A  118A  	fcall	_I2C_Master_Write
  2563                           
  2564                           ;master.c: 150:     I2C_Master_Write('T');
  2565     0487  3054               	movlw	84
  2566     0488  00F2               	movwf	I2C_Master_Write@d
  2567     0489  3000               	movlw	0
  2568     048A  00F3               	movwf	I2C_Master_Write@d+1
  2569     048B  120A  158A  2673  120A  118A  	fcall	_I2C_Master_Write
  2570     0490                     l2165:
  2571                           
  2572                           ;master.c: 151:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2573     0490  3034               	movlw	52
  2574     0491  1283               	bcf	3,5	;RP0=0, select bank0
  2575     0492  1303               	bcf	3,6	;RP1=0, select bank0
  2576     0493  00C5               	movwf	??_requestTemp+1
  2577     0494  30F1               	movlw	241
  2578     0495  00C4               	movwf	??_requestTemp
  2579     0496                     u1787:
  2580     0496  0BC4               	decfsz	??_requestTemp,f
  2581     0497  2C96               	goto	u1787
  2582     0498  0BC5               	decfsz	??_requestTemp+1,f
  2583     0499  2C96               	goto	u1787
  2584     049A                     l2167:
  2585                           
  2586                           ;master.c: 152:     I2C_Master_RepeatedStart();
  2587     049A  120A  158A  2658  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2588     049F                     l2169:
  2589                           
  2590                           ;master.c: 153:     I2C_Master_Write(0x20 +1);
  2591     049F  3021               	movlw	33
  2592     04A0  00F2               	movwf	I2C_Master_Write@d
  2593     04A1  3000               	movlw	0
  2594     04A2  00F3               	movwf	I2C_Master_Write@d+1
  2595     04A3  120A  158A  2673  120A  118A  	fcall	_I2C_Master_Write
  2596     04A8                     l2171:
  2597                           
  2598                           ;master.c: 154:     n_temp = I2C_Master_Read(0);
  2599     04A8  3000               	movlw	0
  2600     04A9  00F2               	movwf	I2C_Master_Read@a
  2601     04AA  00F3               	movwf	I2C_Master_Read@a+1
  2602     04AB  120A  158A  26E7  120A  118A  	fcall	_I2C_Master_Read
  2603     04B0  0872               	movf	?_I2C_Master_Read,w
  2604     04B1  1283               	bcf	3,5	;RP0=0, select bank0
  2605     04B2  1303               	bcf	3,6	;RP1=0, select bank0
  2606     04B3  00D2               	movwf	_n_temp
  2607     04B4                     l2173:
  2608                           
  2609                           ;master.c: 155:     I2C_Master_Stop();
  2610     04B4  120A  158A  266A  120A  118A  	fcall	_I2C_Master_Stop
  2611     04B9                     l2175:
  2612                           
  2613                           ;master.c: 156:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2614     04B9  3034               	movlw	52
  2615     04BA  1283               	bcf	3,5	;RP0=0, select bank0
  2616     04BB  1303               	bcf	3,6	;RP1=0, select bank0
  2617     04BC  00C5               	movwf	??_requestTemp+1
  2618     04BD  30F1               	movlw	241
  2619     04BE  00C4               	movwf	??_requestTemp
  2620     04BF                     u1797:
  2621     04BF  0BC4               	decfsz	??_requestTemp,f
  2622     04C0  2CBF               	goto	u1797
  2623     04C1  0BC5               	decfsz	??_requestTemp+1,f
  2624     04C2  2CBF               	goto	u1797
  2625     04C3                     l2177:
  2626                           
  2627                           ;master.c: 158:     tempC = map(n_temp,0,77,0,150);
  2628     04C3  1283               	bcf	3,5	;RP0=0, select bank0
  2629     04C4  1303               	bcf	3,6	;RP1=0, select bank0
  2630     04C5  01B4               	clrf	map@min1
  2631     04C6  304D               	movlw	77
  2632     04C7  00B5               	movwf	map@max1
  2633     04C8  01B6               	clrf	map@min2
  2634     04C9  3000               	movlw	0
  2635     04CA  00BA               	movwf	map@max2+3
  2636     04CB  3000               	movlw	0
  2637     04CC  00B9               	movwf	map@max2+2
  2638     04CD  3000               	movlw	0
  2639     04CE  00B8               	movwf	map@max2+1
  2640     04CF  3096               	movlw	150
  2641     04D0  00B7               	movwf	map@max2
  2642     04D1  0852               	movf	_n_temp,w
  2643     04D2  120A  118A  24DC  120A  118A  	fcall	_map
  2644     04D7  1283               	bcf	3,5	;RP0=0, select bank0
  2645     04D8  1303               	bcf	3,6	;RP1=0, select bank0
  2646     04D9  0834               	movf	?_map,w
  2647     04DA  00FB               	movwf	_tempC
  2648     04DB                     l111:
  2649     04DB  0008               	return
  2650     04DC                     __end_of_requestTemp:
  2651                           
  2652                           	psect	text11
  2653     06D1                     __ptext11:	
  2654 ;; *************** function _requestIR *****************
  2655 ;; Defined at:
  2656 ;;		line 189 in file "master.c"
  2657 ;; Parameters:    Size  Location     Type
  2658 ;;		None
  2659 ;; Auto vars:     Size  Location     Type
  2660 ;;		None
  2661 ;; Return value:  Size  Location     Type
  2662 ;;                  1    wreg      void 
  2663 ;; Registers used:
  2664 ;;		wreg, status,2, status,0, pclath, cstack
  2665 ;; Tracked objects:
  2666 ;;		On entry : 0/0
  2667 ;;		On exit  : 0/0
  2668 ;;		Unchanged: 0/0
  2669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2670 ;;      Params:         0       0       0       0       0
  2671 ;;      Locals:         0       0       0       0       0
  2672 ;;      Temps:          2       0       0       0       0
  2673 ;;      Totals:         2       0       0       0       0
  2674 ;;Total ram usage:        2 bytes
  2675 ;; Hardware stack levels used: 1
  2676 ;; Hardware stack levels required when called: 4
  2677 ;; This function calls:
  2678 ;;		_I2C_Master_Read
  2679 ;;		_I2C_Master_RepeatedStart
  2680 ;;		_I2C_Master_Start
  2681 ;;		_I2C_Master_Stop
  2682 ;;		_I2C_Master_Write
  2683 ;; This function is called by:
  2684 ;;		_main
  2685 ;; This function uses a non-reentrant model
  2686 ;;
  2687                           
  2688     06D1                     _requestIR:	
  2689                           ;psect for function _requestIR
  2690                           
  2691     06D1                     l1807:	
  2692                           ;incstack = 0
  2693                           ; Regs used in _requestIR: [wreg+status,2+status,0+pclath+cstack]
  2694                           
  2695                           
  2696                           ;master.c: 191:     I2C_Master_Start();
  2697     06D1  120A  158A  2661  120A  118A  	fcall	_I2C_Master_Start
  2698                           
  2699                           ;master.c: 192:     I2C_Master_Write(0x20 +0);
  2700     06D6  3020               	movlw	32
  2701     06D7  00F2               	movwf	I2C_Master_Write@d
  2702     06D8  3000               	movlw	0
  2703     06D9  00F3               	movwf	I2C_Master_Write@d+1
  2704     06DA  120A  158A  2673  120A  118A  	fcall	_I2C_Master_Write
  2705                           
  2706                           ;master.c: 193:     I2C_Master_Write('I');
  2707     06DF  3049               	movlw	73
  2708     06E0  00F2               	movwf	I2C_Master_Write@d
  2709     06E1  3000               	movlw	0
  2710     06E2  00F3               	movwf	I2C_Master_Write@d+1
  2711     06E3  120A  158A  2673  120A  118A  	fcall	_I2C_Master_Write
  2712     06E8                     l1809:
  2713                           
  2714                           ;master.c: 194:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2715     06E8  3034               	movlw	52
  2716     06E9  00F9               	movwf	??_requestIR+1
  2717     06EA  30F1               	movlw	241
  2718     06EB  00F8               	movwf	??_requestIR
  2719     06EC                     u1807:
  2720     06EC  0BF8               	decfsz	??_requestIR,f
  2721     06ED  2EEC               	goto	u1807
  2722     06EE  0BF9               	decfsz	??_requestIR+1,f
  2723     06EF  2EEC               	goto	u1807
  2724     06F0  2EF1               	nop2
  2725     06F1                     l1811:
  2726                           
  2727                           ;master.c: 195:     I2C_Master_RepeatedStart();
  2728     06F1  120A  158A  2658  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2729     06F6                     l1813:
  2730                           
  2731                           ;master.c: 196:     I2C_Master_Write(0x20 +1);
  2732     06F6  3021               	movlw	33
  2733     06F7  00F2               	movwf	I2C_Master_Write@d
  2734     06F8  3000               	movlw	0
  2735     06F9  00F3               	movwf	I2C_Master_Write@d+1
  2736     06FA  120A  158A  2673  120A  118A  	fcall	_I2C_Master_Write
  2737     06FF                     l1815:
  2738                           
  2739                           ;master.c: 197:     n_ired = I2C_Master_Read(0);
  2740     06FF  3000               	movlw	0
  2741     0700  00F2               	movwf	I2C_Master_Read@a
  2742     0701  00F3               	movwf	I2C_Master_Read@a+1
  2743     0702  120A  158A  26E7  120A  118A  	fcall	_I2C_Master_Read
  2744     0707  0872               	movf	?_I2C_Master_Read,w
  2745     0708  1283               	bcf	3,5	;RP0=0, select bank0
  2746     0709  1303               	bcf	3,6	;RP1=0, select bank0
  2747     070A  00CF               	movwf	_n_ired
  2748     070B                     l1817:
  2749                           
  2750                           ;master.c: 198:     I2C_Master_Stop();
  2751     070B  120A  158A  266A  120A  118A  	fcall	_I2C_Master_Stop
  2752     0710                     l1819:
  2753                           
  2754                           ;master.c: 199:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2755     0710  3034               	movlw	52
  2756     0711  00F9               	movwf	??_requestIR+1
  2757     0712  30F1               	movlw	241
  2758     0713  00F8               	movwf	??_requestIR
  2759     0714                     u1817:
  2760     0714  0BF8               	decfsz	??_requestIR,f
  2761     0715  2F14               	goto	u1817
  2762     0716  0BF9               	decfsz	??_requestIR+1,f
  2763     0717  2F14               	goto	u1817
  2764     0718  2F19               	nop2
  2765     0719                     l120:
  2766     0719  0008               	return
  2767     071A                     __end_of_requestIR:
  2768                           
  2769                           	psect	text12
  2770     071A                     __ptext12:	
  2771 ;; *************** function _requestHum *****************
  2772 ;; Defined at:
  2773 ;;		line 161 in file "master.c"
  2774 ;; Parameters:    Size  Location     Type
  2775 ;;		None
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;		None
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  1    wreg      void 
  2780 ;; Registers used:
  2781 ;;		wreg, status,2, status,0, pclath, cstack
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2787 ;;      Params:         0       0       0       0       0
  2788 ;;      Locals:         0       0       0       0       0
  2789 ;;      Temps:          2       0       0       0       0
  2790 ;;      Totals:         2       0       0       0       0
  2791 ;;Total ram usage:        2 bytes
  2792 ;; Hardware stack levels used: 1
  2793 ;; Hardware stack levels required when called: 4
  2794 ;; This function calls:
  2795 ;;		_I2C_Master_Read
  2796 ;;		_I2C_Master_RepeatedStart
  2797 ;;		_I2C_Master_Start
  2798 ;;		_I2C_Master_Stop
  2799 ;;		_I2C_Master_Write
  2800 ;; This function is called by:
  2801 ;;		_main
  2802 ;; This function uses a non-reentrant model
  2803 ;;
  2804                           
  2805     071A                     _requestHum:	
  2806                           ;psect for function _requestHum
  2807                           
  2808     071A                     l1761:	
  2809                           ;incstack = 0
  2810                           ; Regs used in _requestHum: [wreg+status,2+status,0+pclath+cstack]
  2811                           
  2812                           
  2813                           ;master.c: 163:     I2C_Master_Start();
  2814     071A  120A  158A  2661  120A  118A  	fcall	_I2C_Master_Start
  2815                           
  2816                           ;master.c: 164:     I2C_Master_Write(0x10 +0);
  2817     071F  3010               	movlw	16
  2818     0720  00F2               	movwf	I2C_Master_Write@d
  2819     0721  3000               	movlw	0
  2820     0722  00F3               	movwf	I2C_Master_Write@d+1
  2821     0723  120A  158A  2673  120A  118A  	fcall	_I2C_Master_Write
  2822                           
  2823                           ;master.c: 165:     I2C_Master_Write('H');
  2824     0728  3048               	movlw	72
  2825     0729  00F2               	movwf	I2C_Master_Write@d
  2826     072A  3000               	movlw	0
  2827     072B  00F3               	movwf	I2C_Master_Write@d+1
  2828     072C  120A  158A  2673  120A  118A  	fcall	_I2C_Master_Write
  2829     0731                     l1763:
  2830                           
  2831                           ;master.c: 166:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2832     0731  3034               	movlw	52
  2833     0732  00F9               	movwf	??_requestHum+1
  2834     0733  30F1               	movlw	241
  2835     0734  00F8               	movwf	??_requestHum
  2836     0735                     u1827:
  2837     0735  0BF8               	decfsz	??_requestHum,f
  2838     0736  2F35               	goto	u1827
  2839     0737  0BF9               	decfsz	??_requestHum+1,f
  2840     0738  2F35               	goto	u1827
  2841     0739  2F3A               	nop2
  2842     073A                     l1765:
  2843                           
  2844                           ;master.c: 167:     I2C_Master_RepeatedStart();
  2845     073A  120A  158A  2658  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2846     073F                     l1767:
  2847                           
  2848                           ;master.c: 168:     I2C_Master_Write(0x10 +1);
  2849     073F  3011               	movlw	17
  2850     0740  00F2               	movwf	I2C_Master_Write@d
  2851     0741  3000               	movlw	0
  2852     0742  00F3               	movwf	I2C_Master_Write@d+1
  2853     0743  120A  158A  2673  120A  118A  	fcall	_I2C_Master_Write
  2854     0748                     l1769:
  2855                           
  2856                           ;master.c: 169:     n_hum = I2C_Master_Read(0);
  2857     0748  3000               	movlw	0
  2858     0749  00F2               	movwf	I2C_Master_Read@a
  2859     074A  00F3               	movwf	I2C_Master_Read@a+1
  2860     074B  120A  158A  26E7  120A  118A  	fcall	_I2C_Master_Read
  2861     0750  0872               	movf	?_I2C_Master_Read,w
  2862     0751  1283               	bcf	3,5	;RP0=0, select bank0
  2863     0752  1303               	bcf	3,6	;RP1=0, select bank0
  2864     0753  00D1               	movwf	_n_hum
  2865     0754                     l1771:
  2866                           
  2867                           ;master.c: 170:     I2C_Master_Stop();
  2868     0754  120A  158A  266A  120A  118A  	fcall	_I2C_Master_Stop
  2869     0759                     l1773:
  2870                           
  2871                           ;master.c: 171:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2872     0759  3034               	movlw	52
  2873     075A  00F9               	movwf	??_requestHum+1
  2874     075B  30F1               	movlw	241
  2875     075C  00F8               	movwf	??_requestHum
  2876     075D                     u1837:
  2877     075D  0BF8               	decfsz	??_requestHum,f
  2878     075E  2F5D               	goto	u1837
  2879     075F  0BF9               	decfsz	??_requestHum+1,f
  2880     0760  2F5D               	goto	u1837
  2881     0761  2F62               	nop2
  2882     0762                     l114:
  2883     0762  0008               	return
  2884     0763                     __end_of_requestHum:
  2885                           
  2886                           	psect	text13
  2887     03AE                     __ptext13:	
  2888 ;; *************** function _requestGas *****************
  2889 ;; Defined at:
  2890 ;;		line 174 in file "master.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;		None
  2893 ;; Auto vars:     Size  Location     Type
  2894 ;;		None
  2895 ;; Return value:  Size  Location     Type
  2896 ;;                  1    wreg      void 
  2897 ;; Registers used:
  2898 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2899 ;; Tracked objects:
  2900 ;;		On entry : 0/0
  2901 ;;		On exit  : 0/0
  2902 ;;		Unchanged: 0/0
  2903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2904 ;;      Params:         0       0       0       0       0
  2905 ;;      Locals:         0       0       0       0       0
  2906 ;;      Temps:          0       2       0       0       0
  2907 ;;      Totals:         0       2       0       0       0
  2908 ;;Total ram usage:        2 bytes
  2909 ;; Hardware stack levels used: 1
  2910 ;; Hardware stack levels required when called: 4
  2911 ;; This function calls:
  2912 ;;		_I2C_Master_Read
  2913 ;;		_I2C_Master_RepeatedStart
  2914 ;;		_I2C_Master_Start
  2915 ;;		_I2C_Master_Stop
  2916 ;;		_I2C_Master_Write
  2917 ;;		_map
  2918 ;; This function is called by:
  2919 ;;		_main
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923     03AE                     _requestGas:	
  2924                           ;psect for function _requestGas
  2925                           
  2926     03AE                     l2179:	
  2927                           ;incstack = 0
  2928                           ; Regs used in _requestGas: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2929                           
  2930                           
  2931                           ;master.c: 176:     I2C_Master_Start();
  2932     03AE  120A  158A  2661  120A  118A  	fcall	_I2C_Master_Start
  2933                           
  2934                           ;master.c: 177:     I2C_Master_Write(0x20 +0);
  2935     03B3  3020               	movlw	32
  2936     03B4  00F2               	movwf	I2C_Master_Write@d
  2937     03B5  3000               	movlw	0
  2938     03B6  00F3               	movwf	I2C_Master_Write@d+1
  2939     03B7  120A  158A  2673  120A  118A  	fcall	_I2C_Master_Write
  2940                           
  2941                           ;master.c: 178:     I2C_Master_Write('G');
  2942     03BC  3047               	movlw	71
  2943     03BD  00F2               	movwf	I2C_Master_Write@d
  2944     03BE  3000               	movlw	0
  2945     03BF  00F3               	movwf	I2C_Master_Write@d+1
  2946     03C0  120A  158A  2673  120A  118A  	fcall	_I2C_Master_Write
  2947     03C5                     l2181:
  2948                           
  2949                           ;master.c: 179:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2950     03C5  3034               	movlw	52
  2951     03C6  1283               	bcf	3,5	;RP0=0, select bank0
  2952     03C7  1303               	bcf	3,6	;RP1=0, select bank0
  2953     03C8  00C5               	movwf	??_requestGas+1
  2954     03C9  30F1               	movlw	241
  2955     03CA  00C4               	movwf	??_requestGas
  2956     03CB                     u1847:
  2957     03CB  0BC4               	decfsz	??_requestGas,f
  2958     03CC  2BCB               	goto	u1847
  2959     03CD  0BC5               	decfsz	??_requestGas+1,f
  2960     03CE  2BCB               	goto	u1847
  2961     03CF                     l2183:
  2962                           
  2963                           ;master.c: 180:     I2C_Master_RepeatedStart();
  2964     03CF  120A  158A  2658  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2965     03D4                     l2185:
  2966                           
  2967                           ;master.c: 181:     I2C_Master_Write(0x20 +1);
  2968     03D4  3021               	movlw	33
  2969     03D5  00F2               	movwf	I2C_Master_Write@d
  2970     03D6  3000               	movlw	0
  2971     03D7  00F3               	movwf	I2C_Master_Write@d+1
  2972     03D8  120A  158A  2673  120A  118A  	fcall	_I2C_Master_Write
  2973     03DD                     l2187:
  2974                           
  2975                           ;master.c: 182:     n_gas = I2C_Master_Read(0);
  2976     03DD  3000               	movlw	0
  2977     03DE  00F2               	movwf	I2C_Master_Read@a
  2978     03DF  00F3               	movwf	I2C_Master_Read@a+1
  2979     03E0  120A  158A  26E7  120A  118A  	fcall	_I2C_Master_Read
  2980     03E5  0872               	movf	?_I2C_Master_Read,w
  2981     03E6  1283               	bcf	3,5	;RP0=0, select bank0
  2982     03E7  1303               	bcf	3,6	;RP1=0, select bank0
  2983     03E8  00D0               	movwf	_n_gas
  2984     03E9                     l2189:
  2985                           
  2986                           ;master.c: 183:     I2C_Master_Stop();
  2987     03E9  120A  158A  266A  120A  118A  	fcall	_I2C_Master_Stop
  2988     03EE                     l2191:
  2989                           
  2990                           ;master.c: 184:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2991     03EE  3034               	movlw	52
  2992     03EF  1283               	bcf	3,5	;RP0=0, select bank0
  2993     03F0  1303               	bcf	3,6	;RP1=0, select bank0
  2994     03F1  00C5               	movwf	??_requestGas+1
  2995     03F2  30F1               	movlw	241
  2996     03F3  00C4               	movwf	??_requestGas
  2997     03F4                     u1857:
  2998     03F4  0BC4               	decfsz	??_requestGas,f
  2999     03F5  2BF4               	goto	u1857
  3000     03F6  0BC5               	decfsz	??_requestGas+1,f
  3001     03F7  2BF4               	goto	u1857
  3002     03F8                     l2193:
  3003                           
  3004                           ;master.c: 186:     gasPPM = map(n_gas,0,255,100,800);
  3005     03F8  1283               	bcf	3,5	;RP0=0, select bank0
  3006     03F9  1303               	bcf	3,6	;RP1=0, select bank0
  3007     03FA  01B4               	clrf	map@min1
  3008     03FB  30FF               	movlw	255
  3009     03FC  00B5               	movwf	map@max1
  3010     03FD  3064               	movlw	100
  3011     03FE  00B6               	movwf	map@min2
  3012     03FF  3000               	movlw	0
  3013     0400  00BA               	movwf	map@max2+3
  3014     0401  3000               	movlw	0
  3015     0402  00B9               	movwf	map@max2+2
  3016     0403  3003               	movlw	3
  3017     0404  00B8               	movwf	map@max2+1
  3018     0405  3020               	movlw	32
  3019     0406  00B7               	movwf	map@max2
  3020     0407  0850               	movf	_n_gas,w
  3021     0408  120A  118A  24DC  120A  118A  	fcall	_map
  3022     040D  1283               	bcf	3,5	;RP0=0, select bank0
  3023     040E  1303               	bcf	3,6	;RP1=0, select bank0
  3024     040F  0835               	movf	?_map+1,w
  3025     0410  00CB               	movwf	_gasPPM+1
  3026     0411  0834               	movf	?_map,w
  3027     0412  00CA               	movwf	_gasPPM
  3028     0413                     l117:
  3029     0413  0008               	return
  3030     0414                     __end_of_requestGas:
  3031                           
  3032                           	psect	text14
  3033     04DC                     __ptext14:	
  3034 ;; *************** function _map *****************
  3035 ;; Defined at:
  3036 ;;		line 303 in file "master.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;  val             1    wreg     unsigned char 
  3039 ;;  min1            1   20[BANK0 ] unsigned char 
  3040 ;;  max1            1   21[BANK0 ] unsigned char 
  3041 ;;  min2            1   22[BANK0 ] unsigned char 
  3042 ;;  max2            4   23[BANK0 ] long 
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;  val             1   35[BANK0 ] unsigned char 
  3045 ;; Return value:  Size  Location     Type
  3046 ;;                  2   20[BANK0 ] unsigned int 
  3047 ;; Registers used:
  3048 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3054 ;;      Params:         0       7       0       0       0
  3055 ;;      Locals:         0       1       0       0       0
  3056 ;;      Temps:          0       8       0       0       0
  3057 ;;      Totals:         0      16       0       0       0
  3058 ;;Total ram usage:       16 bytes
  3059 ;; Hardware stack levels used: 1
  3060 ;; Hardware stack levels required when called: 3
  3061 ;; This function calls:
  3062 ;;		___aldiv
  3063 ;;		___lmul
  3064 ;; This function is called by:
  3065 ;;		_requestTemp
  3066 ;;		_requestGas
  3067 ;; This function uses a non-reentrant model
  3068 ;;
  3069                           
  3070     04DC                     _map:	
  3071                           ;psect for function _map
  3072                           
  3073                           
  3074                           ;incstack = 0
  3075                           ; Regs used in _map: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3076                           ;map@val stored from wreg
  3077     04DC  1283               	bcf	3,5	;RP0=0, select bank0
  3078     04DD  1303               	bcf	3,6	;RP1=0, select bank0
  3079     04DE  00C3               	movwf	map@val
  3080     04DF                     l2113:
  3081                           
  3082                           ;master.c: 304:     return ((val-min1)*(max2-min2)/(max1-min1))+min2;
  3083     04DF  0834               	movf	map@min1,w
  3084     04E0  0235               	subwf	map@max1,w
  3085     04E1  00A5               	movwf	___aldiv@divisor
  3086     04E2  01A6               	clrf	___aldiv@divisor+1
  3087     04E3  1C03               	skipc
  3088     04E4  03A6               	decf	___aldiv@divisor+1,f
  3089     04E5  01A7               	clrf	___aldiv@divisor+2
  3090     04E6  1BA6               	btfsc	___aldiv@divisor+1,7
  3091     04E7  03A7               	decf	___aldiv@divisor+2,f
  3092     04E8  0827               	movf	___aldiv@divisor+2,w
  3093     04E9  00A8               	movwf	___aldiv@divisor+3
  3094     04EA  0834               	movf	map@min1,w
  3095     04EB  0243               	subwf	map@val,w
  3096     04EC  00F2               	movwf	___lmul@multiplier
  3097     04ED  01F3               	clrf	___lmul@multiplier+1
  3098     04EE  1C03               	skipc
  3099     04EF  03F3               	decf	___lmul@multiplier+1,f
  3100     04F0  01F4               	clrf	___lmul@multiplier+2
  3101     04F1  1BF3               	btfsc	___lmul@multiplier+1,7
  3102     04F2  03F4               	decf	___lmul@multiplier+2,f
  3103     04F3  0874               	movf	___lmul@multiplier+2,w
  3104     04F4  00F5               	movwf	___lmul@multiplier+3
  3105     04F5  0836               	movf	map@min2,w
  3106     04F6  00BB               	movwf	??_map
  3107     04F7  01BC               	clrf	??_map+1
  3108     04F8  01BD               	clrf	??_map+2
  3109     04F9  01BE               	clrf	??_map+3
  3110     04FA  0837               	movf	map@max2,w
  3111     04FB  00BF               	movwf	??_map+4
  3112     04FC  0838               	movf	map@max2+1,w
  3113     04FD  00C0               	movwf	??_map+5
  3114     04FE  0839               	movf	map@max2+2,w
  3115     04FF  00C1               	movwf	??_map+6
  3116     0500  083A               	movf	map@max2+3,w
  3117     0501  00C2               	movwf	??_map+7
  3118     0502  083B               	movf	??_map,w
  3119     0503  02BF               	subwf	??_map+4,f
  3120     0504  083C               	movf	??_map+1,w
  3121     0505  1C03               	skipc
  3122     0506  0F3C               	incfsz	??_map+1,w
  3123     0507  2D09               	goto	u1621
  3124     0508  2D0A               	goto	u1622
  3125     0509                     u1621:
  3126     0509  02C0               	subwf	??_map+5,f
  3127     050A                     u1622:
  3128     050A  083D               	movf	??_map+2,w
  3129     050B  1C03               	skipc
  3130     050C  0F3D               	incfsz	??_map+2,w
  3131     050D  2D0F               	goto	u1623
  3132     050E  2D10               	goto	u1624
  3133     050F                     u1623:
  3134     050F  02C1               	subwf	??_map+6,f
  3135     0510                     u1624:
  3136     0510  083E               	movf	??_map+3,w
  3137     0511  1C03               	skipc
  3138     0512  0F3E               	incfsz	??_map+3,w
  3139     0513  2D15               	goto	u1625
  3140     0514  2D16               	goto	u1626
  3141     0515                     u1625:
  3142     0515  02C2               	subwf	??_map+7,f
  3143     0516                     u1626:
  3144     0516  0842               	movf	??_map+7,w
  3145     0517  00F9               	movwf	___lmul@multiplicand+3
  3146     0518  0841               	movf	??_map+6,w
  3147     0519  00F8               	movwf	___lmul@multiplicand+2
  3148     051A  0840               	movf	??_map+5,w
  3149     051B  00F7               	movwf	___lmul@multiplicand+1
  3150     051C  083F               	movf	??_map+4,w
  3151     051D  00F6               	movwf	___lmul@multiplicand
  3152     051E  120A  118A  2763  120A  118A  	fcall	___lmul
  3153     0523  0875               	movf	?___lmul+3,w
  3154     0524  1283               	bcf	3,5	;RP0=0, select bank0
  3155     0525  1303               	bcf	3,6	;RP1=0, select bank0
  3156     0526  00AC               	movwf	___aldiv@dividend+3
  3157     0527  0874               	movf	?___lmul+2,w
  3158     0528  00AB               	movwf	___aldiv@dividend+2
  3159     0529  0873               	movf	?___lmul+1,w
  3160     052A  00AA               	movwf	___aldiv@dividend+1
  3161     052B  0872               	movf	?___lmul,w
  3162     052C  00A9               	movwf	___aldiv@dividend
  3163     052D  120A  118A  21A5  120A  118A  	fcall	___aldiv
  3164     0532  1283               	bcf	3,5	;RP0=0, select bank0
  3165     0533  1303               	bcf	3,6	;RP1=0, select bank0
  3166     0534  0836               	movf	map@min2,w
  3167     0535  0725               	addwf	?___aldiv,w
  3168     0536  00B4               	movwf	?_map
  3169     0537  3000               	movlw	0
  3170     0538  1803               	skipnc
  3171     0539  3001               	movlw	1
  3172     053A  0726               	addwf	?___aldiv+1,w
  3173     053B  00B5               	movwf	?_map+1
  3174     053C                     l148:
  3175     053C  0008               	return
  3176     053D                     __end_of_map:
  3177                           
  3178                           	psect	text15
  3179     0763                     __ptext15:	
  3180 ;; *************** function ___lmul *****************
  3181 ;; Defined at:
  3182 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul32.c"
  3183 ;; Parameters:    Size  Location     Type
  3184 ;;  multiplier      4    2[COMMON] unsigned long 
  3185 ;;  multiplicand    4    6[COMMON] unsigned long 
  3186 ;; Auto vars:     Size  Location     Type
  3187 ;;  product         4    1[BANK0 ] unsigned long 
  3188 ;; Return value:  Size  Location     Type
  3189 ;;                  4    2[COMMON] unsigned long 
  3190 ;; Registers used:
  3191 ;;		wreg, status,2, status,0
  3192 ;; Tracked objects:
  3193 ;;		On entry : 0/0
  3194 ;;		On exit  : 0/0
  3195 ;;		Unchanged: 0/0
  3196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3197 ;;      Params:         8       0       0       0       0
  3198 ;;      Locals:         0       4       0       0       0
  3199 ;;      Temps:          0       1       0       0       0
  3200 ;;      Totals:         8       5       0       0       0
  3201 ;;Total ram usage:       13 bytes
  3202 ;; Hardware stack levels used: 1
  3203 ;; Hardware stack levels required when called: 2
  3204 ;; This function calls:
  3205 ;;		Nothing
  3206 ;; This function is called by:
  3207 ;;		_map
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211     0763                     ___lmul:	
  3212                           ;psect for function ___lmul
  3213                           
  3214     0763                     l1973:	
  3215                           ;incstack = 0
  3216                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3217                           
  3218     0763  3000               	movlw	0
  3219     0764  1283               	bcf	3,5	;RP0=0, select bank0
  3220     0765  1303               	bcf	3,6	;RP1=0, select bank0
  3221     0766  00A4               	movwf	___lmul@product+3
  3222     0767  3000               	movlw	0
  3223     0768  00A3               	movwf	___lmul@product+2
  3224     0769  3000               	movlw	0
  3225     076A  00A2               	movwf	___lmul@product+1
  3226     076B  3000               	movlw	0
  3227     076C  00A1               	movwf	___lmul@product
  3228     076D                     l1975:
  3229     076D  1C72               	btfss	___lmul@multiplier,0
  3230     076E  2F70               	goto	u1351
  3231     076F  2F71               	goto	u1350
  3232     0770                     u1351:
  3233     0770  2F88               	goto	l1979
  3234     0771                     u1350:
  3235     0771                     l1977:
  3236     0771  0876               	movf	___lmul@multiplicand,w
  3237     0772  07A1               	addwf	___lmul@product,f
  3238     0773  0877               	movf	___lmul@multiplicand+1,w
  3239     0774  1103               	clrz
  3240     0775  1803               	skipnc
  3241     0776  3E01               	addlw	1
  3242     0777  1903               	skipnz
  3243     0778  2F7A               	goto	u1361
  3244     0779  07A2               	addwf	___lmul@product+1,f
  3245     077A                     u1361:
  3246     077A  0878               	movf	___lmul@multiplicand+2,w
  3247     077B  1103               	clrz
  3248     077C  1803               	skipnc
  3249     077D  3E01               	addlw	1
  3250     077E  1903               	skipnz
  3251     077F  2F81               	goto	u1362
  3252     0780  07A3               	addwf	___lmul@product+2,f
  3253     0781                     u1362:
  3254     0781  0879               	movf	___lmul@multiplicand+3,w
  3255     0782  1103               	clrz
  3256     0783  1803               	skipnc
  3257     0784  3E01               	addlw	1
  3258     0785  1903               	skipnz
  3259     0786  2F88               	goto	u1363
  3260     0787  07A4               	addwf	___lmul@product+3,f
  3261     0788                     u1363:
  3262     0788                     l1979:
  3263     0788  3001               	movlw	1
  3264     0789  00A0               	movwf	??___lmul
  3265     078A                     u1375:
  3266     078A  1003               	clrc
  3267     078B  0DF6               	rlf	___lmul@multiplicand,f
  3268     078C  0DF7               	rlf	___lmul@multiplicand+1,f
  3269     078D  0DF8               	rlf	___lmul@multiplicand+2,f
  3270     078E  0DF9               	rlf	___lmul@multiplicand+3,f
  3271     078F  0BA0               	decfsz	??___lmul,f
  3272     0790  2F8A               	goto	u1375
  3273     0791                     l1981:
  3274     0791  3001               	movlw	1
  3275     0792                     u1385:
  3276     0792  1003               	clrc
  3277     0793  0CF5               	rrf	___lmul@multiplier+3,f
  3278     0794  0CF4               	rrf	___lmul@multiplier+2,f
  3279     0795  0CF3               	rrf	___lmul@multiplier+1,f
  3280     0796  0CF2               	rrf	___lmul@multiplier,f
  3281     0797  3EFF               	addlw	-1
  3282     0798  1D03               	skipz
  3283     0799  2F92               	goto	u1385
  3284     079A  0875               	movf	___lmul@multiplier+3,w
  3285     079B  0474               	iorwf	___lmul@multiplier+2,w
  3286     079C  0473               	iorwf	___lmul@multiplier+1,w
  3287     079D  0472               	iorwf	___lmul@multiplier,w
  3288     079E  1D03               	skipz
  3289     079F  2FA1               	goto	u1391
  3290     07A0  2FA2               	goto	u1390
  3291     07A1                     u1391:
  3292     07A1  2F6D               	goto	l1975
  3293     07A2                     u1390:
  3294     07A2                     l1983:
  3295     07A2  0824               	movf	___lmul@product+3,w
  3296     07A3  00F5               	movwf	?___lmul+3
  3297     07A4  0823               	movf	___lmul@product+2,w
  3298     07A5  00F4               	movwf	?___lmul+2
  3299     07A6  0822               	movf	___lmul@product+1,w
  3300     07A7  00F3               	movwf	?___lmul+1
  3301     07A8  0821               	movf	___lmul@product,w
  3302     07A9  00F2               	movwf	?___lmul
  3303     07AA                     l409:
  3304     07AA  0008               	return
  3305     07AB                     __end_of___lmul:
  3306                           
  3307                           	psect	text16
  3308     01A5                     __ptext16:	
  3309 ;; *************** function ___aldiv *****************
  3310 ;; Defined at:
  3311 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\aldiv.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;  divisor         4    5[BANK0 ] long 
  3314 ;;  dividend        4    9[BANK0 ] long 
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;  quotient        4   16[BANK0 ] long 
  3317 ;;  sign            1   15[BANK0 ] unsigned char 
  3318 ;;  counter         1   14[BANK0 ] unsigned char 
  3319 ;; Return value:  Size  Location     Type
  3320 ;;                  4    5[BANK0 ] long 
  3321 ;; Registers used:
  3322 ;;		wreg, status,2, status,0, btemp+1
  3323 ;; Tracked objects:
  3324 ;;		On entry : 0/0
  3325 ;;		On exit  : 0/0
  3326 ;;		Unchanged: 0/0
  3327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3328 ;;      Params:         0       8       0       0       0
  3329 ;;      Locals:         0       6       0       0       0
  3330 ;;      Temps:          0       1       0       0       0
  3331 ;;      Totals:         0      15       0       0       0
  3332 ;;Total ram usage:       15 bytes
  3333 ;; Hardware stack levels used: 1
  3334 ;; Hardware stack levels required when called: 2
  3335 ;; This function calls:
  3336 ;;		Nothing
  3337 ;; This function is called by:
  3338 ;;		_map
  3339 ;;		_UART_RX_config
  3340 ;;		_UART_TX_config
  3341 ;; This function uses a non-reentrant model
  3342 ;;
  3343                           
  3344     01A5                     ___aldiv:	
  3345                           ;psect for function ___aldiv
  3346                           
  3347     01A5                     l2013:	
  3348                           ;incstack = 0
  3349                           ; Regs used in ___aldiv: [wreg+status,2+status,0+btemp+1]
  3350                           
  3351     01A5  1283               	bcf	3,5	;RP0=0, select bank0
  3352     01A6  1303               	bcf	3,6	;RP1=0, select bank0
  3353     01A7  01AF               	clrf	___aldiv@sign
  3354     01A8                     l2015:
  3355     01A8  1FA8               	btfss	___aldiv@divisor+3,7
  3356     01A9  29AB               	goto	u1471
  3357     01AA  29AC               	goto	u1470
  3358     01AB                     u1471:
  3359     01AB  29B9               	goto	l460
  3360     01AC                     u1470:
  3361     01AC                     l2017:
  3362     01AC  09A5               	comf	___aldiv@divisor,f
  3363     01AD  09A6               	comf	___aldiv@divisor+1,f
  3364     01AE  09A7               	comf	___aldiv@divisor+2,f
  3365     01AF  09A8               	comf	___aldiv@divisor+3,f
  3366     01B0  0AA5               	incf	___aldiv@divisor,f
  3367     01B1  1903               	skipnz
  3368     01B2  0AA6               	incf	___aldiv@divisor+1,f
  3369     01B3  1903               	skipnz
  3370     01B4  0AA7               	incf	___aldiv@divisor+2,f
  3371     01B5  1903               	skipnz
  3372     01B6  0AA8               	incf	___aldiv@divisor+3,f
  3373     01B7  01AF               	clrf	___aldiv@sign
  3374     01B8  0AAF               	incf	___aldiv@sign,f
  3375     01B9                     l460:
  3376     01B9  1FAC               	btfss	___aldiv@dividend+3,7
  3377     01BA  29BC               	goto	u1481
  3378     01BB  29BD               	goto	u1480
  3379     01BC                     u1481:
  3380     01BC  29CC               	goto	l2023
  3381     01BD                     u1480:
  3382     01BD                     l2019:
  3383     01BD  09A9               	comf	___aldiv@dividend,f
  3384     01BE  09AA               	comf	___aldiv@dividend+1,f
  3385     01BF  09AB               	comf	___aldiv@dividend+2,f
  3386     01C0  09AC               	comf	___aldiv@dividend+3,f
  3387     01C1  0AA9               	incf	___aldiv@dividend,f
  3388     01C2  1903               	skipnz
  3389     01C3  0AAA               	incf	___aldiv@dividend+1,f
  3390     01C4  1903               	skipnz
  3391     01C5  0AAB               	incf	___aldiv@dividend+2,f
  3392     01C6  1903               	skipnz
  3393     01C7  0AAC               	incf	___aldiv@dividend+3,f
  3394     01C8                     l2021:
  3395     01C8  3001               	movlw	1
  3396     01C9  00FF               	movwf	btemp+1
  3397     01CA  087F               	movf	btemp+1,w
  3398     01CB  06AF               	xorwf	___aldiv@sign,f
  3399     01CC                     l2023:
  3400     01CC  3000               	movlw	0
  3401     01CD  00B3               	movwf	___aldiv@quotient+3
  3402     01CE  3000               	movlw	0
  3403     01CF  00B2               	movwf	___aldiv@quotient+2
  3404     01D0  3000               	movlw	0
  3405     01D1  00B1               	movwf	___aldiv@quotient+1
  3406     01D2  3000               	movlw	0
  3407     01D3  00B0               	movwf	___aldiv@quotient
  3408     01D4                     l2025:
  3409     01D4  0828               	movf	___aldiv@divisor+3,w
  3410     01D5  0427               	iorwf	___aldiv@divisor+2,w
  3411     01D6  0426               	iorwf	___aldiv@divisor+1,w
  3412     01D7  0425               	iorwf	___aldiv@divisor,w
  3413     01D8  1903               	skipnz
  3414     01D9  29DB               	goto	u1491
  3415     01DA  29DC               	goto	u1490
  3416     01DB                     u1491:
  3417     01DB  2A29               	goto	l2047
  3418     01DC                     u1490:
  3419     01DC                     l2027:
  3420     01DC  01AE               	clrf	___aldiv@counter
  3421     01DD  0AAE               	incf	___aldiv@counter,f
  3422     01DE  29EC               	goto	l2033
  3423     01DF                     l2029:
  3424     01DF  3001               	movlw	1
  3425     01E0  00AD               	movwf	??___aldiv
  3426     01E1                     u1505:
  3427     01E1  1003               	clrc
  3428     01E2  0DA5               	rlf	___aldiv@divisor,f
  3429     01E3  0DA6               	rlf	___aldiv@divisor+1,f
  3430     01E4  0DA7               	rlf	___aldiv@divisor+2,f
  3431     01E5  0DA8               	rlf	___aldiv@divisor+3,f
  3432     01E6  0BAD               	decfsz	??___aldiv,f
  3433     01E7  29E1               	goto	u1505
  3434     01E8                     l2031:
  3435     01E8  3001               	movlw	1
  3436     01E9  00FF               	movwf	btemp+1
  3437     01EA  087F               	movf	btemp+1,w
  3438     01EB  07AE               	addwf	___aldiv@counter,f
  3439     01EC                     l2033:
  3440     01EC  1FA8               	btfss	___aldiv@divisor+3,7
  3441     01ED  29EF               	goto	u1511
  3442     01EE  29F0               	goto	u1510
  3443     01EF                     u1511:
  3444     01EF  29DF               	goto	l2029
  3445     01F0                     u1510:
  3446     01F0                     l2035:
  3447     01F0  3001               	movlw	1
  3448     01F1  00AD               	movwf	??___aldiv
  3449     01F2                     u1525:
  3450     01F2  1003               	clrc
  3451     01F3  0DB0               	rlf	___aldiv@quotient,f
  3452     01F4  0DB1               	rlf	___aldiv@quotient+1,f
  3453     01F5  0DB2               	rlf	___aldiv@quotient+2,f
  3454     01F6  0DB3               	rlf	___aldiv@quotient+3,f
  3455     01F7  0BAD               	decfsz	??___aldiv,f
  3456     01F8  29F2               	goto	u1525
  3457     01F9                     l2037:
  3458     01F9  0828               	movf	___aldiv@divisor+3,w
  3459     01FA  022C               	subwf	___aldiv@dividend+3,w
  3460     01FB  1D03               	skipz
  3461     01FC  2A07               	goto	u1535
  3462     01FD  0827               	movf	___aldiv@divisor+2,w
  3463     01FE  022B               	subwf	___aldiv@dividend+2,w
  3464     01FF  1D03               	skipz
  3465     0200  2A07               	goto	u1535
  3466     0201  0826               	movf	___aldiv@divisor+1,w
  3467     0202  022A               	subwf	___aldiv@dividend+1,w
  3468     0203  1D03               	skipz
  3469     0204  2A07               	goto	u1535
  3470     0205  0825               	movf	___aldiv@divisor,w
  3471     0206  0229               	subwf	___aldiv@dividend,w
  3472     0207                     u1535:
  3473     0207  1C03               	skipc
  3474     0208  2A0A               	goto	u1531
  3475     0209  2A0B               	goto	u1530
  3476     020A                     u1531:
  3477     020A  2A1A               	goto	l2043
  3478     020B                     u1530:
  3479     020B                     l2039:
  3480     020B  0825               	movf	___aldiv@divisor,w
  3481     020C  02A9               	subwf	___aldiv@dividend,f
  3482     020D  0826               	movf	___aldiv@divisor+1,w
  3483     020E  1C03               	skipc
  3484     020F  0F26               	incfsz	___aldiv@divisor+1,w
  3485     0210  02AA               	subwf	___aldiv@dividend+1,f
  3486     0211  0827               	movf	___aldiv@divisor+2,w
  3487     0212  1C03               	skipc
  3488     0213  0F27               	incfsz	___aldiv@divisor+2,w
  3489     0214  02AB               	subwf	___aldiv@dividend+2,f
  3490     0215  0828               	movf	___aldiv@divisor+3,w
  3491     0216  1C03               	skipc
  3492     0217  0F28               	incfsz	___aldiv@divisor+3,w
  3493     0218  02AC               	subwf	___aldiv@dividend+3,f
  3494     0219                     l2041:
  3495     0219  1430               	bsf	___aldiv@quotient,0
  3496     021A                     l2043:
  3497     021A  3001               	movlw	1
  3498     021B                     u1545:
  3499     021B  1003               	clrc
  3500     021C  0CA8               	rrf	___aldiv@divisor+3,f
  3501     021D  0CA7               	rrf	___aldiv@divisor+2,f
  3502     021E  0CA6               	rrf	___aldiv@divisor+1,f
  3503     021F  0CA5               	rrf	___aldiv@divisor,f
  3504     0220  3EFF               	addlw	-1
  3505     0221  1D03               	skipz
  3506     0222  2A1B               	goto	u1545
  3507     0223                     l2045:
  3508     0223  3001               	movlw	1
  3509     0224  02AE               	subwf	___aldiv@counter,f
  3510     0225  1D03               	btfss	3,2
  3511     0226  2A28               	goto	u1551
  3512     0227  2A29               	goto	u1550
  3513     0228                     u1551:
  3514     0228  29F0               	goto	l2035
  3515     0229                     u1550:
  3516     0229                     l2047:
  3517     0229  082F               	movf	___aldiv@sign,w
  3518     022A  1903               	btfsc	3,2
  3519     022B  2A2D               	goto	u1561
  3520     022C  2A2E               	goto	u1560
  3521     022D                     u1561:
  3522     022D  2A39               	goto	l2051
  3523     022E                     u1560:
  3524     022E                     l2049:
  3525     022E  09B0               	comf	___aldiv@quotient,f
  3526     022F  09B1               	comf	___aldiv@quotient+1,f
  3527     0230  09B2               	comf	___aldiv@quotient+2,f
  3528     0231  09B3               	comf	___aldiv@quotient+3,f
  3529     0232  0AB0               	incf	___aldiv@quotient,f
  3530     0233  1903               	skipnz
  3531     0234  0AB1               	incf	___aldiv@quotient+1,f
  3532     0235  1903               	skipnz
  3533     0236  0AB2               	incf	___aldiv@quotient+2,f
  3534     0237  1903               	skipnz
  3535     0238  0AB3               	incf	___aldiv@quotient+3,f
  3536     0239                     l2051:
  3537     0239  0833               	movf	___aldiv@quotient+3,w
  3538     023A  00A8               	movwf	?___aldiv+3
  3539     023B  0832               	movf	___aldiv@quotient+2,w
  3540     023C  00A7               	movwf	?___aldiv+2
  3541     023D  0831               	movf	___aldiv@quotient+1,w
  3542     023E  00A6               	movwf	?___aldiv+1
  3543     023F  0830               	movf	___aldiv@quotient,w
  3544     0240  00A5               	movwf	?___aldiv
  3545     0241                     l470:
  3546     0241  0008               	return
  3547     0242                     __end_of___aldiv:
  3548                           
  3549                           	psect	text17
  3550     0E73                     __ptext17:	
  3551 ;; *************** function _I2C_Master_Write *****************
  3552 ;; Defined at:
  3553 ;;		line 65 in file "I2C.c"
  3554 ;; Parameters:    Size  Location     Type
  3555 ;;  d               2    2[COMMON] unsigned int 
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;		None
  3558 ;; Return value:  Size  Location     Type
  3559 ;;                  1    wreg      void 
  3560 ;; Registers used:
  3561 ;;		wreg, status,2, status,0, pclath, cstack
  3562 ;; Tracked objects:
  3563 ;;		On entry : 0/0
  3564 ;;		On exit  : 0/0
  3565 ;;		Unchanged: 0/0
  3566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3567 ;;      Params:         2       0       0       0       0
  3568 ;;      Locals:         0       0       0       0       0
  3569 ;;      Temps:          0       0       0       0       0
  3570 ;;      Totals:         2       0       0       0       0
  3571 ;;Total ram usage:        2 bytes
  3572 ;; Hardware stack levels used: 1
  3573 ;; Hardware stack levels required when called: 3
  3574 ;; This function calls:
  3575 ;;		_I2C_Master_Wait
  3576 ;; This function is called by:
  3577 ;;		_requestTemp
  3578 ;;		_requestHum
  3579 ;;		_requestGas
  3580 ;;		_requestIR
  3581 ;;		_writeMotors
  3582 ;; This function uses a non-reentrant model
  3583 ;;
  3584                           
  3585     0E73                     _I2C_Master_Write:	
  3586                           ;psect for function _I2C_Master_Write
  3587                           
  3588     0E73                     l1665:	
  3589                           ;incstack = 0
  3590                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3591                           
  3592                           
  3593                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3594     0E73  120A  118A  27F1  120A  158A  	fcall	_I2C_Master_Wait
  3595     0E78                     l1667:
  3596                           
  3597                           ;I2C.c: 68:     SSPBUF = d;
  3598     0E78  0872               	movf	I2C_Master_Write@d,w
  3599     0E79  1283               	bcf	3,5	;RP0=0, select bank0
  3600     0E7A  1303               	bcf	3,6	;RP1=0, select bank0
  3601     0E7B  0093               	movwf	19	;volatile
  3602     0E7C                     l195:
  3603     0E7C  0008               	return
  3604     0E7D                     __end_of_I2C_Master_Write:
  3605                           
  3606                           	psect	text18
  3607     0E6A                     __ptext18:	
  3608 ;; *************** function _I2C_Master_Stop *****************
  3609 ;; Defined at:
  3610 ;;		line 55 in file "I2C.c"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;		None
  3613 ;; Auto vars:     Size  Location     Type
  3614 ;;		None
  3615 ;; Return value:  Size  Location     Type
  3616 ;;                  1    wreg      void 
  3617 ;; Registers used:
  3618 ;;		wreg, status,2, status,0, pclath, cstack
  3619 ;; Tracked objects:
  3620 ;;		On entry : 0/0
  3621 ;;		On exit  : 0/0
  3622 ;;		Unchanged: 0/0
  3623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3624 ;;      Params:         0       0       0       0       0
  3625 ;;      Locals:         0       0       0       0       0
  3626 ;;      Temps:          0       0       0       0       0
  3627 ;;      Totals:         0       0       0       0       0
  3628 ;;Total ram usage:        0 bytes
  3629 ;; Hardware stack levels used: 1
  3630 ;; Hardware stack levels required when called: 3
  3631 ;; This function calls:
  3632 ;;		_I2C_Master_Wait
  3633 ;; This function is called by:
  3634 ;;		_requestTemp
  3635 ;;		_requestHum
  3636 ;;		_requestGas
  3637 ;;		_requestIR
  3638 ;;		_writeMotors
  3639 ;; This function uses a non-reentrant model
  3640 ;;
  3641                           
  3642     0E6A                     _I2C_Master_Stop:	
  3643                           ;psect for function _I2C_Master_Stop
  3644                           
  3645     0E6A                     l1689:	
  3646                           ;incstack = 0
  3647                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3648                           
  3649                           
  3650                           ;I2C.c: 57:     I2C_Master_Wait();
  3651     0E6A  120A  118A  27F1  120A  158A  	fcall	_I2C_Master_Wait
  3652     0E6F                     l1691:
  3653                           
  3654                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3655     0E6F  1683               	bsf	3,5	;RP0=1, select bank1
  3656     0E70  1303               	bcf	3,6	;RP1=0, select bank1
  3657     0E71  1511               	bsf	17,2	;volatile
  3658     0E72                     l192:
  3659     0E72  0008               	return
  3660     0E73                     __end_of_I2C_Master_Stop:
  3661                           
  3662                           	psect	text19
  3663     0E61                     __ptext19:	
  3664 ;; *************** function _I2C_Master_Start *****************
  3665 ;; Defined at:
  3666 ;;		line 39 in file "I2C.c"
  3667 ;; Parameters:    Size  Location     Type
  3668 ;;		None
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;		None
  3671 ;; Return value:  Size  Location     Type
  3672 ;;                  1    wreg      void 
  3673 ;; Registers used:
  3674 ;;		wreg, status,2, status,0, pclath, cstack
  3675 ;; Tracked objects:
  3676 ;;		On entry : 0/0
  3677 ;;		On exit  : 0/0
  3678 ;;		Unchanged: 0/0
  3679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3680 ;;      Params:         0       0       0       0       0
  3681 ;;      Locals:         0       0       0       0       0
  3682 ;;      Temps:          0       0       0       0       0
  3683 ;;      Totals:         0       0       0       0       0
  3684 ;;Total ram usage:        0 bytes
  3685 ;; Hardware stack levels used: 1
  3686 ;; Hardware stack levels required when called: 3
  3687 ;; This function calls:
  3688 ;;		_I2C_Master_Wait
  3689 ;; This function is called by:
  3690 ;;		_requestTemp
  3691 ;;		_requestHum
  3692 ;;		_requestGas
  3693 ;;		_requestIR
  3694 ;;		_writeMotors
  3695 ;; This function uses a non-reentrant model
  3696 ;;
  3697                           
  3698     0E61                     _I2C_Master_Start:	
  3699                           ;psect for function _I2C_Master_Start
  3700                           
  3701     0E61                     l1661:	
  3702                           ;incstack = 0
  3703                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3704                           
  3705                           
  3706                           ;I2C.c: 41:     I2C_Master_Wait();
  3707     0E61  120A  118A  27F1  120A  158A  	fcall	_I2C_Master_Wait
  3708     0E66                     l1663:
  3709                           
  3710                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  3711     0E66  1683               	bsf	3,5	;RP0=1, select bank1
  3712     0E67  1303               	bcf	3,6	;RP1=0, select bank1
  3713     0E68  1411               	bsf	17,0	;volatile
  3714     0E69                     l186:
  3715     0E69  0008               	return
  3716     0E6A                     __end_of_I2C_Master_Start:
  3717                           
  3718                           	psect	text20
  3719     0E58                     __ptext20:	
  3720 ;; *************** function _I2C_Master_RepeatedStart *****************
  3721 ;; Defined at:
  3722 ;;		line 47 in file "I2C.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;		None
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;		None
  3727 ;; Return value:  Size  Location     Type
  3728 ;;                  1    wreg      void 
  3729 ;; Registers used:
  3730 ;;		wreg, status,2, status,0, pclath, cstack
  3731 ;; Tracked objects:
  3732 ;;		On entry : 0/0
  3733 ;;		On exit  : 0/0
  3734 ;;		Unchanged: 0/0
  3735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3736 ;;      Params:         0       0       0       0       0
  3737 ;;      Locals:         0       0       0       0       0
  3738 ;;      Temps:          0       0       0       0       0
  3739 ;;      Totals:         0       0       0       0       0
  3740 ;;Total ram usage:        0 bytes
  3741 ;; Hardware stack levels used: 1
  3742 ;; Hardware stack levels required when called: 3
  3743 ;; This function calls:
  3744 ;;		_I2C_Master_Wait
  3745 ;; This function is called by:
  3746 ;;		_requestTemp
  3747 ;;		_requestHum
  3748 ;;		_requestGas
  3749 ;;		_requestIR
  3750 ;; This function uses a non-reentrant model
  3751 ;;
  3752                           
  3753     0E58                     _I2C_Master_RepeatedStart:	
  3754                           ;psect for function _I2C_Master_RepeatedStart
  3755                           
  3756     0E58                     l1669:	
  3757                           ;incstack = 0
  3758                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3759                           
  3760                           
  3761                           ;I2C.c: 49:     I2C_Master_Wait();
  3762     0E58  120A  118A  27F1  120A  158A  	fcall	_I2C_Master_Wait
  3763     0E5D                     l1671:
  3764                           
  3765                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  3766     0E5D  1683               	bsf	3,5	;RP0=1, select bank1
  3767     0E5E  1303               	bcf	3,6	;RP1=0, select bank1
  3768     0E5F  1491               	bsf	17,1	;volatile
  3769     0E60                     l189:
  3770     0E60  0008               	return
  3771     0E61                     __end_of_I2C_Master_RepeatedStart:
  3772                           
  3773                           	psect	text21
  3774     0EE7                     __ptext21:	
  3775 ;; *************** function _I2C_Master_Read *****************
  3776 ;; Defined at:
  3777 ;;		line 74 in file "I2C.c"
  3778 ;; Parameters:    Size  Location     Type
  3779 ;;  a               2    2[COMMON] unsigned short 
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;  temp            2    6[COMMON] unsigned short 
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  2    2[COMMON] unsigned short 
  3784 ;; Registers used:
  3785 ;;		wreg, status,2, status,0, pclath, cstack
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3791 ;;      Params:         2       0       0       0       0
  3792 ;;      Locals:         2       0       0       0       0
  3793 ;;      Temps:          2       0       0       0       0
  3794 ;;      Totals:         6       0       0       0       0
  3795 ;;Total ram usage:        6 bytes
  3796 ;; Hardware stack levels used: 1
  3797 ;; Hardware stack levels required when called: 3
  3798 ;; This function calls:
  3799 ;;		_I2C_Master_Wait
  3800 ;; This function is called by:
  3801 ;;		_requestTemp
  3802 ;;		_requestHum
  3803 ;;		_requestGas
  3804 ;;		_requestIR
  3805 ;; This function uses a non-reentrant model
  3806 ;;
  3807                           
  3808     0EE7                     _I2C_Master_Read:	
  3809                           ;psect for function _I2C_Master_Read
  3810                           
  3811     0EE7                     l1673:	
  3812                           ;incstack = 0
  3813                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3814                           
  3815                           
  3816                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3817     0EE7  120A  118A  27F1  120A  158A  	fcall	_I2C_Master_Wait
  3818     0EEC                     l1675:
  3819                           
  3820                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3821     0EEC  1683               	bsf	3,5	;RP0=1, select bank1
  3822     0EED  1303               	bcf	3,6	;RP1=0, select bank1
  3823     0EEE  1591               	bsf	17,3	;volatile
  3824                           
  3825                           ;I2C.c: 79:     I2C_Master_Wait();
  3826     0EEF  120A  118A  27F1  120A  158A  	fcall	_I2C_Master_Wait
  3827     0EF4                     l1677:
  3828                           
  3829                           ;I2C.c: 80:     temp = SSPBUF;
  3830     0EF4  1283               	bcf	3,5	;RP0=0, select bank0
  3831     0EF5  1303               	bcf	3,6	;RP1=0, select bank0
  3832     0EF6  0813               	movf	19,w	;volatile
  3833     0EF7  00F4               	movwf	??_I2C_Master_Read
  3834     0EF8  01F5               	clrf	??_I2C_Master_Read+1
  3835     0EF9  0874               	movf	??_I2C_Master_Read,w
  3836     0EFA  00F6               	movwf	I2C_Master_Read@temp
  3837     0EFB  0875               	movf	??_I2C_Master_Read+1,w
  3838     0EFC  00F7               	movwf	I2C_Master_Read@temp+1
  3839     0EFD                     l1679:
  3840                           
  3841                           ;I2C.c: 81:     I2C_Master_Wait();
  3842     0EFD  120A  118A  27F1  120A  158A  	fcall	_I2C_Master_Wait
  3843     0F02                     l1681:
  3844                           
  3845                           ;I2C.c: 82:     if(a == 1){
  3846     0F02  0372               	decf	I2C_Master_Read@a,w
  3847     0F03  0473               	iorwf	I2C_Master_Read@a+1,w
  3848     0F04  1D03               	btfss	3,2
  3849     0F05  2F07               	goto	u1131
  3850     0F06  2F08               	goto	u1130
  3851     0F07                     u1131:
  3852     0F07  2F0C               	goto	l198
  3853     0F08                     u1130:
  3854     0F08                     l1683:
  3855                           
  3856                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3857     0F08  1683               	bsf	3,5	;RP0=1, select bank1
  3858     0F09  1303               	bcf	3,6	;RP1=0, select bank1
  3859     0F0A  1291               	bcf	17,5	;volatile
  3860                           
  3861                           ;I2C.c: 84:     }else{
  3862     0F0B  2F0F               	goto	l199
  3863     0F0C                     l198:
  3864                           
  3865                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3866     0F0C  1683               	bsf	3,5	;RP0=1, select bank1
  3867     0F0D  1303               	bcf	3,6	;RP1=0, select bank1
  3868     0F0E  1691               	bsf	17,5	;volatile
  3869     0F0F                     l199:	
  3870                           ;I2C.c: 86:     }
  3871                           
  3872                           
  3873                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3874     0F0F  1611               	bsf	17,4	;volatile
  3875     0F10                     l1685:
  3876                           
  3877                           ;I2C.c: 88:     return temp;
  3878     0F10  0877               	movf	I2C_Master_Read@temp+1,w
  3879     0F11  00F3               	movwf	?_I2C_Master_Read+1
  3880     0F12  0876               	movf	I2C_Master_Read@temp,w
  3881     0F13  00F2               	movwf	?_I2C_Master_Read
  3882     0F14                     l200:
  3883     0F14  0008               	return
  3884     0F15                     __end_of_I2C_Master_Read:
  3885                           
  3886                           	psect	text22
  3887     07F1                     __ptext22:	
  3888 ;; *************** function _I2C_Master_Wait *****************
  3889 ;; Defined at:
  3890 ;;		line 32 in file "I2C.c"
  3891 ;; Parameters:    Size  Location     Type
  3892 ;;		None
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;		None
  3895 ;; Return value:  Size  Location     Type
  3896 ;;                  1    wreg      void 
  3897 ;; Registers used:
  3898 ;;		wreg, status,2
  3899 ;; Tracked objects:
  3900 ;;		On entry : 0/0
  3901 ;;		On exit  : 0/0
  3902 ;;		Unchanged: 0/0
  3903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3904 ;;      Params:         0       0       0       0       0
  3905 ;;      Locals:         0       0       0       0       0
  3906 ;;      Temps:          0       0       0       0       0
  3907 ;;      Totals:         0       0       0       0       0
  3908 ;;Total ram usage:        0 bytes
  3909 ;; Hardware stack levels used: 1
  3910 ;; Hardware stack levels required when called: 2
  3911 ;; This function calls:
  3912 ;;		Nothing
  3913 ;; This function is called by:
  3914 ;;		_I2C_Master_Start
  3915 ;;		_I2C_Master_RepeatedStart
  3916 ;;		_I2C_Master_Stop
  3917 ;;		_I2C_Master_Write
  3918 ;;		_I2C_Master_Read
  3919 ;; This function uses a non-reentrant model
  3920 ;;
  3921                           
  3922     07F1                     _I2C_Master_Wait:	
  3923                           ;psect for function _I2C_Master_Wait
  3924                           
  3925     07F1                     l1439:	
  3926                           ;incstack = 0
  3927                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3928                           
  3929     07F1                     l180:	
  3930                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3931                           
  3932     07F1  1683               	bsf	3,5	;RP0=1, select bank1
  3933     07F2  1303               	bcf	3,6	;RP1=0, select bank1
  3934     07F3  1914               	btfsc	20,2	;volatile
  3935     07F4  2FF6               	goto	u701
  3936     07F5  2FF7               	goto	u700
  3937     07F6                     u701:
  3938     07F6  2FF1               	goto	l180
  3939     07F7                     u700:
  3940     07F7                     l1441:
  3941     07F7  0811               	movf	17,w	;volatile
  3942     07F8  391F               	andlw	31
  3943     07F9  1D03               	btfss	3,2
  3944     07FA  2FFC               	goto	u711
  3945     07FB  2FFD               	goto	u710
  3946     07FC                     u711:
  3947     07FC  2FF1               	goto	l180
  3948     07FD                     u710:
  3949     07FD                     l183:
  3950     07FD  0008               	return
  3951     07FE                     __end_of_I2C_Master_Wait:
  3952                           
  3953                           	psect	text23
  3954     001E                     __ptext23:	
  3955 ;; *************** function _LDC_output *****************
  3956 ;; Defined at:
  3957 ;;		line 235 in file "master.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;		None
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;		None
  3962 ;; Return value:  Size  Location     Type
  3963 ;;                  1    wreg      void 
  3964 ;; Registers used:
  3965 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/0
  3968 ;;		On exit  : 0/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3971 ;;      Params:         0       0       0       0       0
  3972 ;;      Locals:         0       0       0       0       0
  3973 ;;      Temps:          0       2       0       0       0
  3974 ;;      Totals:         0       2       0       0       0
  3975 ;;Total ram usage:        2 bytes
  3976 ;; Hardware stack levels used: 1
  3977 ;; Hardware stack levels required when called: 5
  3978 ;; This function calls:
  3979 ;;		_Lcd_Clear
  3980 ;;		_Lcd_Set_Cursor
  3981 ;;		_Lcd_Write_String
  3982 ;;		_num_to_string
  3983 ;; This function is called by:
  3984 ;;		_main
  3985 ;; This function uses a non-reentrant model
  3986 ;;
  3987                           
  3988     001E                     _LDC_output:	
  3989                           ;psect for function _LDC_output
  3990                           
  3991     001E                     l2195:	
  3992                           ;incstack = 0
  3993                           ; Regs used in _LDC_output: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3994                           
  3995                           
  3996                           ;master.c: 236:     Lcd_Clear();
  3997     001E  120A  158A  2688  120A  118A  	fcall	_Lcd_Clear
  3998     0023                     l2197:
  3999                           
  4000                           ;master.c: 238:     num_to_string(tempC,S_temp,3);
  4001     0023  087B               	movf	_tempC,w
  4002     0024  1283               	bcf	3,5	;RP0=0, select bank0
  4003     0025  1303               	bcf	3,6	;RP1=0, select bank0
  4004     0026  00B0               	movwf	??_LDC_output
  4005     0027  01B1               	clrf	??_LDC_output+1
  4006     0028  0830               	movf	??_LDC_output,w
  4007     0029  00A0               	movwf	num_to_string@num
  4008     002A  0831               	movf	??_LDC_output+1,w
  4009     002B  00A1               	movwf	num_to_string@num+1
  4010     002C  3057               	movlw	(low (_S_temp| 0))& (0+255)
  4011     002D  00A2               	movwf	num_to_string@dig8
  4012     002E  3003               	movlw	3
  4013     002F  00A3               	movwf	num_to_string@len
  4014     0030  120A  118A  20EC  120A  118A  	fcall	_num_to_string
  4015     0035                     l2199:
  4016                           
  4017                           ;master.c: 239:     num_to_string(n_hum,S_hum,2);
  4018     0035  1283               	bcf	3,5	;RP0=0, select bank0
  4019     0036  1303               	bcf	3,6	;RP1=0, select bank0
  4020     0037  0851               	movf	_n_hum,w
  4021     0038  00B0               	movwf	??_LDC_output
  4022     0039  01B1               	clrf	??_LDC_output+1
  4023     003A  0830               	movf	??_LDC_output,w
  4024     003B  00A0               	movwf	num_to_string@num
  4025     003C  0831               	movf	??_LDC_output+1,w
  4026     003D  00A1               	movwf	num_to_string@num+1
  4027     003E  305B               	movlw	(low (_S_hum| 0))& (0+255)
  4028     003F  00A2               	movwf	num_to_string@dig8
  4029     0040  3002               	movlw	2
  4030     0041  00A3               	movwf	num_to_string@len
  4031     0042  120A  118A  20EC  120A  118A  	fcall	_num_to_string
  4032     0047                     l2201:
  4033                           
  4034                           ;master.c: 240:     num_to_string(gasPPM,S_gas,3);
  4035     0047  1283               	bcf	3,5	;RP0=0, select bank0
  4036     0048  1303               	bcf	3,6	;RP1=0, select bank0
  4037     0049  084B               	movf	_gasPPM+1,w
  4038     004A  00A1               	movwf	num_to_string@num+1
  4039     004B  084A               	movf	_gasPPM,w
  4040     004C  00A0               	movwf	num_to_string@num
  4041     004D  3053               	movlw	(low (_S_gas| 0))& (0+255)
  4042     004E  00A2               	movwf	num_to_string@dig8
  4043     004F  3003               	movlw	3
  4044     0050  00A3               	movwf	num_to_string@len
  4045     0051  120A  118A  20EC  120A  118A  	fcall	_num_to_string
  4046     0056                     l2203:
  4047                           
  4048                           ;master.c: 241:     num_to_string(n_ired,S_ired,1);
  4049     0056  1283               	bcf	3,5	;RP0=0, select bank0
  4050     0057  1303               	bcf	3,6	;RP1=0, select bank0
  4051     0058  084F               	movf	_n_ired,w
  4052     0059  00B0               	movwf	??_LDC_output
  4053     005A  01B1               	clrf	??_LDC_output+1
  4054     005B  0830               	movf	??_LDC_output,w
  4055     005C  00A0               	movwf	num_to_string@num
  4056     005D  0831               	movf	??_LDC_output+1,w
  4057     005E  00A1               	movwf	num_to_string@num+1
  4058     005F  305E               	movlw	(low (_S_ired| 0))& (0+255)
  4059     0060  00A2               	movwf	num_to_string@dig8
  4060     0061  01A3               	clrf	num_to_string@len
  4061     0062  0AA3               	incf	num_to_string@len,f
  4062     0063  120A  118A  20EC  120A  118A  	fcall	_num_to_string
  4063                           
  4064                           ;master.c: 244:     Lcd_Set_Cursor(1,1);
  4065     0068  01F6               	clrf	Lcd_Set_Cursor@b
  4066     0069  0AF6               	incf	Lcd_Set_Cursor@b,f
  4067     006A  3001               	movlw	1
  4068     006B  120A  118A  2685  120A  118A  	fcall	_Lcd_Set_Cursor
  4069     0070                     l2205:
  4070                           
  4071                           ;master.c: 245:     Lcd_Write_String("T:");
  4072     0070  3013               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  4073     0071  00F7               	movwf	Lcd_Write_String@a
  4074     0072  3080               	movlw	128
  4075     0073  00F8               	movwf	Lcd_Write_String@a+1
  4076     0074  120A  118A  27AB  120A  118A  	fcall	_Lcd_Write_String
  4077     0079                     l2207:
  4078                           
  4079                           ;master.c: 246:     Lcd_Write_String(S_temp);
  4080     0079  3057               	movlw	(low (_S_temp| 0))& (0+255)
  4081     007A  00F7               	movwf	Lcd_Write_String@a
  4082     007B  3000               	movlw	0
  4083     007C  00F8               	movwf	Lcd_Write_String@a+1
  4084     007D  120A  118A  27AB  120A  118A  	fcall	_Lcd_Write_String
  4085     0082                     l2209:
  4086                           
  4087                           ;master.c: 247:     Lcd_Write_String("^C");
  4088     0082  3016               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  4089     0083  00F7               	movwf	Lcd_Write_String@a
  4090     0084  3080               	movlw	128
  4091     0085  00F8               	movwf	Lcd_Write_String@a+1
  4092     0086  120A  118A  27AB  120A  118A  	fcall	_Lcd_Write_String
  4093     008B                     l2211:
  4094                           
  4095                           ;master.c: 249:     Lcd_Set_Cursor(2,1);
  4096     008B  01F6               	clrf	Lcd_Set_Cursor@b
  4097     008C  0AF6               	incf	Lcd_Set_Cursor@b,f
  4098     008D  3002               	movlw	2
  4099     008E  120A  118A  2685  120A  118A  	fcall	_Lcd_Set_Cursor
  4100                           
  4101                           ;master.c: 250:     Lcd_Write_String("H:");
  4102     0093  3010               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  4103     0094  00F7               	movwf	Lcd_Write_String@a
  4104     0095  3080               	movlw	128
  4105     0096  00F8               	movwf	Lcd_Write_String@a+1
  4106     0097  120A  118A  27AB  120A  118A  	fcall	_Lcd_Write_String
  4107                           
  4108                           ;master.c: 251:     Lcd_Write_String(S_hum);
  4109     009C  305B               	movlw	(low (_S_hum| 0))& (0+255)
  4110     009D  00F7               	movwf	Lcd_Write_String@a
  4111     009E  3000               	movlw	0
  4112     009F  00F8               	movwf	Lcd_Write_String@a+1
  4113     00A0  120A  118A  27AB  120A  118A  	fcall	_Lcd_Write_String
  4114                           
  4115                           ;master.c: 252:     Lcd_Write_String("%RH");
  4116     00A5  3005               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  4117     00A6  00F7               	movwf	Lcd_Write_String@a
  4118     00A7  3080               	movlw	128
  4119     00A8  00F8               	movwf	Lcd_Write_String@a+1
  4120     00A9  120A  118A  27AB  120A  118A  	fcall	_Lcd_Write_String
  4121     00AE                     l2213:
  4122                           
  4123                           ;master.c: 254:     Lcd_Set_Cursor(1,9);
  4124     00AE  3009               	movlw	9
  4125     00AF  00F6               	movwf	Lcd_Set_Cursor@b
  4126     00B0  3001               	movlw	1
  4127     00B1  120A  118A  2685  120A  118A  	fcall	_Lcd_Set_Cursor
  4128     00B6                     l2215:
  4129                           
  4130                           ;master.c: 255:     Lcd_Write_String("G:");
  4131     00B6  300D               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  4132     00B7  00F7               	movwf	Lcd_Write_String@a
  4133     00B8  3080               	movlw	128
  4134     00B9  00F8               	movwf	Lcd_Write_String@a+1
  4135     00BA  120A  118A  27AB  120A  118A  	fcall	_Lcd_Write_String
  4136     00BF                     l2217:
  4137                           
  4138                           ;master.c: 256:     Lcd_Write_String(S_gas);
  4139     00BF  3053               	movlw	(low (_S_gas| 0))& (0+255)
  4140     00C0  00F7               	movwf	Lcd_Write_String@a
  4141     00C1  3000               	movlw	0
  4142     00C2  00F8               	movwf	Lcd_Write_String@a+1
  4143     00C3  120A  118A  27AB  120A  118A  	fcall	_Lcd_Write_String
  4144     00C8                     l2219:
  4145                           
  4146                           ;master.c: 257:     Lcd_Write_String("ppm");
  4147     00C8  3009               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  4148     00C9  00F7               	movwf	Lcd_Write_String@a
  4149     00CA  3080               	movlw	128
  4150     00CB  00F8               	movwf	Lcd_Write_String@a+1
  4151     00CC  120A  118A  27AB  120A  118A  	fcall	_Lcd_Write_String
  4152                           
  4153                           ;master.c: 259:     Lcd_Set_Cursor(2,9);
  4154     00D1  3009               	movlw	9
  4155     00D2  00F6               	movwf	Lcd_Set_Cursor@b
  4156     00D3  3002               	movlw	2
  4157     00D4  120A  118A  2685  120A  118A  	fcall	_Lcd_Set_Cursor
  4158     00D9                     l2221:
  4159                           
  4160                           ;master.c: 260:     Lcd_Write_String("IR:");
  4161     00D9  3001               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  4162     00DA  00F7               	movwf	Lcd_Write_String@a
  4163     00DB  3080               	movlw	128
  4164     00DC  00F8               	movwf	Lcd_Write_String@a+1
  4165     00DD  120A  118A  27AB  120A  118A  	fcall	_Lcd_Write_String
  4166     00E2                     l2223:
  4167                           
  4168                           ;master.c: 261:     Lcd_Write_String(S_ired);
  4169     00E2  305E               	movlw	(low (_S_ired| 0))& (0+255)
  4170     00E3  00F7               	movwf	Lcd_Write_String@a
  4171     00E4  3000               	movlw	0
  4172     00E5  00F8               	movwf	Lcd_Write_String@a+1
  4173     00E6  120A  118A  27AB  120A  118A  	fcall	_Lcd_Write_String
  4174     00EB                     l134:
  4175     00EB  0008               	return
  4176     00EC                     __end_of_LDC_output:
  4177                           
  4178                           	psect	text24
  4179     00EC                     __ptext24:	
  4180 ;; *************** function _num_to_string *****************
  4181 ;; Defined at:
  4182 ;;		line 279 in file "master.c"
  4183 ;; Parameters:    Size  Location     Type
  4184 ;;  num             2    0[BANK0 ] unsigned int 
  4185 ;;  dig8            1    2[BANK0 ] PTR unsigned char 
  4186 ;;		 -> S_ired(2), S_gas(4), S_hum(3), S_temp(4), 
  4187 ;;  len             1    3[BANK0 ] unsigned char 
  4188 ;; Auto vars:     Size  Location     Type
  4189 ;;  unidades        2   14[BANK0 ] unsigned int 
  4190 ;;  decenas         2   12[BANK0 ] unsigned int 
  4191 ;;  div2            2   10[BANK0 ] unsigned int 
  4192 ;;  div1            2    8[BANK0 ] unsigned int 
  4193 ;;  centenas        2    6[BANK0 ] unsigned int 
  4194 ;;  div3            2    4[BANK0 ] unsigned int 
  4195 ;;  miles           2    0        unsigned int 
  4196 ;; Return value:  Size  Location     Type
  4197 ;;                  1    wreg      void 
  4198 ;; Registers used:
  4199 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4200 ;; Tracked objects:
  4201 ;;		On entry : 0/0
  4202 ;;		On exit  : 0/0
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4205 ;;      Params:         0       4       0       0       0
  4206 ;;      Locals:         0      12       0       0       0
  4207 ;;      Temps:          0       0       0       0       0
  4208 ;;      Totals:         0      16       0       0       0
  4209 ;;Total ram usage:       16 bytes
  4210 ;; Hardware stack levels used: 1
  4211 ;; Hardware stack levels required when called: 3
  4212 ;; This function calls:
  4213 ;;		___lwdiv
  4214 ;;		___lwmod
  4215 ;; This function is called by:
  4216 ;;		_LDC_output
  4217 ;; This function uses a non-reentrant model
  4218 ;;
  4219                           
  4220     00EC                     _num_to_string:	
  4221                           ;psect for function _num_to_string
  4222                           
  4223     00EC                     l1699:	
  4224                           ;incstack = 0
  4225                           ; Regs used in _num_to_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4226                           
  4227                           
  4228                           ;master.c: 280:     uint16_t div1,div2,div3,miles,centenas,decenas,unidades;;master.c: 2
      +                          81:     div1 = num / 10;
  4229     00EC  300A               	movlw	10
  4230     00ED  00F2               	movwf	___lwdiv@divisor
  4231     00EE  3000               	movlw	0
  4232     00EF  00F3               	movwf	___lwdiv@divisor+1
  4233     00F0  1283               	bcf	3,5	;RP0=0, select bank0
  4234     00F1  1303               	bcf	3,6	;RP1=0, select bank0
  4235     00F2  0821               	movf	num_to_string@num+1,w
  4236     00F3  00F5               	movwf	___lwdiv@dividend+1
  4237     00F4  0820               	movf	num_to_string@num,w
  4238     00F5  00F4               	movwf	___lwdiv@dividend
  4239     00F6  120A  158A  27BC  120A  118A  	fcall	___lwdiv
  4240     00FB  0873               	movf	?___lwdiv+1,w
  4241     00FC  1283               	bcf	3,5	;RP0=0, select bank0
  4242     00FD  1303               	bcf	3,6	;RP1=0, select bank0
  4243     00FE  00A9               	movwf	num_to_string@div1+1
  4244     00FF  0872               	movf	?___lwdiv,w
  4245     0100  00A8               	movwf	num_to_string@div1
  4246                           
  4247                           ;master.c: 282:     unidades = num % 10;
  4248     0101  300A               	movlw	10
  4249     0102  00F2               	movwf	___lwmod@divisor
  4250     0103  3000               	movlw	0
  4251     0104  00F3               	movwf	___lwmod@divisor+1
  4252     0105  0821               	movf	num_to_string@num+1,w
  4253     0106  00F5               	movwf	___lwmod@dividend+1
  4254     0107  0820               	movf	num_to_string@num,w
  4255     0108  00F4               	movwf	___lwmod@dividend
  4256     0109  120A  158A  2782  120A  118A  	fcall	___lwmod
  4257     010E  0873               	movf	?___lwmod+1,w
  4258     010F  1283               	bcf	3,5	;RP0=0, select bank0
  4259     0110  1303               	bcf	3,6	;RP1=0, select bank0
  4260     0111  00AF               	movwf	num_to_string@unidades+1
  4261     0112  0872               	movf	?___lwmod,w
  4262     0113  00AE               	movwf	num_to_string@unidades
  4263                           
  4264                           ;master.c: 283:     div2 = div1 / 10;
  4265     0114  300A               	movlw	10
  4266     0115  00F2               	movwf	___lwdiv@divisor
  4267     0116  3000               	movlw	0
  4268     0117  00F3               	movwf	___lwdiv@divisor+1
  4269     0118  0829               	movf	num_to_string@div1+1,w
  4270     0119  00F5               	movwf	___lwdiv@dividend+1
  4271     011A  0828               	movf	num_to_string@div1,w
  4272     011B  00F4               	movwf	___lwdiv@dividend
  4273     011C  120A  158A  27BC  120A  118A  	fcall	___lwdiv
  4274     0121  0873               	movf	?___lwdiv+1,w
  4275     0122  1283               	bcf	3,5	;RP0=0, select bank0
  4276     0123  1303               	bcf	3,6	;RP1=0, select bank0
  4277     0124  00AB               	movwf	num_to_string@div2+1
  4278     0125  0872               	movf	?___lwdiv,w
  4279     0126  00AA               	movwf	num_to_string@div2
  4280                           
  4281                           ;master.c: 284:     decenas = div1 % 10;
  4282     0127  300A               	movlw	10
  4283     0128  00F2               	movwf	___lwmod@divisor
  4284     0129  3000               	movlw	0
  4285     012A  00F3               	movwf	___lwmod@divisor+1
  4286     012B  0829               	movf	num_to_string@div1+1,w
  4287     012C  00F5               	movwf	___lwmod@dividend+1
  4288     012D  0828               	movf	num_to_string@div1,w
  4289     012E  00F4               	movwf	___lwmod@dividend
  4290     012F  120A  158A  2782  120A  118A  	fcall	___lwmod
  4291     0134  0873               	movf	?___lwmod+1,w
  4292     0135  1283               	bcf	3,5	;RP0=0, select bank0
  4293     0136  1303               	bcf	3,6	;RP1=0, select bank0
  4294     0137  00AD               	movwf	num_to_string@decenas+1
  4295     0138  0872               	movf	?___lwmod,w
  4296     0139  00AC               	movwf	num_to_string@decenas
  4297                           
  4298                           ;master.c: 285:     div3 = div2 / 10;
  4299     013A  300A               	movlw	10
  4300     013B  00F2               	movwf	___lwdiv@divisor
  4301     013C  3000               	movlw	0
  4302     013D  00F3               	movwf	___lwdiv@divisor+1
  4303     013E  082B               	movf	num_to_string@div2+1,w
  4304     013F  00F5               	movwf	___lwdiv@dividend+1
  4305     0140  082A               	movf	num_to_string@div2,w
  4306     0141  00F4               	movwf	___lwdiv@dividend
  4307     0142  120A  158A  27BC  120A  118A  	fcall	___lwdiv
  4308     0147  0873               	movf	?___lwdiv+1,w
  4309     0148  1283               	bcf	3,5	;RP0=0, select bank0
  4310     0149  1303               	bcf	3,6	;RP1=0, select bank0
  4311     014A  00A5               	movwf	num_to_string@div3+1
  4312     014B  0872               	movf	?___lwdiv,w
  4313     014C  00A4               	movwf	num_to_string@div3
  4314                           
  4315                           ;master.c: 286:     centenas = div2 % 10;
  4316     014D  300A               	movlw	10
  4317     014E  00F2               	movwf	___lwmod@divisor
  4318     014F  3000               	movlw	0
  4319     0150  00F3               	movwf	___lwmod@divisor+1
  4320     0151  082B               	movf	num_to_string@div2+1,w
  4321     0152  00F5               	movwf	___lwmod@dividend+1
  4322     0153  082A               	movf	num_to_string@div2,w
  4323     0154  00F4               	movwf	___lwmod@dividend
  4324     0155  120A  158A  2782  120A  118A  	fcall	___lwmod
  4325     015A  0873               	movf	?___lwmod+1,w
  4326     015B  1283               	bcf	3,5	;RP0=0, select bank0
  4327     015C  1303               	bcf	3,6	;RP1=0, select bank0
  4328     015D  00A7               	movwf	num_to_string@centenas+1
  4329     015E  0872               	movf	?___lwmod,w
  4330     015F  00A6               	movwf	num_to_string@centenas
  4331     0160  300A               	movlw	10
  4332     0161  00F2               	movwf	___lwmod@divisor
  4333     0162  3000               	movlw	0
  4334     0163  00F3               	movwf	___lwmod@divisor+1
  4335     0164  0825               	movf	num_to_string@div3+1,w
  4336     0165  00F5               	movwf	___lwmod@dividend+1
  4337     0166  0824               	movf	num_to_string@div3,w
  4338     0167  00F4               	movwf	___lwmod@dividend
  4339     0168  120A  158A  2782  120A  118A  	fcall	___lwmod
  4340     016D                     l1701:
  4341                           
  4342                           ;master.c: 289:     if(len == 1){
  4343     016D  1283               	bcf	3,5	;RP0=0, select bank0
  4344     016E  1303               	bcf	3,6	;RP1=0, select bank0
  4345     016F  0323               	decf	num_to_string@len,w
  4346     0170  1D03               	btfss	3,2
  4347     0171  2973               	goto	u1151
  4348     0172  2974               	goto	u1150
  4349     0173                     u1151:
  4350     0173  297B               	goto	l1705
  4351     0174                     u1150:
  4352     0174                     l1703:
  4353                           
  4354                           ;master.c: 290:         dig8[0] = unidades + '0';
  4355     0174  0822               	movf	num_to_string@dig8,w
  4356     0175  0084               	movwf	4
  4357     0176  082E               	movf	num_to_string@unidades,w
  4358     0177  3E30               	addlw	48
  4359     0178  1383               	bcf	3,7	;select IRP bank0
  4360     0179  0080               	movwf	0
  4361                           
  4362                           ;master.c: 291:     }
  4363     017A  29A4               	goto	l145
  4364     017B                     l1705:
  4365     017B  3002               	movlw	2
  4366     017C  0623               	xorwf	num_to_string@len,w
  4367     017D  1D03               	btfss	3,2
  4368     017E  2980               	goto	u1161
  4369     017F  2981               	goto	u1160
  4370     0180                     u1161:
  4371     0180  298D               	goto	l1709
  4372     0181                     u1160:
  4373     0181                     l1707:
  4374                           
  4375                           ;master.c: 293:         dig8[1] = unidades + '0';
  4376     0181  0A22               	incf	num_to_string@dig8,w
  4377     0182  0084               	movwf	4
  4378     0183  082E               	movf	num_to_string@unidades,w
  4379     0184  3E30               	addlw	48
  4380     0185  1383               	bcf	3,7	;select IRP bank0
  4381     0186  0080               	movwf	0
  4382                           
  4383                           ;master.c: 294:         dig8[0] = decenas + '0';
  4384     0187  0822               	movf	num_to_string@dig8,w
  4385     0188  0084               	movwf	4
  4386     0189  082C               	movf	num_to_string@decenas,w
  4387     018A  3E30               	addlw	48
  4388     018B  0080               	movwf	0
  4389                           
  4390                           ;master.c: 295:     }
  4391     018C  29A4               	goto	l145
  4392     018D                     l1709:
  4393     018D  3003               	movlw	3
  4394     018E  0623               	xorwf	num_to_string@len,w
  4395     018F  1D03               	btfss	3,2
  4396     0190  2992               	goto	u1171
  4397     0191  2993               	goto	u1170
  4398     0192                     u1171:
  4399     0192  29A4               	goto	l145
  4400     0193                     u1170:
  4401     0193                     l1711:
  4402                           
  4403                           ;master.c: 297:         dig8[2] = unidades + '0';
  4404     0193  0822               	movf	num_to_string@dig8,w
  4405     0194  3E02               	addlw	2
  4406     0195  0084               	movwf	4
  4407     0196  082E               	movf	num_to_string@unidades,w
  4408     0197  3E30               	addlw	48
  4409     0198  1383               	bcf	3,7	;select IRP bank0
  4410     0199  0080               	movwf	0
  4411                           
  4412                           ;master.c: 298:         dig8[1] = decenas + '0';
  4413     019A  0A22               	incf	num_to_string@dig8,w
  4414     019B  0084               	movwf	4
  4415     019C  082C               	movf	num_to_string@decenas,w
  4416     019D  3E30               	addlw	48
  4417     019E  0080               	movwf	0
  4418                           
  4419                           ;master.c: 299:         dig8[0] = centenas + '0';
  4420     019F  0822               	movf	num_to_string@dig8,w
  4421     01A0  0084               	movwf	4
  4422     01A1  0826               	movf	num_to_string@centenas,w
  4423     01A2  3E30               	addlw	48
  4424     01A3  0080               	movwf	0
  4425     01A4                     l145:
  4426     01A4  0008               	return
  4427     01A5                     __end_of_num_to_string:
  4428                           
  4429                           	psect	text25
  4430     0F82                     __ptext25:	
  4431 ;; *************** function ___lwmod *****************
  4432 ;; Defined at:
  4433 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  4434 ;; Parameters:    Size  Location     Type
  4435 ;;  divisor         2    2[COMMON] unsigned int 
  4436 ;;  dividend        2    4[COMMON] unsigned int 
  4437 ;; Auto vars:     Size  Location     Type
  4438 ;;  counter         1    6[COMMON] unsigned char 
  4439 ;; Return value:  Size  Location     Type
  4440 ;;                  2    2[COMMON] unsigned int 
  4441 ;; Registers used:
  4442 ;;		wreg, status,2, status,0, btemp+1
  4443 ;; Tracked objects:
  4444 ;;		On entry : 0/0
  4445 ;;		On exit  : 0/0
  4446 ;;		Unchanged: 0/0
  4447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4448 ;;      Params:         4       0       0       0       0
  4449 ;;      Locals:         1       0       0       0       0
  4450 ;;      Temps:          0       0       0       0       0
  4451 ;;      Totals:         5       0       0       0       0
  4452 ;;Total ram usage:        5 bytes
  4453 ;; Hardware stack levels used: 1
  4454 ;; Hardware stack levels required when called: 2
  4455 ;; This function calls:
  4456 ;;		Nothing
  4457 ;; This function is called by:
  4458 ;;		_num_to_string
  4459 ;; This function uses a non-reentrant model
  4460 ;;
  4461                           
  4462     0F82                     ___lwmod:	
  4463                           ;psect for function ___lwmod
  4464                           
  4465     0F82                     l1581:	
  4466                           ;incstack = 0
  4467                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  4468                           
  4469     0F82  0872               	movf	___lwmod@divisor,w
  4470     0F83  0473               	iorwf	___lwmod@divisor+1,w
  4471     0F84  1903               	btfsc	3,2
  4472     0F85  2F87               	goto	u1021
  4473     0F86  2F88               	goto	u1020
  4474     0F87                     u1021:
  4475     0F87  2FB7               	goto	l1599
  4476     0F88                     u1020:
  4477     0F88                     l1583:
  4478     0F88  01F6               	clrf	___lwmod@counter
  4479     0F89  0AF6               	incf	___lwmod@counter,f
  4480     0F8A  2F96               	goto	l1589
  4481     0F8B                     l1585:
  4482     0F8B  3001               	movlw	1
  4483     0F8C                     u1035:
  4484     0F8C  1003               	clrc
  4485     0F8D  0DF2               	rlf	___lwmod@divisor,f
  4486     0F8E  0DF3               	rlf	___lwmod@divisor+1,f
  4487     0F8F  3EFF               	addlw	-1
  4488     0F90  1D03               	skipz
  4489     0F91  2F8C               	goto	u1035
  4490     0F92                     l1587:
  4491     0F92  3001               	movlw	1
  4492     0F93  00FF               	movwf	btemp+1
  4493     0F94  087F               	movf	btemp+1,w
  4494     0F95  07F6               	addwf	___lwmod@counter,f
  4495     0F96                     l1589:
  4496     0F96  1FF3               	btfss	___lwmod@divisor+1,7
  4497     0F97  2F99               	goto	u1041
  4498     0F98  2F9A               	goto	u1040
  4499     0F99                     u1041:
  4500     0F99  2F8B               	goto	l1585
  4501     0F9A                     u1040:
  4502     0F9A                     l1591:
  4503     0F9A  0873               	movf	___lwmod@divisor+1,w
  4504     0F9B  0275               	subwf	___lwmod@dividend+1,w
  4505     0F9C  1D03               	skipz
  4506     0F9D  2FA0               	goto	u1055
  4507     0F9E  0872               	movf	___lwmod@divisor,w
  4508     0F9F  0274               	subwf	___lwmod@dividend,w
  4509     0FA0                     u1055:
  4510     0FA0  1C03               	skipc
  4511     0FA1  2FA3               	goto	u1051
  4512     0FA2  2FA4               	goto	u1050
  4513     0FA3                     u1051:
  4514     0FA3  2FAA               	goto	l1595
  4515     0FA4                     u1050:
  4516     0FA4                     l1593:
  4517     0FA4  0872               	movf	___lwmod@divisor,w
  4518     0FA5  02F4               	subwf	___lwmod@dividend,f
  4519     0FA6  0873               	movf	___lwmod@divisor+1,w
  4520     0FA7  1C03               	skipc
  4521     0FA8  03F5               	decf	___lwmod@dividend+1,f
  4522     0FA9  02F5               	subwf	___lwmod@dividend+1,f
  4523     0FAA                     l1595:
  4524     0FAA  3001               	movlw	1
  4525     0FAB                     u1065:
  4526     0FAB  1003               	clrc
  4527     0FAC  0CF3               	rrf	___lwmod@divisor+1,f
  4528     0FAD  0CF2               	rrf	___lwmod@divisor,f
  4529     0FAE  3EFF               	addlw	-1
  4530     0FAF  1D03               	skipz
  4531     0FB0  2FAB               	goto	u1065
  4532     0FB1                     l1597:
  4533     0FB1  3001               	movlw	1
  4534     0FB2  02F6               	subwf	___lwmod@counter,f
  4535     0FB3  1D03               	btfss	3,2
  4536     0FB4  2FB6               	goto	u1071
  4537     0FB5  2FB7               	goto	u1070
  4538     0FB6                     u1071:
  4539     0FB6  2F9A               	goto	l1591
  4540     0FB7                     u1070:
  4541     0FB7                     l1599:
  4542     0FB7  0875               	movf	___lwmod@dividend+1,w
  4543     0FB8  00F3               	movwf	?___lwmod+1
  4544     0FB9  0874               	movf	___lwmod@dividend,w
  4545     0FBA  00F2               	movwf	?___lwmod
  4546     0FBB                     l677:
  4547     0FBB  0008               	return
  4548     0FBC                     __end_of___lwmod:
  4549                           
  4550                           	psect	text26
  4551     0FBC                     __ptext26:	
  4552 ;; *************** function ___lwdiv *****************
  4553 ;; Defined at:
  4554 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  4555 ;; Parameters:    Size  Location     Type
  4556 ;;  divisor         2    2[COMMON] unsigned int 
  4557 ;;  dividend        2    4[COMMON] unsigned int 
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;  quotient        2    6[COMMON] unsigned int 
  4560 ;;  counter         1    8[COMMON] unsigned char 
  4561 ;; Return value:  Size  Location     Type
  4562 ;;                  2    2[COMMON] unsigned int 
  4563 ;; Registers used:
  4564 ;;		wreg, status,2, status,0, btemp+1
  4565 ;; Tracked objects:
  4566 ;;		On entry : 0/0
  4567 ;;		On exit  : 0/0
  4568 ;;		Unchanged: 0/0
  4569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4570 ;;      Params:         4       0       0       0       0
  4571 ;;      Locals:         3       0       0       0       0
  4572 ;;      Temps:          0       0       0       0       0
  4573 ;;      Totals:         7       0       0       0       0
  4574 ;;Total ram usage:        7 bytes
  4575 ;; Hardware stack levels used: 1
  4576 ;; Hardware stack levels required when called: 2
  4577 ;; This function calls:
  4578 ;;		Nothing
  4579 ;; This function is called by:
  4580 ;;		_num_to_string
  4581 ;; This function uses a non-reentrant model
  4582 ;;
  4583                           
  4584     0FBC                     ___lwdiv:	
  4585                           ;psect for function ___lwdiv
  4586                           
  4587     0FBC                     l1555:	
  4588                           ;incstack = 0
  4589                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  4590                           
  4591     0FBC  01F6               	clrf	___lwdiv@quotient
  4592     0FBD  01F7               	clrf	___lwdiv@quotient+1
  4593     0FBE                     l1557:
  4594     0FBE  0872               	movf	___lwdiv@divisor,w
  4595     0FBF  0473               	iorwf	___lwdiv@divisor+1,w
  4596     0FC0  1903               	btfsc	3,2
  4597     0FC1  2FC3               	goto	u951
  4598     0FC2  2FC4               	goto	u950
  4599     0FC3                     u951:
  4600     0FC3  2FFB               	goto	l1577
  4601     0FC4                     u950:
  4602     0FC4                     l1559:
  4603     0FC4  01F8               	clrf	___lwdiv@counter
  4604     0FC5  0AF8               	incf	___lwdiv@counter,f
  4605     0FC6  2FD2               	goto	l1565
  4606     0FC7                     l1561:
  4607     0FC7  3001               	movlw	1
  4608     0FC8                     u965:
  4609     0FC8  1003               	clrc
  4610     0FC9  0DF2               	rlf	___lwdiv@divisor,f
  4611     0FCA  0DF3               	rlf	___lwdiv@divisor+1,f
  4612     0FCB  3EFF               	addlw	-1
  4613     0FCC  1D03               	skipz
  4614     0FCD  2FC8               	goto	u965
  4615     0FCE                     l1563:
  4616     0FCE  3001               	movlw	1
  4617     0FCF  00FF               	movwf	btemp+1
  4618     0FD0  087F               	movf	btemp+1,w
  4619     0FD1  07F8               	addwf	___lwdiv@counter,f
  4620     0FD2                     l1565:
  4621     0FD2  1FF3               	btfss	___lwdiv@divisor+1,7
  4622     0FD3  2FD5               	goto	u971
  4623     0FD4  2FD6               	goto	u970
  4624     0FD5                     u971:
  4625     0FD5  2FC7               	goto	l1561
  4626     0FD6                     u970:
  4627     0FD6                     l1567:
  4628     0FD6  3001               	movlw	1
  4629     0FD7                     u985:
  4630     0FD7  1003               	clrc
  4631     0FD8  0DF6               	rlf	___lwdiv@quotient,f
  4632     0FD9  0DF7               	rlf	___lwdiv@quotient+1,f
  4633     0FDA  3EFF               	addlw	-1
  4634     0FDB  1D03               	skipz
  4635     0FDC  2FD7               	goto	u985
  4636     0FDD  0873               	movf	___lwdiv@divisor+1,w
  4637     0FDE  0275               	subwf	___lwdiv@dividend+1,w
  4638     0FDF  1D03               	skipz
  4639     0FE0  2FE3               	goto	u995
  4640     0FE1  0872               	movf	___lwdiv@divisor,w
  4641     0FE2  0274               	subwf	___lwdiv@dividend,w
  4642     0FE3                     u995:
  4643     0FE3  1C03               	skipc
  4644     0FE4  2FE6               	goto	u991
  4645     0FE5  2FE7               	goto	u990
  4646     0FE6                     u991:
  4647     0FE6  2FEE               	goto	l1573
  4648     0FE7                     u990:
  4649     0FE7                     l1569:
  4650     0FE7  0872               	movf	___lwdiv@divisor,w
  4651     0FE8  02F4               	subwf	___lwdiv@dividend,f
  4652     0FE9  0873               	movf	___lwdiv@divisor+1,w
  4653     0FEA  1C03               	skipc
  4654     0FEB  03F5               	decf	___lwdiv@dividend+1,f
  4655     0FEC  02F5               	subwf	___lwdiv@dividend+1,f
  4656     0FED                     l1571:
  4657     0FED  1476               	bsf	___lwdiv@quotient,0
  4658     0FEE                     l1573:
  4659     0FEE  3001               	movlw	1
  4660     0FEF                     u1005:
  4661     0FEF  1003               	clrc
  4662     0FF0  0CF3               	rrf	___lwdiv@divisor+1,f
  4663     0FF1  0CF2               	rrf	___lwdiv@divisor,f
  4664     0FF2  3EFF               	addlw	-1
  4665     0FF3  1D03               	skipz
  4666     0FF4  2FEF               	goto	u1005
  4667     0FF5                     l1575:
  4668     0FF5  3001               	movlw	1
  4669     0FF6  02F8               	subwf	___lwdiv@counter,f
  4670     0FF7  1D03               	btfss	3,2
  4671     0FF8  2FFA               	goto	u1011
  4672     0FF9  2FFB               	goto	u1010
  4673     0FFA                     u1011:
  4674     0FFA  2FD6               	goto	l1567
  4675     0FFB                     u1010:
  4676     0FFB                     l1577:
  4677     0FFB  0877               	movf	___lwdiv@quotient+1,w
  4678     0FFC  00F3               	movwf	?___lwdiv+1
  4679     0FFD  0876               	movf	___lwdiv@quotient,w
  4680     0FFE  00F2               	movwf	?___lwdiv
  4681     0FFF                     l667:
  4682     0FFF  0008               	return
  4683     1000                     __end_of___lwdiv:
  4684                           
  4685                           	psect	text27
  4686     07AB                     __ptext27:	
  4687 ;; *************** function _Lcd_Write_String *****************
  4688 ;; Defined at:
  4689 ;;		line 98 in file "LCD4b.c"
  4690 ;; Parameters:    Size  Location     Type
  4691 ;;  a               2    7[COMMON] PTR unsigned char 
  4692 ;;		 -> STR_7(4), STR_6(4), STR_5(3), STR_4(4), 
  4693 ;;		 -> STR_3(3), STR_2(3), STR_1(3), S_ired(2), 
  4694 ;;		 -> S_gas(4), S_hum(3), S_temp(4), 
  4695 ;; Auto vars:     Size  Location     Type
  4696 ;;  i               2    3[BANK0 ] int 
  4697 ;; Return value:  Size  Location     Type
  4698 ;;                  1    wreg      void 
  4699 ;; Registers used:
  4700 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4701 ;; Tracked objects:
  4702 ;;		On entry : 0/0
  4703 ;;		On exit  : 0/0
  4704 ;;		Unchanged: 0/0
  4705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4706 ;;      Params:         2       0       0       0       0
  4707 ;;      Locals:         0       2       0       0       0
  4708 ;;      Temps:          0       3       0       0       0
  4709 ;;      Totals:         2       5       0       0       0
  4710 ;;Total ram usage:        7 bytes
  4711 ;; Hardware stack levels used: 1
  4712 ;; Hardware stack levels required when called: 4
  4713 ;; This function calls:
  4714 ;;		_Lcd_Write_Char
  4715 ;; This function is called by:
  4716 ;;		_LDC_output
  4717 ;; This function uses a non-reentrant model
  4718 ;;
  4719                           
  4720     07AB                     _Lcd_Write_String:	
  4721                           ;psect for function _Lcd_Write_String
  4722                           
  4723     07AB                     l2139:	
  4724                           ;incstack = 0
  4725                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4726                           
  4727                           
  4728                           ;LCD4b.c: 99:     int i;;LCD4b.c: 100:     for (i = 0; a[i] != '\0'; i++)
  4729     07AB  1283               	bcf	3,5	;RP0=0, select bank0
  4730     07AC  1303               	bcf	3,6	;RP1=0, select bank0
  4731     07AD  01A3               	clrf	Lcd_Write_String@i
  4732     07AE  01A4               	clrf	Lcd_Write_String@i+1
  4733     07AF  2FD4               	goto	l2145
  4734     07B0                     l2141:
  4735                           
  4736                           ;LCD4b.c: 101:         Lcd_Write_Char(a[i]);
  4737     07B0  0823               	movf	Lcd_Write_String@i,w
  4738     07B1  0777               	addwf	Lcd_Write_String@a,w
  4739     07B2  00A1               	movwf	??_Lcd_Write_String+1
  4740     07B3  0878               	movf	Lcd_Write_String@a+1,w
  4741     07B4  00A0               	movwf	??_Lcd_Write_String
  4742     07B5  1803               	skipnc
  4743     07B6  0AA0               	incf	??_Lcd_Write_String,f
  4744     07B7  1FA3               	btfss	Lcd_Write_String@i,7
  4745     07B8  2FBA               	goto	u1670
  4746     07B9  03A0               	decf	??_Lcd_Write_String,f
  4747     07BA                     u1670:
  4748     07BA  1283               	bcf	3,5	;RP0=0, select bank0
  4749     07BB  1303               	bcf	3,6	;RP1=0, select bank0
  4750     07BC  0820               	movf	??_Lcd_Write_String,w
  4751     07BD  00A2               	movwf	??_Lcd_Write_String+2
  4752     07BE  0822               	movf	??_Lcd_Write_String+2,w
  4753     07BF  00FF               	movwf	btemp+1
  4754     07C0  0821               	movf	??_Lcd_Write_String+1,w
  4755     07C1  0084               	movwf	4
  4756     07C2  120A  158A  2000  120A  118A  	fcall	stringtab
  4757     07C7  120A  158A  2715  120A  118A  	fcall	_Lcd_Write_Char
  4758     07CC                     l2143:
  4759     07CC  3001               	movlw	1
  4760     07CD  1283               	bcf	3,5	;RP0=0, select bank0
  4761     07CE  1303               	bcf	3,6	;RP1=0, select bank0
  4762     07CF  07A3               	addwf	Lcd_Write_String@i,f
  4763     07D0  1803               	skipnc
  4764     07D1  0AA4               	incf	Lcd_Write_String@i+1,f
  4765     07D2  3000               	movlw	0
  4766     07D3  07A4               	addwf	Lcd_Write_String@i+1,f
  4767     07D4                     l2145:
  4768     07D4  0823               	movf	Lcd_Write_String@i,w
  4769     07D5  0777               	addwf	Lcd_Write_String@a,w
  4770     07D6  00A1               	movwf	??_Lcd_Write_String+1
  4771     07D7  0878               	movf	Lcd_Write_String@a+1,w
  4772     07D8  00A0               	movwf	??_Lcd_Write_String
  4773     07D9  1803               	skipnc
  4774     07DA  0AA0               	incf	??_Lcd_Write_String,f
  4775     07DB  1FA3               	btfss	Lcd_Write_String@i,7
  4776     07DC  2FDE               	goto	u1680
  4777     07DD  03A0               	decf	??_Lcd_Write_String,f
  4778     07DE                     u1680:
  4779     07DE  1283               	bcf	3,5	;RP0=0, select bank0
  4780     07DF  1303               	bcf	3,6	;RP1=0, select bank0
  4781     07E0  0820               	movf	??_Lcd_Write_String,w
  4782     07E1  00A2               	movwf	??_Lcd_Write_String+2
  4783     07E2  0822               	movf	??_Lcd_Write_String+2,w
  4784     07E3  00FF               	movwf	btemp+1
  4785     07E4  0821               	movf	??_Lcd_Write_String+1,w
  4786     07E5  0084               	movwf	4
  4787     07E6  120A  158A  2000  120A  118A  	fcall	stringtab
  4788     07EB  3A00               	xorlw	0
  4789     07EC  1D03               	skipz
  4790     07ED  2FEF               	goto	u1691
  4791     07EE  2FF0               	goto	u1690
  4792     07EF                     u1691:
  4793     07EF  2FB0               	goto	l2141
  4794     07F0                     u1690:
  4795     07F0                     l252:
  4796     07F0  0008               	return
  4797     07F1                     __end_of_Lcd_Write_String:
  4798                           
  4799                           	psect	text28
  4800     0F15                     __ptext28:	
  4801 ;; *************** function _Lcd_Write_Char *****************
  4802 ;; Defined at:
  4803 ;;		line 83 in file "LCD4b.c"
  4804 ;; Parameters:    Size  Location     Type
  4805 ;;  a               1    wreg     unsigned char 
  4806 ;; Auto vars:     Size  Location     Type
  4807 ;;  a               1    6[COMMON] unsigned char 
  4808 ;;  y               1    5[COMMON] unsigned char 
  4809 ;;  temp            1    4[COMMON] unsigned char 
  4810 ;; Return value:  Size  Location     Type
  4811 ;;                  1    wreg      void 
  4812 ;; Registers used:
  4813 ;;		wreg, status,2, status,0, pclath, cstack
  4814 ;; Tracked objects:
  4815 ;;		On entry : 0/0
  4816 ;;		On exit  : 0/0
  4817 ;;		Unchanged: 0/0
  4818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4819 ;;      Params:         0       0       0       0       0
  4820 ;;      Locals:         3       0       0       0       0
  4821 ;;      Temps:          1       0       0       0       0
  4822 ;;      Totals:         4       0       0       0       0
  4823 ;;Total ram usage:        4 bytes
  4824 ;; Hardware stack levels used: 1
  4825 ;; Hardware stack levels required when called: 3
  4826 ;; This function calls:
  4827 ;;		_Lcd_Port
  4828 ;; This function is called by:
  4829 ;;		_Lcd_Write_String
  4830 ;; This function uses a non-reentrant model
  4831 ;;
  4832                           
  4833     0F15                     _Lcd_Write_Char:	
  4834                           ;psect for function _Lcd_Write_Char
  4835                           
  4836                           
  4837                           ;incstack = 0
  4838                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4839                           ;Lcd_Write_Char@a stored from wreg
  4840     0F15  00F6               	movwf	Lcd_Write_Char@a
  4841     0F16                     l1953:
  4842                           
  4843                           ;LCD4b.c: 84:     char temp, y;;LCD4b.c: 85:     temp = a & 0x0F;
  4844     0F16  0876               	movf	Lcd_Write_Char@a,w
  4845     0F17  390F               	andlw	15
  4846     0F18  00F4               	movwf	Lcd_Write_Char@temp
  4847                           
  4848                           ;LCD4b.c: 86:     y = a & 0xF0;
  4849     0F19  0876               	movf	Lcd_Write_Char@a,w
  4850     0F1A  39F0               	andlw	240
  4851     0F1B  00F5               	movwf	Lcd_Write_Char@y
  4852     0F1C                     l1955:
  4853                           
  4854                           ;LCD4b.c: 87:     PORTDbits.RD2 = 1;
  4855     0F1C  1283               	bcf	3,5	;RP0=0, select bank0
  4856     0F1D  1303               	bcf	3,6	;RP1=0, select bank0
  4857     0F1E  1508               	bsf	8,2	;volatile
  4858     0F1F                     l1957:
  4859                           
  4860                           ;LCD4b.c: 88:     Lcd_Port(y >> 4);
  4861     0F1F  0875               	movf	Lcd_Write_Char@y,w
  4862     0F20  00F3               	movwf	??_Lcd_Write_Char
  4863     0F21  3004               	movlw	4
  4864     0F22                     u1345:
  4865     0F22  1003               	clrc
  4866     0F23  0CF3               	rrf	??_Lcd_Write_Char,f
  4867     0F24  3EFF               	addlw	-1
  4868     0F25  1D03               	skipz
  4869     0F26  2F22               	goto	u1345
  4870     0F27  0873               	movf	??_Lcd_Write_Char,w
  4871     0F28  120A  158A  26C5  120A  158A  	fcall	_Lcd_Port
  4872     0F2D                     l1959:
  4873                           
  4874                           ;LCD4b.c: 89:     RD3 = 1;
  4875     0F2D  1283               	bcf	3,5	;RP0=0, select bank0
  4876     0F2E  1303               	bcf	3,6	;RP1=0, select bank0
  4877     0F2F  1588               	bsf	8,3	;volatile
  4878     0F30                     l1961:
  4879                           
  4880                           ;LCD4b.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4881     0F30  301A               	movlw	26
  4882     0F31  00F3               	movwf	??_Lcd_Write_Char
  4883     0F32                     u1867:
  4884     0F32  0BF3               	decfsz	??_Lcd_Write_Char,f
  4885     0F33  2F32               	goto	u1867
  4886     0F34  0000               	nop
  4887     0F35                     l1963:
  4888                           
  4889                           ;LCD4b.c: 91:     RD3 = 0;
  4890     0F35  1283               	bcf	3,5	;RP0=0, select bank0
  4891     0F36  1303               	bcf	3,6	;RP1=0, select bank0
  4892     0F37  1188               	bcf	8,3	;volatile
  4893     0F38                     l1965:
  4894                           
  4895                           ;LCD4b.c: 92:     Lcd_Port(temp);
  4896     0F38  0874               	movf	Lcd_Write_Char@temp,w
  4897     0F39  120A  158A  26C5  120A  158A  	fcall	_Lcd_Port
  4898     0F3E                     l1967:
  4899                           
  4900                           ;LCD4b.c: 93:     RD3 = 1;
  4901     0F3E  1283               	bcf	3,5	;RP0=0, select bank0
  4902     0F3F  1303               	bcf	3,6	;RP1=0, select bank0
  4903     0F40  1588               	bsf	8,3	;volatile
  4904     0F41                     l1969:
  4905                           
  4906                           ;LCD4b.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4907     0F41  301A               	movlw	26
  4908     0F42  00F3               	movwf	??_Lcd_Write_Char
  4909     0F43                     u1877:
  4910     0F43  0BF3               	decfsz	??_Lcd_Write_Char,f
  4911     0F44  2F43               	goto	u1877
  4912     0F45  0000               	nop
  4913     0F46                     l1971:
  4914                           
  4915                           ;LCD4b.c: 95:     RD3 = 0;
  4916     0F46  1283               	bcf	3,5	;RP0=0, select bank0
  4917     0F47  1303               	bcf	3,6	;RP1=0, select bank0
  4918     0F48  1188               	bcf	8,3	;volatile
  4919     0F49                     l246:
  4920     0F49  0008               	return
  4921     0F4A                     __end_of_Lcd_Write_Char:
  4922                           
  4923                           	psect	text29
  4924     0685                     __ptext29:	
  4925 ;; *************** function _Lcd_Set_Cursor *****************
  4926 ;; Defined at:
  4927 ;;		line 48 in file "LCD4b.c"
  4928 ;; Parameters:    Size  Location     Type
  4929 ;;  a               1    wreg     unsigned char 
  4930 ;;  b               1    6[COMMON] unsigned char 
  4931 ;; Auto vars:     Size  Location     Type
  4932 ;;  a               1    0[BANK0 ] unsigned char 
  4933 ;;  temp            1    3[BANK0 ] unsigned char 
  4934 ;;  y               1    2[BANK0 ] unsigned char 
  4935 ;;  z               1    1[BANK0 ] unsigned char 
  4936 ;; Return value:  Size  Location     Type
  4937 ;;                  1    wreg      void 
  4938 ;; Registers used:
  4939 ;;		wreg, status,2, status,0, pclath, cstack
  4940 ;; Tracked objects:
  4941 ;;		On entry : 0/0
  4942 ;;		On exit  : 0/0
  4943 ;;		Unchanged: 0/0
  4944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4945 ;;      Params:         1       0       0       0       0
  4946 ;;      Locals:         0       4       0       0       0
  4947 ;;      Temps:          1       0       0       0       0
  4948 ;;      Totals:         2       4       0       0       0
  4949 ;;Total ram usage:        6 bytes
  4950 ;; Hardware stack levels used: 1
  4951 ;; Hardware stack levels required when called: 4
  4952 ;; This function calls:
  4953 ;;		_Lcd_Cmd
  4954 ;; This function is called by:
  4955 ;;		_LDC_output
  4956 ;; This function uses a non-reentrant model
  4957 ;;
  4958                           
  4959     0685                     _Lcd_Set_Cursor:	
  4960                           ;psect for function _Lcd_Set_Cursor
  4961                           
  4962                           
  4963                           ;incstack = 0
  4964                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4965                           ;Lcd_Set_Cursor@a stored from wreg
  4966     0685  1283               	bcf	3,5	;RP0=0, select bank0
  4967     0686  1303               	bcf	3,6	;RP1=0, select bank0
  4968     0687  00A0               	movwf	Lcd_Set_Cursor@a
  4969     0688                     l2119:
  4970                           
  4971                           ;LCD4b.c: 49:     char temp, z, y;;LCD4b.c: 50:     if (a == 1) {
  4972     0688  0320               	decf	Lcd_Set_Cursor@a,w
  4973     0689  1D03               	btfss	3,2
  4974     068A  2E8C               	goto	u1631
  4975     068B  2E8D               	goto	u1630
  4976     068C                     u1631:
  4977     068C  2EAC               	goto	l2129
  4978     068D                     u1630:
  4979     068D                     l2121:
  4980                           
  4981                           ;LCD4b.c: 51:         temp = 0x80 + b - 1;
  4982     068D  0876               	movf	Lcd_Set_Cursor@b,w
  4983     068E  3E7F               	addlw	127
  4984     068F  00A3               	movwf	Lcd_Set_Cursor@temp
  4985                           
  4986                           ;LCD4b.c: 52:         z = temp >> 4;
  4987     0690  0823               	movf	Lcd_Set_Cursor@temp,w
  4988     0691  00F7               	movwf	??_Lcd_Set_Cursor
  4989     0692  3004               	movlw	4
  4990     0693                     u1645:
  4991     0693  1003               	clrc
  4992     0694  0CF7               	rrf	??_Lcd_Set_Cursor,f
  4993     0695  3EFF               	addlw	-1
  4994     0696  1D03               	skipz
  4995     0697  2E93               	goto	u1645
  4996     0698  0877               	movf	??_Lcd_Set_Cursor,w
  4997     0699  00A1               	movwf	Lcd_Set_Cursor@z
  4998     069A                     l2123:
  4999                           
  5000                           ;LCD4b.c: 53:         y = temp & 0x0F;
  5001     069A  0823               	movf	Lcd_Set_Cursor@temp,w
  5002     069B  390F               	andlw	15
  5003     069C  00A2               	movwf	Lcd_Set_Cursor@y
  5004     069D                     l2125:
  5005                           
  5006                           ;LCD4b.c: 54:         Lcd_Cmd(z);
  5007     069D  0821               	movf	Lcd_Set_Cursor@z,w
  5008     069E  120A  158A  26AB  120A  118A  	fcall	_Lcd_Cmd
  5009     06A3                     l2127:
  5010                           
  5011                           ;LCD4b.c: 55:         Lcd_Cmd(y);
  5012     06A3  1283               	bcf	3,5	;RP0=0, select bank0
  5013     06A4  1303               	bcf	3,6	;RP1=0, select bank0
  5014     06A5  0822               	movf	Lcd_Set_Cursor@y,w
  5015     06A6  120A  158A  26AB  120A  118A  	fcall	_Lcd_Cmd
  5016                           
  5017                           ;LCD4b.c: 56:     } else if (a == 2) {
  5018     06AB  2ED0               	goto	l240
  5019     06AC                     l2129:
  5020     06AC  3002               	movlw	2
  5021     06AD  0620               	xorwf	Lcd_Set_Cursor@a,w
  5022     06AE  1D03               	btfss	3,2
  5023     06AF  2EB1               	goto	u1651
  5024     06B0  2EB2               	goto	u1650
  5025     06B1                     u1651:
  5026     06B1  2ED0               	goto	l240
  5027     06B2                     u1650:
  5028     06B2                     l2131:
  5029                           
  5030                           ;LCD4b.c: 57:         temp = 0xC0 + b - 1;
  5031     06B2  0876               	movf	Lcd_Set_Cursor@b,w
  5032     06B3  3EBF               	addlw	191
  5033     06B4  00A3               	movwf	Lcd_Set_Cursor@temp
  5034                           
  5035                           ;LCD4b.c: 58:         z = temp >> 4;
  5036     06B5  0823               	movf	Lcd_Set_Cursor@temp,w
  5037     06B6  00F7               	movwf	??_Lcd_Set_Cursor
  5038     06B7  3004               	movlw	4
  5039     06B8                     u1665:
  5040     06B8  1003               	clrc
  5041     06B9  0CF7               	rrf	??_Lcd_Set_Cursor,f
  5042     06BA  3EFF               	addlw	-1
  5043     06BB  1D03               	skipz
  5044     06BC  2EB8               	goto	u1665
  5045     06BD  0877               	movf	??_Lcd_Set_Cursor,w
  5046     06BE  00A1               	movwf	Lcd_Set_Cursor@z
  5047     06BF                     l2133:
  5048                           
  5049                           ;LCD4b.c: 59:         y = temp & 0x0F;
  5050     06BF  0823               	movf	Lcd_Set_Cursor@temp,w
  5051     06C0  390F               	andlw	15
  5052     06C1  00A2               	movwf	Lcd_Set_Cursor@y
  5053     06C2                     l2135:
  5054                           
  5055                           ;LCD4b.c: 60:         Lcd_Cmd(z);
  5056     06C2  0821               	movf	Lcd_Set_Cursor@z,w
  5057     06C3  120A  158A  26AB  120A  118A  	fcall	_Lcd_Cmd
  5058     06C8                     l2137:
  5059                           
  5060                           ;LCD4b.c: 61:         Lcd_Cmd(y);
  5061     06C8  1283               	bcf	3,5	;RP0=0, select bank0
  5062     06C9  1303               	bcf	3,6	;RP1=0, select bank0
  5063     06CA  0822               	movf	Lcd_Set_Cursor@y,w
  5064     06CB  120A  158A  26AB  120A  118A  	fcall	_Lcd_Cmd
  5065     06D0                     l240:
  5066     06D0  0008               	return
  5067     06D1                     __end_of_Lcd_Set_Cursor:
  5068                           
  5069                           	psect	text30
  5070     0E88                     __ptext30:	
  5071 ;; *************** function _Lcd_Clear *****************
  5072 ;; Defined at:
  5073 ;;		line 43 in file "LCD4b.c"
  5074 ;; Parameters:    Size  Location     Type
  5075 ;;		None
  5076 ;; Auto vars:     Size  Location     Type
  5077 ;;		None
  5078 ;; Return value:  Size  Location     Type
  5079 ;;                  1    wreg      void 
  5080 ;; Registers used:
  5081 ;;		wreg, status,2, status,0, pclath, cstack
  5082 ;; Tracked objects:
  5083 ;;		On entry : 0/0
  5084 ;;		On exit  : 0/0
  5085 ;;		Unchanged: 0/0
  5086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5087 ;;      Params:         0       0       0       0       0
  5088 ;;      Locals:         0       0       0       0       0
  5089 ;;      Temps:          0       0       0       0       0
  5090 ;;      Totals:         0       0       0       0       0
  5091 ;;Total ram usage:        0 bytes
  5092 ;; Hardware stack levels used: 1
  5093 ;; Hardware stack levels required when called: 4
  5094 ;; This function calls:
  5095 ;;		_Lcd_Cmd
  5096 ;; This function is called by:
  5097 ;;		_LDC_output
  5098 ;; This function uses a non-reentrant model
  5099 ;;
  5100                           
  5101     0E88                     _Lcd_Clear:	
  5102                           ;psect for function _Lcd_Clear
  5103                           
  5104     0E88                     l2117:	
  5105                           ;incstack = 0
  5106                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  5107                           
  5108                           
  5109                           ;LCD4b.c: 44:     Lcd_Cmd(0);
  5110     0E88  3000               	movlw	0
  5111     0E89  120A  158A  26AB  120A  158A  	fcall	_Lcd_Cmd
  5112                           
  5113                           ;LCD4b.c: 45:     Lcd_Cmd(1);
  5114     0E8E  3001               	movlw	1
  5115     0E8F  120A  158A  26AB  120A  158A  	fcall	_Lcd_Cmd
  5116     0E94                     l234:
  5117     0E94  0008               	return
  5118     0E95                     __end_of_Lcd_Clear:
  5119                           
  5120                           	psect	text31
  5121     0EAB                     __ptext31:	
  5122 ;; *************** function _Lcd_Cmd *****************
  5123 ;; Defined at:
  5124 ;;		line 35 in file "LCD4b.c"
  5125 ;; Parameters:    Size  Location     Type
  5126 ;;  a               1    wreg     unsigned char 
  5127 ;; Auto vars:     Size  Location     Type
  5128 ;;  a               1    5[COMMON] unsigned char 
  5129 ;; Return value:  Size  Location     Type
  5130 ;;                  1    wreg      void 
  5131 ;; Registers used:
  5132 ;;		wreg, status,2, status,0, pclath, cstack
  5133 ;; Tracked objects:
  5134 ;;		On entry : 0/0
  5135 ;;		On exit  : 0/0
  5136 ;;		Unchanged: 0/0
  5137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5138 ;;      Params:         0       0       0       0       0
  5139 ;;      Locals:         1       0       0       0       0
  5140 ;;      Temps:          2       0       0       0       0
  5141 ;;      Totals:         3       0       0       0       0
  5142 ;;Total ram usage:        3 bytes
  5143 ;; Hardware stack levels used: 1
  5144 ;; Hardware stack levels required when called: 3
  5145 ;; This function calls:
  5146 ;;		_Lcd_Port
  5147 ;; This function is called by:
  5148 ;;		_Lcd_Clear
  5149 ;;		_Lcd_Set_Cursor
  5150 ;;		_Lcd_Init
  5151 ;;		_Lcd_Shift_Right
  5152 ;;		_Lcd_Shift_Left
  5153 ;; This function uses a non-reentrant model
  5154 ;;
  5155                           
  5156     0EAB                     _Lcd_Cmd:	
  5157                           ;psect for function _Lcd_Cmd
  5158                           
  5159                           
  5160                           ;incstack = 0
  5161                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  5162                           ;Lcd_Cmd@a stored from wreg
  5163     0EAB  00F5               	movwf	Lcd_Cmd@a
  5164     0EAC                     l1943:
  5165                           
  5166                           ;LCD4b.c: 36:     PORTDbits.RD2 = 0;
  5167     0EAC  1283               	bcf	3,5	;RP0=0, select bank0
  5168     0EAD  1303               	bcf	3,6	;RP1=0, select bank0
  5169     0EAE  1108               	bcf	8,2	;volatile
  5170     0EAF                     l1945:
  5171                           
  5172                           ;LCD4b.c: 37:     Lcd_Port(a);
  5173     0EAF  0875               	movf	Lcd_Cmd@a,w
  5174     0EB0  120A  158A  26C5  120A  158A  	fcall	_Lcd_Port
  5175     0EB5                     l1947:
  5176                           
  5177                           ;LCD4b.c: 38:     RD3 = 1;
  5178     0EB5  1283               	bcf	3,5	;RP0=0, select bank0
  5179     0EB6  1303               	bcf	3,6	;RP1=0, select bank0
  5180     0EB7  1588               	bsf	8,3	;volatile
  5181     0EB8                     l1949:
  5182                           
  5183                           ;LCD4b.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  5184     0EB8  300B               	movlw	11
  5185     0EB9  00F4               	movwf	??_Lcd_Cmd+1
  5186     0EBA  3062               	movlw	98
  5187     0EBB  00F3               	movwf	??_Lcd_Cmd
  5188     0EBC                     u1887:
  5189     0EBC  0BF3               	decfsz	??_Lcd_Cmd,f
  5190     0EBD  2EBC               	goto	u1887
  5191     0EBE  0BF4               	decfsz	??_Lcd_Cmd+1,f
  5192     0EBF  2EBC               	goto	u1887
  5193     0EC0  0000               	nop
  5194     0EC1                     l1951:
  5195                           
  5196                           ;LCD4b.c: 40:     RD3 = 0;
  5197     0EC1  1283               	bcf	3,5	;RP0=0, select bank0
  5198     0EC2  1303               	bcf	3,6	;RP1=0, select bank0
  5199     0EC3  1188               	bcf	8,3	;volatile
  5200     0EC4                     l231:
  5201     0EC4  0008               	return
  5202     0EC5                     __end_of_Lcd_Cmd:
  5203                           
  5204                           	psect	text32
  5205     0EC5                     __ptext32:	
  5206 ;; *************** function _Lcd_Port *****************
  5207 ;; Defined at:
  5208 ;;		line 13 in file "LCD4b.c"
  5209 ;; Parameters:    Size  Location     Type
  5210 ;;  a               1    wreg     unsigned char 
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;  a               1    2[COMMON] unsigned char 
  5213 ;; Return value:  Size  Location     Type
  5214 ;;                  1    wreg      void 
  5215 ;; Registers used:
  5216 ;;		wreg
  5217 ;; Tracked objects:
  5218 ;;		On entry : 0/0
  5219 ;;		On exit  : 0/0
  5220 ;;		Unchanged: 0/0
  5221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5222 ;;      Params:         0       0       0       0       0
  5223 ;;      Locals:         1       0       0       0       0
  5224 ;;      Temps:          0       0       0       0       0
  5225 ;;      Totals:         1       0       0       0       0
  5226 ;;Total ram usage:        1 bytes
  5227 ;; Hardware stack levels used: 1
  5228 ;; Hardware stack levels required when called: 2
  5229 ;; This function calls:
  5230 ;;		Nothing
  5231 ;; This function is called by:
  5232 ;;		_Lcd_Cmd
  5233 ;;		_Lcd_Init
  5234 ;;		_Lcd_Write_Char
  5235 ;; This function uses a non-reentrant model
  5236 ;;
  5237                           
  5238     0EC5                     _Lcd_Port:	
  5239                           ;psect for function _Lcd_Port
  5240                           
  5241                           
  5242                           ;incstack = 0
  5243                           ; Regs used in _Lcd_Port: [wreg]
  5244                           ;Lcd_Port@a stored from wreg
  5245     0EC5  00F2               	movwf	Lcd_Port@a
  5246     0EC6                     l1933:
  5247                           
  5248                           ;LCD4b.c: 14:     if (a & 1)
  5249     0EC6  1C72               	btfss	Lcd_Port@a,0
  5250     0EC7  2EC9               	goto	u1301
  5251     0EC8  2ECA               	goto	u1300
  5252     0EC9                     u1301:
  5253     0EC9  2ECE               	goto	l220
  5254     0ECA                     u1300:
  5255     0ECA                     l1935:
  5256                           
  5257                           ;LCD4b.c: 15:         RD4 = 1;
  5258     0ECA  1283               	bcf	3,5	;RP0=0, select bank0
  5259     0ECB  1303               	bcf	3,6	;RP1=0, select bank0
  5260     0ECC  1608               	bsf	8,4	;volatile
  5261     0ECD  2ED1               	goto	l221
  5262     0ECE                     l220:	
  5263                           ;LCD4b.c: 16:     else
  5264                           
  5265                           
  5266                           ;LCD4b.c: 17:         RD4 = 0;
  5267     0ECE  1283               	bcf	3,5	;RP0=0, select bank0
  5268     0ECF  1303               	bcf	3,6	;RP1=0, select bank0
  5269     0ED0  1208               	bcf	8,4	;volatile
  5270     0ED1                     l221:
  5271                           
  5272                           ;LCD4b.c: 19:     if (a & 2)
  5273     0ED1  1CF2               	btfss	Lcd_Port@a,1
  5274     0ED2  2ED4               	goto	u1311
  5275     0ED3  2ED5               	goto	u1310
  5276     0ED4                     u1311:
  5277     0ED4  2ED7               	goto	l222
  5278     0ED5                     u1310:
  5279     0ED5                     l1937:
  5280                           
  5281                           ;LCD4b.c: 20:         RD5 = 1;
  5282     0ED5  1688               	bsf	8,5	;volatile
  5283     0ED6  2ED8               	goto	l223
  5284     0ED7                     l222:	
  5285                           ;LCD4b.c: 21:     else
  5286                           
  5287                           
  5288                           ;LCD4b.c: 22:         RD5 = 0;
  5289     0ED7  1288               	bcf	8,5	;volatile
  5290     0ED8                     l223:
  5291                           
  5292                           ;LCD4b.c: 24:     if (a & 4)
  5293     0ED8  1D72               	btfss	Lcd_Port@a,2
  5294     0ED9  2EDB               	goto	u1321
  5295     0EDA  2EDC               	goto	u1320
  5296     0EDB                     u1321:
  5297     0EDB  2EDE               	goto	l224
  5298     0EDC                     u1320:
  5299     0EDC                     l1939:
  5300                           
  5301                           ;LCD4b.c: 25:         RD6 = 1;
  5302     0EDC  1708               	bsf	8,6	;volatile
  5303     0EDD  2EDF               	goto	l225
  5304     0EDE                     l224:	
  5305                           ;LCD4b.c: 26:     else
  5306                           
  5307                           
  5308                           ;LCD4b.c: 27:         RD6 = 0;
  5309     0EDE  1308               	bcf	8,6	;volatile
  5310     0EDF                     l225:
  5311                           
  5312                           ;LCD4b.c: 29:     if (a & 8)
  5313     0EDF  1DF2               	btfss	Lcd_Port@a,3
  5314     0EE0  2EE2               	goto	u1331
  5315     0EE1  2EE3               	goto	u1330
  5316     0EE2                     u1331:
  5317     0EE2  2EE5               	goto	l226
  5318     0EE3                     u1330:
  5319     0EE3                     l1941:
  5320                           
  5321                           ;LCD4b.c: 30:         RD7 = 1;
  5322     0EE3  1788               	bsf	8,7	;volatile
  5323     0EE4  2EE6               	goto	l228
  5324     0EE5                     l226:	
  5325                           ;LCD4b.c: 31:     else
  5326                           
  5327                           
  5328                           ;LCD4b.c: 32:         RD7 = 0;
  5329     0EE5  1388               	bcf	8,7	;volatile
  5330     0EE6                     l228:
  5331     0EE6  0008               	return
  5332     0EE7                     __end_of_Lcd_Port:
  5333                           
  5334                           	psect	text33
  5335     0E95                     __ptext33:	
  5336 ;; *************** function _isr *****************
  5337 ;; Defined at:
  5338 ;;		line 88 in file "master.c"
  5339 ;; Parameters:    Size  Location     Type
  5340 ;;		None
  5341 ;; Auto vars:     Size  Location     Type
  5342 ;;		None
  5343 ;; Return value:  Size  Location     Type
  5344 ;;                  1    wreg      void 
  5345 ;; Registers used:
  5346 ;;		wreg, pclath, cstack
  5347 ;; Tracked objects:
  5348 ;;		On entry : 0/0
  5349 ;;		On exit  : 0/0
  5350 ;;		Unchanged: 0/0
  5351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5352 ;;      Params:         0       0       0       0       0
  5353 ;;      Locals:         0       0       0       0       0
  5354 ;;      Temps:          2       0       0       0       0
  5355 ;;      Totals:         2       0       0       0       0
  5356 ;;Total ram usage:        2 bytes
  5357 ;; Hardware stack levels used: 1
  5358 ;; Hardware stack levels required when called: 1
  5359 ;; This function calls:
  5360 ;;		_UART_read_char
  5361 ;; This function is called by:
  5362 ;;		Interrupt level 1
  5363 ;; This function uses a non-reentrant model
  5364 ;;
  5365                           
  5366     0E95                     _isr:	
  5367                           ;psect for function _isr
  5368                           
  5369     0E95                     i1l1353:
  5370                           
  5371                           ;master.c: 89:     if(RCIF){
  5372     0E95  1283               	bcf	3,5	;RP0=0, select bank0
  5373     0E96  1303               	bcf	3,6	;RP1=0, select bank0
  5374     0E97  1E8C               	btfss	12,5	;volatile
  5375     0E98  2E9A               	goto	u63_21
  5376     0E99  2E9B               	goto	u63_20
  5377     0E9A                     u63_21:
  5378     0E9A  2EA4               	goto	i1l96
  5379     0E9B                     u63_20:
  5380     0E9B                     i1l1355:
  5381                           
  5382                           ;master.c: 90:         servoPos = UART_read_char();
  5383     0E9B  120A  158A  264C  120A  158A  	fcall	_UART_read_char
  5384     0EA0  00FA               	movwf	_servoPos
  5385     0EA1                     i1l1357:
  5386                           
  5387                           ;master.c: 91:         RCIF = 0;
  5388     0EA1  1283               	bcf	3,5	;RP0=0, select bank0
  5389     0EA2  1303               	bcf	3,6	;RP1=0, select bank0
  5390     0EA3  128C               	bcf	12,5	;volatile
  5391     0EA4                     i1l96:
  5392     0EA4  0871               	movf	??_isr+1,w
  5393     0EA5  008A               	movwf	10
  5394     0EA6  0E70               	swapf	??_isr,w
  5395     0EA7  0083               	movwf	3
  5396     0EA8  0EFE               	swapf	btemp,f
  5397     0EA9  0E7E               	swapf	btemp,w
  5398     0EAA  0009               	retfie
  5399     0EAB                     __end_of_isr:
  5400                           
  5401                           	psect	intentry
  5402     0004                     __pintentry:	
  5403                           ;incstack = 0
  5404                           ; Regs used in _isr: [wreg+pclath+cstack]
  5405                           
  5406     0004                     interrupt_function:
  5407     007E                     saved_w	set	btemp
  5408     0004  00FE               	movwf	btemp
  5409     0005  0E03               	swapf	3,w
  5410     0006  00F0               	movwf	??_isr
  5411     0007  080A               	movf	10,w
  5412     0008  00F1               	movwf	??_isr+1
  5413     0009  120A  158A  2E95   	ljmp	_isr
  5414                           
  5415                           	psect	text34
  5416     0E4C                     __ptext34:	
  5417 ;; *************** function _UART_read_char *****************
  5418 ;; Defined at:
  5419 ;;		line 57 in file "UART.c"
  5420 ;; Parameters:    Size  Location     Type
  5421 ;;		None
  5422 ;; Auto vars:     Size  Location     Type
  5423 ;;		None
  5424 ;; Return value:  Size  Location     Type
  5425 ;;                  1    wreg      unsigned char 
  5426 ;; Registers used:
  5427 ;;		wreg
  5428 ;; Tracked objects:
  5429 ;;		On entry : 0/0
  5430 ;;		On exit  : 0/0
  5431 ;;		Unchanged: 0/0
  5432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5433 ;;      Params:         0       0       0       0       0
  5434 ;;      Locals:         0       0       0       0       0
  5435 ;;      Temps:          0       0       0       0       0
  5436 ;;      Totals:         0       0       0       0       0
  5437 ;;Total ram usage:        0 bytes
  5438 ;; Hardware stack levels used: 1
  5439 ;; This function calls:
  5440 ;;		Nothing
  5441 ;; This function is called by:
  5442 ;;		_isr
  5443 ;; This function uses a non-reentrant model
  5444 ;;
  5445                           
  5446     0E4C                     _UART_read_char:	
  5447                           ;psect for function _UART_read_char
  5448                           
  5449     0E4C                     i1l1217:	
  5450                           ;incstack = 0
  5451                           ; Regs used in _UART_read_char: [wreg]
  5452                           
  5453                           
  5454                           ;UART.c: 68:     return RCREG;
  5455     0E4C  1283               	bcf	3,5	;RP0=0, select bank0
  5456     0E4D  1303               	bcf	3,6	;RP1=0, select bank0
  5457     0E4E  081A               	movf	26,w	;volatile
  5458     0E4F                     i1l309:
  5459     0E4F  0008               	return
  5460     0E50                     __end_of_UART_read_char:
  5461     007E                     btemp	set	126	;btemp
  5462     007E                     wtemp0	set	126
  5463                           
  5464                           	psect	config
  5465                           
  5466                           ;Config register CONFIG1 @ 0x2007
  5467                           ;	Oscillator Selection bits
  5468                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5469                           ;	Watchdog Timer Enable bit
  5470                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5471                           ;	Power-up Timer Enable bit
  5472                           ;	PWRTE = OFF, PWRT disabled
  5473                           ;	RE3/MCLR pin function select bit
  5474                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5475                           ;	Code Protection bit
  5476                           ;	CP = OFF, Program memory code protection is disabled
  5477                           ;	Data Code Protection bit
  5478                           ;	CPD = OFF, Data memory code protection is disabled
  5479                           ;	Brown Out Reset Selection bits
  5480                           ;	BOREN = OFF, BOR disabled
  5481                           ;	Internal External Switchover bit
  5482                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5483                           ;	Fail-Safe Clock Monitor Enabled bit
  5484                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5485                           ;	Low Voltage Programming Enable bit
  5486                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5487                           ;	In-Circuit Debugger Mode bit
  5488                           ;	DEBUG = 0x1, unprogrammed default
  5489     2007                     	org	8199
  5490     2007  20D4               	dw	8404
  5491                           
  5492                           ;Config register CONFIG2 @ 0x2008
  5493                           ;	Brown-out Reset Selection bit
  5494                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5495                           ;	Flash Program Memory Self Write Enable bits
  5496                           ;	WRT = OFF, Write protection off
  5497     2008                     	org	8200
  5498     2008  3FFF               	dw	16383

Data Sizes:
    Strings     24
    Constant    0
    Data        0
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     42      64
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 4
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[3]), STR_4(CODE[4]), 
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), S_ired(BANK0[2]), 
		 -> S_gas(BANK0[4]), S_hum(BANK0[3]), S_temp(BANK0[4]), 

    num_to_string@dig8	PTR unsigned char  size(1) Largest target is 4
		 -> S_ired(BANK0[2]), S_gas(BANK0[4]), S_hum(BANK0[3]), S_temp(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_requestHum
    _main->_requestIR
    _writeMotors->_I2C_Master_Write
    _Lcd_Init->_Lcd_Cmd
    _I2C_Master_Init->___lldiv
    _sendDataUART->_UART_write_char
    _requestIR->_I2C_Master_Read
    _requestHum->_I2C_Master_Read
    _map->___lmul
    ___aldiv->___lmul
    _LDC_output->_Lcd_Write_String
    _num_to_string->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_setup
    _setup->_UART_RX_config
    _setup->_UART_TX_config
    _UART_TX_config->___aldiv
    _UART_RX_config->___aldiv
    _I2C_Master_Init->___lldiv
    _requestTemp->_map
    _requestGas->_map
    _map->___aldiv
    ___aldiv->___lmul
    _LDC_output->_num_to_string

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   21217
                                             39 BANK0      3     3      0
                         _LDC_output
                         _requestGas
                         _requestHum
                          _requestIR
                        _requestTemp
                       _sendDataUART
                              _setup
                        _writeMotors
 ---------------------------------------------------------------------------------
 (1) _writeMotors                                          2     2      0    1086
                                              4 COMMON     2     2      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _setup                                                2     2      0    3951
                                             37 BANK0      2     2      0
                    _I2C_Master_Init
                           _Lcd_Init
                     _UART_RX_config
                     _UART_TX_config
 ---------------------------------------------------------------------------------
 (2) _UART_TX_config                                      17    13      4    1565
                                             20 BANK0     17    13      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) _UART_RX_config                                      17    13      4    1565
                                             20 BANK0     17    13      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     279
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _sendDataUART                                         3     3      0      22
                                              3 COMMON     3     3      0
                    _UART_write_char
 ---------------------------------------------------------------------------------
 (2) _UART_write_char                                      1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _requestTemp                                          2     2      0    4033
                                             36 BANK0      2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                                _map
 ---------------------------------------------------------------------------------
 (1) _requestIR                                            2     2      0    1435
                                              8 COMMON     2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _requestHum                                           2     2      0    1435
                                              8 COMMON     2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _requestGas                                           2     2      0    4033
                                             36 BANK0      2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                                _map
 ---------------------------------------------------------------------------------
 (2) _map                                                 16     9      7    2598
                                             20 BANK0     16     9      7
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     316
                                              2 COMMON     8     0      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8    1345
                                              5 BANK0     15     7      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1086
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     349
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LDC_output                                           2     2      0    5222
                                             16 BANK0      2     2      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                      _num_to_string
 ---------------------------------------------------------------------------------
 (2) _num_to_string                                       18    14      4    2788
                                              0 BANK0     16    12      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     767
                                              2 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2    1374
                                              7 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     254
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1     905
                                              6 COMMON     2     1      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     155
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
                     _UART_read_char
 ---------------------------------------------------------------------------------
 (6) _UART_read_char                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LDC_output
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _num_to_string
       ___lwdiv
       ___lwmod
   _requestGas
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _map
       ___aldiv
         ___lmul (ARG)
       ___lmul
   _requestHum
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
   _requestIR
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
   _requestTemp
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _map
   _sendDataUART
     _UART_write_char
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Init
       _Lcd_Cmd
       _Lcd_Port
     _UART_RX_config
       ___aldiv
     _UART_TX_config
       ___aldiv
   _writeMotors
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write

 _isr (ROOT)
   _UART_read_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      4C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2A      40       5       80.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      4C      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Aug 24 17:36:28 2023

                               pc 0002                                fsr 0004                               l111 04DB  
                             l200 0F14                               l120 0719                               l114 0762  
                             l131 0478                               l220 0ECE                               l300 0E87  
                             l108 0638                               l124 042D                               l221 0ED1  
                             l117 0413                               l222 0ED7                               l134 00EB  
                             l126 0432                               l223 0ED8                               l231 0EC4  
                             l224 0EDE                               l240 06D0                               l225 0EDF  
                             l145 01A4                               l137 05EB                               l129 0439  
                             l226 0EE5                               l234 0E94                               l243 0599  
                             l228 0EE6                               l252 07F0                               l180 07F1  
                             l148 053C                               l246 0F49                               l183 07FD  
                             l431 03AD                               l192 0E72                               l409 07AA  
                             l177 0F81                               l186 0E69                               l195 0E7C  
                             l291 02C4                               l460 01B9                               l189 0E60  
                             l198 0F0C                               l470 0241                               l294 0345  
                             l199 0F0F                               l297 0E7E                               l299 0E84  
                             l667 0FFF                               l677 0FBB                               _GIE 005F  
                             _RD3 0043                               _RD4 0044                               _RD5 0045  
                             _RD6 0046                               _RD7 0047                               u700 07F7  
                             u701 07F6                               u710 07FD                               u711 07FC  
                             _SCS 0478                               u950 0FC4                               u951 0FC3  
                             u970 0FD6                               u971 0FD5                               u965 0FC8  
                             u990 0FE7                               u991 0FE6                               u985 0FD7  
                             u995 0FE3                               _map 04DC                               _isr 0E95  
                             fsr0 0004                               indf 0000                       ?_LDC_output 0070  
                            l2001 0387                              l2003 0395                              l2021 01C8  
                            l2013 01A5                              l2005 0396                              l2101 0323  
                            l2031 01E8                              l2023 01CC                              l2015 01A8  
                            l2007 039F                              l2111 0342                              l2103 033A  
                            l2121 068D                              l2201 0047                              l2041 0219  
                            l2033 01EC                              l2025 01D4                              l2017 01AC  
                            l2113 04DF                              l2009 03A5                              l2105 033B  
                            l2131 06B2                              l2123 069A                              l2211 008B  
                            l2203 0056                              l2051 0239                              l2043 021A  
                            l2035 01F0                              l2027 01DC                              l2019 01BD  
                            l2107 033E                              l2117 0E88                              l2133 06BF  
                            l2125 069D                              l2141 07B0                              l2221 00D9  
                            l2213 00AE                              l2205 0070                              l2045 0223  
                            l2037 01F9                              l2029 01DF                              l2061 055B  
                            l2109 0341                              l2135 06C2                              l2127 06A3  
                            l2119 0688                              l2143 07CC                              l2223 00E2  
                            l2215 00B6                              l2207 0079                              l2039 020B  
                            l2047 0229                              l2071 0F7E                              l2063 0561  
                            l2055 053D                              l2151 05FA                              l2231 064B  
                            l2137 06C8                              l2129 06AC                              l2145 07D4  
                            l2217 00BF                              l2209 0082                              l1441 07F7  
                            l2049 022E                              l2073 0F7F                              l2065 0F4A  
                            l2057 0543                              l2081 02A0                              l2161 0629  
                            l2153 05FB                              l2241 0662                              l2233 064E  
                            l2225 0639                              l2139 07AB                              l2219 00C8  
                            l2171 04A8                              l2163 0479                              l2075 0F80  
                            l2067 0F4E                              l2059 054C                              l2091 02BF  
                            l2083 02B7                              l2155 0600                              l2147 05EC  
                            l2243 0667                              l2235 0653                              l2227 063E  
                            l1701 016D                              l2181 03C5                              l2173 04B4  
                            l2165 0490                              l2069 0F51                              l2093 02C0  
                            l2085 02B8                              l2077 0242                              l2157 060B  
                            l2149 05F6                              l2245 066C                              l2237 0658  
                            l2229 0646                              l1711 0193                              l1703 0174  
                            l1439 07F1                              l2191 03EE                              l2183 03CF  
                            l2175 04B9                              l2167 049A                              l2095 02C1  
                            l2087 02BB                              l2079 029C                              l2159 061A  
                            l2247 0672                              l2239 065D                              l1561 0FC7  
                            l1705 017B                              l2193 03F8                              l2185 03D4  
                            l2177 04C3                              l2169 049F                              l2089 02BC  
                            l2097 02C5                              l2273 0443                              l1571 0FED  
                            l1563 0FCE                              l1555 0FBC                              l1707 0181  
                            l2195 001E                              l2187 03DD                              l2179 03AE  
                            l1811 06F1                              l2099 031F                              l1573 0FEE  
                            l1565 0FD2                              l1557 0FBE                              l1581 0F82  
                            l1709 018D                              l2197 0023                              l1661 0E61  
                            l2189 03E9                              l1813 06F6                              l1741 0E7E  
                            l1821 0414                              l1575 0FF5                              l1567 0FD6  
                            l1559 0FC4                              l1591 0F9A                              l1583 0F88  
                            l2199 0035                              l1671 0E5D                              l1663 0E66  
                            l1815 06FF                              l1807 06D1                              l1743 0E85  
                            l1823 041A                              l1569 0FE7                              l1577 0FFB  
                            l1593 0FA4                              l1585 0F8B                              l1681 0F02  
                            l1673 0EE7                              l1665 0E73                              l1761 071A  
                            l1817 070B                              l1809 06E8                              l1833 043B  
                            l1825 0425                              l1595 0FAA                              l1587 0F92  
                            l1683 0F08                              l1675 0EEC                              l1691 0E6F  
                            l1667 0E78                              l1771 0754                              l1763 0731  
                            l1819 0710                              l1835 044E                              l1827 0427  
                            l1941 0EE3                              l1933 0EC6                              l1597 0FB1  
                            l1589 0F96                              l1685 0F10                              l1677 0EF4  
                            l1669 0E58                              l1773 0759                              l1765 073A  
                            l1837 046F                              l1829 0434                              l1935 0ECA  
                            l1951 0EC1                              l1943 0EAC                              l1599 0FB7  
                            l1679 0EFD                              l1767 073F                              l1937 0ED5  
                            l1945 0EAF                              l1961 0F30                              l1953 0F16  
                            l1689 0E6A                              l1769 0748                              l1873 059A  
                            l1939 0EDC                              l1947 0EB5                              l1971 0F46  
                            l1963 0F35                              l1955 0F1C                              l1699 00EC  
                            l1875 05DE                              l1949 0EB8                              l1965 0F38  
                            l1957 0F1F                              l1981 0791                              l1973 0763  
                            ?_map 0034                              l1967 0F3E                              l1959 0F2D  
                            l1983 07A2                              l1975 076D                              l1991 035B  
                            l1969 0F41                              l1977 0771                              l1993 0364  
                            l1979 0788                              l1995 0368                              l1987 0346  
                            l1997 036C                              l1989 0358                              l1999 0375  
                            ?_isr 0070                              STR_1 0822                              STR_2 0825  
                            STR_3 081F                              STR_4 0814                              STR_5 081C  
                            STR_6 0818                              STR_7 0810                              _CREN 00C4  
                            u1010 0FFB                              u1011 0FFA                              u1020 0F88  
                            u1005 0FEF                              u1021 0F87                              u1040 0F9A  
                            u1041 0F99                              u1050 0FA4                              u1130 0F08  
                            u1051 0FA3                              u1035 0F8C                              u1131 0F07  
                            u1300 0ECA                              u1301 0EC9                              u1310 0ED5  
                            u1070 0FB7                              u1150 0174                              u1311 0ED4  
                            u1071 0FB6                              u1055 0FA0                              u1151 0173  
                            u1320 0EDC                              u1160 0181                              u1400 0358  
                            u1321 0EDB                              u1065 0FAB                              u1161 0180  
                            u1401 0357                              u1330 0EE3                              u1170 0193  
                            u1250 0E84                              u1331 0EE2                              u1171 0192  
                            u1251 0E83                              u1420 036C                              u1260 041A  
                            u1421 036B                              u1261 0419                              u1510 01F0  
                            u1350 0771                              u1270 0425                              u1511 01EF  
                            u1351 0770                              u1415 035D                              u1271 0424  
                            u1440 0387                              u1600 030C                              u1345 0F22  
                            u1505 01E1                              u1361 077A                              u1441 0386  
                            u1601 030D                              u1530 020B                              u1362 0781  
                            u1610 0334                              u1602 0312                              u1531 020A  
                            u1363 0788                              u1435 036E                              u1603 0313  
                            u1460 03A5                              u1700 0646                              u1525 01F2  
                            u1621 0509                              u1461 03A4                              u1445 0383  
                            u1701 0645                              u1630 068D                              u1550 0229  
                            u1470 01AC                              u1390 07A2                              u1622 050A  
                            u1631 068C                              u1551 0228                              u1535 0207  
                            u1471 01AB                              u1391 07A1                              u1375 078A  
                            u1623 050F                              u1455 0397                              u1615 032F  
                            u1560 022E                              u1480 01BD                              u1624 0510  
                            u1561 022D                              u1545 021B                              u1481 01BC  
                            u1385 0792                              u1625 0515                              u1650 06B2  
                            u1490 01DC                              u1626 0516                              u1570 0F61  
                            u1651 06B1                              u1491 01DB                              u1580 0289  
                            u1645 0693                              u1581 028A                              u1717 067A  
                            u1670 07BA                              u1590 02B1                              u1582 028F  
                            u1807 06EC                              u1575 0F5C                              u1583 0290  
                            u1727 0473                              u1680 07DE                              u1665 06B8  
                            u1817 0714                              u1737 0606                              u1690 07F0  
                            u1691 07EF                              u1827 0735                              u1747 0547  
                            u1595 02AC                              u1837 075D                              u1757 0556  
                            u1847 03CB                              u1767 0565                              u1857 03F4  
                            u1777 05E4                              u1867 0F32                              u1787 0496  
                            _PEIE 005E                              u1877 0F43                              u1797 04BF  
                            u1887 0EBC                              _RCIE 0465                              _RCIF 0065  
                            i1l96 0EA4                              _SPEN 00C7                              _TXIE 0464  
                            _TXEN 04C5                              _TXIF 0064                              _SYNC 04C4  
               ?_Lcd_Write_String 0077  __end_of_I2C_Master_RepeatedStart 0E61                              _main 0639  
                            _prev 004C                              btemp 007E                   ??_num_to_string 0079  
                            start 000C                ??_Lcd_Write_String 0020                   __end_of_Lcd_Cmd 0EC5  
                UART_write_char@c 0072                             ??_map 003B                             ??_isr 0070  
                num_to_string@len 0023                  num_to_string@num 0020                  ?_I2C_Master_Init 0026  
                ?_I2C_Master_Read 0072                  ?_I2C_Master_Wait 0070                  ?_I2C_Master_Stop 0070  
                 __end_of___aldiv 0242                             ?_main 0070                             _ANSEL 0188  
                 __end_of___lldiv 03AE                   __end_of___lwdiv 1000                             i1l309 0E4F  
                 __end_of___lwmod 0FBC                             _RCREG 001A                       _writeMotors 0414  
                           _SPBRG 0099                             _PORTD 0008                             u63_20 0E9B  
                           u63_21 0E9A                             _TRISD 0088                             _SSPIE 0463  
                           _SSPIF 0063                             _TXREG 0019               ___lmul@multiplicand 0076  
                           _S_gas 0053                             _S_hum 005B                             _n_gas 0050  
                           _n_hum 0051                             _tempC 007B                             _setup 05EC  
                           pclath 000A                             status 0003                             wtemp0 007E  
                __end_of_Lcd_Init 059A                  __end_of_Lcd_Port 0EE7                   __initialization 000F  
                    __end_of_main 0685                            ??_main 0047                 num_to_string@dig8 0022  
               num_to_string@div1 0028                 num_to_string@div2 002A                 num_to_string@div3 0024  
               ?_I2C_Master_Start 0070                 ?_I2C_Master_Write 0072                ??_I2C_Master_Start 0072  
              ??_I2C_Master_Write 0074                            ?_setup 0070                            _ANSELH 0189  
                          i1l1217 0E4C                            i1l1353 0E95                            i1l1355 0E9B  
                          i1l1357 0EA1                         ??_Lcd_Cmd 0073                            _SPBRGH 009A  
                          _SSPADD 0093                            _TRISC3 043B                            _TRISC4 043C  
                          _SSPCON 0014                            _SSPBUF 0013                            _S_ired 005E  
                          _S_temp 0057          _I2C_Master_RepeatedStart 0E58                            ___lmul 0763  
                       ??___aldiv 002D                            _gasPPM 004A                         ??___lldiv 0020  
                       ??___lwdiv 0076                         ??___lwmod 0076                            _n_ired 004F  
                          _n_temp 0052                      ?_requestTemp 0070                            map@val 0043  
                 _UART_write_char 0E7D                            saved_w 007E                   Lcd_Set_Cursor@a 0020  
                 Lcd_Set_Cursor@b 0076                   Lcd_Set_Cursor@y 0022                   Lcd_Set_Cursor@z 0021  
            num_to_string@decenas 002C           __end_of__initialization 001A                  UART_RX_config@BR 0041  
               __end_of_Lcd_Clear 0E95                    __pcstackCOMMON 0070                     ?_sendDataUART 0070  
                   __end_of_setup 0639                    _Lcd_Set_Cursor 0685                      ??_LDC_output 0030  
                       ?_Lcd_Init 0070                         ?_Lcd_Port 0070                           ??_setup 0045  
                      __pbssBANK0 004A                  UART_TX_config@BR 0041                        __pmaintext 0639  
                         ?___lmul 0072                    ??_sendDataUART 0073                        __pintentry 0004  
              __end_of_LDC_output 00EC           __end_of_UART_write_char 0E88                    ___lmul@product 0021  
          __end_of_Lcd_Set_Cursor 06D1                      ?_writeMotors 0070                        ??_Lcd_Init 0076  
                      ??_Lcd_Port 0072               _UART_RX_config$1026 003D                           _SSPCON2 0091  
                         _SSPSTAT 0094                        __stringtab 0800                    _Lcd_Write_Char 0F15  
                         _Lcd_Cmd 0EAB                    _UART_RX_config 0242                    _UART_TX_config 02C5  
           __end_of_num_to_string 01A5                           ___aldiv 01A5                           ___lldiv 0346  
                         ___lwdiv 0FBC                           ___lwmod 0F82                   ?_Lcd_Set_Cursor 0076  
                         __ptext1 0414                           __ptext2 05EC                           __ptext3 02C5  
                         __ptext4 0242                           __ptext5 053D                           __ptext6 0F4A  
                         __ptext7 0346                           __ptext8 059A                           __ptext9 0E7D  
                         _counter 004E                  ___aldiv@dividend 0029                           map@max1 0035  
                         map@max2 0037                           map@min1 0034                           map@min2 0036  
                         clrloop0 0E51            __end_of_Lcd_Write_Char 0F4A              end_of_initialization 001A  
          __end_of_UART_RX_config 02C5        ??_I2C_Master_RepeatedStart 0072            __end_of_UART_TX_config 0346  
               __end_of_requestIR 071A                   ___lldiv@divisor 0072                   ___lldiv@counter 0025  
                ___aldiv@quotient 0030                  I2C_Master_Init@c 0026                  I2C_Master_Read@a 0072  
                      _requestGas 03AE                         Lcd_Port@a 0072                        _requestHum 071A  
                ?_UART_write_char 0070                         _PORTDbits 0008             num_to_string@centenas 0026  
                       _TRISCbits 0087              __end_of_sendDataUART 05EC                   ?_Lcd_Write_Char 0070  
               Lcd_Write_String@a 0077                 Lcd_Write_String@i 0023                   ?_UART_RX_config 0034  
                 ?_UART_TX_config 0034                         _Lcd_Clear 0E88             num_to_string@unidades 002E  
          UART_RX_config@baudrate 0034                    __end_of___lmul 07AB                    _UART_read_char 0E4C  
                _Lcd_Write_String 07AB               start_initialization 000F                       __end_of_map 053D  
                     __end_of_isr 0EAB                 ??_I2C_Master_Init 002A                 ??_I2C_Master_Read 0074  
               ??_I2C_Master_Wait 0072                 ??_I2C_Master_Stop 0072                        ?_Lcd_Clear 0070  
                        ??___lmul 0020            __end_of_UART_read_char 0E50                       ?_requestGas 0070  
                     ?_requestHum 0070                   Lcd_Write_Char@a 0076                   Lcd_Write_Char@y 0075  
                     __pbssCOMMON 007A                         ___latbits 0002                     __pcstackBANK0 0020  
             _UART_TX_config$1027 003D                          ?_Lcd_Cmd 0070                  _I2C_Master_Start 0E61  
                _I2C_Master_Write 0E73                  ___lwdiv@dividend 0074                  ??_Lcd_Set_Cursor 0077  
                        ?___aldiv 0025                   ?_UART_read_char 0070                          ?___lldiv 0072  
                        ?___lwdiv 0072                          ?___lwmod 0072                         __pstrings 0800  
                ___lwdiv@quotient 0076                   ___aldiv@divisor 0025                 interrupt_function 0004  
                 ___aldiv@counter 002E                         clear_ram0 0E50                          Lcd_Cmd@a 0075  
                     ??_Lcd_Clear 0076                         _requestIR 06D1                      _sendDataUART 059A  
                   ??_requestTemp 0044                       __stringbase 080F                  ??_Lcd_Write_Char 0073  
                ??_UART_RX_config 0038                          _Lcd_Init 053D                          _Lcd_Port 0EC5  
             I2C_Master_Read@temp 0076                  ??_UART_TX_config 0038                 ___lmul@multiplier 0072  
        __end_of_Lcd_Write_String 07F1                        ?_requestIR 0070         ?_I2C_Master_RepeatedStart 0070  
              __end_of__stringtab 0810                   _I2C_Master_Init 0F4A                   _I2C_Master_Read 0EE7  
                 _I2C_Master_Wait 07F1                   _I2C_Master_Stop 0E6A               __end_of_requestTemp 04DC  
                 ___lwdiv@divisor 0072                   ___lwdiv@counter 0078                          __ptext10 0479  
                        __ptext11 06D1                          __ptext20 0E58                          __ptext12 071A  
                        __ptext21 0EE7                          __ptext13 03AE                          __ptext30 0E88  
                        __ptext22 07F1                          __ptext14 04DC                          __ptext31 0EAB  
                        __ptext23 001E                          __ptext15 0763                          __ptext32 0EC5  
                        __ptext24 00EC                          __ptext16 01A5                          __ptext33 0E95  
                        __ptext25 0F82                          __ptext17 0E73                          __ptext34 0E4C  
                        __ptext26 0FBC                          __ptext18 0E6A                          __ptext27 07AB  
                        __ptext19 0E61                          __ptext28 0F15                          __ptext29 0685  
                        _motorCon 004D                     _num_to_string 00EC                          _servoPos 007A  
                    ??_requestGas 0044                      ??_requestHum 0078            UART_TX_config@baudrate 0034  
                   ??_writeMotors 0074          __end_of_I2C_Master_Start 0E6A          __end_of_I2C_Master_Write 0E7D  
                      _LDC_output 001E                Lcd_Write_Char@temp 0074                          intlevel1 0000  
              __end_of_requestGas 0414                __end_of_requestHum 0763                  ___lwmod@dividend 0074  
                ___lldiv@dividend 0076                  ??_UART_read_char 0070                         stringcode 080A  
                      _OSCCONbits 008F                    ?_num_to_string 0020                       ??_requestIR 0078  
         __end_of_I2C_Master_Init 0F82           __end_of_I2C_Master_Read 0F15           __end_of_I2C_Master_Wait 07FE  
         __end_of_I2C_Master_Stop 0E73                Lcd_Set_Cursor@temp 0023                       _requestTemp 0479  
                ___lldiv@quotient 0021                 I2C_Master_Write@d 0072                   ___lwmod@divisor 0072  
                 ___lwmod@counter 0076                          stringdir 080A                          stringtab 0800  
                    ___aldiv@sign 002F                       _SSPCON2bits 0091               __end_of_writeMotors 0479  
               ??_UART_write_char 0072  
