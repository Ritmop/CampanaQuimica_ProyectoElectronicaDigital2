

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Aug 23 19:26:35 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	intentry,global,class=CODE,delta=2
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    48                           	dabs	1,0x7E,2
    49     0000                     
    50                           ; Generated 22/03/2023 GMT
    51                           ; 
    52                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F887 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84     0000                     	;# 
    85     0001                     	;# 
    86     0002                     	;# 
    87     0003                     	;# 
    88     0004                     	;# 
    89     0005                     	;# 
    90     0006                     	;# 
    91     0007                     	;# 
    92     0008                     	;# 
    93     0009                     	;# 
    94     000A                     	;# 
    95     000B                     	;# 
    96     000C                     	;# 
    97     000D                     	;# 
    98     000E                     	;# 
    99     000E                     	;# 
   100     000F                     	;# 
   101     0010                     	;# 
   102     0011                     	;# 
   103     0012                     	;# 
   104     0013                     	;# 
   105     0014                     	;# 
   106     0015                     	;# 
   107     0015                     	;# 
   108     0016                     	;# 
   109     0017                     	;# 
   110     0018                     	;# 
   111     0019                     	;# 
   112     001A                     	;# 
   113     001B                     	;# 
   114     001B                     	;# 
   115     001C                     	;# 
   116     001D                     	;# 
   117     001E                     	;# 
   118     001F                     	;# 
   119     0081                     	;# 
   120     0085                     	;# 
   121     0086                     	;# 
   122     0087                     	;# 
   123     0088                     	;# 
   124     0089                     	;# 
   125     008C                     	;# 
   126     008D                     	;# 
   127     008E                     	;# 
   128     008F                     	;# 
   129     0090                     	;# 
   130     0091                     	;# 
   131     0092                     	;# 
   132     0093                     	;# 
   133     0093                     	;# 
   134     0093                     	;# 
   135     0094                     	;# 
   136     0095                     	;# 
   137     0096                     	;# 
   138     0097                     	;# 
   139     0098                     	;# 
   140     0099                     	;# 
   141     009A                     	;# 
   142     009B                     	;# 
   143     009C                     	;# 
   144     009D                     	;# 
   145     009E                     	;# 
   146     009F                     	;# 
   147     0105                     	;# 
   148     0107                     	;# 
   149     0108                     	;# 
   150     0109                     	;# 
   151     010C                     	;# 
   152     010C                     	;# 
   153     010D                     	;# 
   154     010E                     	;# 
   155     010F                     	;# 
   156     0185                     	;# 
   157     0187                     	;# 
   158     0188                     	;# 
   159     0189                     	;# 
   160     018C                     	;# 
   161     018D                     	;# 
   162     0000                     	;# 
   163     0001                     	;# 
   164     0002                     	;# 
   165     0003                     	;# 
   166     0004                     	;# 
   167     0005                     	;# 
   168     0006                     	;# 
   169     0007                     	;# 
   170     0008                     	;# 
   171     0009                     	;# 
   172     000A                     	;# 
   173     000B                     	;# 
   174     000C                     	;# 
   175     000D                     	;# 
   176     000E                     	;# 
   177     000E                     	;# 
   178     000F                     	;# 
   179     0010                     	;# 
   180     0011                     	;# 
   181     0012                     	;# 
   182     0013                     	;# 
   183     0014                     	;# 
   184     0015                     	;# 
   185     0015                     	;# 
   186     0016                     	;# 
   187     0017                     	;# 
   188     0018                     	;# 
   189     0019                     	;# 
   190     001A                     	;# 
   191     001B                     	;# 
   192     001B                     	;# 
   193     001C                     	;# 
   194     001D                     	;# 
   195     001E                     	;# 
   196     001F                     	;# 
   197     0081                     	;# 
   198     0085                     	;# 
   199     0086                     	;# 
   200     0087                     	;# 
   201     0088                     	;# 
   202     0089                     	;# 
   203     008C                     	;# 
   204     008D                     	;# 
   205     008E                     	;# 
   206     008F                     	;# 
   207     0090                     	;# 
   208     0091                     	;# 
   209     0092                     	;# 
   210     0093                     	;# 
   211     0093                     	;# 
   212     0093                     	;# 
   213     0094                     	;# 
   214     0095                     	;# 
   215     0096                     	;# 
   216     0097                     	;# 
   217     0098                     	;# 
   218     0099                     	;# 
   219     009A                     	;# 
   220     009B                     	;# 
   221     009C                     	;# 
   222     009D                     	;# 
   223     009E                     	;# 
   224     009F                     	;# 
   225     0105                     	;# 
   226     0107                     	;# 
   227     0108                     	;# 
   228     0109                     	;# 
   229     010C                     	;# 
   230     010C                     	;# 
   231     010D                     	;# 
   232     010E                     	;# 
   233     010F                     	;# 
   234     0185                     	;# 
   235     0187                     	;# 
   236     0188                     	;# 
   237     0189                     	;# 
   238     018C                     	;# 
   239     018D                     	;# 
   240     0000                     	;# 
   241     0001                     	;# 
   242     0002                     	;# 
   243     0003                     	;# 
   244     0004                     	;# 
   245     0005                     	;# 
   246     0006                     	;# 
   247     0007                     	;# 
   248     0008                     	;# 
   249     0009                     	;# 
   250     000A                     	;# 
   251     000B                     	;# 
   252     000C                     	;# 
   253     000D                     	;# 
   254     000E                     	;# 
   255     000E                     	;# 
   256     000F                     	;# 
   257     0010                     	;# 
   258     0011                     	;# 
   259     0012                     	;# 
   260     0013                     	;# 
   261     0014                     	;# 
   262     0015                     	;# 
   263     0015                     	;# 
   264     0016                     	;# 
   265     0017                     	;# 
   266     0018                     	;# 
   267     0019                     	;# 
   268     001A                     	;# 
   269     001B                     	;# 
   270     001B                     	;# 
   271     001C                     	;# 
   272     001D                     	;# 
   273     001E                     	;# 
   274     001F                     	;# 
   275     0081                     	;# 
   276     0085                     	;# 
   277     0086                     	;# 
   278     0087                     	;# 
   279     0088                     	;# 
   280     0089                     	;# 
   281     008C                     	;# 
   282     008D                     	;# 
   283     008E                     	;# 
   284     008F                     	;# 
   285     0090                     	;# 
   286     0091                     	;# 
   287     0092                     	;# 
   288     0093                     	;# 
   289     0093                     	;# 
   290     0093                     	;# 
   291     0094                     	;# 
   292     0095                     	;# 
   293     0096                     	;# 
   294     0097                     	;# 
   295     0098                     	;# 
   296     0099                     	;# 
   297     009A                     	;# 
   298     009B                     	;# 
   299     009C                     	;# 
   300     009D                     	;# 
   301     009E                     	;# 
   302     009F                     	;# 
   303     0105                     	;# 
   304     0107                     	;# 
   305     0108                     	;# 
   306     0109                     	;# 
   307     010C                     	;# 
   308     010C                     	;# 
   309     010D                     	;# 
   310     010E                     	;# 
   311     010F                     	;# 
   312     0185                     	;# 
   313     0187                     	;# 
   314     0188                     	;# 
   315     0189                     	;# 
   316     018C                     	;# 
   317     018D                     	;# 
   318     0000                     	;# 
   319     0001                     	;# 
   320     0002                     	;# 
   321     0003                     	;# 
   322     0004                     	;# 
   323     0005                     	;# 
   324     0006                     	;# 
   325     0007                     	;# 
   326     0008                     	;# 
   327     0009                     	;# 
   328     000A                     	;# 
   329     000B                     	;# 
   330     000C                     	;# 
   331     000D                     	;# 
   332     000E                     	;# 
   333     000E                     	;# 
   334     000F                     	;# 
   335     0010                     	;# 
   336     0011                     	;# 
   337     0012                     	;# 
   338     0013                     	;# 
   339     0014                     	;# 
   340     0015                     	;# 
   341     0015                     	;# 
   342     0016                     	;# 
   343     0017                     	;# 
   344     0018                     	;# 
   345     0019                     	;# 
   346     001A                     	;# 
   347     001B                     	;# 
   348     001B                     	;# 
   349     001C                     	;# 
   350     001D                     	;# 
   351     001E                     	;# 
   352     001F                     	;# 
   353     0081                     	;# 
   354     0085                     	;# 
   355     0086                     	;# 
   356     0087                     	;# 
   357     0088                     	;# 
   358     0089                     	;# 
   359     008C                     	;# 
   360     008D                     	;# 
   361     008E                     	;# 
   362     008F                     	;# 
   363     0090                     	;# 
   364     0091                     	;# 
   365     0092                     	;# 
   366     0093                     	;# 
   367     0093                     	;# 
   368     0093                     	;# 
   369     0094                     	;# 
   370     0095                     	;# 
   371     0096                     	;# 
   372     0097                     	;# 
   373     0098                     	;# 
   374     0099                     	;# 
   375     009A                     	;# 
   376     009B                     	;# 
   377     009C                     	;# 
   378     009D                     	;# 
   379     009E                     	;# 
   380     009F                     	;# 
   381     0105                     	;# 
   382     0107                     	;# 
   383     0108                     	;# 
   384     0109                     	;# 
   385     010C                     	;# 
   386     010C                     	;# 
   387     010D                     	;# 
   388     010E                     	;# 
   389     010F                     	;# 
   390     0185                     	;# 
   391     0187                     	;# 
   392     0188                     	;# 
   393     0189                     	;# 
   394     018C                     	;# 
   395     018D                     	;# 
   396     0000                     	;# 
   397     0001                     	;# 
   398     0002                     	;# 
   399     0003                     	;# 
   400     0004                     	;# 
   401     0005                     	;# 
   402     0006                     	;# 
   403     0007                     	;# 
   404     0008                     	;# 
   405     0009                     	;# 
   406     000A                     	;# 
   407     000B                     	;# 
   408     000C                     	;# 
   409     000D                     	;# 
   410     000E                     	;# 
   411     000E                     	;# 
   412     000F                     	;# 
   413     0010                     	;# 
   414     0011                     	;# 
   415     0012                     	;# 
   416     0013                     	;# 
   417     0014                     	;# 
   418     0015                     	;# 
   419     0015                     	;# 
   420     0016                     	;# 
   421     0017                     	;# 
   422     0018                     	;# 
   423     0019                     	;# 
   424     001A                     	;# 
   425     001B                     	;# 
   426     001B                     	;# 
   427     001C                     	;# 
   428     001D                     	;# 
   429     001E                     	;# 
   430     001F                     	;# 
   431     0081                     	;# 
   432     0085                     	;# 
   433     0086                     	;# 
   434     0087                     	;# 
   435     0088                     	;# 
   436     0089                     	;# 
   437     008C                     	;# 
   438     008D                     	;# 
   439     008E                     	;# 
   440     008F                     	;# 
   441     0090                     	;# 
   442     0091                     	;# 
   443     0092                     	;# 
   444     0093                     	;# 
   445     0093                     	;# 
   446     0093                     	;# 
   447     0094                     	;# 
   448     0095                     	;# 
   449     0096                     	;# 
   450     0097                     	;# 
   451     0098                     	;# 
   452     0099                     	;# 
   453     009A                     	;# 
   454     009B                     	;# 
   455     009C                     	;# 
   456     009D                     	;# 
   457     009E                     	;# 
   458     009F                     	;# 
   459     0105                     	;# 
   460     0107                     	;# 
   461     0108                     	;# 
   462     0109                     	;# 
   463     010C                     	;# 
   464     010C                     	;# 
   465     010D                     	;# 
   466     010E                     	;# 
   467     010F                     	;# 
   468     0185                     	;# 
   469     0187                     	;# 
   470     0188                     	;# 
   471     0189                     	;# 
   472     018C                     	;# 
   473     018D                     	;# 
   474                           
   475                           	psect	idataBANK0
   476     0003                     __pidataBANK0:
   477                           
   478                           ;initializer for _servoPos
   479     0003  34B4               	retlw	180
   480     001A                     _RCREG	set	26
   481     0019                     _TXREG	set	25
   482     0008                     _PORTDbits	set	8
   483     0013                     _SSPBUF	set	19
   484     0014                     _SSPCON	set	20
   485     0008                     _PORTD	set	8
   486     0064                     _TXIF	set	100
   487     0065                     _RCIF	set	101
   488     00C4                     _CREN	set	196
   489     00C7                     _SPEN	set	199
   490     0043                     _RD3	set	67
   491     0047                     _RD7	set	71
   492     0046                     _RD6	set	70
   493     0045                     _RD5	set	69
   494     0044                     _RD4	set	68
   495     0063                     _SSPIF	set	99
   496     005E                     _PEIE	set	94
   497     005F                     _GIE	set	95
   498     009A                     _SPBRGH	set	154
   499     0099                     _SPBRG	set	153
   500     0091                     _SSPCON2bits	set	145
   501     0087                     _TRISCbits	set	135
   502     0094                     _SSPSTAT	set	148
   503     0093                     _SSPADD	set	147
   504     0091                     _SSPCON2	set	145
   505     008F                     _OSCCONbits	set	143
   506     0088                     _TRISD	set	136
   507     0464                     _TXIE	set	1124
   508     04C5                     _TXEN	set	1221
   509     0465                     _RCIE	set	1125
   510     04C4                     _SYNC	set	1220
   511     0463                     _SSPIE	set	1123
   512     043C                     _TRISC4	set	1084
   513     043B                     _TRISC3	set	1083
   514     0478                     _SCS	set	1144
   515     0189                     _ANSELH	set	393
   516     0188                     _ANSEL	set	392
   517                           
   518                           	psect	strings
   519     07D8                     __pstrings:
   520     07D8                     stringtab:
   521     07D8                     __stringtab:
   522                           
   523                           ;	String table - string pointers are 1 byte each
   524     07D8  1BFF               	btfsc	btemp+1,7
   525     07D9  2FE2               	ljmp	stringcode
   526     07DA  1383               	bcf	3,7
   527     07DB  187F               	btfsc	btemp+1,0
   528     07DC  1783               	bsf	3,7
   529     07DD  0800               	movf	0,w
   530     07DE  0A84               	incf	4,f
   531     07DF  1903               	skipnz
   532     07E0  0AFF               	incf	btemp+1,f
   533     07E1  0008               	return
   534     07E2                     stringcode:
   535     07E2                     stringdir:
   536     07E2  3007               	movlw	high stringdir
   537     07E3  008A               	movwf	10
   538     07E4  0804               	movf	4,w
   539     07E5  0A84               	incf	4,f
   540     07E6  0782               	addwf	2,f
   541     07E7                     __stringbase:
   542     07E7  3400               	retlw	0
   543     07E8                     __end_of__stringtab:
   544     07E8                     STR_7:
   545     07E8  3449               	retlw	73	;'I'
   546     07E9  3452               	retlw	82	;'R'
   547     07EA  343A               	retlw	58	;':'
   548     07EB  3400               	retlw	0
   549     07EC                     STR_4:
   550     07EC  3425               	retlw	37	;'%'
   551     07ED  3452               	retlw	82	;'R'
   552     07EE  3448               	retlw	72	;'H'
   553     07EF  3400               	retlw	0
   554     07F0                     STR_6:
   555     07F0  3470               	retlw	112	;'p'
   556     07F1  3470               	retlw	112	;'p'
   557     07F2  346D               	retlw	109	;'m'
   558     07F3  3400               	retlw	0
   559     07F4                     STR_5:
   560     07F4  3447               	retlw	71	;'G'
   561     07F5  343A               	retlw	58	;':'
   562     07F6  3400               	retlw	0
   563     07F7                     STR_3:
   564     07F7  3448               	retlw	72	;'H'
   565     07F8  343A               	retlw	58	;':'
   566     07F9  3400               	retlw	0
   567     07FA                     STR_1:
   568     07FA  3454               	retlw	84	;'T'
   569     07FB  343A               	retlw	58	;':'
   570     07FC  3400               	retlw	0
   571     07FD                     STR_2:
   572     07FD  345E               	retlw	94	;'^'
   573     07FE  3443               	retlw	67	;'C'
   574     07FF  3400               	retlw	0
   575                           
   576                           	psect	cinit
   577     000F                     start_initialization:	
   578                           ; #config settings
   579                           
   580     000F                     __initialization:
   581                           
   582                           ; Initialize objects allocated to BANK0
   583     000F  120A  118A  2003  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   584     0014  00DF               	movwf	__pdataBANK0& (0+127)
   585                           
   586                           ; Clear objects allocated to BANK0
   587     0015  1383               	bcf	3,7	;select IRP bank0
   588     0016  304A               	movlw	low __pbssBANK0
   589     0017  0084               	movwf	4
   590     0018  305F               	movlw	low (__pbssBANK0+21)
   591     0019  120A  158A  26D7  120A  118A  	fcall	clear_ram0
   592                           
   593                           ; Clear objects allocated to COMMON
   594     001E  01FA               	clrf	__pbssCOMMON& (0+127)
   595     001F  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   596     0020                     end_of_initialization:	
   597                           ;End of C runtime variable initialization code
   598                           
   599     0020                     __end_of__initialization:
   600     0020  0183               	clrf	3
   601     0021  120A  118A  2D64   	ljmp	_main	;jump to C main() function
   602                           
   603                           	psect	bssCOMMON
   604     007A                     __pbssCOMMON:
   605     007A                     _motorCon:
   606     007A                     	ds	1
   607     007B                     _tempC:
   608     007B                     	ds	1
   609                           
   610                           	psect	bssBANK0
   611     004A                     __pbssBANK0:
   612     004A                     _gasPPM:
   613     004A                     	ds	2
   614     004C                     _prev:
   615     004C                     	ds	1
   616     004D                     _counter:
   617     004D                     	ds	1
   618     004E                     _n_ired:
   619     004E                     	ds	1
   620     004F                     _n_gas:
   621     004F                     	ds	1
   622     0050                     _n_hum:
   623     0050                     	ds	1
   624     0051                     _n_temp:
   625     0051                     	ds	1
   626     0052                     _S_gas:
   627     0052                     	ds	4
   628     0056                     _S_temp:
   629     0056                     	ds	4
   630     005A                     _S_hum:
   631     005A                     	ds	3
   632     005D                     _S_ired:
   633     005D                     	ds	2
   634                           
   635                           	psect	dataBANK0
   636     005F                     __pdataBANK0:
   637     005F                     _servoPos:
   638     005F                     	ds	1
   639                           
   640                           	psect	clrtext
   641     0ED7                     clear_ram0:	
   642                           ;	Called with FSR containing the base address, and
   643                           ;	W with the last address+1
   644                           
   645     0ED7  0064               	clrwdt	;clear the watchdog before getting into this loop
   646     0ED8                     clrloop0:
   647     0ED8  0180               	clrf	0	;clear RAM location pointed to by FSR
   648     0ED9  0A84               	incf	4,f	;increment pointer
   649     0EDA  0604               	xorwf	4,w	;XOR with final address
   650     0EDB  1903               	btfsc	3,2	;have we reached the end yet?
   651     0EDC  3400               	retlw	0	;all done for this memory range, return
   652     0EDD  0604               	xorwf	4,w	;XOR again to restore value
   653     0EDE  2ED8               	goto	clrloop0	;do the next byte
   654                           
   655                           	psect	cstackCOMMON
   656     0070                     __pcstackCOMMON:
   657     0070                     ?_setup:
   658     0070                     ?_requestHum:	
   659                           ; 1 bytes @ 0x0
   660                           
   661     0070                     ?_requestTemp:	
   662                           ; 1 bytes @ 0x0
   663                           
   664     0070                     ?_requestGas:	
   665                           ; 1 bytes @ 0x0
   666                           
   667     0070                     ?_requestIR:	
   668                           ; 1 bytes @ 0x0
   669                           
   670     0070                     ?_writeMotors:	
   671                           ; 1 bytes @ 0x0
   672                           
   673     0070                     ?_LDC_output:	
   674                           ; 1 bytes @ 0x0
   675                           
   676     0070                     ?_sendDataUART:	
   677                           ; 1 bytes @ 0x0
   678                           
   679     0070                     ?_Lcd_Init:	
   680                           ; 1 bytes @ 0x0
   681                           
   682     0070                     ?_I2C_Master_Start:	
   683                           ; 1 bytes @ 0x0
   684                           
   685     0070                     ?_I2C_Master_RepeatedStart:	
   686                           ; 1 bytes @ 0x0
   687                           
   688     0070                     ?_I2C_Master_Stop:	
   689                           ; 1 bytes @ 0x0
   690                           
   691     0070                     ?_Lcd_Clear:	
   692                           ; 1 bytes @ 0x0
   693                           
   694     0070                     ?_UART_write_char:	
   695                           ; 1 bytes @ 0x0
   696                           
   697     0070                     ?_isr:	
   698                           ; 1 bytes @ 0x0
   699                           
   700     0070                     ??_isr:	
   701                           ; 1 bytes @ 0x0
   702                           
   703     0070                     ?_I2C_Master_Wait:	
   704                           ; 1 bytes @ 0x0
   705                           
   706     0070                     ?_Lcd_Port:	
   707                           ; 1 bytes @ 0x0
   708                           
   709     0070                     ?_Lcd_Cmd:	
   710                           ; 1 bytes @ 0x0
   711                           
   712     0070                     ?_Lcd_Write_Char:	
   713                           ; 1 bytes @ 0x0
   714                           
   715     0070                     ?_main:	
   716                           ; 1 bytes @ 0x0
   717                           
   718                           
   719                           ; 2 bytes @ 0x0
   720     0070                     	ds	2
   721     0072                     ??_I2C_Master_Start:
   722     0072                     ?_I2C_Master_Write:	
   723                           ; 1 bytes @ 0x2
   724                           
   725     0072                     ??_I2C_Master_RepeatedStart:	
   726                           ; 1 bytes @ 0x2
   727                           
   728     0072                     ??_I2C_Master_Stop:	
   729                           ; 1 bytes @ 0x2
   730                           
   731     0072                     ??_UART_write_char:	
   732                           ; 1 bytes @ 0x2
   733                           
   734     0072                     ??_I2C_Master_Wait:	
   735                           ; 1 bytes @ 0x2
   736                           
   737     0072                     ??_Lcd_Port:	
   738                           ; 1 bytes @ 0x2
   739                           
   740     0072                     ?_I2C_Master_Read:	
   741                           ; 1 bytes @ 0x2
   742                           
   743     0072                     ?___lwdiv:	
   744                           ; 2 bytes @ 0x2
   745                           
   746     0072                     ?___lwmod:	
   747                           ; 2 bytes @ 0x2
   748                           
   749     0072                     ?___lmul:	
   750                           ; 2 bytes @ 0x2
   751                           
   752     0072                     ?___lldiv:	
   753                           ; 4 bytes @ 0x2
   754                           
   755     0072                     Lcd_Port@a:	
   756                           ; 4 bytes @ 0x2
   757                           
   758     0072                     UART_write_char@c:	
   759                           ; 1 bytes @ 0x2
   760                           
   761     0072                     I2C_Master_Write@d:	
   762                           ; 1 bytes @ 0x2
   763                           
   764     0072                     I2C_Master_Read@a:	
   765                           ; 2 bytes @ 0x2
   766                           
   767     0072                     ___lwdiv@divisor:	
   768                           ; 2 bytes @ 0x2
   769                           
   770     0072                     ___lwmod@divisor:	
   771                           ; 2 bytes @ 0x2
   772                           
   773     0072                     ___lmul@multiplier:	
   774                           ; 2 bytes @ 0x2
   775                           
   776     0072                     ___lldiv@divisor:	
   777                           ; 4 bytes @ 0x2
   778                           
   779                           
   780                           ; 4 bytes @ 0x2
   781     0072                     	ds	1
   782     0073                     ??_sendDataUART:
   783     0073                     ??_Lcd_Cmd:	
   784                           ; 1 bytes @ 0x3
   785                           
   786     0073                     ??_Lcd_Write_Char:	
   787                           ; 1 bytes @ 0x3
   788                           
   789                           
   790                           ; 1 bytes @ 0x3
   791     0073                     	ds	1
   792     0074                     ??_writeMotors:
   793     0074                     ??_I2C_Master_Write:	
   794                           ; 1 bytes @ 0x4
   795                           
   796     0074                     ??_I2C_Master_Read:	
   797                           ; 1 bytes @ 0x4
   798                           
   799     0074                     Lcd_Write_Char@temp:	
   800                           ; 1 bytes @ 0x4
   801                           
   802     0074                     ___lwdiv@dividend:	
   803                           ; 1 bytes @ 0x4
   804                           
   805     0074                     ___lwmod@dividend:	
   806                           ; 2 bytes @ 0x4
   807                           
   808                           
   809                           ; 2 bytes @ 0x4
   810     0074                     	ds	1
   811     0075                     Lcd_Cmd@a:
   812     0075                     Lcd_Write_Char@y:	
   813                           ; 1 bytes @ 0x5
   814                           
   815                           
   816                           ; 1 bytes @ 0x5
   817     0075                     	ds	1
   818     0076                     ??_Lcd_Init:
   819     0076                     ??_Lcd_Clear:	
   820                           ; 1 bytes @ 0x6
   821                           
   822     0076                     ?_Lcd_Set_Cursor:	
   823                           ; 1 bytes @ 0x6
   824                           
   825     0076                     ??___lwdiv:	
   826                           ; 1 bytes @ 0x6
   827                           
   828     0076                     ??___lwmod:	
   829                           ; 1 bytes @ 0x6
   830                           
   831     0076                     Lcd_Set_Cursor@b:	
   832                           ; 1 bytes @ 0x6
   833                           
   834     0076                     Lcd_Write_Char@a:	
   835                           ; 1 bytes @ 0x6
   836                           
   837     0076                     ___lwmod@counter:	
   838                           ; 1 bytes @ 0x6
   839                           
   840     0076                     I2C_Master_Read@temp:	
   841                           ; 1 bytes @ 0x6
   842                           
   843     0076                     ___lwdiv@quotient:	
   844                           ; 2 bytes @ 0x6
   845                           
   846     0076                     ___lmul@multiplicand:	
   847                           ; 2 bytes @ 0x6
   848                           
   849     0076                     ___lldiv@dividend:	
   850                           ; 4 bytes @ 0x6
   851                           
   852                           
   853                           ; 4 bytes @ 0x6
   854     0076                     	ds	1
   855     0077                     ??_Lcd_Set_Cursor:
   856     0077                     ?_Lcd_Write_String:	
   857                           ; 1 bytes @ 0x7
   858                           
   859     0077                     Lcd_Write_String@a:	
   860                           ; 1 bytes @ 0x7
   861                           
   862                           
   863                           ; 2 bytes @ 0x7
   864     0077                     	ds	1
   865     0078                     ??_requestHum:
   866     0078                     ??_requestIR:	
   867                           ; 1 bytes @ 0x8
   868                           
   869     0078                     ___lwdiv@counter:	
   870                           ; 1 bytes @ 0x8
   871                           
   872                           
   873                           ; 1 bytes @ 0x8
   874     0078                     	ds	1
   875     0079                     ??_num_to_string:
   876                           
   877                           ; 1 bytes @ 0x9
   878     0079                     	ds	1
   879                           
   880                           	psect	cstackBANK0
   881     0020                     __pcstackBANK0:
   882     0020                     ?_num_to_string:
   883     0020                     ??_Lcd_Write_String:	
   884                           ; 1 bytes @ 0x0
   885                           
   886     0020                     ??___lmul:	
   887                           ; 1 bytes @ 0x0
   888                           
   889     0020                     ??___lldiv:	
   890                           ; 1 bytes @ 0x0
   891                           
   892     0020                     Lcd_Set_Cursor@a:	
   893                           ; 1 bytes @ 0x0
   894                           
   895     0020                     num_to_string@num:	
   896                           ; 1 bytes @ 0x0
   897                           
   898                           
   899                           ; 2 bytes @ 0x0
   900     0020                     	ds	1
   901     0021                     Lcd_Set_Cursor@z:
   902     0021                     ___lmul@product:	
   903                           ; 1 bytes @ 0x1
   904                           
   905     0021                     ___lldiv@quotient:	
   906                           ; 4 bytes @ 0x1
   907                           
   908                           
   909                           ; 4 bytes @ 0x1
   910     0021                     	ds	1
   911     0022                     num_to_string@dig8:
   912     0022                     Lcd_Set_Cursor@y:	
   913                           ; 1 bytes @ 0x2
   914                           
   915                           
   916                           ; 1 bytes @ 0x2
   917     0022                     	ds	1
   918     0023                     num_to_string@len:
   919     0023                     Lcd_Set_Cursor@temp:	
   920                           ; 1 bytes @ 0x3
   921                           
   922     0023                     Lcd_Write_String@i:	
   923                           ; 1 bytes @ 0x3
   924                           
   925                           
   926                           ; 2 bytes @ 0x3
   927     0023                     	ds	1
   928     0024                     num_to_string@div3:
   929                           
   930                           ; 2 bytes @ 0x4
   931     0024                     	ds	1
   932     0025                     ?___aldiv:
   933     0025                     ___lldiv@counter:	
   934                           ; 4 bytes @ 0x5
   935                           
   936     0025                     ___aldiv@divisor:	
   937                           ; 1 bytes @ 0x5
   938                           
   939                           
   940                           ; 4 bytes @ 0x5
   941     0025                     	ds	1
   942     0026                     ?_I2C_Master_Init:
   943     0026                     num_to_string@centenas:	
   944                           ; 1 bytes @ 0x6
   945                           
   946     0026                     I2C_Master_Init@c:	
   947                           ; 2 bytes @ 0x6
   948                           
   949                           
   950                           ; 4 bytes @ 0x6
   951     0026                     	ds	2
   952     0028                     num_to_string@div1:
   953                           
   954                           ; 2 bytes @ 0x8
   955     0028                     	ds	1
   956     0029                     ___aldiv@dividend:
   957                           
   958                           ; 4 bytes @ 0x9
   959     0029                     	ds	1
   960     002A                     ??_I2C_Master_Init:
   961     002A                     num_to_string@div2:	
   962                           ; 1 bytes @ 0xA
   963                           
   964                           
   965                           ; 2 bytes @ 0xA
   966     002A                     	ds	2
   967     002C                     num_to_string@decenas:
   968                           
   969                           ; 2 bytes @ 0xC
   970     002C                     	ds	1
   971     002D                     ??___aldiv:
   972                           
   973                           ; 1 bytes @ 0xD
   974     002D                     	ds	1
   975     002E                     ___aldiv@counter:
   976     002E                     num_to_string@unidades:	
   977                           ; 1 bytes @ 0xE
   978                           
   979                           
   980                           ; 2 bytes @ 0xE
   981     002E                     	ds	1
   982     002F                     ___aldiv@sign:
   983                           
   984                           ; 1 bytes @ 0xF
   985     002F                     	ds	1
   986     0030                     ??_LDC_output:
   987     0030                     ___aldiv@quotient:	
   988                           ; 1 bytes @ 0x10
   989                           
   990                           
   991                           ; 4 bytes @ 0x10
   992     0030                     	ds	4
   993     0034                     ?_UART_TX_config:
   994     0034                     ?_map:	
   995                           ; 1 bytes @ 0x14
   996                           
   997     0034                     map@min1:	
   998                           ; 2 bytes @ 0x14
   999                           
  1000     0034                     UART_TX_config@baudrate:	
  1001                           ; 1 bytes @ 0x14
  1002                           
  1003                           
  1004                           ; 4 bytes @ 0x14
  1005     0034                     	ds	1
  1006     0035                     map@max1:
  1007                           
  1008                           ; 1 bytes @ 0x15
  1009     0035                     	ds	1
  1010     0036                     map@min2:
  1011                           
  1012                           ; 1 bytes @ 0x16
  1013     0036                     	ds	1
  1014     0037                     map@max2:
  1015                           
  1016                           ; 4 bytes @ 0x17
  1017     0037                     	ds	1
  1018     0038                     ??_UART_TX_config:
  1019                           
  1020                           ; 1 bytes @ 0x18
  1021     0038                     	ds	3
  1022     003B                     ??_map:
  1023                           
  1024                           ; 1 bytes @ 0x1B
  1025     003B                     	ds	2
  1026     003D                     _UART_TX_config$1023:
  1027                           
  1028                           ; 4 bytes @ 0x1D
  1029     003D                     	ds	4
  1030     0041                     UART_TX_config@BR:
  1031                           
  1032                           ; 4 bytes @ 0x21
  1033     0041                     	ds	2
  1034     0043                     map@val:
  1035                           
  1036                           ; 1 bytes @ 0x23
  1037     0043                     	ds	1
  1038     0044                     ??_requestTemp:
  1039     0044                     ??_requestGas:	
  1040                           ; 1 bytes @ 0x24
  1041                           
  1042                           
  1043                           ; 1 bytes @ 0x24
  1044     0044                     	ds	1
  1045     0045                     ??_setup:
  1046                           
  1047                           ; 1 bytes @ 0x25
  1048     0045                     	ds	2
  1049     0047                     ??_main:
  1050                           
  1051                           ; 1 bytes @ 0x27
  1052     0047                     	ds	3
  1053                           
  1054                           	psect	maintext
  1055     0564                     __pmaintext:	
  1056 ;;
  1057 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1058 ;;
  1059 ;; *************** function _main *****************
  1060 ;; Defined at:
  1061 ;;		line 87 in file "master.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;		None
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;		None
  1066 ;; Return value:  Size  Location     Type
  1067 ;;                  2   93[None  ] int 
  1068 ;; Registers used:
  1069 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1070 ;; Tracked objects:
  1071 ;;		On entry : B00/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1075 ;;      Params:         0       0       0       0       0
  1076 ;;      Locals:         0       0       0       0       0
  1077 ;;      Temps:          0       3       0       0       0
  1078 ;;      Totals:         0       3       0       0       0
  1079 ;;Total ram usage:        3 bytes
  1080 ;; Hardware stack levels required when called: 5
  1081 ;; This function calls:
  1082 ;;		_LDC_output
  1083 ;;		_requestGas
  1084 ;;		_requestHum
  1085 ;;		_requestIR
  1086 ;;		_requestTemp
  1087 ;;		_sendDataUART
  1088 ;;		_setup
  1089 ;;		_writeMotors
  1090 ;; This function is called by:
  1091 ;;		Startup code after reset
  1092 ;; This function uses a non-reentrant model
  1093 ;;
  1094                           
  1095     0564                     _main:	
  1096                           ;psect for function _main
  1097                           
  1098     0564                     l2184:	
  1099                           ;incstack = 0
  1100                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1101                           
  1102                           
  1103                           ;master.c: 88:     setup();
  1104     0564  120A  118A  2760  120A  118A  	fcall	_setup
  1105     0569                     l2186:
  1106                           
  1107                           ;master.c: 92:         if (counter >= 25){
  1108     0569  3019               	movlw	25
  1109     056A  1283               	bcf	3,5	;RP0=0, select bank0
  1110     056B  1303               	bcf	3,6	;RP1=0, select bank0
  1111     056C  024D               	subwf	_counter,w
  1112     056D  1C03               	skipc
  1113     056E  2D70               	goto	u1671
  1114     056F  2D71               	goto	u1670
  1115     0570                     u1671:
  1116     0570  2D79               	goto	l2192
  1117     0571                     u1670:
  1118     0571                     l2188:
  1119                           
  1120                           ;master.c: 93:             requestHum();
  1121     0571  120A  118A  2645  120A  118A  	fcall	_requestHum
  1122     0576                     l2190:
  1123                           
  1124                           ;master.c: 94:             counter = 0;
  1125     0576  1283               	bcf	3,5	;RP0=0, select bank0
  1126     0577  1303               	bcf	3,6	;RP1=0, select bank0
  1127     0578  01CD               	clrf	_counter
  1128     0579                     l2192:
  1129                           
  1130                           ;master.c: 96:         requestTemp();
  1131     0579  120A  118A  2397  120A  118A  	fcall	_requestTemp
  1132     057E                     l2194:
  1133                           
  1134                           ;master.c: 97:         requestGas();
  1135     057E  120A  118A  2331  120A  118A  	fcall	_requestGas
  1136     0583                     l2196:
  1137                           
  1138                           ;master.c: 98:         requestIR();
  1139     0583  120A  118A  25FC  120A  118A  	fcall	_requestIR
  1140     0588                     l2198:
  1141                           
  1142                           ;master.c: 101:         writeMotors();
  1143     0588  120A  118A  24B8  120A  118A  	fcall	_writeMotors
  1144     058D                     l2200:
  1145                           
  1146                           ;master.c: 103:         LDC_output();
  1147     058D  120A  118A  2024  120A  118A  	fcall	_LDC_output
  1148     0592                     l2202:
  1149                           
  1150                           ;master.c: 104:         sendDataUART();
  1151     0592  120A  118A  2512  120A  118A  	fcall	_sendDataUART
  1152     0597                     l2204:
  1153                           
  1154                           ;master.c: 106:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1155     0597  3002               	movlw	2
  1156     0598  1283               	bcf	3,5	;RP0=0, select bank0
  1157     0599  1303               	bcf	3,6	;RP1=0, select bank0
  1158     059A  00C9               	movwf	??_main+2
  1159     059B  3004               	movlw	4
  1160     059C  00C8               	movwf	??_main+1
  1161     059D  30B9               	movlw	185
  1162     059E  00C7               	movwf	??_main
  1163     059F                     u1707:
  1164     059F  0BC7               	decfsz	??_main,f
  1165     05A0  2D9F               	goto	u1707
  1166     05A1  0BC8               	decfsz	??_main+1,f
  1167     05A2  2D9F               	goto	u1707
  1168     05A3  0BC9               	decfsz	??_main+2,f
  1169     05A4  2D9F               	goto	u1707
  1170     05A5  2DA6               	nop2
  1171     05A6                     l2206:
  1172                           
  1173                           ;master.c: 107:         counter++;
  1174     05A6  3001               	movlw	1
  1175     05A7  00FF               	movwf	btemp+1
  1176     05A8  087F               	movf	btemp+1,w
  1177     05A9  1283               	bcf	3,5	;RP0=0, select bank0
  1178     05AA  1303               	bcf	3,6	;RP1=0, select bank0
  1179     05AB  07CD               	addwf	_counter,f
  1180     05AC  2D69               	goto	l2186
  1181     05AD  120A  118A  280C   	ljmp	start
  1182     05B0                     __end_of_main:
  1183                           
  1184                           	psect	text1
  1185     04B8                     __ptext1:	
  1186 ;; *************** function _writeMotors *****************
  1187 ;; Defined at:
  1188 ;;		line 186 in file "master.c"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;		None
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;		None
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  1    wreg      void 
  1195 ;; Registers used:
  1196 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1202 ;;      Params:         0       0       0       0       0
  1203 ;;      Locals:         0       0       0       0       0
  1204 ;;      Temps:          2       0       0       0       0
  1205 ;;      Totals:         2       0       0       0       0
  1206 ;;Total ram usage:        2 bytes
  1207 ;; Hardware stack levels used: 1
  1208 ;; Hardware stack levels required when called: 3
  1209 ;; This function calls:
  1210 ;;		_I2C_Master_Start
  1211 ;;		_I2C_Master_Stop
  1212 ;;		_I2C_Master_Write
  1213 ;; This function is called by:
  1214 ;;		_main
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218     04B8                     _writeMotors:	
  1219                           ;psect for function _writeMotors
  1220                           
  1221     04B8                     l1784:	
  1222                           ;incstack = 0
  1223                           ; Regs used in _writeMotors: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1224                           
  1225                           
  1226                           ;master.c: 188:     if(tempC > 50 || gasPPM > 400)
  1227     04B8  3033               	movlw	51
  1228     04B9  027B               	subwf	_tempC,w
  1229     04BA  1803               	skipnc
  1230     04BB  2CBD               	goto	u1231
  1231     04BC  2CBE               	goto	u1230
  1232     04BD                     u1231:
  1233     04BD  2CC9               	goto	l118
  1234     04BE                     u1230:
  1235     04BE                     l1786:
  1236     04BE  3001               	movlw	1
  1237     04BF  1283               	bcf	3,5	;RP0=0, select bank0
  1238     04C0  1303               	bcf	3,6	;RP1=0, select bank0
  1239     04C1  024B               	subwf	_gasPPM+1,w
  1240     04C2  3091               	movlw	145
  1241     04C3  1903               	skipnz
  1242     04C4  024A               	subwf	_gasPPM,w
  1243     04C5  1C03               	skipc
  1244     04C6  2CC8               	goto	u1241
  1245     04C7  2CC9               	goto	u1240
  1246     04C8                     u1241:
  1247     04C8  2CCB               	goto	l1788
  1248     04C9                     u1240:
  1249     04C9                     l118:
  1250                           
  1251                           ;master.c: 189:         motorCon |= 0x10;
  1252     04C9  167A               	bsf	_motorCon,4
  1253     04CA  2CD9               	goto	l1794
  1254     04CB                     l1788:
  1255                           
  1256                           ;master.c: 191:         motorCon &= 0x0F;
  1257     04CB  300F               	movlw	15
  1258     04CC  00FF               	movwf	btemp+1
  1259     04CD  087F               	movf	btemp+1,w
  1260     04CE  05FA               	andwf	_motorCon,f
  1261     04CF  2CD9               	goto	l1794
  1262     04D0                     l121:	
  1263                           ;master.c: 196:         case 0:
  1264                           
  1265                           
  1266                           ;master.c: 197:             motorCon |= 0x02;
  1267     04D0  14FA               	bsf	_motorCon,1
  1268                           
  1269                           ;master.c: 198:             break;
  1270     04D1  2CE9               	goto	l1796
  1271     04D2                     l1790:
  1272                           
  1273                           ;master.c: 200:             motorCon |= 0x03;
  1274     04D2  3003               	movlw	3
  1275     04D3  00FF               	movwf	btemp+1
  1276     04D4  087F               	movf	btemp+1,w
  1277     04D5  04FA               	iorwf	_motorCon,f
  1278                           
  1279                           ;master.c: 201:             break;
  1280     04D6  2CE9               	goto	l1796
  1281     04D7                     l124:	
  1282                           ;master.c: 202:         case 180:
  1283                           
  1284                           
  1285                           ;master.c: 203:             motorCon |= 0x04;
  1286     04D7  157A               	bsf	_motorCon,2
  1287                           
  1288                           ;master.c: 204:             break;
  1289     04D8  2CE9               	goto	l1796
  1290     04D9                     l1794:
  1291                           
  1292                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1293                           ; Switch size 1, requested type "simple"
  1294                           ; Number of cases is 1, Range of values is 0 to 0
  1295                           ; switch strategies available:
  1296                           ; Name         Instructions Cycles
  1297                           ; simple_byte            4     3 (average)
  1298                           ; direct_byte           11     8 (fixed)
  1299                           ; jumptable            260     6 (fixed)
  1300                           ;	Chosen strategy is simple_byte
  1301     04D9  3000               	movlw	0
  1302     04DA  3A00               	xorlw	0	; case 0
  1303     04DB  1903               	skipnz
  1304     04DC  2CDE               	goto	l2252
  1305     04DD  2CD0               	goto	l121
  1306     04DE                     l2252:
  1307                           
  1308                           ; Switch size 1, requested type "simple"
  1309                           ; Number of cases is 3, Range of values is 0 to 180
  1310                           ; switch strategies available:
  1311                           ; Name         Instructions Cycles
  1312                           ; simple_byte           10     6 (average)
  1313                           ; jumptable            260     6 (fixed)
  1314                           ;	Chosen strategy is simple_byte
  1315     04DE  30B4               	movlw	180
  1316     04DF  3A00               	xorlw	0	; case 0
  1317     04E0  1903               	skipnz
  1318     04E1  2CD0               	goto	l121
  1319     04E2  3A5A               	xorlw	90	; case 90
  1320     04E3  1903               	skipnz
  1321     04E4  2CD2               	goto	l1790
  1322     04E5  3AEE               	xorlw	238	; case 180
  1323     04E6  1903               	skipnz
  1324     04E7  2CD7               	goto	l124
  1325     04E8  2CD0               	goto	l121
  1326     04E9                     l1796:
  1327                           
  1328                           ;master.c: 211:     I2C_Master_Start();
  1329     04E9  120A  158A  26E8  120A  118A  	fcall	_I2C_Master_Start
  1330                           
  1331                           ;master.c: 212:     I2C_Master_Write(0x30 +0);
  1332     04EE  3030               	movlw	48
  1333     04EF  00F2               	movwf	I2C_Master_Write@d
  1334     04F0  3000               	movlw	0
  1335     04F1  00F3               	movwf	I2C_Master_Write@d+1
  1336     04F2  120A  158A  26FA  120A  118A  	fcall	_I2C_Master_Write
  1337                           
  1338                           ;master.c: 213:     I2C_Master_Write(motorCon);
  1339     04F7  087A               	movf	_motorCon,w
  1340     04F8  00F4               	movwf	??_writeMotors
  1341     04F9  01F5               	clrf	??_writeMotors+1
  1342     04FA  0874               	movf	??_writeMotors,w
  1343     04FB  00F2               	movwf	I2C_Master_Write@d
  1344     04FC  0875               	movf	??_writeMotors+1,w
  1345     04FD  00F3               	movwf	I2C_Master_Write@d+1
  1346     04FE  120A  158A  26FA  120A  118A  	fcall	_I2C_Master_Write
  1347                           
  1348                           ;master.c: 214:     I2C_Master_Stop();
  1349     0503  120A  158A  26F1  120A  118A  	fcall	_I2C_Master_Stop
  1350     0508                     l1798:
  1351                           
  1352                           ;master.c: 215:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1353     0508  3034               	movlw	52
  1354     0509  00F5               	movwf	??_writeMotors+1
  1355     050A  30F1               	movlw	241
  1356     050B  00F4               	movwf	??_writeMotors
  1357     050C                     u1717:
  1358     050C  0BF4               	decfsz	??_writeMotors,f
  1359     050D  2D0C               	goto	u1717
  1360     050E  0BF5               	decfsz	??_writeMotors+1,f
  1361     050F  2D0C               	goto	u1717
  1362     0510  2D11               	nop2
  1363     0511                     l126:
  1364     0511  0008               	return
  1365     0512                     __end_of_writeMotors:
  1366                           
  1367                           	psect	text2
  1368     0760                     __ptext2:	
  1369 ;; *************** function _setup *****************
  1370 ;; Defined at:
  1371 ;;		line 111 in file "master.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;		None
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;		None
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  1    wreg      void 
  1378 ;; Registers used:
  1379 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1385 ;;      Params:         0       0       0       0       0
  1386 ;;      Locals:         0       0       0       0       0
  1387 ;;      Temps:          0       2       0       0       0
  1388 ;;      Totals:         0       2       0       0       0
  1389 ;;Total ram usage:        2 bytes
  1390 ;; Hardware stack levels used: 1
  1391 ;; Hardware stack levels required when called: 4
  1392 ;; This function calls:
  1393 ;;		_I2C_Master_Init
  1394 ;;		_Lcd_Init
  1395 ;;		_UART_TX_config
  1396 ;; This function is called by:
  1397 ;;		_main
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401     0760                     _setup:	
  1402                           ;psect for function _setup
  1403                           
  1404     0760                     l2108:	
  1405                           ;incstack = 0
  1406                           ; Regs used in _setup: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1407                           
  1408                           
  1409                           ;master.c: 112:     ANSEL = 0;
  1410     0760  1683               	bsf	3,5	;RP0=1, select bank3
  1411     0761  1703               	bsf	3,6	;RP1=1, select bank3
  1412     0762  0188               	clrf	8	;volatile
  1413                           
  1414                           ;master.c: 113:     ANSELH= 0;
  1415     0763  0189               	clrf	9	;volatile
  1416                           
  1417                           ;master.c: 115:     TRISD = 0;
  1418     0764  1683               	bsf	3,5	;RP0=1, select bank1
  1419     0765  1303               	bcf	3,6	;RP1=0, select bank1
  1420     0766  0188               	clrf	8	;volatile
  1421                           
  1422                           ;master.c: 116:     PORTD = 0;
  1423     0767  1283               	bcf	3,5	;RP0=0, select bank0
  1424     0768  1303               	bcf	3,6	;RP1=0, select bank0
  1425     0769  0188               	clrf	8	;volatile
  1426     076A                     l2110:
  1427                           
  1428                           ;master.c: 119:     OSCCONbits.IRCF = 0b111;
  1429     076A  3070               	movlw	112
  1430     076B  1683               	bsf	3,5	;RP0=1, select bank1
  1431     076C  1303               	bcf	3,6	;RP1=0, select bank1
  1432     076D  048F               	iorwf	15,f	;volatile
  1433     076E                     l2112:
  1434                           
  1435                           ;master.c: 120:     SCS = 1;
  1436     076E  140F               	bsf	15,0	;volatile
  1437     076F                     l2114:
  1438                           
  1439                           ;master.c: 123:     Lcd_Init();
  1440     076F  120A  118A  245B  120A  118A  	fcall	_Lcd_Init
  1441     0774                     l2116:
  1442                           
  1443                           ;master.c: 124:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1444     0774  301A               	movlw	26
  1445     0775  1283               	bcf	3,5	;RP0=0, select bank0
  1446     0776  1303               	bcf	3,6	;RP1=0, select bank0
  1447     0777  00C6               	movwf	??_setup+1
  1448     0778  30F7               	movlw	247
  1449     0779  00C5               	movwf	??_setup
  1450     077A                     u1727:
  1451     077A  0BC5               	decfsz	??_setup,f
  1452     077B  2F7A               	goto	u1727
  1453     077C  0BC6               	decfsz	??_setup+1,f
  1454     077D  2F7A               	goto	u1727
  1455     077E  2F7F               	nop2
  1456     077F                     l2118:
  1457                           
  1458                           ;master.c: 127:     I2C_Master_Init(100000);
  1459     077F  3000               	movlw	0
  1460     0780  1283               	bcf	3,5	;RP0=0, select bank0
  1461     0781  1303               	bcf	3,6	;RP1=0, select bank0
  1462     0782  00A9               	movwf	I2C_Master_Init@c+3
  1463     0783  3001               	movlw	1
  1464     0784  00A8               	movwf	I2C_Master_Init@c+2
  1465     0785  3086               	movlw	134
  1466     0786  00A7               	movwf	I2C_Master_Init@c+1
  1467     0787  30A0               	movlw	160
  1468     0788  00A6               	movwf	I2C_Master_Init@c
  1469     0789  120A  158A  27C8  120A  118A  	fcall	_I2C_Master_Init
  1470     078E                     l2120:
  1471                           
  1472                           ;master.c: 131:     UART_TX_config(9600);
  1473     078E  3000               	movlw	0
  1474     078F  1283               	bcf	3,5	;RP0=0, select bank0
  1475     0790  1303               	bcf	3,6	;RP1=0, select bank0
  1476     0791  00B7               	movwf	UART_TX_config@baudrate+3
  1477     0792  3000               	movlw	0
  1478     0793  00B6               	movwf	UART_TX_config@baudrate+2
  1479     0794  3025               	movlw	37
  1480     0795  00B5               	movwf	UART_TX_config@baudrate+1
  1481     0796  3080               	movlw	128
  1482     0797  00B4               	movwf	UART_TX_config@baudrate
  1483     0798  120A  118A  2248  120A  118A  	fcall	_UART_TX_config
  1484     079D                     l101:
  1485     079D  0008               	return
  1486     079E                     __end_of_setup:
  1487                           
  1488                           	psect	text3
  1489     0248                     __ptext3:	
  1490 ;; *************** function _UART_TX_config *****************
  1491 ;; Defined at:
  1492 ;;		line 25 in file "UART.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;  baudrate        4   20[BANK0 ] long 
  1495 ;; Auto vars:     Size  Location     Type
  1496 ;;  BR              4   33[BANK0 ] long 
  1497 ;; Return value:  Size  Location     Type
  1498 ;;                  1    wreg      void 
  1499 ;; Registers used:
  1500 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1501 ;; Tracked objects:
  1502 ;;		On entry : 0/0
  1503 ;;		On exit  : 0/0
  1504 ;;		Unchanged: 0/0
  1505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1506 ;;      Params:         0       4       0       0       0
  1507 ;;      Locals:         0       8       0       0       0
  1508 ;;      Temps:          0       5       0       0       0
  1509 ;;      Totals:         0      17       0       0       0
  1510 ;;Total ram usage:       17 bytes
  1511 ;; Hardware stack levels used: 1
  1512 ;; Hardware stack levels required when called: 2
  1513 ;; This function calls:
  1514 ;;		___aldiv
  1515 ;; This function is called by:
  1516 ;;		_setup
  1517 ;; This function uses a non-reentrant model
  1518 ;;
  1519                           
  1520     0248                     _UART_TX_config:	
  1521                           ;psect for function _UART_TX_config
  1522                           
  1523     0248                     l2058:	
  1524                           ;incstack = 0
  1525                           ; Regs used in _UART_TX_config: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1526                           
  1527                           
  1528                           ;UART.c: 28:     long BR;;UART.c: 29:     BR = ((8000000/baudrate)/64) - 1;
  1529     0248  1283               	bcf	3,5	;RP0=0, select bank0
  1530     0249  1303               	bcf	3,6	;RP1=0, select bank0
  1531     024A  0837               	movf	UART_TX_config@baudrate+3,w
  1532     024B  00A8               	movwf	___aldiv@divisor+3
  1533     024C  0836               	movf	UART_TX_config@baudrate+2,w
  1534     024D  00A7               	movwf	___aldiv@divisor+2
  1535     024E  0835               	movf	UART_TX_config@baudrate+1,w
  1536     024F  00A6               	movwf	___aldiv@divisor+1
  1537     0250  0834               	movf	UART_TX_config@baudrate,w
  1538     0251  00A5               	movwf	___aldiv@divisor
  1539     0252  3000               	movlw	0
  1540     0253  00AC               	movwf	___aldiv@dividend+3
  1541     0254  307A               	movlw	122
  1542     0255  00AB               	movwf	___aldiv@dividend+2
  1543     0256  3012               	movlw	18
  1544     0257  00AA               	movwf	___aldiv@dividend+1
  1545     0258  3000               	movlw	0
  1546     0259  00A9               	movwf	___aldiv@dividend
  1547     025A  120A  118A  21AB  120A  118A  	fcall	___aldiv
  1548     025F  1283               	bcf	3,5	;RP0=0, select bank0
  1549     0260  1303               	bcf	3,6	;RP1=0, select bank0
  1550     0261  0828               	movf	?___aldiv+3,w
  1551     0262  00C0               	movwf	_UART_TX_config$1023+3
  1552     0263  0827               	movf	?___aldiv+2,w
  1553     0264  00BF               	movwf	_UART_TX_config$1023+2
  1554     0265  0826               	movf	?___aldiv+1,w
  1555     0266  00BE               	movwf	_UART_TX_config$1023+1
  1556     0267  0825               	movf	?___aldiv,w
  1557     0268  00BD               	movwf	_UART_TX_config$1023
  1558                           
  1559                           ;UART.c: 28:     long BR;;UART.c: 29:     BR = ((8000000/baudrate)/64) - 1;
  1560     0269  30FF               	movlw	255
  1561     026A  00B8               	movwf	??_UART_TX_config
  1562     026B  30FF               	movlw	255
  1563     026C  00B9               	movwf	??_UART_TX_config+1
  1564     026D  30FF               	movlw	255
  1565     026E  00BA               	movwf	??_UART_TX_config+2
  1566     026F  30FF               	movlw	255
  1567     0270  00BB               	movwf	??_UART_TX_config+3
  1568     0271  3000               	movlw	0
  1569     0272  00A8               	movwf	___aldiv@divisor+3
  1570     0273  3000               	movlw	0
  1571     0274  00A7               	movwf	___aldiv@divisor+2
  1572     0275  3000               	movlw	0
  1573     0276  00A6               	movwf	___aldiv@divisor+1
  1574     0277  3040               	movlw	64
  1575     0278  00A5               	movwf	___aldiv@divisor
  1576     0279  0840               	movf	_UART_TX_config$1023+3,w
  1577     027A  00AC               	movwf	___aldiv@dividend+3
  1578     027B  083F               	movf	_UART_TX_config$1023+2,w
  1579     027C  00AB               	movwf	___aldiv@dividend+2
  1580     027D  083E               	movf	_UART_TX_config$1023+1,w
  1581     027E  00AA               	movwf	___aldiv@dividend+1
  1582     027F  083D               	movf	_UART_TX_config$1023,w
  1583     0280  00A9               	movwf	___aldiv@dividend
  1584     0281  120A  118A  21AB  120A  118A  	fcall	___aldiv
  1585     0286  1283               	bcf	3,5	;RP0=0, select bank0
  1586     0287  1303               	bcf	3,6	;RP1=0, select bank0
  1587     0288  0825               	movf	?___aldiv,w
  1588     0289  07B8               	addwf	??_UART_TX_config,f
  1589     028A  0826               	movf	?___aldiv+1,w
  1590     028B  1803               	skipnc
  1591     028C  0F26               	incfsz	?___aldiv+1,w
  1592     028D  2A8F               	goto	u1570
  1593     028E  2A90               	goto	u1571
  1594     028F                     u1570:
  1595     028F  07B9               	addwf	??_UART_TX_config+1,f
  1596     0290                     u1571:
  1597     0290  0827               	movf	?___aldiv+2,w
  1598     0291  1803               	skipnc
  1599     0292  0F27               	incfsz	?___aldiv+2,w
  1600     0293  2A95               	goto	u1572
  1601     0294  2A96               	goto	u1573
  1602     0295                     u1572:
  1603     0295  07BA               	addwf	??_UART_TX_config+2,f
  1604     0296                     u1573:
  1605     0296  0828               	movf	?___aldiv+3,w
  1606     0297  1803               	skipnc
  1607     0298  0A28               	incf	?___aldiv+3,w
  1608     0299  07BB               	addwf	??_UART_TX_config+3,f
  1609     029A  083B               	movf	??_UART_TX_config+3,w
  1610     029B  00C4               	movwf	UART_TX_config@BR+3
  1611     029C  083A               	movf	??_UART_TX_config+2,w
  1612     029D  00C3               	movwf	UART_TX_config@BR+2
  1613     029E  0839               	movf	??_UART_TX_config+1,w
  1614     029F  00C2               	movwf	UART_TX_config@BR+1
  1615     02A0  0838               	movf	??_UART_TX_config,w
  1616     02A1  00C1               	movwf	UART_TX_config@BR
  1617     02A2                     l2060:
  1618                           
  1619                           ;UART.c: 30:     SPBRG = BR & 0x00FF;
  1620     02A2  0841               	movf	UART_TX_config@BR,w
  1621     02A3  1683               	bsf	3,5	;RP0=1, select bank1
  1622     02A4  1303               	bcf	3,6	;RP1=0, select bank1
  1623     02A5  0099               	movwf	25	;volatile
  1624     02A6                     l2062:
  1625                           
  1626                           ;UART.c: 31:     SPBRGH = (BR & 0xFF00) >> 8;
  1627     02A6  1283               	bcf	3,5	;RP0=0, select bank0
  1628     02A7  1303               	bcf	3,6	;RP1=0, select bank0
  1629     02A8  0841               	movf	UART_TX_config@BR,w
  1630     02A9  00B8               	movwf	??_UART_TX_config
  1631     02AA  0842               	movf	UART_TX_config@BR+1,w
  1632     02AB  00B9               	movwf	??_UART_TX_config+1
  1633     02AC  0843               	movf	UART_TX_config@BR+2,w
  1634     02AD  00BA               	movwf	??_UART_TX_config+2
  1635     02AE  0844               	movf	UART_TX_config@BR+3,w
  1636     02AF  00BB               	movwf	??_UART_TX_config+3
  1637     02B0  3008               	movlw	8
  1638     02B1  00BC               	movwf	??_UART_TX_config+4
  1639     02B2                     u1585:
  1640     02B2  0D3B               	rlf	??_UART_TX_config+3,w
  1641     02B3  0CBB               	rrf	??_UART_TX_config+3,f
  1642     02B4  0CBA               	rrf	??_UART_TX_config+2,f
  1643     02B5  0CB9               	rrf	??_UART_TX_config+1,f
  1644     02B6  0CB8               	rrf	??_UART_TX_config,f
  1645     02B7                     u1580:
  1646     02B7  0BBC               	decfsz	??_UART_TX_config+4,f
  1647     02B8  2AB2               	goto	u1585
  1648     02B9  0838               	movf	??_UART_TX_config,w
  1649     02BA  1683               	bsf	3,5	;RP0=1, select bank1
  1650     02BB  1303               	bcf	3,6	;RP1=0, select bank1
  1651     02BC  009A               	movwf	26	;volatile
  1652     02BD                     l2064:
  1653                           
  1654                           ;UART.c: 33:     SYNC = 0;
  1655     02BD  1218               	bcf	24,4	;volatile
  1656     02BE                     l2066:
  1657                           
  1658                           ;UART.c: 34:     SPEN = 1;
  1659     02BE  1283               	bcf	3,5	;RP0=0, select bank0
  1660     02BF  1303               	bcf	3,6	;RP1=0, select bank0
  1661     02C0  1798               	bsf	24,7	;volatile
  1662     02C1                     l2068:
  1663                           
  1664                           ;UART.c: 36:     TXEN = 1;
  1665     02C1  1683               	bsf	3,5	;RP0=1, select bank1
  1666     02C2  1303               	bcf	3,6	;RP1=0, select bank1
  1667     02C3  1698               	bsf	24,5	;volatile
  1668     02C4                     l2070:
  1669                           
  1670                           ;UART.c: 37:     TXIE = 0;
  1671     02C4  120C               	bcf	12,4	;volatile
  1672     02C5                     l2072:
  1673                           
  1674                           ;UART.c: 38:     TXIF = 0;
  1675     02C5  1283               	bcf	3,5	;RP0=0, select bank0
  1676     02C6  1303               	bcf	3,6	;RP1=0, select bank0
  1677     02C7  120C               	bcf	12,4	;volatile
  1678     02C8                     l289:
  1679     02C8  0008               	return
  1680     02C9                     __end_of_UART_TX_config:
  1681                           
  1682                           	psect	text4
  1683     045B                     __ptext4:	
  1684 ;; *************** function _Lcd_Init *****************
  1685 ;; Defined at:
  1686 ;;		line 65 in file "LCD4b.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;		None
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;		None
  1691 ;; Return value:  Size  Location     Type
  1692 ;;                  1    wreg      void 
  1693 ;; Registers used:
  1694 ;;		wreg, status,2, status,0, pclath, cstack
  1695 ;; Tracked objects:
  1696 ;;		On entry : 0/0
  1697 ;;		On exit  : 0/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1700 ;;      Params:         0       0       0       0       0
  1701 ;;      Locals:         0       0       0       0       0
  1702 ;;      Temps:          2       0       0       0       0
  1703 ;;      Totals:         2       0       0       0       0
  1704 ;;Total ram usage:        2 bytes
  1705 ;; Hardware stack levels used: 1
  1706 ;; Hardware stack levels required when called: 3
  1707 ;; This function calls:
  1708 ;;		_Lcd_Cmd
  1709 ;;		_Lcd_Port
  1710 ;; This function is called by:
  1711 ;;		_setup
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715     045B                     _Lcd_Init:	
  1716                           ;psect for function _Lcd_Init
  1717                           
  1718     045B                     l2036:	
  1719                           ;incstack = 0
  1720                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1721                           
  1722                           
  1723                           ;LCD4b.c: 66:     Lcd_Port(0x00);
  1724     045B  3000               	movlw	0
  1725     045C  120A  158A  2743  120A  118A  	fcall	_Lcd_Port
  1726     0461                     l2038:
  1727                           
  1728                           ;LCD4b.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1729     0461  3034               	movlw	52
  1730     0462  00F7               	movwf	??_Lcd_Init+1
  1731     0463  30F1               	movlw	241
  1732     0464  00F6               	movwf	??_Lcd_Init
  1733     0465                     u1737:
  1734     0465  0BF6               	decfsz	??_Lcd_Init,f
  1735     0466  2C65               	goto	u1737
  1736     0467  0BF7               	decfsz	??_Lcd_Init+1,f
  1737     0468  2C65               	goto	u1737
  1738     0469  2C6A               	nop2
  1739     046A                     l2040:
  1740                           
  1741                           ;LCD4b.c: 68:     Lcd_Cmd(0x03);
  1742     046A  3003               	movlw	3
  1743     046B  120A  158A  2729  120A  118A  	fcall	_Lcd_Cmd
  1744                           
  1745                           ;LCD4b.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1746     0470  300D               	movlw	13
  1747     0471  00F7               	movwf	??_Lcd_Init+1
  1748     0472  30FB               	movlw	251
  1749     0473  00F6               	movwf	??_Lcd_Init
  1750     0474                     u1747:
  1751     0474  0BF6               	decfsz	??_Lcd_Init,f
  1752     0475  2C74               	goto	u1747
  1753     0476  0BF7               	decfsz	??_Lcd_Init+1,f
  1754     0477  2C74               	goto	u1747
  1755     0478  2C79               	nop2
  1756     0479                     l2042:
  1757                           
  1758                           ;LCD4b.c: 70:     Lcd_Cmd(0x03);
  1759     0479  3003               	movlw	3
  1760     047A  120A  158A  2729  120A  118A  	fcall	_Lcd_Cmd
  1761     047F                     l2044:
  1762                           
  1763                           ;LCD4b.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  1764     047F  301D               	movlw	29
  1765     0480  00F7               	movwf	??_Lcd_Init+1
  1766     0481  3091               	movlw	145
  1767     0482  00F6               	movwf	??_Lcd_Init
  1768     0483                     u1757:
  1769     0483  0BF6               	decfsz	??_Lcd_Init,f
  1770     0484  2C83               	goto	u1757
  1771     0485  0BF7               	decfsz	??_Lcd_Init+1,f
  1772     0486  2C83               	goto	u1757
  1773                           
  1774                           ;LCD4b.c: 72:     Lcd_Cmd(0x03);
  1775     0487  3003               	movlw	3
  1776     0488  120A  158A  2729  120A  118A  	fcall	_Lcd_Cmd
  1777                           
  1778                           ;LCD4b.c: 74:     Lcd_Cmd(0x02);
  1779     048D  3002               	movlw	2
  1780     048E  120A  158A  2729  120A  118A  	fcall	_Lcd_Cmd
  1781                           
  1782                           ;LCD4b.c: 75:     Lcd_Cmd(0x02);
  1783     0493  3002               	movlw	2
  1784     0494  120A  158A  2729  120A  118A  	fcall	_Lcd_Cmd
  1785                           
  1786                           ;LCD4b.c: 76:     Lcd_Cmd(0x08);
  1787     0499  3008               	movlw	8
  1788     049A  120A  158A  2729  120A  118A  	fcall	_Lcd_Cmd
  1789                           
  1790                           ;LCD4b.c: 77:     Lcd_Cmd(0x00);
  1791     049F  3000               	movlw	0
  1792     04A0  120A  158A  2729  120A  118A  	fcall	_Lcd_Cmd
  1793                           
  1794                           ;LCD4b.c: 78:     Lcd_Cmd(0x0C);
  1795     04A5  300C               	movlw	12
  1796     04A6  120A  158A  2729  120A  118A  	fcall	_Lcd_Cmd
  1797                           
  1798                           ;LCD4b.c: 79:     Lcd_Cmd(0x00);
  1799     04AB  3000               	movlw	0
  1800     04AC  120A  158A  2729  120A  118A  	fcall	_Lcd_Cmd
  1801                           
  1802                           ;LCD4b.c: 80:     Lcd_Cmd(0x06);
  1803     04B1  3006               	movlw	6
  1804     04B2  120A  158A  2729  120A  118A  	fcall	_Lcd_Cmd
  1805     04B7                     l238:
  1806     04B7  0008               	return
  1807     04B8                     __end_of_Lcd_Init:
  1808                           
  1809                           	psect	text5
  1810     0FC8                     __ptext5:	
  1811 ;; *************** function _I2C_Master_Init *****************
  1812 ;; Defined at:
  1813 ;;		line 16 in file "I2C.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;  c               4    6[BANK0 ] const unsigned long 
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;		None
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  1    wreg      void 
  1820 ;; Registers used:
  1821 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1827 ;;      Params:         0       4       0       0       0
  1828 ;;      Locals:         0       0       0       0       0
  1829 ;;      Temps:          0       4       0       0       0
  1830 ;;      Totals:         0       8       0       0       0
  1831 ;;Total ram usage:        8 bytes
  1832 ;; Hardware stack levels used: 1
  1833 ;; Hardware stack levels required when called: 2
  1834 ;; This function calls:
  1835 ;;		___lldiv
  1836 ;; This function is called by:
  1837 ;;		_setup
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841     0FC8                     _I2C_Master_Init:	
  1842                           ;psect for function _I2C_Master_Init
  1843                           
  1844     0FC8                     l2046:	
  1845                           ;incstack = 0
  1846                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1847                           
  1848                           
  1849                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1850     0FC8  3028               	movlw	40
  1851     0FC9  1283               	bcf	3,5	;RP0=0, select bank0
  1852     0FCA  1303               	bcf	3,6	;RP1=0, select bank0
  1853     0FCB  0094               	movwf	20	;volatile
  1854     0FCC                     l2048:
  1855                           
  1856                           ;I2C.c: 19:     SSPCON2 = 0;
  1857     0FCC  1683               	bsf	3,5	;RP0=1, select bank1
  1858     0FCD  1303               	bcf	3,6	;RP1=0, select bank1
  1859     0FCE  0191               	clrf	17	;volatile
  1860     0FCF                     l2050:
  1861                           
  1862                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1863     0FCF  1283               	bcf	3,5	;RP0=0, select bank0
  1864     0FD0  1303               	bcf	3,6	;RP1=0, select bank0
  1865     0FD1  0826               	movf	I2C_Master_Init@c,w
  1866     0FD2  00AA               	movwf	??_I2C_Master_Init
  1867     0FD3  0827               	movf	I2C_Master_Init@c+1,w
  1868     0FD4  00AB               	movwf	??_I2C_Master_Init+1
  1869     0FD5  0828               	movf	I2C_Master_Init@c+2,w
  1870     0FD6  00AC               	movwf	??_I2C_Master_Init+2
  1871     0FD7  0829               	movf	I2C_Master_Init@c+3,w
  1872     0FD8  00AD               	movwf	??_I2C_Master_Init+3
  1873     0FD9  3002               	movlw	2
  1874     0FDA                     u1565:
  1875     0FDA  1003               	clrc
  1876     0FDB  0DAA               	rlf	??_I2C_Master_Init,f
  1877     0FDC  0DAB               	rlf	??_I2C_Master_Init+1,f
  1878     0FDD  0DAC               	rlf	??_I2C_Master_Init+2,f
  1879     0FDE  0DAD               	rlf	??_I2C_Master_Init+3,f
  1880     0FDF                     u1560:
  1881     0FDF  3EFF               	addlw	-1
  1882     0FE0  1D03               	skipz
  1883     0FE1  2FDA               	goto	u1565
  1884     0FE2  082D               	movf	??_I2C_Master_Init+3,w
  1885     0FE3  00F5               	movwf	___lldiv@divisor+3
  1886     0FE4  082C               	movf	??_I2C_Master_Init+2,w
  1887     0FE5  00F4               	movwf	___lldiv@divisor+2
  1888     0FE6  082B               	movf	??_I2C_Master_Init+1,w
  1889     0FE7  00F3               	movwf	___lldiv@divisor+1
  1890     0FE8  082A               	movf	??_I2C_Master_Init,w
  1891     0FE9  00F2               	movwf	___lldiv@divisor
  1892     0FEA  3000               	movlw	0
  1893     0FEB  00F9               	movwf	___lldiv@dividend+3
  1894     0FEC  307A               	movlw	122
  1895     0FED  00F8               	movwf	___lldiv@dividend+2
  1896     0FEE  3012               	movlw	18
  1897     0FEF  00F7               	movwf	___lldiv@dividend+1
  1898     0FF0  3000               	movlw	0
  1899     0FF1  00F6               	movwf	___lldiv@dividend
  1900     0FF2  120A  118A  22C9  120A  158A  	fcall	___lldiv
  1901     0FF7  0872               	movf	?___lldiv,w
  1902     0FF8  3EFF               	addlw	255
  1903     0FF9  1683               	bsf	3,5	;RP0=1, select bank1
  1904     0FFA  1303               	bcf	3,6	;RP1=0, select bank1
  1905     0FFB  0093               	movwf	19	;volatile
  1906     0FFC                     l2052:
  1907                           
  1908                           ;I2C.c: 21:     SSPSTAT = 0;
  1909     0FFC  0194               	clrf	20	;volatile
  1910     0FFD                     l2054:
  1911                           
  1912                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1913     0FFD  1587               	bsf	7,3	;volatile
  1914     0FFE                     l2056:
  1915                           
  1916                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1917     0FFE  1607               	bsf	7,4	;volatile
  1918     0FFF                     l172:
  1919     0FFF  0008               	return
  1920     1000                     __end_of_I2C_Master_Init:
  1921                           
  1922                           	psect	text6
  1923     02C9                     __ptext6:	
  1924 ;; *************** function ___lldiv *****************
  1925 ;; Defined at:
  1926 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
  1927 ;; Parameters:    Size  Location     Type
  1928 ;;  divisor         4    2[COMMON] unsigned long 
  1929 ;;  dividend        4    6[COMMON] unsigned long 
  1930 ;; Auto vars:     Size  Location     Type
  1931 ;;  quotient        4    1[BANK0 ] unsigned long 
  1932 ;;  counter         1    5[BANK0 ] unsigned char 
  1933 ;; Return value:  Size  Location     Type
  1934 ;;                  4    2[COMMON] unsigned long 
  1935 ;; Registers used:
  1936 ;;		wreg, status,2, status,0, btemp+1
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1942 ;;      Params:         8       0       0       0       0
  1943 ;;      Locals:         0       5       0       0       0
  1944 ;;      Temps:          0       1       0       0       0
  1945 ;;      Totals:         8       6       0       0       0
  1946 ;;Total ram usage:       14 bytes
  1947 ;; Hardware stack levels used: 1
  1948 ;; Hardware stack levels required when called: 1
  1949 ;; This function calls:
  1950 ;;		Nothing
  1951 ;; This function is called by:
  1952 ;;		_I2C_Master_Init
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           
  1956     02C9                     ___lldiv:	
  1957                           ;psect for function ___lldiv
  1958                           
  1959     02C9                     l1968:	
  1960                           ;incstack = 0
  1961                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  1962                           
  1963     02C9  3000               	movlw	0
  1964     02CA  1283               	bcf	3,5	;RP0=0, select bank0
  1965     02CB  1303               	bcf	3,6	;RP1=0, select bank0
  1966     02CC  00A4               	movwf	___lldiv@quotient+3
  1967     02CD  3000               	movlw	0
  1968     02CE  00A3               	movwf	___lldiv@quotient+2
  1969     02CF  3000               	movlw	0
  1970     02D0  00A2               	movwf	___lldiv@quotient+1
  1971     02D1  3000               	movlw	0
  1972     02D2  00A1               	movwf	___lldiv@quotient
  1973     02D3  0875               	movf	___lldiv@divisor+3,w
  1974     02D4  0474               	iorwf	___lldiv@divisor+2,w
  1975     02D5  0473               	iorwf	___lldiv@divisor+1,w
  1976     02D6  0472               	iorwf	___lldiv@divisor,w
  1977     02D7  1903               	skipnz
  1978     02D8  2ADA               	goto	u1391
  1979     02D9  2ADB               	goto	u1390
  1980     02DA                     u1391:
  1981     02DA  2B28               	goto	l1990
  1982     02DB                     u1390:
  1983     02DB                     l1970:
  1984     02DB  01A5               	clrf	___lldiv@counter
  1985     02DC  0AA5               	incf	___lldiv@counter,f
  1986     02DD  2AEB               	goto	l1976
  1987     02DE                     l1972:
  1988     02DE  3001               	movlw	1
  1989     02DF  00A0               	movwf	??___lldiv
  1990     02E0                     u1405:
  1991     02E0  1003               	clrc
  1992     02E1  0DF2               	rlf	___lldiv@divisor,f
  1993     02E2  0DF3               	rlf	___lldiv@divisor+1,f
  1994     02E3  0DF4               	rlf	___lldiv@divisor+2,f
  1995     02E4  0DF5               	rlf	___lldiv@divisor+3,f
  1996     02E5  0BA0               	decfsz	??___lldiv,f
  1997     02E6  2AE0               	goto	u1405
  1998     02E7                     l1974:
  1999     02E7  3001               	movlw	1
  2000     02E8  00FF               	movwf	btemp+1
  2001     02E9  087F               	movf	btemp+1,w
  2002     02EA  07A5               	addwf	___lldiv@counter,f
  2003     02EB                     l1976:
  2004     02EB  1FF5               	btfss	___lldiv@divisor+3,7
  2005     02EC  2AEE               	goto	u1411
  2006     02ED  2AEF               	goto	u1410
  2007     02EE                     u1411:
  2008     02EE  2ADE               	goto	l1972
  2009     02EF                     u1410:
  2010     02EF                     l1978:
  2011     02EF  3001               	movlw	1
  2012     02F0  00A0               	movwf	??___lldiv
  2013     02F1                     u1425:
  2014     02F1  1003               	clrc
  2015     02F2  0DA1               	rlf	___lldiv@quotient,f
  2016     02F3  0DA2               	rlf	___lldiv@quotient+1,f
  2017     02F4  0DA3               	rlf	___lldiv@quotient+2,f
  2018     02F5  0DA4               	rlf	___lldiv@quotient+3,f
  2019     02F6  0BA0               	decfsz	??___lldiv,f
  2020     02F7  2AF1               	goto	u1425
  2021     02F8                     l1980:
  2022     02F8  0875               	movf	___lldiv@divisor+3,w
  2023     02F9  0279               	subwf	___lldiv@dividend+3,w
  2024     02FA  1D03               	skipz
  2025     02FB  2B06               	goto	u1435
  2026     02FC  0874               	movf	___lldiv@divisor+2,w
  2027     02FD  0278               	subwf	___lldiv@dividend+2,w
  2028     02FE  1D03               	skipz
  2029     02FF  2B06               	goto	u1435
  2030     0300  0873               	movf	___lldiv@divisor+1,w
  2031     0301  0277               	subwf	___lldiv@dividend+1,w
  2032     0302  1D03               	skipz
  2033     0303  2B06               	goto	u1435
  2034     0304  0872               	movf	___lldiv@divisor,w
  2035     0305  0276               	subwf	___lldiv@dividend,w
  2036     0306                     u1435:
  2037     0306  1C03               	skipc
  2038     0307  2B09               	goto	u1431
  2039     0308  2B0A               	goto	u1430
  2040     0309                     u1431:
  2041     0309  2B19               	goto	l1986
  2042     030A                     u1430:
  2043     030A                     l1982:
  2044     030A  0872               	movf	___lldiv@divisor,w
  2045     030B  02F6               	subwf	___lldiv@dividend,f
  2046     030C  0873               	movf	___lldiv@divisor+1,w
  2047     030D  1C03               	skipc
  2048     030E  0F73               	incfsz	___lldiv@divisor+1,w
  2049     030F  02F7               	subwf	___lldiv@dividend+1,f
  2050     0310  0874               	movf	___lldiv@divisor+2,w
  2051     0311  1C03               	skipc
  2052     0312  0F74               	incfsz	___lldiv@divisor+2,w
  2053     0313  02F8               	subwf	___lldiv@dividend+2,f
  2054     0314  0875               	movf	___lldiv@divisor+3,w
  2055     0315  1C03               	skipc
  2056     0316  0F75               	incfsz	___lldiv@divisor+3,w
  2057     0317  02F9               	subwf	___lldiv@dividend+3,f
  2058     0318                     l1984:
  2059     0318  1421               	bsf	___lldiv@quotient,0
  2060     0319                     l1986:
  2061     0319  3001               	movlw	1
  2062     031A                     u1445:
  2063     031A  1003               	clrc
  2064     031B  0CF5               	rrf	___lldiv@divisor+3,f
  2065     031C  0CF4               	rrf	___lldiv@divisor+2,f
  2066     031D  0CF3               	rrf	___lldiv@divisor+1,f
  2067     031E  0CF2               	rrf	___lldiv@divisor,f
  2068     031F  3EFF               	addlw	-1
  2069     0320  1D03               	skipz
  2070     0321  2B1A               	goto	u1445
  2071     0322                     l1988:
  2072     0322  3001               	movlw	1
  2073     0323  02A5               	subwf	___lldiv@counter,f
  2074     0324  1D03               	btfss	3,2
  2075     0325  2B27               	goto	u1451
  2076     0326  2B28               	goto	u1450
  2077     0327                     u1451:
  2078     0327  2AEF               	goto	l1978
  2079     0328                     u1450:
  2080     0328                     l1990:
  2081     0328  0824               	movf	___lldiv@quotient+3,w
  2082     0329  00F5               	movwf	?___lldiv+3
  2083     032A  0823               	movf	___lldiv@quotient+2,w
  2084     032B  00F4               	movwf	?___lldiv+2
  2085     032C  0822               	movf	___lldiv@quotient+1,w
  2086     032D  00F3               	movwf	?___lldiv+1
  2087     032E  0821               	movf	___lldiv@quotient,w
  2088     032F  00F2               	movwf	?___lldiv
  2089     0330                     l426:
  2090     0330  0008               	return
  2091     0331                     __end_of___lldiv:
  2092                           
  2093                           	psect	text7
  2094     0512                     __ptext7:	
  2095 ;; *************** function _sendDataUART *****************
  2096 ;; Defined at:
  2097 ;;		line 249 in file "master.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;		None
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;		None
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  1    wreg      void 
  2104 ;; Registers used:
  2105 ;;		wreg, status,2, status,0, pclath, cstack
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2111 ;;      Params:         0       0       0       0       0
  2112 ;;      Locals:         0       0       0       0       0
  2113 ;;      Temps:          3       0       0       0       0
  2114 ;;      Totals:         3       0       0       0       0
  2115 ;;Total ram usage:        3 bytes
  2116 ;; Hardware stack levels used: 1
  2117 ;; Hardware stack levels required when called: 2
  2118 ;; This function calls:
  2119 ;;		_UART_write_char
  2120 ;; This function is called by:
  2121 ;;		_main
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125     0512                     _sendDataUART:	
  2126                           ;psect for function _sendDataUART
  2127                           
  2128     0512                     l1834:	
  2129                           ;incstack = 0
  2130                           ; Regs used in _sendDataUART: [wreg+status,2+status,0+pclath+cstack]
  2131                           
  2132                           
  2133                           ;master.c: 250:     UART_write_char('\n');
  2134     0512  300A               	movlw	10
  2135     0513  120A  158A  2704  120A  118A  	fcall	_UART_write_char
  2136                           
  2137                           ;master.c: 251:     UART_write_char(tempC);
  2138     0518  087B               	movf	_tempC,w
  2139     0519  120A  158A  2704  120A  118A  	fcall	_UART_write_char
  2140                           
  2141                           ;master.c: 252:     UART_write_char(' ');
  2142     051E  3020               	movlw	32
  2143     051F  120A  158A  2704  120A  118A  	fcall	_UART_write_char
  2144                           
  2145                           ;master.c: 253:     UART_write_char(n_hum);
  2146     0524  1283               	bcf	3,5	;RP0=0, select bank0
  2147     0525  1303               	bcf	3,6	;RP1=0, select bank0
  2148     0526  0850               	movf	_n_hum,w
  2149     0527  120A  158A  2704  120A  118A  	fcall	_UART_write_char
  2150                           
  2151                           ;master.c: 254:     UART_write_char(' ');
  2152     052C  3020               	movlw	32
  2153     052D  120A  158A  2704  120A  118A  	fcall	_UART_write_char
  2154                           
  2155                           ;master.c: 255:     UART_write_char((gasPPM & 0xFF00) >> 8);
  2156     0532  1283               	bcf	3,5	;RP0=0, select bank0
  2157     0533  1303               	bcf	3,6	;RP1=0, select bank0
  2158     0534  084B               	movf	_gasPPM+1,w
  2159     0535  120A  158A  2704  120A  118A  	fcall	_UART_write_char
  2160                           
  2161                           ;master.c: 256:     UART_write_char(gasPPM & 0x00FF);
  2162     053A  1283               	bcf	3,5	;RP0=0, select bank0
  2163     053B  1303               	bcf	3,6	;RP1=0, select bank0
  2164     053C  084A               	movf	_gasPPM,w
  2165     053D  120A  158A  2704  120A  118A  	fcall	_UART_write_char
  2166                           
  2167                           ;master.c: 257:     UART_write_char(' ');
  2168     0542  3020               	movlw	32
  2169     0543  120A  158A  2704  120A  118A  	fcall	_UART_write_char
  2170                           
  2171                           ;master.c: 258:     UART_write_char(n_ired);
  2172     0548  1283               	bcf	3,5	;RP0=0, select bank0
  2173     0549  1303               	bcf	3,6	;RP1=0, select bank0
  2174     054A  084E               	movf	_n_ired,w
  2175     054B  120A  158A  2704  120A  118A  	fcall	_UART_write_char
  2176                           
  2177                           ;master.c: 259:     UART_write_char(' ');
  2178     0550  3020               	movlw	32
  2179     0551  120A  158A  2704  120A  118A  	fcall	_UART_write_char
  2180     0556                     l1836:
  2181                           
  2182                           ;master.c: 260:     _delay((unsigned long)((500)*(8000000/4000.0)));
  2183     0556  3006               	movlw	6
  2184     0557  00F5               	movwf	??_sendDataUART+2
  2185     0558  3013               	movlw	19
  2186     0559  00F4               	movwf	??_sendDataUART+1
  2187     055A  30AD               	movlw	173
  2188     055B  00F3               	movwf	??_sendDataUART
  2189     055C                     u1767:
  2190     055C  0BF3               	decfsz	??_sendDataUART,f
  2191     055D  2D5C               	goto	u1767
  2192     055E  0BF4               	decfsz	??_sendDataUART+1,f
  2193     055F  2D5C               	goto	u1767
  2194     0560  0BF5               	decfsz	??_sendDataUART+2,f
  2195     0561  2D5C               	goto	u1767
  2196     0562  2D63               	nop2
  2197     0563                     l132:
  2198     0563  0008               	return
  2199     0564                     __end_of_sendDataUART:
  2200                           
  2201                           	psect	text8
  2202     0F04                     __ptext8:	
  2203 ;; *************** function _UART_write_char *****************
  2204 ;; Defined at:
  2205 ;;		line 42 in file "UART.c"
  2206 ;; Parameters:    Size  Location     Type
  2207 ;;  c               1    wreg     unsigned char 
  2208 ;; Auto vars:     Size  Location     Type
  2209 ;;  c               1    2[COMMON] unsigned char 
  2210 ;; Return value:  Size  Location     Type
  2211 ;;                  1    wreg      void 
  2212 ;; Registers used:
  2213 ;;		wreg
  2214 ;; Tracked objects:
  2215 ;;		On entry : 0/0
  2216 ;;		On exit  : 0/0
  2217 ;;		Unchanged: 0/0
  2218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2219 ;;      Params:         0       0       0       0       0
  2220 ;;      Locals:         1       0       0       0       0
  2221 ;;      Temps:          0       0       0       0       0
  2222 ;;      Totals:         1       0       0       0       0
  2223 ;;Total ram usage:        1 bytes
  2224 ;; Hardware stack levels used: 1
  2225 ;; Hardware stack levels required when called: 1
  2226 ;; This function calls:
  2227 ;;		Nothing
  2228 ;; This function is called by:
  2229 ;;		_sendDataUART
  2230 ;;		_UART_write_string
  2231 ;; This function uses a non-reentrant model
  2232 ;;
  2233                           
  2234     0F04                     _UART_write_char:	
  2235                           ;psect for function _UART_write_char
  2236                           
  2237                           
  2238                           ;incstack = 0
  2239                           ; Regs used in _UART_write_char: [wreg]
  2240                           ;UART_write_char@c stored from wreg
  2241     0F04  00F2               	movwf	UART_write_char@c
  2242     0F05                     l1706:
  2243     0F05                     l292:	
  2244                           ;UART.c: 43:     while(!TXIF);
  2245                           
  2246     0F05  1283               	bcf	3,5	;RP0=0, select bank0
  2247     0F06  1303               	bcf	3,6	;RP1=0, select bank0
  2248     0F07  1E0C               	btfss	12,4	;volatile
  2249     0F08  2F0A               	goto	u1221
  2250     0F09  2F0B               	goto	u1220
  2251     0F0A                     u1221:
  2252     0F0A  2F05               	goto	l292
  2253     0F0B                     u1220:
  2254     0F0B                     l294:
  2255                           
  2256                           ;UART.c: 44:     TXIF = 0;
  2257     0F0B  120C               	bcf	12,4	;volatile
  2258     0F0C                     l1708:
  2259                           
  2260                           ;UART.c: 45:     TXREG = c;
  2261     0F0C  0872               	movf	UART_write_char@c,w
  2262     0F0D  0099               	movwf	25	;volatile
  2263     0F0E                     l295:
  2264     0F0E  0008               	return
  2265     0F0F                     __end_of_UART_write_char:
  2266                           
  2267                           	psect	text9
  2268     0397                     __ptext9:	
  2269 ;; *************** function _requestTemp *****************
  2270 ;; Defined at:
  2271 ;;		line 134 in file "master.c"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;		None
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;		None
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  1    wreg      void 
  2278 ;; Registers used:
  2279 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2280 ;; Tracked objects:
  2281 ;;		On entry : 0/0
  2282 ;;		On exit  : 0/0
  2283 ;;		Unchanged: 0/0
  2284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2285 ;;      Params:         0       0       0       0       0
  2286 ;;      Locals:         0       0       0       0       0
  2287 ;;      Temps:          0       2       0       0       0
  2288 ;;      Totals:         0       2       0       0       0
  2289 ;;Total ram usage:        2 bytes
  2290 ;; Hardware stack levels used: 1
  2291 ;; Hardware stack levels required when called: 3
  2292 ;; This function calls:
  2293 ;;		_I2C_Master_Read
  2294 ;;		_I2C_Master_RepeatedStart
  2295 ;;		_I2C_Master_Start
  2296 ;;		_I2C_Master_Stop
  2297 ;;		_I2C_Master_Write
  2298 ;;		_map
  2299 ;; This function is called by:
  2300 ;;		_main
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304     0397                     _requestTemp:	
  2305                           ;psect for function _requestTemp
  2306                           
  2307     0397                     l2122:	
  2308                           ;incstack = 0
  2309                           ; Regs used in _requestTemp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2310                           
  2311                           
  2312                           ;master.c: 135:     I2C_Master_Start();
  2313     0397  120A  158A  26E8  120A  118A  	fcall	_I2C_Master_Start
  2314                           
  2315                           ;master.c: 136:     I2C_Master_Write(0x20 +0);
  2316     039C  3020               	movlw	32
  2317     039D  00F2               	movwf	I2C_Master_Write@d
  2318     039E  3000               	movlw	0
  2319     039F  00F3               	movwf	I2C_Master_Write@d+1
  2320     03A0  120A  158A  26FA  120A  118A  	fcall	_I2C_Master_Write
  2321                           
  2322                           ;master.c: 137:     I2C_Master_Write('T');
  2323     03A5  3054               	movlw	84
  2324     03A6  00F2               	movwf	I2C_Master_Write@d
  2325     03A7  3000               	movlw	0
  2326     03A8  00F3               	movwf	I2C_Master_Write@d+1
  2327     03A9  120A  158A  26FA  120A  118A  	fcall	_I2C_Master_Write
  2328     03AE                     l2124:
  2329                           
  2330                           ;master.c: 138:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2331     03AE  3034               	movlw	52
  2332     03AF  1283               	bcf	3,5	;RP0=0, select bank0
  2333     03B0  1303               	bcf	3,6	;RP1=0, select bank0
  2334     03B1  00C5               	movwf	??_requestTemp+1
  2335     03B2  30F1               	movlw	241
  2336     03B3  00C4               	movwf	??_requestTemp
  2337     03B4                     u1777:
  2338     03B4  0BC4               	decfsz	??_requestTemp,f
  2339     03B5  2BB4               	goto	u1777
  2340     03B6  0BC5               	decfsz	??_requestTemp+1,f
  2341     03B7  2BB4               	goto	u1777
  2342     03B8                     l2126:
  2343                           
  2344                           ;master.c: 139:     I2C_Master_RepeatedStart();
  2345     03B8  120A  158A  26DF  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2346     03BD                     l2128:
  2347                           
  2348                           ;master.c: 140:     I2C_Master_Write(0x20 +1);
  2349     03BD  3021               	movlw	33
  2350     03BE  00F2               	movwf	I2C_Master_Write@d
  2351     03BF  3000               	movlw	0
  2352     03C0  00F3               	movwf	I2C_Master_Write@d+1
  2353     03C1  120A  158A  26FA  120A  118A  	fcall	_I2C_Master_Write
  2354     03C6                     l2130:
  2355                           
  2356                           ;master.c: 141:     n_temp = I2C_Master_Read(0);
  2357     03C6  3000               	movlw	0
  2358     03C7  00F2               	movwf	I2C_Master_Read@a
  2359     03C8  00F3               	movwf	I2C_Master_Read@a+1
  2360     03C9  120A  158A  2765  120A  118A  	fcall	_I2C_Master_Read
  2361     03CE  0872               	movf	?_I2C_Master_Read,w
  2362     03CF  1283               	bcf	3,5	;RP0=0, select bank0
  2363     03D0  1303               	bcf	3,6	;RP1=0, select bank0
  2364     03D1  00D1               	movwf	_n_temp
  2365     03D2                     l2132:
  2366                           
  2367                           ;master.c: 142:     I2C_Master_Stop();
  2368     03D2  120A  158A  26F1  120A  118A  	fcall	_I2C_Master_Stop
  2369     03D7                     l2134:
  2370                           
  2371                           ;master.c: 143:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2372     03D7  3034               	movlw	52
  2373     03D8  1283               	bcf	3,5	;RP0=0, select bank0
  2374     03D9  1303               	bcf	3,6	;RP1=0, select bank0
  2375     03DA  00C5               	movwf	??_requestTemp+1
  2376     03DB  30F1               	movlw	241
  2377     03DC  00C4               	movwf	??_requestTemp
  2378     03DD                     u1787:
  2379     03DD  0BC4               	decfsz	??_requestTemp,f
  2380     03DE  2BDD               	goto	u1787
  2381     03DF  0BC5               	decfsz	??_requestTemp+1,f
  2382     03E0  2BDD               	goto	u1787
  2383     03E1                     l2136:
  2384                           
  2385                           ;master.c: 145:     tempC = map(n_temp,0,77,0,150);
  2386     03E1  1283               	bcf	3,5	;RP0=0, select bank0
  2387     03E2  1303               	bcf	3,6	;RP1=0, select bank0
  2388     03E3  01B4               	clrf	map@min1
  2389     03E4  304D               	movlw	77
  2390     03E5  00B5               	movwf	map@max1
  2391     03E6  01B6               	clrf	map@min2
  2392     03E7  3000               	movlw	0
  2393     03E8  00BA               	movwf	map@max2+3
  2394     03E9  3000               	movlw	0
  2395     03EA  00B9               	movwf	map@max2+2
  2396     03EB  3000               	movlw	0
  2397     03EC  00B8               	movwf	map@max2+1
  2398     03ED  3096               	movlw	150
  2399     03EE  00B7               	movwf	map@max2
  2400     03EF  0851               	movf	_n_temp,w
  2401     03F0  120A  118A  23FA  120A  118A  	fcall	_map
  2402     03F5  1283               	bcf	3,5	;RP0=0, select bank0
  2403     03F6  1303               	bcf	3,6	;RP1=0, select bank0
  2404     03F7  0834               	movf	?_map,w
  2405     03F8  00FB               	movwf	_tempC
  2406     03F9                     l104:
  2407     03F9  0008               	return
  2408     03FA                     __end_of_requestTemp:
  2409                           
  2410                           	psect	text10
  2411     05FC                     __ptext10:	
  2412 ;; *************** function _requestIR *****************
  2413 ;; Defined at:
  2414 ;;		line 174 in file "master.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;		None
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;		None
  2419 ;; Return value:  Size  Location     Type
  2420 ;;                  1    wreg      void 
  2421 ;; Registers used:
  2422 ;;		wreg, status,2, status,0, pclath, cstack
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2428 ;;      Params:         0       0       0       0       0
  2429 ;;      Locals:         0       0       0       0       0
  2430 ;;      Temps:          2       0       0       0       0
  2431 ;;      Totals:         2       0       0       0       0
  2432 ;;Total ram usage:        2 bytes
  2433 ;; Hardware stack levels used: 1
  2434 ;; Hardware stack levels required when called: 3
  2435 ;; This function calls:
  2436 ;;		_I2C_Master_Read
  2437 ;;		_I2C_Master_RepeatedStart
  2438 ;;		_I2C_Master_Start
  2439 ;;		_I2C_Master_Stop
  2440 ;;		_I2C_Master_Write
  2441 ;; This function is called by:
  2442 ;;		_main
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446     05FC                     _requestIR:	
  2447                           ;psect for function _requestIR
  2448                           
  2449     05FC                     l1770:	
  2450                           ;incstack = 0
  2451                           ; Regs used in _requestIR: [wreg+status,2+status,0+pclath+cstack]
  2452                           
  2453                           
  2454                           ;master.c: 175:     I2C_Master_Start();
  2455     05FC  120A  158A  26E8  120A  118A  	fcall	_I2C_Master_Start
  2456                           
  2457                           ;master.c: 176:     I2C_Master_Write(0x20 +0);
  2458     0601  3020               	movlw	32
  2459     0602  00F2               	movwf	I2C_Master_Write@d
  2460     0603  3000               	movlw	0
  2461     0604  00F3               	movwf	I2C_Master_Write@d+1
  2462     0605  120A  158A  26FA  120A  118A  	fcall	_I2C_Master_Write
  2463                           
  2464                           ;master.c: 177:     I2C_Master_Write('I');
  2465     060A  3049               	movlw	73
  2466     060B  00F2               	movwf	I2C_Master_Write@d
  2467     060C  3000               	movlw	0
  2468     060D  00F3               	movwf	I2C_Master_Write@d+1
  2469     060E  120A  158A  26FA  120A  118A  	fcall	_I2C_Master_Write
  2470     0613                     l1772:
  2471                           
  2472                           ;master.c: 178:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2473     0613  3034               	movlw	52
  2474     0614  00F9               	movwf	??_requestIR+1
  2475     0615  30F1               	movlw	241
  2476     0616  00F8               	movwf	??_requestIR
  2477     0617                     u1797:
  2478     0617  0BF8               	decfsz	??_requestIR,f
  2479     0618  2E17               	goto	u1797
  2480     0619  0BF9               	decfsz	??_requestIR+1,f
  2481     061A  2E17               	goto	u1797
  2482     061B  2E1C               	nop2
  2483     061C                     l1774:
  2484                           
  2485                           ;master.c: 179:     I2C_Master_RepeatedStart();
  2486     061C  120A  158A  26DF  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2487     0621                     l1776:
  2488                           
  2489                           ;master.c: 180:     I2C_Master_Write(0x20 +1);
  2490     0621  3021               	movlw	33
  2491     0622  00F2               	movwf	I2C_Master_Write@d
  2492     0623  3000               	movlw	0
  2493     0624  00F3               	movwf	I2C_Master_Write@d+1
  2494     0625  120A  158A  26FA  120A  118A  	fcall	_I2C_Master_Write
  2495     062A                     l1778:
  2496                           
  2497                           ;master.c: 181:     n_ired = I2C_Master_Read(0);
  2498     062A  3000               	movlw	0
  2499     062B  00F2               	movwf	I2C_Master_Read@a
  2500     062C  00F3               	movwf	I2C_Master_Read@a+1
  2501     062D  120A  158A  2765  120A  118A  	fcall	_I2C_Master_Read
  2502     0632  0872               	movf	?_I2C_Master_Read,w
  2503     0633  1283               	bcf	3,5	;RP0=0, select bank0
  2504     0634  1303               	bcf	3,6	;RP1=0, select bank0
  2505     0635  00CE               	movwf	_n_ired
  2506     0636                     l1780:
  2507                           
  2508                           ;master.c: 182:     I2C_Master_Stop();
  2509     0636  120A  158A  26F1  120A  118A  	fcall	_I2C_Master_Stop
  2510     063B                     l1782:
  2511                           
  2512                           ;master.c: 183:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2513     063B  3034               	movlw	52
  2514     063C  00F9               	movwf	??_requestIR+1
  2515     063D  30F1               	movlw	241
  2516     063E  00F8               	movwf	??_requestIR
  2517     063F                     u1807:
  2518     063F  0BF8               	decfsz	??_requestIR,f
  2519     0640  2E3F               	goto	u1807
  2520     0641  0BF9               	decfsz	??_requestIR+1,f
  2521     0642  2E3F               	goto	u1807
  2522     0643  2E44               	nop2
  2523     0644                     l113:
  2524     0644  0008               	return
  2525     0645                     __end_of_requestIR:
  2526                           
  2527                           	psect	text11
  2528     0645                     __ptext11:	
  2529 ;; *************** function _requestHum *****************
  2530 ;; Defined at:
  2531 ;;		line 148 in file "master.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;		None
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;		None
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  1    wreg      void 
  2538 ;; Registers used:
  2539 ;;		wreg, status,2, status,0, pclath, cstack
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2545 ;;      Params:         0       0       0       0       0
  2546 ;;      Locals:         0       0       0       0       0
  2547 ;;      Temps:          2       0       0       0       0
  2548 ;;      Totals:         2       0       0       0       0
  2549 ;;Total ram usage:        2 bytes
  2550 ;; Hardware stack levels used: 1
  2551 ;; Hardware stack levels required when called: 3
  2552 ;; This function calls:
  2553 ;;		_I2C_Master_Read
  2554 ;;		_I2C_Master_RepeatedStart
  2555 ;;		_I2C_Master_Start
  2556 ;;		_I2C_Master_Stop
  2557 ;;		_I2C_Master_Write
  2558 ;; This function is called by:
  2559 ;;		_main
  2560 ;; This function uses a non-reentrant model
  2561 ;;
  2562                           
  2563     0645                     _requestHum:	
  2564                           ;psect for function _requestHum
  2565                           
  2566     0645                     l1724:	
  2567                           ;incstack = 0
  2568                           ; Regs used in _requestHum: [wreg+status,2+status,0+pclath+cstack]
  2569                           
  2570                           
  2571                           ;master.c: 149:     I2C_Master_Start();
  2572     0645  120A  158A  26E8  120A  118A  	fcall	_I2C_Master_Start
  2573                           
  2574                           ;master.c: 150:     I2C_Master_Write(0x10 +0);
  2575     064A  3010               	movlw	16
  2576     064B  00F2               	movwf	I2C_Master_Write@d
  2577     064C  3000               	movlw	0
  2578     064D  00F3               	movwf	I2C_Master_Write@d+1
  2579     064E  120A  158A  26FA  120A  118A  	fcall	_I2C_Master_Write
  2580                           
  2581                           ;master.c: 151:     I2C_Master_Write('H');
  2582     0653  3048               	movlw	72
  2583     0654  00F2               	movwf	I2C_Master_Write@d
  2584     0655  3000               	movlw	0
  2585     0656  00F3               	movwf	I2C_Master_Write@d+1
  2586     0657  120A  158A  26FA  120A  118A  	fcall	_I2C_Master_Write
  2587     065C                     l1726:
  2588                           
  2589                           ;master.c: 152:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2590     065C  3034               	movlw	52
  2591     065D  00F9               	movwf	??_requestHum+1
  2592     065E  30F1               	movlw	241
  2593     065F  00F8               	movwf	??_requestHum
  2594     0660                     u1817:
  2595     0660  0BF8               	decfsz	??_requestHum,f
  2596     0661  2E60               	goto	u1817
  2597     0662  0BF9               	decfsz	??_requestHum+1,f
  2598     0663  2E60               	goto	u1817
  2599     0664  2E65               	nop2
  2600     0665                     l1728:
  2601                           
  2602                           ;master.c: 153:     I2C_Master_RepeatedStart();
  2603     0665  120A  158A  26DF  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2604     066A                     l1730:
  2605                           
  2606                           ;master.c: 154:     I2C_Master_Write(0x10 +1);
  2607     066A  3011               	movlw	17
  2608     066B  00F2               	movwf	I2C_Master_Write@d
  2609     066C  3000               	movlw	0
  2610     066D  00F3               	movwf	I2C_Master_Write@d+1
  2611     066E  120A  158A  26FA  120A  118A  	fcall	_I2C_Master_Write
  2612     0673                     l1732:
  2613                           
  2614                           ;master.c: 155:     n_hum = I2C_Master_Read(0);
  2615     0673  3000               	movlw	0
  2616     0674  00F2               	movwf	I2C_Master_Read@a
  2617     0675  00F3               	movwf	I2C_Master_Read@a+1
  2618     0676  120A  158A  2765  120A  118A  	fcall	_I2C_Master_Read
  2619     067B  0872               	movf	?_I2C_Master_Read,w
  2620     067C  1283               	bcf	3,5	;RP0=0, select bank0
  2621     067D  1303               	bcf	3,6	;RP1=0, select bank0
  2622     067E  00D0               	movwf	_n_hum
  2623     067F                     l1734:
  2624                           
  2625                           ;master.c: 156:     I2C_Master_Stop();
  2626     067F  120A  158A  26F1  120A  118A  	fcall	_I2C_Master_Stop
  2627     0684                     l1736:
  2628                           
  2629                           ;master.c: 157:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2630     0684  3034               	movlw	52
  2631     0685  00F9               	movwf	??_requestHum+1
  2632     0686  30F1               	movlw	241
  2633     0687  00F8               	movwf	??_requestHum
  2634     0688                     u1827:
  2635     0688  0BF8               	decfsz	??_requestHum,f
  2636     0689  2E88               	goto	u1827
  2637     068A  0BF9               	decfsz	??_requestHum+1,f
  2638     068B  2E88               	goto	u1827
  2639     068C  2E8D               	nop2
  2640     068D                     l107:
  2641     068D  0008               	return
  2642     068E                     __end_of_requestHum:
  2643                           
  2644                           	psect	text12
  2645     0331                     __ptext12:	
  2646 ;; *************** function _requestGas *****************
  2647 ;; Defined at:
  2648 ;;		line 160 in file "master.c"
  2649 ;; Parameters:    Size  Location     Type
  2650 ;;		None
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;		None
  2653 ;; Return value:  Size  Location     Type
  2654 ;;                  1    wreg      void 
  2655 ;; Registers used:
  2656 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2662 ;;      Params:         0       0       0       0       0
  2663 ;;      Locals:         0       0       0       0       0
  2664 ;;      Temps:          0       2       0       0       0
  2665 ;;      Totals:         0       2       0       0       0
  2666 ;;Total ram usage:        2 bytes
  2667 ;; Hardware stack levels used: 1
  2668 ;; Hardware stack levels required when called: 3
  2669 ;; This function calls:
  2670 ;;		_I2C_Master_Read
  2671 ;;		_I2C_Master_RepeatedStart
  2672 ;;		_I2C_Master_Start
  2673 ;;		_I2C_Master_Stop
  2674 ;;		_I2C_Master_Write
  2675 ;;		_map
  2676 ;; This function is called by:
  2677 ;;		_main
  2678 ;; This function uses a non-reentrant model
  2679 ;;
  2680                           
  2681     0331                     _requestGas:	
  2682                           ;psect for function _requestGas
  2683                           
  2684     0331                     l2138:	
  2685                           ;incstack = 0
  2686                           ; Regs used in _requestGas: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2687                           
  2688                           
  2689                           ;master.c: 161:     I2C_Master_Start();
  2690     0331  120A  158A  26E8  120A  118A  	fcall	_I2C_Master_Start
  2691                           
  2692                           ;master.c: 162:     I2C_Master_Write(0x20 +0);
  2693     0336  3020               	movlw	32
  2694     0337  00F2               	movwf	I2C_Master_Write@d
  2695     0338  3000               	movlw	0
  2696     0339  00F3               	movwf	I2C_Master_Write@d+1
  2697     033A  120A  158A  26FA  120A  118A  	fcall	_I2C_Master_Write
  2698                           
  2699                           ;master.c: 163:     I2C_Master_Write('G');
  2700     033F  3047               	movlw	71
  2701     0340  00F2               	movwf	I2C_Master_Write@d
  2702     0341  3000               	movlw	0
  2703     0342  00F3               	movwf	I2C_Master_Write@d+1
  2704     0343  120A  158A  26FA  120A  118A  	fcall	_I2C_Master_Write
  2705     0348                     l2140:
  2706                           
  2707                           ;master.c: 164:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2708     0348  3034               	movlw	52
  2709     0349  1283               	bcf	3,5	;RP0=0, select bank0
  2710     034A  1303               	bcf	3,6	;RP1=0, select bank0
  2711     034B  00C5               	movwf	??_requestGas+1
  2712     034C  30F1               	movlw	241
  2713     034D  00C4               	movwf	??_requestGas
  2714     034E                     u1837:
  2715     034E  0BC4               	decfsz	??_requestGas,f
  2716     034F  2B4E               	goto	u1837
  2717     0350  0BC5               	decfsz	??_requestGas+1,f
  2718     0351  2B4E               	goto	u1837
  2719     0352                     l2142:
  2720                           
  2721                           ;master.c: 165:     I2C_Master_RepeatedStart();
  2722     0352  120A  158A  26DF  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2723     0357                     l2144:
  2724                           
  2725                           ;master.c: 166:     I2C_Master_Write(0x20 +1);
  2726     0357  3021               	movlw	33
  2727     0358  00F2               	movwf	I2C_Master_Write@d
  2728     0359  3000               	movlw	0
  2729     035A  00F3               	movwf	I2C_Master_Write@d+1
  2730     035B  120A  158A  26FA  120A  118A  	fcall	_I2C_Master_Write
  2731     0360                     l2146:
  2732                           
  2733                           ;master.c: 167:     n_gas = I2C_Master_Read(0);
  2734     0360  3000               	movlw	0
  2735     0361  00F2               	movwf	I2C_Master_Read@a
  2736     0362  00F3               	movwf	I2C_Master_Read@a+1
  2737     0363  120A  158A  2765  120A  118A  	fcall	_I2C_Master_Read
  2738     0368  0872               	movf	?_I2C_Master_Read,w
  2739     0369  1283               	bcf	3,5	;RP0=0, select bank0
  2740     036A  1303               	bcf	3,6	;RP1=0, select bank0
  2741     036B  00CF               	movwf	_n_gas
  2742     036C                     l2148:
  2743                           
  2744                           ;master.c: 168:     I2C_Master_Stop();
  2745     036C  120A  158A  26F1  120A  118A  	fcall	_I2C_Master_Stop
  2746     0371                     l2150:
  2747                           
  2748                           ;master.c: 169:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2749     0371  3034               	movlw	52
  2750     0372  1283               	bcf	3,5	;RP0=0, select bank0
  2751     0373  1303               	bcf	3,6	;RP1=0, select bank0
  2752     0374  00C5               	movwf	??_requestGas+1
  2753     0375  30F1               	movlw	241
  2754     0376  00C4               	movwf	??_requestGas
  2755     0377                     u1847:
  2756     0377  0BC4               	decfsz	??_requestGas,f
  2757     0378  2B77               	goto	u1847
  2758     0379  0BC5               	decfsz	??_requestGas+1,f
  2759     037A  2B77               	goto	u1847
  2760     037B                     l2152:
  2761                           
  2762                           ;master.c: 171:     gasPPM = map(n_gas,0,255,100,800);
  2763     037B  1283               	bcf	3,5	;RP0=0, select bank0
  2764     037C  1303               	bcf	3,6	;RP1=0, select bank0
  2765     037D  01B4               	clrf	map@min1
  2766     037E  30FF               	movlw	255
  2767     037F  00B5               	movwf	map@max1
  2768     0380  3064               	movlw	100
  2769     0381  00B6               	movwf	map@min2
  2770     0382  3000               	movlw	0
  2771     0383  00BA               	movwf	map@max2+3
  2772     0384  3000               	movlw	0
  2773     0385  00B9               	movwf	map@max2+2
  2774     0386  3003               	movlw	3
  2775     0387  00B8               	movwf	map@max2+1
  2776     0388  3020               	movlw	32
  2777     0389  00B7               	movwf	map@max2
  2778     038A  084F               	movf	_n_gas,w
  2779     038B  120A  118A  23FA  120A  118A  	fcall	_map
  2780     0390  1283               	bcf	3,5	;RP0=0, select bank0
  2781     0391  1303               	bcf	3,6	;RP1=0, select bank0
  2782     0392  0835               	movf	?_map+1,w
  2783     0393  00CB               	movwf	_gasPPM+1
  2784     0394  0834               	movf	?_map,w
  2785     0395  00CA               	movwf	_gasPPM
  2786     0396                     l110:
  2787     0396  0008               	return
  2788     0397                     __end_of_requestGas:
  2789                           
  2790                           	psect	text13
  2791     03FA                     __ptext13:	
  2792 ;; *************** function _map *****************
  2793 ;; Defined at:
  2794 ;;		line 287 in file "master.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;  val             1    wreg     unsigned char 
  2797 ;;  min1            1   20[BANK0 ] unsigned char 
  2798 ;;  max1            1   21[BANK0 ] unsigned char 
  2799 ;;  min2            1   22[BANK0 ] unsigned char 
  2800 ;;  max2            4   23[BANK0 ] long 
  2801 ;; Auto vars:     Size  Location     Type
  2802 ;;  val             1   35[BANK0 ] unsigned char 
  2803 ;; Return value:  Size  Location     Type
  2804 ;;                  2   20[BANK0 ] unsigned int 
  2805 ;; Registers used:
  2806 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2807 ;; Tracked objects:
  2808 ;;		On entry : 0/0
  2809 ;;		On exit  : 0/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2812 ;;      Params:         0       7       0       0       0
  2813 ;;      Locals:         0       1       0       0       0
  2814 ;;      Temps:          0       8       0       0       0
  2815 ;;      Totals:         0      16       0       0       0
  2816 ;;Total ram usage:       16 bytes
  2817 ;; Hardware stack levels used: 1
  2818 ;; Hardware stack levels required when called: 2
  2819 ;; This function calls:
  2820 ;;		___aldiv
  2821 ;;		___lmul
  2822 ;; This function is called by:
  2823 ;;		_requestTemp
  2824 ;;		_requestGas
  2825 ;; This function uses a non-reentrant model
  2826 ;;
  2827                           
  2828     03FA                     _map:	
  2829                           ;psect for function _map
  2830                           
  2831                           
  2832                           ;incstack = 0
  2833                           ; Regs used in _map: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2834                           ;map@val stored from wreg
  2835     03FA  1283               	bcf	3,5	;RP0=0, select bank0
  2836     03FB  1303               	bcf	3,6	;RP1=0, select bank0
  2837     03FC  00C3               	movwf	map@val
  2838     03FD                     l2074:
  2839                           
  2840                           ;master.c: 288:     return ((val-min1)*(max2-min2)/(max1-min1))+min2;
  2841     03FD  0834               	movf	map@min1,w
  2842     03FE  0235               	subwf	map@max1,w
  2843     03FF  00A5               	movwf	___aldiv@divisor
  2844     0400  01A6               	clrf	___aldiv@divisor+1
  2845     0401  1C03               	skipc
  2846     0402  03A6               	decf	___aldiv@divisor+1,f
  2847     0403  01A7               	clrf	___aldiv@divisor+2
  2848     0404  1BA6               	btfsc	___aldiv@divisor+1,7
  2849     0405  03A7               	decf	___aldiv@divisor+2,f
  2850     0406  0827               	movf	___aldiv@divisor+2,w
  2851     0407  00A8               	movwf	___aldiv@divisor+3
  2852     0408  0834               	movf	map@min1,w
  2853     0409  0243               	subwf	map@val,w
  2854     040A  00F2               	movwf	___lmul@multiplier
  2855     040B  01F3               	clrf	___lmul@multiplier+1
  2856     040C  1C03               	skipc
  2857     040D  03F3               	decf	___lmul@multiplier+1,f
  2858     040E  01F4               	clrf	___lmul@multiplier+2
  2859     040F  1BF3               	btfsc	___lmul@multiplier+1,7
  2860     0410  03F4               	decf	___lmul@multiplier+2,f
  2861     0411  0874               	movf	___lmul@multiplier+2,w
  2862     0412  00F5               	movwf	___lmul@multiplier+3
  2863     0413  0836               	movf	map@min2,w
  2864     0414  00BB               	movwf	??_map
  2865     0415  01BC               	clrf	??_map+1
  2866     0416  01BD               	clrf	??_map+2
  2867     0417  01BE               	clrf	??_map+3
  2868     0418  0837               	movf	map@max2,w
  2869     0419  00BF               	movwf	??_map+4
  2870     041A  0838               	movf	map@max2+1,w
  2871     041B  00C0               	movwf	??_map+5
  2872     041C  0839               	movf	map@max2+2,w
  2873     041D  00C1               	movwf	??_map+6
  2874     041E  083A               	movf	map@max2+3,w
  2875     041F  00C2               	movwf	??_map+7
  2876     0420  083B               	movf	??_map,w
  2877     0421  02BF               	subwf	??_map+4,f
  2878     0422  083C               	movf	??_map+1,w
  2879     0423  1C03               	skipc
  2880     0424  0F3C               	incfsz	??_map+1,w
  2881     0425  2C27               	goto	u1591
  2882     0426  2C28               	goto	u1592
  2883     0427                     u1591:
  2884     0427  02C0               	subwf	??_map+5,f
  2885     0428                     u1592:
  2886     0428  083D               	movf	??_map+2,w
  2887     0429  1C03               	skipc
  2888     042A  0F3D               	incfsz	??_map+2,w
  2889     042B  2C2D               	goto	u1593
  2890     042C  2C2E               	goto	u1594
  2891     042D                     u1593:
  2892     042D  02C1               	subwf	??_map+6,f
  2893     042E                     u1594:
  2894     042E  083E               	movf	??_map+3,w
  2895     042F  1C03               	skipc
  2896     0430  0F3E               	incfsz	??_map+3,w
  2897     0431  2C33               	goto	u1595
  2898     0432  2C34               	goto	u1596
  2899     0433                     u1595:
  2900     0433  02C2               	subwf	??_map+7,f
  2901     0434                     u1596:
  2902     0434  0842               	movf	??_map+7,w
  2903     0435  00F9               	movwf	___lmul@multiplicand+3
  2904     0436  0841               	movf	??_map+6,w
  2905     0437  00F8               	movwf	___lmul@multiplicand+2
  2906     0438  0840               	movf	??_map+5,w
  2907     0439  00F7               	movwf	___lmul@multiplicand+1
  2908     043A  083F               	movf	??_map+4,w
  2909     043B  00F6               	movwf	___lmul@multiplicand
  2910     043C  120A  118A  268E  120A  118A  	fcall	___lmul
  2911     0441  0875               	movf	?___lmul+3,w
  2912     0442  1283               	bcf	3,5	;RP0=0, select bank0
  2913     0443  1303               	bcf	3,6	;RP1=0, select bank0
  2914     0444  00AC               	movwf	___aldiv@dividend+3
  2915     0445  0874               	movf	?___lmul+2,w
  2916     0446  00AB               	movwf	___aldiv@dividend+2
  2917     0447  0873               	movf	?___lmul+1,w
  2918     0448  00AA               	movwf	___aldiv@dividend+1
  2919     0449  0872               	movf	?___lmul,w
  2920     044A  00A9               	movwf	___aldiv@dividend
  2921     044B  120A  118A  21AB  120A  118A  	fcall	___aldiv
  2922     0450  1283               	bcf	3,5	;RP0=0, select bank0
  2923     0451  1303               	bcf	3,6	;RP1=0, select bank0
  2924     0452  0836               	movf	map@min2,w
  2925     0453  0725               	addwf	?___aldiv,w
  2926     0454  00B4               	movwf	?_map
  2927     0455  3000               	movlw	0
  2928     0456  1803               	skipnc
  2929     0457  3001               	movlw	1
  2930     0458  0726               	addwf	?___aldiv+1,w
  2931     0459  00B5               	movwf	?_map+1
  2932     045A                     l143:
  2933     045A  0008               	return
  2934     045B                     __end_of_map:
  2935                           
  2936                           	psect	text14
  2937     068E                     __ptext14:	
  2938 ;; *************** function ___lmul *****************
  2939 ;; Defined at:
  2940 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul32.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;  multiplier      4    2[COMMON] unsigned long 
  2943 ;;  multiplicand    4    6[COMMON] unsigned long 
  2944 ;; Auto vars:     Size  Location     Type
  2945 ;;  product         4    1[BANK0 ] unsigned long 
  2946 ;; Return value:  Size  Location     Type
  2947 ;;                  4    2[COMMON] unsigned long 
  2948 ;; Registers used:
  2949 ;;		wreg, status,2, status,0
  2950 ;; Tracked objects:
  2951 ;;		On entry : 0/0
  2952 ;;		On exit  : 0/0
  2953 ;;		Unchanged: 0/0
  2954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2955 ;;      Params:         8       0       0       0       0
  2956 ;;      Locals:         0       4       0       0       0
  2957 ;;      Temps:          0       1       0       0       0
  2958 ;;      Totals:         8       5       0       0       0
  2959 ;;Total ram usage:       13 bytes
  2960 ;; Hardware stack levels used: 1
  2961 ;; Hardware stack levels required when called: 1
  2962 ;; This function calls:
  2963 ;;		Nothing
  2964 ;; This function is called by:
  2965 ;;		_map
  2966 ;; This function uses a non-reentrant model
  2967 ;;
  2968                           
  2969     068E                     ___lmul:	
  2970                           ;psect for function ___lmul
  2971                           
  2972     068E                     l1954:	
  2973                           ;incstack = 0
  2974                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2975                           
  2976     068E  3000               	movlw	0
  2977     068F  1283               	bcf	3,5	;RP0=0, select bank0
  2978     0690  1303               	bcf	3,6	;RP1=0, select bank0
  2979     0691  00A4               	movwf	___lmul@product+3
  2980     0692  3000               	movlw	0
  2981     0693  00A3               	movwf	___lmul@product+2
  2982     0694  3000               	movlw	0
  2983     0695  00A2               	movwf	___lmul@product+1
  2984     0696  3000               	movlw	0
  2985     0697  00A1               	movwf	___lmul@product
  2986     0698                     l1956:
  2987     0698  1C72               	btfss	___lmul@multiplier,0
  2988     0699  2E9B               	goto	u1341
  2989     069A  2E9C               	goto	u1340
  2990     069B                     u1341:
  2991     069B  2EB3               	goto	l1960
  2992     069C                     u1340:
  2993     069C                     l1958:
  2994     069C  0876               	movf	___lmul@multiplicand,w
  2995     069D  07A1               	addwf	___lmul@product,f
  2996     069E  0877               	movf	___lmul@multiplicand+1,w
  2997     069F  1103               	clrz
  2998     06A0  1803               	skipnc
  2999     06A1  3E01               	addlw	1
  3000     06A2  1903               	skipnz
  3001     06A3  2EA5               	goto	u1351
  3002     06A4  07A2               	addwf	___lmul@product+1,f
  3003     06A5                     u1351:
  3004     06A5  0878               	movf	___lmul@multiplicand+2,w
  3005     06A6  1103               	clrz
  3006     06A7  1803               	skipnc
  3007     06A8  3E01               	addlw	1
  3008     06A9  1903               	skipnz
  3009     06AA  2EAC               	goto	u1352
  3010     06AB  07A3               	addwf	___lmul@product+2,f
  3011     06AC                     u1352:
  3012     06AC  0879               	movf	___lmul@multiplicand+3,w
  3013     06AD  1103               	clrz
  3014     06AE  1803               	skipnc
  3015     06AF  3E01               	addlw	1
  3016     06B0  1903               	skipnz
  3017     06B1  2EB3               	goto	u1353
  3018     06B2  07A4               	addwf	___lmul@product+3,f
  3019     06B3                     u1353:
  3020     06B3                     l1960:
  3021     06B3  3001               	movlw	1
  3022     06B4  00A0               	movwf	??___lmul
  3023     06B5                     u1365:
  3024     06B5  1003               	clrc
  3025     06B6  0DF6               	rlf	___lmul@multiplicand,f
  3026     06B7  0DF7               	rlf	___lmul@multiplicand+1,f
  3027     06B8  0DF8               	rlf	___lmul@multiplicand+2,f
  3028     06B9  0DF9               	rlf	___lmul@multiplicand+3,f
  3029     06BA  0BA0               	decfsz	??___lmul,f
  3030     06BB  2EB5               	goto	u1365
  3031     06BC                     l1962:
  3032     06BC  3001               	movlw	1
  3033     06BD                     u1375:
  3034     06BD  1003               	clrc
  3035     06BE  0CF5               	rrf	___lmul@multiplier+3,f
  3036     06BF  0CF4               	rrf	___lmul@multiplier+2,f
  3037     06C0  0CF3               	rrf	___lmul@multiplier+1,f
  3038     06C1  0CF2               	rrf	___lmul@multiplier,f
  3039     06C2  3EFF               	addlw	-1
  3040     06C3  1D03               	skipz
  3041     06C4  2EBD               	goto	u1375
  3042     06C5  0875               	movf	___lmul@multiplier+3,w
  3043     06C6  0474               	iorwf	___lmul@multiplier+2,w
  3044     06C7  0473               	iorwf	___lmul@multiplier+1,w
  3045     06C8  0472               	iorwf	___lmul@multiplier,w
  3046     06C9  1D03               	skipz
  3047     06CA  2ECC               	goto	u1381
  3048     06CB  2ECD               	goto	u1380
  3049     06CC                     u1381:
  3050     06CC  2E98               	goto	l1956
  3051     06CD                     u1380:
  3052     06CD                     l1964:
  3053     06CD  0824               	movf	___lmul@product+3,w
  3054     06CE  00F5               	movwf	?___lmul+3
  3055     06CF  0823               	movf	___lmul@product+2,w
  3056     06D0  00F4               	movwf	?___lmul+2
  3057     06D1  0822               	movf	___lmul@product+1,w
  3058     06D2  00F3               	movwf	?___lmul+1
  3059     06D3  0821               	movf	___lmul@product,w
  3060     06D4  00F2               	movwf	?___lmul
  3061     06D5                     l404:
  3062     06D5  0008               	return
  3063     06D6                     __end_of___lmul:
  3064                           
  3065                           	psect	text15
  3066     01AB                     __ptext15:	
  3067 ;; *************** function ___aldiv *****************
  3068 ;; Defined at:
  3069 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\aldiv.c"
  3070 ;; Parameters:    Size  Location     Type
  3071 ;;  divisor         4    5[BANK0 ] long 
  3072 ;;  dividend        4    9[BANK0 ] long 
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;  quotient        4   16[BANK0 ] long 
  3075 ;;  sign            1   15[BANK0 ] unsigned char 
  3076 ;;  counter         1   14[BANK0 ] unsigned char 
  3077 ;; Return value:  Size  Location     Type
  3078 ;;                  4    5[BANK0 ] long 
  3079 ;; Registers used:
  3080 ;;		wreg, status,2, status,0, btemp+1
  3081 ;; Tracked objects:
  3082 ;;		On entry : 0/0
  3083 ;;		On exit  : 0/0
  3084 ;;		Unchanged: 0/0
  3085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3086 ;;      Params:         0       8       0       0       0
  3087 ;;      Locals:         0       6       0       0       0
  3088 ;;      Temps:          0       1       0       0       0
  3089 ;;      Totals:         0      15       0       0       0
  3090 ;;Total ram usage:       15 bytes
  3091 ;; Hardware stack levels used: 1
  3092 ;; Hardware stack levels required when called: 1
  3093 ;; This function calls:
  3094 ;;		Nothing
  3095 ;; This function is called by:
  3096 ;;		_map
  3097 ;;		_UART_TX_config
  3098 ;;		_UART_RX_config
  3099 ;; This function uses a non-reentrant model
  3100 ;;
  3101                           
  3102     01AB                     ___aldiv:	
  3103                           ;psect for function ___aldiv
  3104                           
  3105     01AB                     l1994:	
  3106                           ;incstack = 0
  3107                           ; Regs used in ___aldiv: [wreg+status,2+status,0+btemp+1]
  3108                           
  3109     01AB  1283               	bcf	3,5	;RP0=0, select bank0
  3110     01AC  1303               	bcf	3,6	;RP1=0, select bank0
  3111     01AD  01AF               	clrf	___aldiv@sign
  3112     01AE                     l1996:
  3113     01AE  1FA8               	btfss	___aldiv@divisor+3,7
  3114     01AF  29B1               	goto	u1461
  3115     01B0  29B2               	goto	u1460
  3116     01B1                     u1461:
  3117     01B1  29BF               	goto	l455
  3118     01B2                     u1460:
  3119     01B2                     l1998:
  3120     01B2  09A5               	comf	___aldiv@divisor,f
  3121     01B3  09A6               	comf	___aldiv@divisor+1,f
  3122     01B4  09A7               	comf	___aldiv@divisor+2,f
  3123     01B5  09A8               	comf	___aldiv@divisor+3,f
  3124     01B6  0AA5               	incf	___aldiv@divisor,f
  3125     01B7  1903               	skipnz
  3126     01B8  0AA6               	incf	___aldiv@divisor+1,f
  3127     01B9  1903               	skipnz
  3128     01BA  0AA7               	incf	___aldiv@divisor+2,f
  3129     01BB  1903               	skipnz
  3130     01BC  0AA8               	incf	___aldiv@divisor+3,f
  3131     01BD  01AF               	clrf	___aldiv@sign
  3132     01BE  0AAF               	incf	___aldiv@sign,f
  3133     01BF                     l455:
  3134     01BF  1FAC               	btfss	___aldiv@dividend+3,7
  3135     01C0  29C2               	goto	u1471
  3136     01C1  29C3               	goto	u1470
  3137     01C2                     u1471:
  3138     01C2  29D2               	goto	l2004
  3139     01C3                     u1470:
  3140     01C3                     l2000:
  3141     01C3  09A9               	comf	___aldiv@dividend,f
  3142     01C4  09AA               	comf	___aldiv@dividend+1,f
  3143     01C5  09AB               	comf	___aldiv@dividend+2,f
  3144     01C6  09AC               	comf	___aldiv@dividend+3,f
  3145     01C7  0AA9               	incf	___aldiv@dividend,f
  3146     01C8  1903               	skipnz
  3147     01C9  0AAA               	incf	___aldiv@dividend+1,f
  3148     01CA  1903               	skipnz
  3149     01CB  0AAB               	incf	___aldiv@dividend+2,f
  3150     01CC  1903               	skipnz
  3151     01CD  0AAC               	incf	___aldiv@dividend+3,f
  3152     01CE                     l2002:
  3153     01CE  3001               	movlw	1
  3154     01CF  00FF               	movwf	btemp+1
  3155     01D0  087F               	movf	btemp+1,w
  3156     01D1  06AF               	xorwf	___aldiv@sign,f
  3157     01D2                     l2004:
  3158     01D2  3000               	movlw	0
  3159     01D3  00B3               	movwf	___aldiv@quotient+3
  3160     01D4  3000               	movlw	0
  3161     01D5  00B2               	movwf	___aldiv@quotient+2
  3162     01D6  3000               	movlw	0
  3163     01D7  00B1               	movwf	___aldiv@quotient+1
  3164     01D8  3000               	movlw	0
  3165     01D9  00B0               	movwf	___aldiv@quotient
  3166     01DA                     l2006:
  3167     01DA  0828               	movf	___aldiv@divisor+3,w
  3168     01DB  0427               	iorwf	___aldiv@divisor+2,w
  3169     01DC  0426               	iorwf	___aldiv@divisor+1,w
  3170     01DD  0425               	iorwf	___aldiv@divisor,w
  3171     01DE  1903               	skipnz
  3172     01DF  29E1               	goto	u1481
  3173     01E0  29E2               	goto	u1480
  3174     01E1                     u1481:
  3175     01E1  2A2F               	goto	l2028
  3176     01E2                     u1480:
  3177     01E2                     l2008:
  3178     01E2  01AE               	clrf	___aldiv@counter
  3179     01E3  0AAE               	incf	___aldiv@counter,f
  3180     01E4  29F2               	goto	l2014
  3181     01E5                     l2010:
  3182     01E5  3001               	movlw	1
  3183     01E6  00AD               	movwf	??___aldiv
  3184     01E7                     u1495:
  3185     01E7  1003               	clrc
  3186     01E8  0DA5               	rlf	___aldiv@divisor,f
  3187     01E9  0DA6               	rlf	___aldiv@divisor+1,f
  3188     01EA  0DA7               	rlf	___aldiv@divisor+2,f
  3189     01EB  0DA8               	rlf	___aldiv@divisor+3,f
  3190     01EC  0BAD               	decfsz	??___aldiv,f
  3191     01ED  29E7               	goto	u1495
  3192     01EE                     l2012:
  3193     01EE  3001               	movlw	1
  3194     01EF  00FF               	movwf	btemp+1
  3195     01F0  087F               	movf	btemp+1,w
  3196     01F1  07AE               	addwf	___aldiv@counter,f
  3197     01F2                     l2014:
  3198     01F2  1FA8               	btfss	___aldiv@divisor+3,7
  3199     01F3  29F5               	goto	u1501
  3200     01F4  29F6               	goto	u1500
  3201     01F5                     u1501:
  3202     01F5  29E5               	goto	l2010
  3203     01F6                     u1500:
  3204     01F6                     l2016:
  3205     01F6  3001               	movlw	1
  3206     01F7  00AD               	movwf	??___aldiv
  3207     01F8                     u1515:
  3208     01F8  1003               	clrc
  3209     01F9  0DB0               	rlf	___aldiv@quotient,f
  3210     01FA  0DB1               	rlf	___aldiv@quotient+1,f
  3211     01FB  0DB2               	rlf	___aldiv@quotient+2,f
  3212     01FC  0DB3               	rlf	___aldiv@quotient+3,f
  3213     01FD  0BAD               	decfsz	??___aldiv,f
  3214     01FE  29F8               	goto	u1515
  3215     01FF                     l2018:
  3216     01FF  0828               	movf	___aldiv@divisor+3,w
  3217     0200  022C               	subwf	___aldiv@dividend+3,w
  3218     0201  1D03               	skipz
  3219     0202  2A0D               	goto	u1525
  3220     0203  0827               	movf	___aldiv@divisor+2,w
  3221     0204  022B               	subwf	___aldiv@dividend+2,w
  3222     0205  1D03               	skipz
  3223     0206  2A0D               	goto	u1525
  3224     0207  0826               	movf	___aldiv@divisor+1,w
  3225     0208  022A               	subwf	___aldiv@dividend+1,w
  3226     0209  1D03               	skipz
  3227     020A  2A0D               	goto	u1525
  3228     020B  0825               	movf	___aldiv@divisor,w
  3229     020C  0229               	subwf	___aldiv@dividend,w
  3230     020D                     u1525:
  3231     020D  1C03               	skipc
  3232     020E  2A10               	goto	u1521
  3233     020F  2A11               	goto	u1520
  3234     0210                     u1521:
  3235     0210  2A20               	goto	l2024
  3236     0211                     u1520:
  3237     0211                     l2020:
  3238     0211  0825               	movf	___aldiv@divisor,w
  3239     0212  02A9               	subwf	___aldiv@dividend,f
  3240     0213  0826               	movf	___aldiv@divisor+1,w
  3241     0214  1C03               	skipc
  3242     0215  0F26               	incfsz	___aldiv@divisor+1,w
  3243     0216  02AA               	subwf	___aldiv@dividend+1,f
  3244     0217  0827               	movf	___aldiv@divisor+2,w
  3245     0218  1C03               	skipc
  3246     0219  0F27               	incfsz	___aldiv@divisor+2,w
  3247     021A  02AB               	subwf	___aldiv@dividend+2,f
  3248     021B  0828               	movf	___aldiv@divisor+3,w
  3249     021C  1C03               	skipc
  3250     021D  0F28               	incfsz	___aldiv@divisor+3,w
  3251     021E  02AC               	subwf	___aldiv@dividend+3,f
  3252     021F                     l2022:
  3253     021F  1430               	bsf	___aldiv@quotient,0
  3254     0220                     l2024:
  3255     0220  3001               	movlw	1
  3256     0221                     u1535:
  3257     0221  1003               	clrc
  3258     0222  0CA8               	rrf	___aldiv@divisor+3,f
  3259     0223  0CA7               	rrf	___aldiv@divisor+2,f
  3260     0224  0CA6               	rrf	___aldiv@divisor+1,f
  3261     0225  0CA5               	rrf	___aldiv@divisor,f
  3262     0226  3EFF               	addlw	-1
  3263     0227  1D03               	skipz
  3264     0228  2A21               	goto	u1535
  3265     0229                     l2026:
  3266     0229  3001               	movlw	1
  3267     022A  02AE               	subwf	___aldiv@counter,f
  3268     022B  1D03               	btfss	3,2
  3269     022C  2A2E               	goto	u1541
  3270     022D  2A2F               	goto	u1540
  3271     022E                     u1541:
  3272     022E  29F6               	goto	l2016
  3273     022F                     u1540:
  3274     022F                     l2028:
  3275     022F  082F               	movf	___aldiv@sign,w
  3276     0230  1903               	btfsc	3,2
  3277     0231  2A33               	goto	u1551
  3278     0232  2A34               	goto	u1550
  3279     0233                     u1551:
  3280     0233  2A3F               	goto	l2032
  3281     0234                     u1550:
  3282     0234                     l2030:
  3283     0234  09B0               	comf	___aldiv@quotient,f
  3284     0235  09B1               	comf	___aldiv@quotient+1,f
  3285     0236  09B2               	comf	___aldiv@quotient+2,f
  3286     0237  09B3               	comf	___aldiv@quotient+3,f
  3287     0238  0AB0               	incf	___aldiv@quotient,f
  3288     0239  1903               	skipnz
  3289     023A  0AB1               	incf	___aldiv@quotient+1,f
  3290     023B  1903               	skipnz
  3291     023C  0AB2               	incf	___aldiv@quotient+2,f
  3292     023D  1903               	skipnz
  3293     023E  0AB3               	incf	___aldiv@quotient+3,f
  3294     023F                     l2032:
  3295     023F  0833               	movf	___aldiv@quotient+3,w
  3296     0240  00A8               	movwf	?___aldiv+3
  3297     0241  0832               	movf	___aldiv@quotient+2,w
  3298     0242  00A7               	movwf	?___aldiv+2
  3299     0243  0831               	movf	___aldiv@quotient+1,w
  3300     0244  00A6               	movwf	?___aldiv+1
  3301     0245  0830               	movf	___aldiv@quotient,w
  3302     0246  00A5               	movwf	?___aldiv
  3303     0247                     l465:
  3304     0247  0008               	return
  3305     0248                     __end_of___aldiv:
  3306                           
  3307                           	psect	text16
  3308     0EFA                     __ptext16:	
  3309 ;; *************** function _I2C_Master_Write *****************
  3310 ;; Defined at:
  3311 ;;		line 65 in file "I2C.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;  d               2    2[COMMON] unsigned int 
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;		None
  3316 ;; Return value:  Size  Location     Type
  3317 ;;                  1    wreg      void 
  3318 ;; Registers used:
  3319 ;;		wreg, status,2, status,0, pclath, cstack
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3325 ;;      Params:         2       0       0       0       0
  3326 ;;      Locals:         0       0       0       0       0
  3327 ;;      Temps:          0       0       0       0       0
  3328 ;;      Totals:         2       0       0       0       0
  3329 ;;Total ram usage:        2 bytes
  3330 ;; Hardware stack levels used: 1
  3331 ;; Hardware stack levels required when called: 2
  3332 ;; This function calls:
  3333 ;;		_I2C_Master_Wait
  3334 ;; This function is called by:
  3335 ;;		_requestTemp
  3336 ;;		_requestHum
  3337 ;;		_requestGas
  3338 ;;		_requestIR
  3339 ;;		_writeMotors
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343     0EFA                     _I2C_Master_Write:	
  3344                           ;psect for function _I2C_Master_Write
  3345                           
  3346     0EFA                     l1630:	
  3347                           ;incstack = 0
  3348                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3349                           
  3350                           
  3351                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3352     0EFA  120A  158A  271C  120A  158A  	fcall	_I2C_Master_Wait
  3353     0EFF                     l1632:
  3354                           
  3355                           ;I2C.c: 68:     SSPBUF = d;
  3356     0EFF  0872               	movf	I2C_Master_Write@d,w
  3357     0F00  1283               	bcf	3,5	;RP0=0, select bank0
  3358     0F01  1303               	bcf	3,6	;RP1=0, select bank0
  3359     0F02  0093               	movwf	19	;volatile
  3360     0F03                     l190:
  3361     0F03  0008               	return
  3362     0F04                     __end_of_I2C_Master_Write:
  3363                           
  3364                           	psect	text17
  3365     0EF1                     __ptext17:	
  3366 ;; *************** function _I2C_Master_Stop *****************
  3367 ;; Defined at:
  3368 ;;		line 55 in file "I2C.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;		None
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;		None
  3373 ;; Return value:  Size  Location     Type
  3374 ;;                  1    wreg      void 
  3375 ;; Registers used:
  3376 ;;		wreg, status,2, status,0, pclath, cstack
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3382 ;;      Params:         0       0       0       0       0
  3383 ;;      Locals:         0       0       0       0       0
  3384 ;;      Temps:          0       0       0       0       0
  3385 ;;      Totals:         0       0       0       0       0
  3386 ;;Total ram usage:        0 bytes
  3387 ;; Hardware stack levels used: 1
  3388 ;; Hardware stack levels required when called: 2
  3389 ;; This function calls:
  3390 ;;		_I2C_Master_Wait
  3391 ;; This function is called by:
  3392 ;;		_requestTemp
  3393 ;;		_requestHum
  3394 ;;		_requestGas
  3395 ;;		_requestIR
  3396 ;;		_writeMotors
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400     0EF1                     _I2C_Master_Stop:	
  3401                           ;psect for function _I2C_Master_Stop
  3402                           
  3403     0EF1                     l1654:	
  3404                           ;incstack = 0
  3405                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3406                           
  3407                           
  3408                           ;I2C.c: 57:     I2C_Master_Wait();
  3409     0EF1  120A  158A  271C  120A  158A  	fcall	_I2C_Master_Wait
  3410     0EF6                     l1656:
  3411                           
  3412                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3413     0EF6  1683               	bsf	3,5	;RP0=1, select bank1
  3414     0EF7  1303               	bcf	3,6	;RP1=0, select bank1
  3415     0EF8  1511               	bsf	17,2	;volatile
  3416     0EF9                     l187:
  3417     0EF9  0008               	return
  3418     0EFA                     __end_of_I2C_Master_Stop:
  3419                           
  3420                           	psect	text18
  3421     0EE8                     __ptext18:	
  3422 ;; *************** function _I2C_Master_Start *****************
  3423 ;; Defined at:
  3424 ;;		line 39 in file "I2C.c"
  3425 ;; Parameters:    Size  Location     Type
  3426 ;;		None
  3427 ;; Auto vars:     Size  Location     Type
  3428 ;;		None
  3429 ;; Return value:  Size  Location     Type
  3430 ;;                  1    wreg      void 
  3431 ;; Registers used:
  3432 ;;		wreg, status,2, status,0, pclath, cstack
  3433 ;; Tracked objects:
  3434 ;;		On entry : 0/0
  3435 ;;		On exit  : 0/0
  3436 ;;		Unchanged: 0/0
  3437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3438 ;;      Params:         0       0       0       0       0
  3439 ;;      Locals:         0       0       0       0       0
  3440 ;;      Temps:          0       0       0       0       0
  3441 ;;      Totals:         0       0       0       0       0
  3442 ;;Total ram usage:        0 bytes
  3443 ;; Hardware stack levels used: 1
  3444 ;; Hardware stack levels required when called: 2
  3445 ;; This function calls:
  3446 ;;		_I2C_Master_Wait
  3447 ;; This function is called by:
  3448 ;;		_requestTemp
  3449 ;;		_requestHum
  3450 ;;		_requestGas
  3451 ;;		_requestIR
  3452 ;;		_writeMotors
  3453 ;; This function uses a non-reentrant model
  3454 ;;
  3455                           
  3456     0EE8                     _I2C_Master_Start:	
  3457                           ;psect for function _I2C_Master_Start
  3458                           
  3459     0EE8                     l1626:	
  3460                           ;incstack = 0
  3461                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3462                           
  3463                           
  3464                           ;I2C.c: 41:     I2C_Master_Wait();
  3465     0EE8  120A  158A  271C  120A  158A  	fcall	_I2C_Master_Wait
  3466     0EED                     l1628:
  3467                           
  3468                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  3469     0EED  1683               	bsf	3,5	;RP0=1, select bank1
  3470     0EEE  1303               	bcf	3,6	;RP1=0, select bank1
  3471     0EEF  1411               	bsf	17,0	;volatile
  3472     0EF0                     l181:
  3473     0EF0  0008               	return
  3474     0EF1                     __end_of_I2C_Master_Start:
  3475                           
  3476                           	psect	text19
  3477     0EDF                     __ptext19:	
  3478 ;; *************** function _I2C_Master_RepeatedStart *****************
  3479 ;; Defined at:
  3480 ;;		line 47 in file "I2C.c"
  3481 ;; Parameters:    Size  Location     Type
  3482 ;;		None
  3483 ;; Auto vars:     Size  Location     Type
  3484 ;;		None
  3485 ;; Return value:  Size  Location     Type
  3486 ;;                  1    wreg      void 
  3487 ;; Registers used:
  3488 ;;		wreg, status,2, status,0, pclath, cstack
  3489 ;; Tracked objects:
  3490 ;;		On entry : 0/0
  3491 ;;		On exit  : 0/0
  3492 ;;		Unchanged: 0/0
  3493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3494 ;;      Params:         0       0       0       0       0
  3495 ;;      Locals:         0       0       0       0       0
  3496 ;;      Temps:          0       0       0       0       0
  3497 ;;      Totals:         0       0       0       0       0
  3498 ;;Total ram usage:        0 bytes
  3499 ;; Hardware stack levels used: 1
  3500 ;; Hardware stack levels required when called: 2
  3501 ;; This function calls:
  3502 ;;		_I2C_Master_Wait
  3503 ;; This function is called by:
  3504 ;;		_requestTemp
  3505 ;;		_requestHum
  3506 ;;		_requestGas
  3507 ;;		_requestIR
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511     0EDF                     _I2C_Master_RepeatedStart:	
  3512                           ;psect for function _I2C_Master_RepeatedStart
  3513                           
  3514     0EDF                     l1634:	
  3515                           ;incstack = 0
  3516                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3517                           
  3518                           
  3519                           ;I2C.c: 49:     I2C_Master_Wait();
  3520     0EDF  120A  158A  271C  120A  158A  	fcall	_I2C_Master_Wait
  3521     0EE4                     l1636:
  3522                           
  3523                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  3524     0EE4  1683               	bsf	3,5	;RP0=1, select bank1
  3525     0EE5  1303               	bcf	3,6	;RP1=0, select bank1
  3526     0EE6  1491               	bsf	17,1	;volatile
  3527     0EE7                     l184:
  3528     0EE7  0008               	return
  3529     0EE8                     __end_of_I2C_Master_RepeatedStart:
  3530                           
  3531                           	psect	text20
  3532     0F65                     __ptext20:	
  3533 ;; *************** function _I2C_Master_Read *****************
  3534 ;; Defined at:
  3535 ;;		line 74 in file "I2C.c"
  3536 ;; Parameters:    Size  Location     Type
  3537 ;;  a               2    2[COMMON] unsigned short 
  3538 ;; Auto vars:     Size  Location     Type
  3539 ;;  temp            2    6[COMMON] unsigned short 
  3540 ;; Return value:  Size  Location     Type
  3541 ;;                  2    2[COMMON] unsigned short 
  3542 ;; Registers used:
  3543 ;;		wreg, status,2, status,0, pclath, cstack
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3549 ;;      Params:         2       0       0       0       0
  3550 ;;      Locals:         2       0       0       0       0
  3551 ;;      Temps:          2       0       0       0       0
  3552 ;;      Totals:         6       0       0       0       0
  3553 ;;Total ram usage:        6 bytes
  3554 ;; Hardware stack levels used: 1
  3555 ;; Hardware stack levels required when called: 2
  3556 ;; This function calls:
  3557 ;;		_I2C_Master_Wait
  3558 ;; This function is called by:
  3559 ;;		_requestTemp
  3560 ;;		_requestHum
  3561 ;;		_requestGas
  3562 ;;		_requestIR
  3563 ;; This function uses a non-reentrant model
  3564 ;;
  3565                           
  3566     0F65                     _I2C_Master_Read:	
  3567                           ;psect for function _I2C_Master_Read
  3568                           
  3569     0F65                     l1638:	
  3570                           ;incstack = 0
  3571                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3572                           
  3573                           
  3574                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3575     0F65  120A  158A  271C  120A  158A  	fcall	_I2C_Master_Wait
  3576     0F6A                     l1640:
  3577                           
  3578                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3579     0F6A  1683               	bsf	3,5	;RP0=1, select bank1
  3580     0F6B  1303               	bcf	3,6	;RP1=0, select bank1
  3581     0F6C  1591               	bsf	17,3	;volatile
  3582                           
  3583                           ;I2C.c: 79:     I2C_Master_Wait();
  3584     0F6D  120A  158A  271C  120A  158A  	fcall	_I2C_Master_Wait
  3585     0F72                     l1642:
  3586                           
  3587                           ;I2C.c: 80:     temp = SSPBUF;
  3588     0F72  1283               	bcf	3,5	;RP0=0, select bank0
  3589     0F73  1303               	bcf	3,6	;RP1=0, select bank0
  3590     0F74  0813               	movf	19,w	;volatile
  3591     0F75  00F4               	movwf	??_I2C_Master_Read
  3592     0F76  01F5               	clrf	??_I2C_Master_Read+1
  3593     0F77  0874               	movf	??_I2C_Master_Read,w
  3594     0F78  00F6               	movwf	I2C_Master_Read@temp
  3595     0F79  0875               	movf	??_I2C_Master_Read+1,w
  3596     0F7A  00F7               	movwf	I2C_Master_Read@temp+1
  3597     0F7B                     l1644:
  3598                           
  3599                           ;I2C.c: 81:     I2C_Master_Wait();
  3600     0F7B  120A  158A  271C  120A  158A  	fcall	_I2C_Master_Wait
  3601     0F80                     l1646:
  3602                           
  3603                           ;I2C.c: 82:     if(a == 1){
  3604     0F80  0372               	decf	I2C_Master_Read@a,w
  3605     0F81  0473               	iorwf	I2C_Master_Read@a+1,w
  3606     0F82  1D03               	btfss	3,2
  3607     0F83  2F85               	goto	u1101
  3608     0F84  2F86               	goto	u1100
  3609     0F85                     u1101:
  3610     0F85  2F8A               	goto	l193
  3611     0F86                     u1100:
  3612     0F86                     l1648:
  3613                           
  3614                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3615     0F86  1683               	bsf	3,5	;RP0=1, select bank1
  3616     0F87  1303               	bcf	3,6	;RP1=0, select bank1
  3617     0F88  1291               	bcf	17,5	;volatile
  3618                           
  3619                           ;I2C.c: 84:     }else{
  3620     0F89  2F8D               	goto	l194
  3621     0F8A                     l193:
  3622                           
  3623                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3624     0F8A  1683               	bsf	3,5	;RP0=1, select bank1
  3625     0F8B  1303               	bcf	3,6	;RP1=0, select bank1
  3626     0F8C  1691               	bsf	17,5	;volatile
  3627     0F8D                     l194:	
  3628                           ;I2C.c: 86:     }
  3629                           
  3630                           
  3631                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3632     0F8D  1611               	bsf	17,4	;volatile
  3633     0F8E                     l1650:
  3634                           
  3635                           ;I2C.c: 88:     return temp;
  3636     0F8E  0877               	movf	I2C_Master_Read@temp+1,w
  3637     0F8F  00F3               	movwf	?_I2C_Master_Read+1
  3638     0F90  0876               	movf	I2C_Master_Read@temp,w
  3639     0F91  00F2               	movwf	?_I2C_Master_Read
  3640     0F92                     l195:
  3641     0F92  0008               	return
  3642     0F93                     __end_of_I2C_Master_Read:
  3643                           
  3644                           	psect	text21
  3645     0F1C                     __ptext21:	
  3646 ;; *************** function _I2C_Master_Wait *****************
  3647 ;; Defined at:
  3648 ;;		line 32 in file "I2C.c"
  3649 ;; Parameters:    Size  Location     Type
  3650 ;;		None
  3651 ;; Auto vars:     Size  Location     Type
  3652 ;;		None
  3653 ;; Return value:  Size  Location     Type
  3654 ;;                  1    wreg      void 
  3655 ;; Registers used:
  3656 ;;		wreg, status,2
  3657 ;; Tracked objects:
  3658 ;;		On entry : 0/0
  3659 ;;		On exit  : 0/0
  3660 ;;		Unchanged: 0/0
  3661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3662 ;;      Params:         0       0       0       0       0
  3663 ;;      Locals:         0       0       0       0       0
  3664 ;;      Temps:          0       0       0       0       0
  3665 ;;      Totals:         0       0       0       0       0
  3666 ;;Total ram usage:        0 bytes
  3667 ;; Hardware stack levels used: 1
  3668 ;; Hardware stack levels required when called: 1
  3669 ;; This function calls:
  3670 ;;		Nothing
  3671 ;; This function is called by:
  3672 ;;		_I2C_Master_Start
  3673 ;;		_I2C_Master_RepeatedStart
  3674 ;;		_I2C_Master_Stop
  3675 ;;		_I2C_Master_Write
  3676 ;;		_I2C_Master_Read
  3677 ;; This function uses a non-reentrant model
  3678 ;;
  3679                           
  3680     0F1C                     _I2C_Master_Wait:	
  3681                           ;psect for function _I2C_Master_Wait
  3682                           
  3683     0F1C                     l1424:	
  3684                           ;incstack = 0
  3685                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3686                           
  3687     0F1C                     l175:	
  3688                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3689                           
  3690     0F1C  1683               	bsf	3,5	;RP0=1, select bank1
  3691     0F1D  1303               	bcf	3,6	;RP1=0, select bank1
  3692     0F1E  1914               	btfsc	20,2	;volatile
  3693     0F1F  2F21               	goto	u691
  3694     0F20  2F22               	goto	u690
  3695     0F21                     u691:
  3696     0F21  2F1C               	goto	l175
  3697     0F22                     u690:
  3698     0F22                     l1426:
  3699     0F22  0811               	movf	17,w	;volatile
  3700     0F23  391F               	andlw	31
  3701     0F24  1D03               	btfss	3,2
  3702     0F25  2F27               	goto	u701
  3703     0F26  2F28               	goto	u700
  3704     0F27                     u701:
  3705     0F27  2F1C               	goto	l175
  3706     0F28                     u700:
  3707     0F28                     l178:
  3708     0F28  0008               	return
  3709     0F29                     __end_of_I2C_Master_Wait:
  3710                           
  3711                           	psect	text22
  3712     0024                     __ptext22:	
  3713 ;; *************** function _LDC_output *****************
  3714 ;; Defined at:
  3715 ;;		line 218 in file "master.c"
  3716 ;; Parameters:    Size  Location     Type
  3717 ;;		None
  3718 ;; Auto vars:     Size  Location     Type
  3719 ;;		None
  3720 ;; Return value:  Size  Location     Type
  3721 ;;                  1    wreg      void 
  3722 ;; Registers used:
  3723 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3724 ;; Tracked objects:
  3725 ;;		On entry : 0/0
  3726 ;;		On exit  : 0/0
  3727 ;;		Unchanged: 0/0
  3728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3729 ;;      Params:         0       0       0       0       0
  3730 ;;      Locals:         0       0       0       0       0
  3731 ;;      Temps:          0       2       0       0       0
  3732 ;;      Totals:         0       2       0       0       0
  3733 ;;Total ram usage:        2 bytes
  3734 ;; Hardware stack levels used: 1
  3735 ;; Hardware stack levels required when called: 4
  3736 ;; This function calls:
  3737 ;;		_Lcd_Clear
  3738 ;;		_Lcd_Set_Cursor
  3739 ;;		_Lcd_Write_String
  3740 ;;		_num_to_string
  3741 ;; This function is called by:
  3742 ;;		_main
  3743 ;; This function uses a non-reentrant model
  3744 ;;
  3745                           
  3746     0024                     _LDC_output:	
  3747                           ;psect for function _LDC_output
  3748                           
  3749     0024                     l2154:	
  3750                           ;incstack = 0
  3751                           ; Regs used in _LDC_output: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3752                           
  3753                           
  3754                           ;master.c: 219:     Lcd_Clear();
  3755     0024  120A  158A  270F  120A  118A  	fcall	_Lcd_Clear
  3756     0029                     l2156:
  3757                           
  3758                           ;master.c: 221:     num_to_string(tempC,S_temp,3);
  3759     0029  087B               	movf	_tempC,w
  3760     002A  1283               	bcf	3,5	;RP0=0, select bank0
  3761     002B  1303               	bcf	3,6	;RP1=0, select bank0
  3762     002C  00B0               	movwf	??_LDC_output
  3763     002D  01B1               	clrf	??_LDC_output+1
  3764     002E  0830               	movf	??_LDC_output,w
  3765     002F  00A0               	movwf	num_to_string@num
  3766     0030  0831               	movf	??_LDC_output+1,w
  3767     0031  00A1               	movwf	num_to_string@num+1
  3768     0032  3056               	movlw	(low (_S_temp| 0))& (0+255)
  3769     0033  00A2               	movwf	num_to_string@dig8
  3770     0034  3003               	movlw	3
  3771     0035  00A3               	movwf	num_to_string@len
  3772     0036  120A  118A  20F2  120A  118A  	fcall	_num_to_string
  3773     003B                     l2158:
  3774                           
  3775                           ;master.c: 222:     num_to_string(n_hum,S_hum,2);
  3776     003B  1283               	bcf	3,5	;RP0=0, select bank0
  3777     003C  1303               	bcf	3,6	;RP1=0, select bank0
  3778     003D  0850               	movf	_n_hum,w
  3779     003E  00B0               	movwf	??_LDC_output
  3780     003F  01B1               	clrf	??_LDC_output+1
  3781     0040  0830               	movf	??_LDC_output,w
  3782     0041  00A0               	movwf	num_to_string@num
  3783     0042  0831               	movf	??_LDC_output+1,w
  3784     0043  00A1               	movwf	num_to_string@num+1
  3785     0044  305A               	movlw	(low (_S_hum| 0))& (0+255)
  3786     0045  00A2               	movwf	num_to_string@dig8
  3787     0046  3002               	movlw	2
  3788     0047  00A3               	movwf	num_to_string@len
  3789     0048  120A  118A  20F2  120A  118A  	fcall	_num_to_string
  3790     004D                     l2160:
  3791                           
  3792                           ;master.c: 223:     num_to_string(gasPPM,S_gas,3);
  3793     004D  1283               	bcf	3,5	;RP0=0, select bank0
  3794     004E  1303               	bcf	3,6	;RP1=0, select bank0
  3795     004F  084B               	movf	_gasPPM+1,w
  3796     0050  00A1               	movwf	num_to_string@num+1
  3797     0051  084A               	movf	_gasPPM,w
  3798     0052  00A0               	movwf	num_to_string@num
  3799     0053  3052               	movlw	(low (_S_gas| 0))& (0+255)
  3800     0054  00A2               	movwf	num_to_string@dig8
  3801     0055  3003               	movlw	3
  3802     0056  00A3               	movwf	num_to_string@len
  3803     0057  120A  118A  20F2  120A  118A  	fcall	_num_to_string
  3804     005C                     l2162:
  3805                           
  3806                           ;master.c: 224:     num_to_string(n_ired,S_ired,1);
  3807     005C  1283               	bcf	3,5	;RP0=0, select bank0
  3808     005D  1303               	bcf	3,6	;RP1=0, select bank0
  3809     005E  084E               	movf	_n_ired,w
  3810     005F  00B0               	movwf	??_LDC_output
  3811     0060  01B1               	clrf	??_LDC_output+1
  3812     0061  0830               	movf	??_LDC_output,w
  3813     0062  00A0               	movwf	num_to_string@num
  3814     0063  0831               	movf	??_LDC_output+1,w
  3815     0064  00A1               	movwf	num_to_string@num+1
  3816     0065  305D               	movlw	(low (_S_ired| 0))& (0+255)
  3817     0066  00A2               	movwf	num_to_string@dig8
  3818     0067  01A3               	clrf	num_to_string@len
  3819     0068  0AA3               	incf	num_to_string@len,f
  3820     0069  120A  118A  20F2  120A  118A  	fcall	_num_to_string
  3821                           
  3822                           ;master.c: 228:     Lcd_Set_Cursor(1,1);
  3823     006E  01F6               	clrf	Lcd_Set_Cursor@b
  3824     006F  0AF6               	incf	Lcd_Set_Cursor@b,f
  3825     0070  3001               	movlw	1
  3826     0071  120A  118A  25B0  120A  118A  	fcall	_Lcd_Set_Cursor
  3827     0076                     l2164:
  3828                           
  3829                           ;master.c: 229:     Lcd_Write_String("T:");
  3830     0076  3013               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3831     0077  00F7               	movwf	Lcd_Write_String@a
  3832     0078  3080               	movlw	128
  3833     0079  00F8               	movwf	Lcd_Write_String@a+1
  3834     007A  120A  118A  26D6  120A  118A  	fcall	_Lcd_Write_String
  3835     007F                     l2166:
  3836                           
  3837                           ;master.c: 230:     Lcd_Write_String(S_temp);
  3838     007F  3056               	movlw	(low (_S_temp| 0))& (0+255)
  3839     0080  00F7               	movwf	Lcd_Write_String@a
  3840     0081  3000               	movlw	0
  3841     0082  00F8               	movwf	Lcd_Write_String@a+1
  3842     0083  120A  118A  26D6  120A  118A  	fcall	_Lcd_Write_String
  3843     0088                     l2168:
  3844                           
  3845                           ;master.c: 231:     Lcd_Write_String("^C");
  3846     0088  3016               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3847     0089  00F7               	movwf	Lcd_Write_String@a
  3848     008A  3080               	movlw	128
  3849     008B  00F8               	movwf	Lcd_Write_String@a+1
  3850     008C  120A  118A  26D6  120A  118A  	fcall	_Lcd_Write_String
  3851     0091                     l2170:
  3852                           
  3853                           ;master.c: 233:     Lcd_Set_Cursor(2,1);
  3854     0091  01F6               	clrf	Lcd_Set_Cursor@b
  3855     0092  0AF6               	incf	Lcd_Set_Cursor@b,f
  3856     0093  3002               	movlw	2
  3857     0094  120A  118A  25B0  120A  118A  	fcall	_Lcd_Set_Cursor
  3858                           
  3859                           ;master.c: 234:     Lcd_Write_String("H:");
  3860     0099  3010               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  3861     009A  00F7               	movwf	Lcd_Write_String@a
  3862     009B  3080               	movlw	128
  3863     009C  00F8               	movwf	Lcd_Write_String@a+1
  3864     009D  120A  118A  26D6  120A  118A  	fcall	_Lcd_Write_String
  3865                           
  3866                           ;master.c: 235:     Lcd_Write_String(S_hum);
  3867     00A2  305A               	movlw	(low (_S_hum| 0))& (0+255)
  3868     00A3  00F7               	movwf	Lcd_Write_String@a
  3869     00A4  3000               	movlw	0
  3870     00A5  00F8               	movwf	Lcd_Write_String@a+1
  3871     00A6  120A  118A  26D6  120A  118A  	fcall	_Lcd_Write_String
  3872                           
  3873                           ;master.c: 236:     Lcd_Write_String("%RH");
  3874     00AB  3005               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  3875     00AC  00F7               	movwf	Lcd_Write_String@a
  3876     00AD  3080               	movlw	128
  3877     00AE  00F8               	movwf	Lcd_Write_String@a+1
  3878     00AF  120A  118A  26D6  120A  118A  	fcall	_Lcd_Write_String
  3879     00B4                     l2172:
  3880                           
  3881                           ;master.c: 238:     Lcd_Set_Cursor(1,9);
  3882     00B4  3009               	movlw	9
  3883     00B5  00F6               	movwf	Lcd_Set_Cursor@b
  3884     00B6  3001               	movlw	1
  3885     00B7  120A  118A  25B0  120A  118A  	fcall	_Lcd_Set_Cursor
  3886     00BC                     l2174:
  3887                           
  3888                           ;master.c: 239:     Lcd_Write_String("G:");
  3889     00BC  300D               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  3890     00BD  00F7               	movwf	Lcd_Write_String@a
  3891     00BE  3080               	movlw	128
  3892     00BF  00F8               	movwf	Lcd_Write_String@a+1
  3893     00C0  120A  118A  26D6  120A  118A  	fcall	_Lcd_Write_String
  3894     00C5                     l2176:
  3895                           
  3896                           ;master.c: 240:     Lcd_Write_String(S_gas);
  3897     00C5  3052               	movlw	(low (_S_gas| 0))& (0+255)
  3898     00C6  00F7               	movwf	Lcd_Write_String@a
  3899     00C7  3000               	movlw	0
  3900     00C8  00F8               	movwf	Lcd_Write_String@a+1
  3901     00C9  120A  118A  26D6  120A  118A  	fcall	_Lcd_Write_String
  3902     00CE                     l2178:
  3903                           
  3904                           ;master.c: 241:     Lcd_Write_String("ppm");
  3905     00CE  3009               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  3906     00CF  00F7               	movwf	Lcd_Write_String@a
  3907     00D0  3080               	movlw	128
  3908     00D1  00F8               	movwf	Lcd_Write_String@a+1
  3909     00D2  120A  118A  26D6  120A  118A  	fcall	_Lcd_Write_String
  3910                           
  3911                           ;master.c: 243:     Lcd_Set_Cursor(2,9);
  3912     00D7  3009               	movlw	9
  3913     00D8  00F6               	movwf	Lcd_Set_Cursor@b
  3914     00D9  3002               	movlw	2
  3915     00DA  120A  118A  25B0  120A  118A  	fcall	_Lcd_Set_Cursor
  3916     00DF                     l2180:
  3917                           
  3918                           ;master.c: 244:     Lcd_Write_String("IR:");
  3919     00DF  3001               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  3920     00E0  00F7               	movwf	Lcd_Write_String@a
  3921     00E1  3080               	movlw	128
  3922     00E2  00F8               	movwf	Lcd_Write_String@a+1
  3923     00E3  120A  118A  26D6  120A  118A  	fcall	_Lcd_Write_String
  3924     00E8                     l2182:
  3925                           
  3926                           ;master.c: 245:     Lcd_Write_String(S_ired);
  3927     00E8  305D               	movlw	(low (_S_ired| 0))& (0+255)
  3928     00E9  00F7               	movwf	Lcd_Write_String@a
  3929     00EA  3000               	movlw	0
  3930     00EB  00F8               	movwf	Lcd_Write_String@a+1
  3931     00EC  120A  118A  26D6  120A  118A  	fcall	_Lcd_Write_String
  3932     00F1                     l129:
  3933     00F1  0008               	return
  3934     00F2                     __end_of_LDC_output:
  3935                           
  3936                           	psect	text23
  3937     00F2                     __ptext23:	
  3938 ;; *************** function _num_to_string *****************
  3939 ;; Defined at:
  3940 ;;		line 263 in file "master.c"
  3941 ;; Parameters:    Size  Location     Type
  3942 ;;  num             2    0[BANK0 ] unsigned int 
  3943 ;;  dig8            1    2[BANK0 ] PTR unsigned char 
  3944 ;;		 -> S_ired(2), S_gas(4), S_hum(3), S_temp(4), 
  3945 ;;  len             1    3[BANK0 ] unsigned char 
  3946 ;; Auto vars:     Size  Location     Type
  3947 ;;  unidades        2   14[BANK0 ] unsigned int 
  3948 ;;  decenas         2   12[BANK0 ] unsigned int 
  3949 ;;  div2            2   10[BANK0 ] unsigned int 
  3950 ;;  div1            2    8[BANK0 ] unsigned int 
  3951 ;;  centenas        2    6[BANK0 ] unsigned int 
  3952 ;;  div3            2    4[BANK0 ] unsigned int 
  3953 ;;  miles           2    0        unsigned int 
  3954 ;; Return value:  Size  Location     Type
  3955 ;;                  1    wreg      void 
  3956 ;; Registers used:
  3957 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3958 ;; Tracked objects:
  3959 ;;		On entry : 0/0
  3960 ;;		On exit  : 0/0
  3961 ;;		Unchanged: 0/0
  3962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3963 ;;      Params:         0       4       0       0       0
  3964 ;;      Locals:         0      12       0       0       0
  3965 ;;      Temps:          0       0       0       0       0
  3966 ;;      Totals:         0      16       0       0       0
  3967 ;;Total ram usage:       16 bytes
  3968 ;; Hardware stack levels used: 1
  3969 ;; Hardware stack levels required when called: 2
  3970 ;; This function calls:
  3971 ;;		___lwdiv
  3972 ;;		___lwmod
  3973 ;; This function is called by:
  3974 ;;		_LDC_output
  3975 ;; This function uses a non-reentrant model
  3976 ;;
  3977                           
  3978     00F2                     _num_to_string:	
  3979                           ;psect for function _num_to_string
  3980                           
  3981     00F2                     l1664:	
  3982                           ;incstack = 0
  3983                           ; Regs used in _num_to_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3984                           
  3985                           
  3986                           ;master.c: 264:     uint16_t div1,div2,div3,miles,centenas,decenas,unidades;;master.c: 2
      +                          65:     div1 = num / 10;
  3987     00F2  300A               	movlw	10
  3988     00F3  00F2               	movwf	___lwdiv@divisor
  3989     00F4  3000               	movlw	0
  3990     00F5  00F3               	movwf	___lwdiv@divisor+1
  3991     00F6  1283               	bcf	3,5	;RP0=0, select bank0
  3992     00F7  1303               	bcf	3,6	;RP1=0, select bank0
  3993     00F8  0821               	movf	num_to_string@num+1,w
  3994     00F9  00F5               	movwf	___lwdiv@dividend+1
  3995     00FA  0820               	movf	num_to_string@num,w
  3996     00FB  00F4               	movwf	___lwdiv@dividend
  3997     00FC  120A  118A  271C  120A  118A  	fcall	___lwdiv
  3998     0101  0873               	movf	?___lwdiv+1,w
  3999     0102  1283               	bcf	3,5	;RP0=0, select bank0
  4000     0103  1303               	bcf	3,6	;RP1=0, select bank0
  4001     0104  00A9               	movwf	num_to_string@div1+1
  4002     0105  0872               	movf	?___lwdiv,w
  4003     0106  00A8               	movwf	num_to_string@div1
  4004                           
  4005                           ;master.c: 266:     unidades = num % 10;
  4006     0107  300A               	movlw	10
  4007     0108  00F2               	movwf	___lwmod@divisor
  4008     0109  3000               	movlw	0
  4009     010A  00F3               	movwf	___lwmod@divisor+1
  4010     010B  0821               	movf	num_to_string@num+1,w
  4011     010C  00F5               	movwf	___lwmod@dividend+1
  4012     010D  0820               	movf	num_to_string@num,w
  4013     010E  00F4               	movwf	___lwmod@dividend
  4014     010F  120A  118A  279E  120A  118A  	fcall	___lwmod
  4015     0114  0873               	movf	?___lwmod+1,w
  4016     0115  1283               	bcf	3,5	;RP0=0, select bank0
  4017     0116  1303               	bcf	3,6	;RP1=0, select bank0
  4018     0117  00AF               	movwf	num_to_string@unidades+1
  4019     0118  0872               	movf	?___lwmod,w
  4020     0119  00AE               	movwf	num_to_string@unidades
  4021                           
  4022                           ;master.c: 267:     div2 = div1 / 10;
  4023     011A  300A               	movlw	10
  4024     011B  00F2               	movwf	___lwdiv@divisor
  4025     011C  3000               	movlw	0
  4026     011D  00F3               	movwf	___lwdiv@divisor+1
  4027     011E  0829               	movf	num_to_string@div1+1,w
  4028     011F  00F5               	movwf	___lwdiv@dividend+1
  4029     0120  0828               	movf	num_to_string@div1,w
  4030     0121  00F4               	movwf	___lwdiv@dividend
  4031     0122  120A  118A  271C  120A  118A  	fcall	___lwdiv
  4032     0127  0873               	movf	?___lwdiv+1,w
  4033     0128  1283               	bcf	3,5	;RP0=0, select bank0
  4034     0129  1303               	bcf	3,6	;RP1=0, select bank0
  4035     012A  00AB               	movwf	num_to_string@div2+1
  4036     012B  0872               	movf	?___lwdiv,w
  4037     012C  00AA               	movwf	num_to_string@div2
  4038                           
  4039                           ;master.c: 268:     decenas = div1 % 10;
  4040     012D  300A               	movlw	10
  4041     012E  00F2               	movwf	___lwmod@divisor
  4042     012F  3000               	movlw	0
  4043     0130  00F3               	movwf	___lwmod@divisor+1
  4044     0131  0829               	movf	num_to_string@div1+1,w
  4045     0132  00F5               	movwf	___lwmod@dividend+1
  4046     0133  0828               	movf	num_to_string@div1,w
  4047     0134  00F4               	movwf	___lwmod@dividend
  4048     0135  120A  118A  279E  120A  118A  	fcall	___lwmod
  4049     013A  0873               	movf	?___lwmod+1,w
  4050     013B  1283               	bcf	3,5	;RP0=0, select bank0
  4051     013C  1303               	bcf	3,6	;RP1=0, select bank0
  4052     013D  00AD               	movwf	num_to_string@decenas+1
  4053     013E  0872               	movf	?___lwmod,w
  4054     013F  00AC               	movwf	num_to_string@decenas
  4055                           
  4056                           ;master.c: 269:     div3 = div2 / 10;
  4057     0140  300A               	movlw	10
  4058     0141  00F2               	movwf	___lwdiv@divisor
  4059     0142  3000               	movlw	0
  4060     0143  00F3               	movwf	___lwdiv@divisor+1
  4061     0144  082B               	movf	num_to_string@div2+1,w
  4062     0145  00F5               	movwf	___lwdiv@dividend+1
  4063     0146  082A               	movf	num_to_string@div2,w
  4064     0147  00F4               	movwf	___lwdiv@dividend
  4065     0148  120A  118A  271C  120A  118A  	fcall	___lwdiv
  4066     014D  0873               	movf	?___lwdiv+1,w
  4067     014E  1283               	bcf	3,5	;RP0=0, select bank0
  4068     014F  1303               	bcf	3,6	;RP1=0, select bank0
  4069     0150  00A5               	movwf	num_to_string@div3+1
  4070     0151  0872               	movf	?___lwdiv,w
  4071     0152  00A4               	movwf	num_to_string@div3
  4072                           
  4073                           ;master.c: 270:     centenas = div2 % 10;
  4074     0153  300A               	movlw	10
  4075     0154  00F2               	movwf	___lwmod@divisor
  4076     0155  3000               	movlw	0
  4077     0156  00F3               	movwf	___lwmod@divisor+1
  4078     0157  082B               	movf	num_to_string@div2+1,w
  4079     0158  00F5               	movwf	___lwmod@dividend+1
  4080     0159  082A               	movf	num_to_string@div2,w
  4081     015A  00F4               	movwf	___lwmod@dividend
  4082     015B  120A  118A  279E  120A  118A  	fcall	___lwmod
  4083     0160  0873               	movf	?___lwmod+1,w
  4084     0161  1283               	bcf	3,5	;RP0=0, select bank0
  4085     0162  1303               	bcf	3,6	;RP1=0, select bank0
  4086     0163  00A7               	movwf	num_to_string@centenas+1
  4087     0164  0872               	movf	?___lwmod,w
  4088     0165  00A6               	movwf	num_to_string@centenas
  4089     0166  300A               	movlw	10
  4090     0167  00F2               	movwf	___lwmod@divisor
  4091     0168  3000               	movlw	0
  4092     0169  00F3               	movwf	___lwmod@divisor+1
  4093     016A  0825               	movf	num_to_string@div3+1,w
  4094     016B  00F5               	movwf	___lwmod@dividend+1
  4095     016C  0824               	movf	num_to_string@div3,w
  4096     016D  00F4               	movwf	___lwmod@dividend
  4097     016E  120A  118A  279E  120A  118A  	fcall	___lwmod
  4098     0173                     l1666:
  4099                           
  4100                           ;master.c: 273:     if(len == 1){
  4101     0173  1283               	bcf	3,5	;RP0=0, select bank0
  4102     0174  1303               	bcf	3,6	;RP1=0, select bank0
  4103     0175  0323               	decf	num_to_string@len,w
  4104     0176  1D03               	btfss	3,2
  4105     0177  2979               	goto	u1121
  4106     0178  297A               	goto	u1120
  4107     0179                     u1121:
  4108     0179  2981               	goto	l1670
  4109     017A                     u1120:
  4110     017A                     l1668:
  4111                           
  4112                           ;master.c: 274:         dig8[0] = unidades + '0';
  4113     017A  0822               	movf	num_to_string@dig8,w
  4114     017B  0084               	movwf	4
  4115     017C  082E               	movf	num_to_string@unidades,w
  4116     017D  3E30               	addlw	48
  4117     017E  1383               	bcf	3,7	;select IRP bank0
  4118     017F  0080               	movwf	0
  4119                           
  4120                           ;master.c: 275:     }
  4121     0180  29AA               	goto	l140
  4122     0181                     l1670:
  4123     0181  3002               	movlw	2
  4124     0182  0623               	xorwf	num_to_string@len,w
  4125     0183  1D03               	btfss	3,2
  4126     0184  2986               	goto	u1131
  4127     0185  2987               	goto	u1130
  4128     0186                     u1131:
  4129     0186  2993               	goto	l1674
  4130     0187                     u1130:
  4131     0187                     l1672:
  4132                           
  4133                           ;master.c: 277:         dig8[1] = unidades + '0';
  4134     0187  0A22               	incf	num_to_string@dig8,w
  4135     0188  0084               	movwf	4
  4136     0189  082E               	movf	num_to_string@unidades,w
  4137     018A  3E30               	addlw	48
  4138     018B  1383               	bcf	3,7	;select IRP bank0
  4139     018C  0080               	movwf	0
  4140                           
  4141                           ;master.c: 278:         dig8[0] = decenas + '0';
  4142     018D  0822               	movf	num_to_string@dig8,w
  4143     018E  0084               	movwf	4
  4144     018F  082C               	movf	num_to_string@decenas,w
  4145     0190  3E30               	addlw	48
  4146     0191  0080               	movwf	0
  4147                           
  4148                           ;master.c: 279:     }
  4149     0192  29AA               	goto	l140
  4150     0193                     l1674:
  4151     0193  3003               	movlw	3
  4152     0194  0623               	xorwf	num_to_string@len,w
  4153     0195  1D03               	btfss	3,2
  4154     0196  2998               	goto	u1141
  4155     0197  2999               	goto	u1140
  4156     0198                     u1141:
  4157     0198  29AA               	goto	l140
  4158     0199                     u1140:
  4159     0199                     l1676:
  4160                           
  4161                           ;master.c: 281:         dig8[2] = unidades + '0';
  4162     0199  0822               	movf	num_to_string@dig8,w
  4163     019A  3E02               	addlw	2
  4164     019B  0084               	movwf	4
  4165     019C  082E               	movf	num_to_string@unidades,w
  4166     019D  3E30               	addlw	48
  4167     019E  1383               	bcf	3,7	;select IRP bank0
  4168     019F  0080               	movwf	0
  4169                           
  4170                           ;master.c: 282:         dig8[1] = decenas + '0';
  4171     01A0  0A22               	incf	num_to_string@dig8,w
  4172     01A1  0084               	movwf	4
  4173     01A2  082C               	movf	num_to_string@decenas,w
  4174     01A3  3E30               	addlw	48
  4175     01A4  0080               	movwf	0
  4176                           
  4177                           ;master.c: 283:         dig8[0] = centenas + '0';
  4178     01A5  0822               	movf	num_to_string@dig8,w
  4179     01A6  0084               	movwf	4
  4180     01A7  0826               	movf	num_to_string@centenas,w
  4181     01A8  3E30               	addlw	48
  4182     01A9  0080               	movwf	0
  4183     01AA                     l140:
  4184     01AA  0008               	return
  4185     01AB                     __end_of_num_to_string:
  4186                           
  4187                           	psect	text24
  4188     079E                     __ptext24:	
  4189 ;; *************** function ___lwmod *****************
  4190 ;; Defined at:
  4191 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  4192 ;; Parameters:    Size  Location     Type
  4193 ;;  divisor         2    2[COMMON] unsigned int 
  4194 ;;  dividend        2    4[COMMON] unsigned int 
  4195 ;; Auto vars:     Size  Location     Type
  4196 ;;  counter         1    6[COMMON] unsigned char 
  4197 ;; Return value:  Size  Location     Type
  4198 ;;                  2    2[COMMON] unsigned int 
  4199 ;; Registers used:
  4200 ;;		wreg, status,2, status,0, btemp+1
  4201 ;; Tracked objects:
  4202 ;;		On entry : 0/0
  4203 ;;		On exit  : 0/0
  4204 ;;		Unchanged: 0/0
  4205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4206 ;;      Params:         4       0       0       0       0
  4207 ;;      Locals:         1       0       0       0       0
  4208 ;;      Temps:          0       0       0       0       0
  4209 ;;      Totals:         5       0       0       0       0
  4210 ;;Total ram usage:        5 bytes
  4211 ;; Hardware stack levels used: 1
  4212 ;; Hardware stack levels required when called: 1
  4213 ;; This function calls:
  4214 ;;		Nothing
  4215 ;; This function is called by:
  4216 ;;		_num_to_string
  4217 ;; This function uses a non-reentrant model
  4218 ;;
  4219                           
  4220     079E                     ___lwmod:	
  4221                           ;psect for function ___lwmod
  4222                           
  4223     079E                     l1566:	
  4224                           ;incstack = 0
  4225                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  4226                           
  4227     079E  0872               	movf	___lwmod@divisor,w
  4228     079F  0473               	iorwf	___lwmod@divisor+1,w
  4229     07A0  1903               	btfsc	3,2
  4230     07A1  2FA3               	goto	u1011
  4231     07A2  2FA4               	goto	u1010
  4232     07A3                     u1011:
  4233     07A3  2FD3               	goto	l1584
  4234     07A4                     u1010:
  4235     07A4                     l1568:
  4236     07A4  01F6               	clrf	___lwmod@counter
  4237     07A5  0AF6               	incf	___lwmod@counter,f
  4238     07A6  2FB2               	goto	l1574
  4239     07A7                     l1570:
  4240     07A7  3001               	movlw	1
  4241     07A8                     u1025:
  4242     07A8  1003               	clrc
  4243     07A9  0DF2               	rlf	___lwmod@divisor,f
  4244     07AA  0DF3               	rlf	___lwmod@divisor+1,f
  4245     07AB  3EFF               	addlw	-1
  4246     07AC  1D03               	skipz
  4247     07AD  2FA8               	goto	u1025
  4248     07AE                     l1572:
  4249     07AE  3001               	movlw	1
  4250     07AF  00FF               	movwf	btemp+1
  4251     07B0  087F               	movf	btemp+1,w
  4252     07B1  07F6               	addwf	___lwmod@counter,f
  4253     07B2                     l1574:
  4254     07B2  1FF3               	btfss	___lwmod@divisor+1,7
  4255     07B3  2FB5               	goto	u1031
  4256     07B4  2FB6               	goto	u1030
  4257     07B5                     u1031:
  4258     07B5  2FA7               	goto	l1570
  4259     07B6                     u1030:
  4260     07B6                     l1576:
  4261     07B6  0873               	movf	___lwmod@divisor+1,w
  4262     07B7  0275               	subwf	___lwmod@dividend+1,w
  4263     07B8  1D03               	skipz
  4264     07B9  2FBC               	goto	u1045
  4265     07BA  0872               	movf	___lwmod@divisor,w
  4266     07BB  0274               	subwf	___lwmod@dividend,w
  4267     07BC                     u1045:
  4268     07BC  1C03               	skipc
  4269     07BD  2FBF               	goto	u1041
  4270     07BE  2FC0               	goto	u1040
  4271     07BF                     u1041:
  4272     07BF  2FC6               	goto	l1580
  4273     07C0                     u1040:
  4274     07C0                     l1578:
  4275     07C0  0872               	movf	___lwmod@divisor,w
  4276     07C1  02F4               	subwf	___lwmod@dividend,f
  4277     07C2  0873               	movf	___lwmod@divisor+1,w
  4278     07C3  1C03               	skipc
  4279     07C4  03F5               	decf	___lwmod@dividend+1,f
  4280     07C5  02F5               	subwf	___lwmod@dividend+1,f
  4281     07C6                     l1580:
  4282     07C6  3001               	movlw	1
  4283     07C7                     u1055:
  4284     07C7  1003               	clrc
  4285     07C8  0CF3               	rrf	___lwmod@divisor+1,f
  4286     07C9  0CF2               	rrf	___lwmod@divisor,f
  4287     07CA  3EFF               	addlw	-1
  4288     07CB  1D03               	skipz
  4289     07CC  2FC7               	goto	u1055
  4290     07CD                     l1582:
  4291     07CD  3001               	movlw	1
  4292     07CE  02F6               	subwf	___lwmod@counter,f
  4293     07CF  1D03               	btfss	3,2
  4294     07D0  2FD2               	goto	u1061
  4295     07D1  2FD3               	goto	u1060
  4296     07D2                     u1061:
  4297     07D2  2FB6               	goto	l1576
  4298     07D3                     u1060:
  4299     07D3                     l1584:
  4300     07D3  0875               	movf	___lwmod@dividend+1,w
  4301     07D4  00F3               	movwf	?___lwmod+1
  4302     07D5  0874               	movf	___lwmod@dividend,w
  4303     07D6  00F2               	movwf	?___lwmod
  4304     07D7                     l672:
  4305     07D7  0008               	return
  4306     07D8                     __end_of___lwmod:
  4307                           
  4308                           	psect	text25
  4309     071C                     __ptext25:	
  4310 ;; *************** function ___lwdiv *****************
  4311 ;; Defined at:
  4312 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  4313 ;; Parameters:    Size  Location     Type
  4314 ;;  divisor         2    2[COMMON] unsigned int 
  4315 ;;  dividend        2    4[COMMON] unsigned int 
  4316 ;; Auto vars:     Size  Location     Type
  4317 ;;  quotient        2    6[COMMON] unsigned int 
  4318 ;;  counter         1    8[COMMON] unsigned char 
  4319 ;; Return value:  Size  Location     Type
  4320 ;;                  2    2[COMMON] unsigned int 
  4321 ;; Registers used:
  4322 ;;		wreg, status,2, status,0, btemp+1
  4323 ;; Tracked objects:
  4324 ;;		On entry : 0/0
  4325 ;;		On exit  : 0/0
  4326 ;;		Unchanged: 0/0
  4327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4328 ;;      Params:         4       0       0       0       0
  4329 ;;      Locals:         3       0       0       0       0
  4330 ;;      Temps:          0       0       0       0       0
  4331 ;;      Totals:         7       0       0       0       0
  4332 ;;Total ram usage:        7 bytes
  4333 ;; Hardware stack levels used: 1
  4334 ;; Hardware stack levels required when called: 1
  4335 ;; This function calls:
  4336 ;;		Nothing
  4337 ;; This function is called by:
  4338 ;;		_num_to_string
  4339 ;; This function uses a non-reentrant model
  4340 ;;
  4341                           
  4342     071C                     ___lwdiv:	
  4343                           ;psect for function ___lwdiv
  4344                           
  4345     071C                     l1540:	
  4346                           ;incstack = 0
  4347                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  4348                           
  4349     071C  01F6               	clrf	___lwdiv@quotient
  4350     071D  01F7               	clrf	___lwdiv@quotient+1
  4351     071E                     l1542:
  4352     071E  0872               	movf	___lwdiv@divisor,w
  4353     071F  0473               	iorwf	___lwdiv@divisor+1,w
  4354     0720  1903               	btfsc	3,2
  4355     0721  2F23               	goto	u941
  4356     0722  2F24               	goto	u940
  4357     0723                     u941:
  4358     0723  2F5B               	goto	l1562
  4359     0724                     u940:
  4360     0724                     l1544:
  4361     0724  01F8               	clrf	___lwdiv@counter
  4362     0725  0AF8               	incf	___lwdiv@counter,f
  4363     0726  2F32               	goto	l1550
  4364     0727                     l1546:
  4365     0727  3001               	movlw	1
  4366     0728                     u955:
  4367     0728  1003               	clrc
  4368     0729  0DF2               	rlf	___lwdiv@divisor,f
  4369     072A  0DF3               	rlf	___lwdiv@divisor+1,f
  4370     072B  3EFF               	addlw	-1
  4371     072C  1D03               	skipz
  4372     072D  2F28               	goto	u955
  4373     072E                     l1548:
  4374     072E  3001               	movlw	1
  4375     072F  00FF               	movwf	btemp+1
  4376     0730  087F               	movf	btemp+1,w
  4377     0731  07F8               	addwf	___lwdiv@counter,f
  4378     0732                     l1550:
  4379     0732  1FF3               	btfss	___lwdiv@divisor+1,7
  4380     0733  2F35               	goto	u961
  4381     0734  2F36               	goto	u960
  4382     0735                     u961:
  4383     0735  2F27               	goto	l1546
  4384     0736                     u960:
  4385     0736                     l1552:
  4386     0736  3001               	movlw	1
  4387     0737                     u975:
  4388     0737  1003               	clrc
  4389     0738  0DF6               	rlf	___lwdiv@quotient,f
  4390     0739  0DF7               	rlf	___lwdiv@quotient+1,f
  4391     073A  3EFF               	addlw	-1
  4392     073B  1D03               	skipz
  4393     073C  2F37               	goto	u975
  4394     073D  0873               	movf	___lwdiv@divisor+1,w
  4395     073E  0275               	subwf	___lwdiv@dividend+1,w
  4396     073F  1D03               	skipz
  4397     0740  2F43               	goto	u985
  4398     0741  0872               	movf	___lwdiv@divisor,w
  4399     0742  0274               	subwf	___lwdiv@dividend,w
  4400     0743                     u985:
  4401     0743  1C03               	skipc
  4402     0744  2F46               	goto	u981
  4403     0745  2F47               	goto	u980
  4404     0746                     u981:
  4405     0746  2F4E               	goto	l1558
  4406     0747                     u980:
  4407     0747                     l1554:
  4408     0747  0872               	movf	___lwdiv@divisor,w
  4409     0748  02F4               	subwf	___lwdiv@dividend,f
  4410     0749  0873               	movf	___lwdiv@divisor+1,w
  4411     074A  1C03               	skipc
  4412     074B  03F5               	decf	___lwdiv@dividend+1,f
  4413     074C  02F5               	subwf	___lwdiv@dividend+1,f
  4414     074D                     l1556:
  4415     074D  1476               	bsf	___lwdiv@quotient,0
  4416     074E                     l1558:
  4417     074E  3001               	movlw	1
  4418     074F                     u995:
  4419     074F  1003               	clrc
  4420     0750  0CF3               	rrf	___lwdiv@divisor+1,f
  4421     0751  0CF2               	rrf	___lwdiv@divisor,f
  4422     0752  3EFF               	addlw	-1
  4423     0753  1D03               	skipz
  4424     0754  2F4F               	goto	u995
  4425     0755                     l1560:
  4426     0755  3001               	movlw	1
  4427     0756  02F8               	subwf	___lwdiv@counter,f
  4428     0757  1D03               	btfss	3,2
  4429     0758  2F5A               	goto	u1001
  4430     0759  2F5B               	goto	u1000
  4431     075A                     u1001:
  4432     075A  2F36               	goto	l1552
  4433     075B                     u1000:
  4434     075B                     l1562:
  4435     075B  0877               	movf	___lwdiv@quotient+1,w
  4436     075C  00F3               	movwf	?___lwdiv+1
  4437     075D  0876               	movf	___lwdiv@quotient,w
  4438     075E  00F2               	movwf	?___lwdiv
  4439     075F                     l662:
  4440     075F  0008               	return
  4441     0760                     __end_of___lwdiv:
  4442                           
  4443                           	psect	text26
  4444     06D6                     __ptext26:	
  4445 ;; *************** function _Lcd_Write_String *****************
  4446 ;; Defined at:
  4447 ;;		line 98 in file "LCD4b.c"
  4448 ;; Parameters:    Size  Location     Type
  4449 ;;  a               2    7[COMMON] PTR unsigned char 
  4450 ;;		 -> STR_7(4), STR_6(4), STR_5(3), STR_4(4), 
  4451 ;;		 -> STR_3(3), STR_2(3), STR_1(3), S_ired(2), 
  4452 ;;		 -> S_gas(4), S_hum(3), S_temp(4), 
  4453 ;; Auto vars:     Size  Location     Type
  4454 ;;  i               2    3[BANK0 ] int 
  4455 ;; Return value:  Size  Location     Type
  4456 ;;                  1    wreg      void 
  4457 ;; Registers used:
  4458 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4459 ;; Tracked objects:
  4460 ;;		On entry : 0/0
  4461 ;;		On exit  : 0/0
  4462 ;;		Unchanged: 0/0
  4463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4464 ;;      Params:         2       0       0       0       0
  4465 ;;      Locals:         0       2       0       0       0
  4466 ;;      Temps:          0       3       0       0       0
  4467 ;;      Totals:         2       5       0       0       0
  4468 ;;Total ram usage:        7 bytes
  4469 ;; Hardware stack levels used: 1
  4470 ;; Hardware stack levels required when called: 3
  4471 ;; This function calls:
  4472 ;;		_Lcd_Write_Char
  4473 ;; This function is called by:
  4474 ;;		_LDC_output
  4475 ;; This function uses a non-reentrant model
  4476 ;;
  4477                           
  4478     06D6                     _Lcd_Write_String:	
  4479                           ;psect for function _Lcd_Write_String
  4480                           
  4481     06D6                     l2100:	
  4482                           ;incstack = 0
  4483                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4484                           
  4485                           
  4486                           ;LCD4b.c: 99:     int i;;LCD4b.c: 100:     for (i = 0; a[i] != '\0'; i++)
  4487     06D6  1283               	bcf	3,5	;RP0=0, select bank0
  4488     06D7  1303               	bcf	3,6	;RP1=0, select bank0
  4489     06D8  01A3               	clrf	Lcd_Write_String@i
  4490     06D9  01A4               	clrf	Lcd_Write_String@i+1
  4491     06DA  2EFF               	goto	l2106
  4492     06DB                     l2102:
  4493                           
  4494                           ;LCD4b.c: 101:         Lcd_Write_Char(a[i]);
  4495     06DB  0823               	movf	Lcd_Write_String@i,w
  4496     06DC  0777               	addwf	Lcd_Write_String@a,w
  4497     06DD  00A1               	movwf	??_Lcd_Write_String+1
  4498     06DE  0878               	movf	Lcd_Write_String@a+1,w
  4499     06DF  00A0               	movwf	??_Lcd_Write_String
  4500     06E0  1803               	skipnc
  4501     06E1  0AA0               	incf	??_Lcd_Write_String,f
  4502     06E2  1FA3               	btfss	Lcd_Write_String@i,7
  4503     06E3  2EE5               	goto	u1640
  4504     06E4  03A0               	decf	??_Lcd_Write_String,f
  4505     06E5                     u1640:
  4506     06E5  1283               	bcf	3,5	;RP0=0, select bank0
  4507     06E6  1303               	bcf	3,6	;RP1=0, select bank0
  4508     06E7  0820               	movf	??_Lcd_Write_String,w
  4509     06E8  00A2               	movwf	??_Lcd_Write_String+2
  4510     06E9  0822               	movf	??_Lcd_Write_String+2,w
  4511     06EA  00FF               	movwf	btemp+1
  4512     06EB  0821               	movf	??_Lcd_Write_String+1,w
  4513     06EC  0084               	movwf	4
  4514     06ED  120A  118A  27D8  120A  118A  	fcall	stringtab
  4515     06F2  120A  158A  2793  120A  118A  	fcall	_Lcd_Write_Char
  4516     06F7                     l2104:
  4517     06F7  3001               	movlw	1
  4518     06F8  1283               	bcf	3,5	;RP0=0, select bank0
  4519     06F9  1303               	bcf	3,6	;RP1=0, select bank0
  4520     06FA  07A3               	addwf	Lcd_Write_String@i,f
  4521     06FB  1803               	skipnc
  4522     06FC  0AA4               	incf	Lcd_Write_String@i+1,f
  4523     06FD  3000               	movlw	0
  4524     06FE  07A4               	addwf	Lcd_Write_String@i+1,f
  4525     06FF                     l2106:
  4526     06FF  0823               	movf	Lcd_Write_String@i,w
  4527     0700  0777               	addwf	Lcd_Write_String@a,w
  4528     0701  00A1               	movwf	??_Lcd_Write_String+1
  4529     0702  0878               	movf	Lcd_Write_String@a+1,w
  4530     0703  00A0               	movwf	??_Lcd_Write_String
  4531     0704  1803               	skipnc
  4532     0705  0AA0               	incf	??_Lcd_Write_String,f
  4533     0706  1FA3               	btfss	Lcd_Write_String@i,7
  4534     0707  2F09               	goto	u1650
  4535     0708  03A0               	decf	??_Lcd_Write_String,f
  4536     0709                     u1650:
  4537     0709  1283               	bcf	3,5	;RP0=0, select bank0
  4538     070A  1303               	bcf	3,6	;RP1=0, select bank0
  4539     070B  0820               	movf	??_Lcd_Write_String,w
  4540     070C  00A2               	movwf	??_Lcd_Write_String+2
  4541     070D  0822               	movf	??_Lcd_Write_String+2,w
  4542     070E  00FF               	movwf	btemp+1
  4543     070F  0821               	movf	??_Lcd_Write_String+1,w
  4544     0710  0084               	movwf	4
  4545     0711  120A  118A  27D8  120A  118A  	fcall	stringtab
  4546     0716  3A00               	xorlw	0
  4547     0717  1D03               	skipz
  4548     0718  2F1A               	goto	u1661
  4549     0719  2F1B               	goto	u1660
  4550     071A                     u1661:
  4551     071A  2EDB               	goto	l2102
  4552     071B                     u1660:
  4553     071B                     l247:
  4554     071B  0008               	return
  4555     071C                     __end_of_Lcd_Write_String:
  4556                           
  4557                           	psect	text27
  4558     0F93                     __ptext27:	
  4559 ;; *************** function _Lcd_Write_Char *****************
  4560 ;; Defined at:
  4561 ;;		line 83 in file "LCD4b.c"
  4562 ;; Parameters:    Size  Location     Type
  4563 ;;  a               1    wreg     unsigned char 
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;  a               1    6[COMMON] unsigned char 
  4566 ;;  y               1    5[COMMON] unsigned char 
  4567 ;;  temp            1    4[COMMON] unsigned char 
  4568 ;; Return value:  Size  Location     Type
  4569 ;;                  1    wreg      void 
  4570 ;; Registers used:
  4571 ;;		wreg, status,2, status,0, pclath, cstack
  4572 ;; Tracked objects:
  4573 ;;		On entry : 0/0
  4574 ;;		On exit  : 0/0
  4575 ;;		Unchanged: 0/0
  4576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4577 ;;      Params:         0       0       0       0       0
  4578 ;;      Locals:         3       0       0       0       0
  4579 ;;      Temps:          1       0       0       0       0
  4580 ;;      Totals:         4       0       0       0       0
  4581 ;;Total ram usage:        4 bytes
  4582 ;; Hardware stack levels used: 1
  4583 ;; Hardware stack levels required when called: 2
  4584 ;; This function calls:
  4585 ;;		_Lcd_Port
  4586 ;; This function is called by:
  4587 ;;		_Lcd_Write_String
  4588 ;; This function uses a non-reentrant model
  4589 ;;
  4590                           
  4591     0F93                     _Lcd_Write_Char:	
  4592                           ;psect for function _Lcd_Write_Char
  4593                           
  4594                           
  4595                           ;incstack = 0
  4596                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4597                           ;Lcd_Write_Char@a stored from wreg
  4598     0F93  00F6               	movwf	Lcd_Write_Char@a
  4599     0F94                     l1934:
  4600                           
  4601                           ;LCD4b.c: 84:     char temp, y;;LCD4b.c: 85:     temp = a & 0x0F;
  4602     0F94  0876               	movf	Lcd_Write_Char@a,w
  4603     0F95  390F               	andlw	15
  4604     0F96  00F4               	movwf	Lcd_Write_Char@temp
  4605                           
  4606                           ;LCD4b.c: 86:     y = a & 0xF0;
  4607     0F97  0876               	movf	Lcd_Write_Char@a,w
  4608     0F98  39F0               	andlw	240
  4609     0F99  00F5               	movwf	Lcd_Write_Char@y
  4610     0F9A                     l1936:
  4611                           
  4612                           ;LCD4b.c: 87:     PORTDbits.RD2 = 1;
  4613     0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  4614     0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  4615     0F9C  1508               	bsf	8,2	;volatile
  4616     0F9D                     l1938:
  4617                           
  4618                           ;LCD4b.c: 88:     Lcd_Port(y >> 4);
  4619     0F9D  0875               	movf	Lcd_Write_Char@y,w
  4620     0F9E  00F3               	movwf	??_Lcd_Write_Char
  4621     0F9F  3004               	movlw	4
  4622     0FA0                     u1335:
  4623     0FA0  1003               	clrc
  4624     0FA1  0CF3               	rrf	??_Lcd_Write_Char,f
  4625     0FA2  3EFF               	addlw	-1
  4626     0FA3  1D03               	skipz
  4627     0FA4  2FA0               	goto	u1335
  4628     0FA5  0873               	movf	??_Lcd_Write_Char,w
  4629     0FA6  120A  158A  2743  120A  158A  	fcall	_Lcd_Port
  4630     0FAB                     l1940:
  4631                           
  4632                           ;LCD4b.c: 89:     RD3 = 1;
  4633     0FAB  1283               	bcf	3,5	;RP0=0, select bank0
  4634     0FAC  1303               	bcf	3,6	;RP1=0, select bank0
  4635     0FAD  1588               	bsf	8,3	;volatile
  4636     0FAE                     l1942:
  4637                           
  4638                           ;LCD4b.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4639     0FAE  301A               	movlw	26
  4640     0FAF  00F3               	movwf	??_Lcd_Write_Char
  4641     0FB0                     u1857:
  4642     0FB0  0BF3               	decfsz	??_Lcd_Write_Char,f
  4643     0FB1  2FB0               	goto	u1857
  4644     0FB2  0000               	nop
  4645     0FB3                     l1944:
  4646                           
  4647                           ;LCD4b.c: 91:     RD3 = 0;
  4648     0FB3  1283               	bcf	3,5	;RP0=0, select bank0
  4649     0FB4  1303               	bcf	3,6	;RP1=0, select bank0
  4650     0FB5  1188               	bcf	8,3	;volatile
  4651     0FB6                     l1946:
  4652                           
  4653                           ;LCD4b.c: 92:     Lcd_Port(temp);
  4654     0FB6  0874               	movf	Lcd_Write_Char@temp,w
  4655     0FB7  120A  158A  2743  120A  158A  	fcall	_Lcd_Port
  4656     0FBC                     l1948:
  4657                           
  4658                           ;LCD4b.c: 93:     RD3 = 1;
  4659     0FBC  1283               	bcf	3,5	;RP0=0, select bank0
  4660     0FBD  1303               	bcf	3,6	;RP1=0, select bank0
  4661     0FBE  1588               	bsf	8,3	;volatile
  4662     0FBF                     l1950:
  4663                           
  4664                           ;LCD4b.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4665     0FBF  301A               	movlw	26
  4666     0FC0  00F3               	movwf	??_Lcd_Write_Char
  4667     0FC1                     u1867:
  4668     0FC1  0BF3               	decfsz	??_Lcd_Write_Char,f
  4669     0FC2  2FC1               	goto	u1867
  4670     0FC3  0000               	nop
  4671     0FC4                     l1952:
  4672                           
  4673                           ;LCD4b.c: 95:     RD3 = 0;
  4674     0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  4675     0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  4676     0FC6  1188               	bcf	8,3	;volatile
  4677     0FC7                     l241:
  4678     0FC7  0008               	return
  4679     0FC8                     __end_of_Lcd_Write_Char:
  4680                           
  4681                           	psect	text28
  4682     05B0                     __ptext28:	
  4683 ;; *************** function _Lcd_Set_Cursor *****************
  4684 ;; Defined at:
  4685 ;;		line 48 in file "LCD4b.c"
  4686 ;; Parameters:    Size  Location     Type
  4687 ;;  a               1    wreg     unsigned char 
  4688 ;;  b               1    6[COMMON] unsigned char 
  4689 ;; Auto vars:     Size  Location     Type
  4690 ;;  a               1    0[BANK0 ] unsigned char 
  4691 ;;  temp            1    3[BANK0 ] unsigned char 
  4692 ;;  y               1    2[BANK0 ] unsigned char 
  4693 ;;  z               1    1[BANK0 ] unsigned char 
  4694 ;; Return value:  Size  Location     Type
  4695 ;;                  1    wreg      void 
  4696 ;; Registers used:
  4697 ;;		wreg, status,2, status,0, pclath, cstack
  4698 ;; Tracked objects:
  4699 ;;		On entry : 0/0
  4700 ;;		On exit  : 0/0
  4701 ;;		Unchanged: 0/0
  4702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4703 ;;      Params:         1       0       0       0       0
  4704 ;;      Locals:         0       4       0       0       0
  4705 ;;      Temps:          1       0       0       0       0
  4706 ;;      Totals:         2       4       0       0       0
  4707 ;;Total ram usage:        6 bytes
  4708 ;; Hardware stack levels used: 1
  4709 ;; Hardware stack levels required when called: 3
  4710 ;; This function calls:
  4711 ;;		_Lcd_Cmd
  4712 ;; This function is called by:
  4713 ;;		_LDC_output
  4714 ;; This function uses a non-reentrant model
  4715 ;;
  4716                           
  4717     05B0                     _Lcd_Set_Cursor:	
  4718                           ;psect for function _Lcd_Set_Cursor
  4719                           
  4720                           
  4721                           ;incstack = 0
  4722                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4723                           ;Lcd_Set_Cursor@a stored from wreg
  4724     05B0  1283               	bcf	3,5	;RP0=0, select bank0
  4725     05B1  1303               	bcf	3,6	;RP1=0, select bank0
  4726     05B2  00A0               	movwf	Lcd_Set_Cursor@a
  4727     05B3                     l2080:
  4728                           
  4729                           ;LCD4b.c: 49:     char temp, z, y;;LCD4b.c: 50:     if (a == 1) {
  4730     05B3  0320               	decf	Lcd_Set_Cursor@a,w
  4731     05B4  1D03               	btfss	3,2
  4732     05B5  2DB7               	goto	u1601
  4733     05B6  2DB8               	goto	u1600
  4734     05B7                     u1601:
  4735     05B7  2DD7               	goto	l2090
  4736     05B8                     u1600:
  4737     05B8                     l2082:
  4738                           
  4739                           ;LCD4b.c: 51:         temp = 0x80 + b - 1;
  4740     05B8  0876               	movf	Lcd_Set_Cursor@b,w
  4741     05B9  3E7F               	addlw	127
  4742     05BA  00A3               	movwf	Lcd_Set_Cursor@temp
  4743                           
  4744                           ;LCD4b.c: 52:         z = temp >> 4;
  4745     05BB  0823               	movf	Lcd_Set_Cursor@temp,w
  4746     05BC  00F7               	movwf	??_Lcd_Set_Cursor
  4747     05BD  3004               	movlw	4
  4748     05BE                     u1615:
  4749     05BE  1003               	clrc
  4750     05BF  0CF7               	rrf	??_Lcd_Set_Cursor,f
  4751     05C0  3EFF               	addlw	-1
  4752     05C1  1D03               	skipz
  4753     05C2  2DBE               	goto	u1615
  4754     05C3  0877               	movf	??_Lcd_Set_Cursor,w
  4755     05C4  00A1               	movwf	Lcd_Set_Cursor@z
  4756     05C5                     l2084:
  4757                           
  4758                           ;LCD4b.c: 53:         y = temp & 0x0F;
  4759     05C5  0823               	movf	Lcd_Set_Cursor@temp,w
  4760     05C6  390F               	andlw	15
  4761     05C7  00A2               	movwf	Lcd_Set_Cursor@y
  4762     05C8                     l2086:
  4763                           
  4764                           ;LCD4b.c: 54:         Lcd_Cmd(z);
  4765     05C8  0821               	movf	Lcd_Set_Cursor@z,w
  4766     05C9  120A  158A  2729  120A  118A  	fcall	_Lcd_Cmd
  4767     05CE                     l2088:
  4768                           
  4769                           ;LCD4b.c: 55:         Lcd_Cmd(y);
  4770     05CE  1283               	bcf	3,5	;RP0=0, select bank0
  4771     05CF  1303               	bcf	3,6	;RP1=0, select bank0
  4772     05D0  0822               	movf	Lcd_Set_Cursor@y,w
  4773     05D1  120A  158A  2729  120A  118A  	fcall	_Lcd_Cmd
  4774                           
  4775                           ;LCD4b.c: 56:     } else if (a == 2) {
  4776     05D6  2DFB               	goto	l235
  4777     05D7                     l2090:
  4778     05D7  3002               	movlw	2
  4779     05D8  0620               	xorwf	Lcd_Set_Cursor@a,w
  4780     05D9  1D03               	btfss	3,2
  4781     05DA  2DDC               	goto	u1621
  4782     05DB  2DDD               	goto	u1620
  4783     05DC                     u1621:
  4784     05DC  2DFB               	goto	l235
  4785     05DD                     u1620:
  4786     05DD                     l2092:
  4787                           
  4788                           ;LCD4b.c: 57:         temp = 0xC0 + b - 1;
  4789     05DD  0876               	movf	Lcd_Set_Cursor@b,w
  4790     05DE  3EBF               	addlw	191
  4791     05DF  00A3               	movwf	Lcd_Set_Cursor@temp
  4792                           
  4793                           ;LCD4b.c: 58:         z = temp >> 4;
  4794     05E0  0823               	movf	Lcd_Set_Cursor@temp,w
  4795     05E1  00F7               	movwf	??_Lcd_Set_Cursor
  4796     05E2  3004               	movlw	4
  4797     05E3                     u1635:
  4798     05E3  1003               	clrc
  4799     05E4  0CF7               	rrf	??_Lcd_Set_Cursor,f
  4800     05E5  3EFF               	addlw	-1
  4801     05E6  1D03               	skipz
  4802     05E7  2DE3               	goto	u1635
  4803     05E8  0877               	movf	??_Lcd_Set_Cursor,w
  4804     05E9  00A1               	movwf	Lcd_Set_Cursor@z
  4805     05EA                     l2094:
  4806                           
  4807                           ;LCD4b.c: 59:         y = temp & 0x0F;
  4808     05EA  0823               	movf	Lcd_Set_Cursor@temp,w
  4809     05EB  390F               	andlw	15
  4810     05EC  00A2               	movwf	Lcd_Set_Cursor@y
  4811     05ED                     l2096:
  4812                           
  4813                           ;LCD4b.c: 60:         Lcd_Cmd(z);
  4814     05ED  0821               	movf	Lcd_Set_Cursor@z,w
  4815     05EE  120A  158A  2729  120A  118A  	fcall	_Lcd_Cmd
  4816     05F3                     l2098:
  4817                           
  4818                           ;LCD4b.c: 61:         Lcd_Cmd(y);
  4819     05F3  1283               	bcf	3,5	;RP0=0, select bank0
  4820     05F4  1303               	bcf	3,6	;RP1=0, select bank0
  4821     05F5  0822               	movf	Lcd_Set_Cursor@y,w
  4822     05F6  120A  158A  2729  120A  118A  	fcall	_Lcd_Cmd
  4823     05FB                     l235:
  4824     05FB  0008               	return
  4825     05FC                     __end_of_Lcd_Set_Cursor:
  4826                           
  4827                           	psect	text29
  4828     0F0F                     __ptext29:	
  4829 ;; *************** function _Lcd_Clear *****************
  4830 ;; Defined at:
  4831 ;;		line 43 in file "LCD4b.c"
  4832 ;; Parameters:    Size  Location     Type
  4833 ;;		None
  4834 ;; Auto vars:     Size  Location     Type
  4835 ;;		None
  4836 ;; Return value:  Size  Location     Type
  4837 ;;                  1    wreg      void 
  4838 ;; Registers used:
  4839 ;;		wreg, status,2, status,0, pclath, cstack
  4840 ;; Tracked objects:
  4841 ;;		On entry : 0/0
  4842 ;;		On exit  : 0/0
  4843 ;;		Unchanged: 0/0
  4844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4845 ;;      Params:         0       0       0       0       0
  4846 ;;      Locals:         0       0       0       0       0
  4847 ;;      Temps:          0       0       0       0       0
  4848 ;;      Totals:         0       0       0       0       0
  4849 ;;Total ram usage:        0 bytes
  4850 ;; Hardware stack levels used: 1
  4851 ;; Hardware stack levels required when called: 3
  4852 ;; This function calls:
  4853 ;;		_Lcd_Cmd
  4854 ;; This function is called by:
  4855 ;;		_LDC_output
  4856 ;; This function uses a non-reentrant model
  4857 ;;
  4858                           
  4859     0F0F                     _Lcd_Clear:	
  4860                           ;psect for function _Lcd_Clear
  4861                           
  4862     0F0F                     l2078:	
  4863                           ;incstack = 0
  4864                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4865                           
  4866                           
  4867                           ;LCD4b.c: 44:     Lcd_Cmd(0);
  4868     0F0F  3000               	movlw	0
  4869     0F10  120A  158A  2729  120A  158A  	fcall	_Lcd_Cmd
  4870                           
  4871                           ;LCD4b.c: 45:     Lcd_Cmd(1);
  4872     0F15  3001               	movlw	1
  4873     0F16  120A  158A  2729  120A  158A  	fcall	_Lcd_Cmd
  4874     0F1B                     l229:
  4875     0F1B  0008               	return
  4876     0F1C                     __end_of_Lcd_Clear:
  4877                           
  4878                           	psect	text30
  4879     0F29                     __ptext30:	
  4880 ;; *************** function _Lcd_Cmd *****************
  4881 ;; Defined at:
  4882 ;;		line 35 in file "LCD4b.c"
  4883 ;; Parameters:    Size  Location     Type
  4884 ;;  a               1    wreg     unsigned char 
  4885 ;; Auto vars:     Size  Location     Type
  4886 ;;  a               1    5[COMMON] unsigned char 
  4887 ;; Return value:  Size  Location     Type
  4888 ;;                  1    wreg      void 
  4889 ;; Registers used:
  4890 ;;		wreg, status,2, status,0, pclath, cstack
  4891 ;; Tracked objects:
  4892 ;;		On entry : 0/0
  4893 ;;		On exit  : 0/0
  4894 ;;		Unchanged: 0/0
  4895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4896 ;;      Params:         0       0       0       0       0
  4897 ;;      Locals:         1       0       0       0       0
  4898 ;;      Temps:          2       0       0       0       0
  4899 ;;      Totals:         3       0       0       0       0
  4900 ;;Total ram usage:        3 bytes
  4901 ;; Hardware stack levels used: 1
  4902 ;; Hardware stack levels required when called: 2
  4903 ;; This function calls:
  4904 ;;		_Lcd_Port
  4905 ;; This function is called by:
  4906 ;;		_Lcd_Clear
  4907 ;;		_Lcd_Set_Cursor
  4908 ;;		_Lcd_Init
  4909 ;;		_Lcd_Shift_Right
  4910 ;;		_Lcd_Shift_Left
  4911 ;; This function uses a non-reentrant model
  4912 ;;
  4913                           
  4914     0F29                     _Lcd_Cmd:	
  4915                           ;psect for function _Lcd_Cmd
  4916                           
  4917                           
  4918                           ;incstack = 0
  4919                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4920                           ;Lcd_Cmd@a stored from wreg
  4921     0F29  00F5               	movwf	Lcd_Cmd@a
  4922     0F2A                     l1924:
  4923                           
  4924                           ;LCD4b.c: 36:     PORTDbits.RD2 = 0;
  4925     0F2A  1283               	bcf	3,5	;RP0=0, select bank0
  4926     0F2B  1303               	bcf	3,6	;RP1=0, select bank0
  4927     0F2C  1108               	bcf	8,2	;volatile
  4928     0F2D                     l1926:
  4929                           
  4930                           ;LCD4b.c: 37:     Lcd_Port(a);
  4931     0F2D  0875               	movf	Lcd_Cmd@a,w
  4932     0F2E  120A  158A  2743  120A  158A  	fcall	_Lcd_Port
  4933     0F33                     l1928:
  4934                           
  4935                           ;LCD4b.c: 38:     RD3 = 1;
  4936     0F33  1283               	bcf	3,5	;RP0=0, select bank0
  4937     0F34  1303               	bcf	3,6	;RP1=0, select bank0
  4938     0F35  1588               	bsf	8,3	;volatile
  4939     0F36                     l1930:
  4940                           
  4941                           ;LCD4b.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4942     0F36  300B               	movlw	11
  4943     0F37  00F4               	movwf	??_Lcd_Cmd+1
  4944     0F38  3062               	movlw	98
  4945     0F39  00F3               	movwf	??_Lcd_Cmd
  4946     0F3A                     u1877:
  4947     0F3A  0BF3               	decfsz	??_Lcd_Cmd,f
  4948     0F3B  2F3A               	goto	u1877
  4949     0F3C  0BF4               	decfsz	??_Lcd_Cmd+1,f
  4950     0F3D  2F3A               	goto	u1877
  4951     0F3E  0000               	nop
  4952     0F3F                     l1932:
  4953                           
  4954                           ;LCD4b.c: 40:     RD3 = 0;
  4955     0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  4956     0F40  1303               	bcf	3,6	;RP1=0, select bank0
  4957     0F41  1188               	bcf	8,3	;volatile
  4958     0F42                     l226:
  4959     0F42  0008               	return
  4960     0F43                     __end_of_Lcd_Cmd:
  4961                           
  4962                           	psect	text31
  4963     0F43                     __ptext31:	
  4964 ;; *************** function _Lcd_Port *****************
  4965 ;; Defined at:
  4966 ;;		line 13 in file "LCD4b.c"
  4967 ;; Parameters:    Size  Location     Type
  4968 ;;  a               1    wreg     unsigned char 
  4969 ;; Auto vars:     Size  Location     Type
  4970 ;;  a               1    2[COMMON] unsigned char 
  4971 ;; Return value:  Size  Location     Type
  4972 ;;                  1    wreg      void 
  4973 ;; Registers used:
  4974 ;;		wreg
  4975 ;; Tracked objects:
  4976 ;;		On entry : 0/0
  4977 ;;		On exit  : 0/0
  4978 ;;		Unchanged: 0/0
  4979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4980 ;;      Params:         0       0       0       0       0
  4981 ;;      Locals:         1       0       0       0       0
  4982 ;;      Temps:          0       0       0       0       0
  4983 ;;      Totals:         1       0       0       0       0
  4984 ;;Total ram usage:        1 bytes
  4985 ;; Hardware stack levels used: 1
  4986 ;; Hardware stack levels required when called: 1
  4987 ;; This function calls:
  4988 ;;		Nothing
  4989 ;; This function is called by:
  4990 ;;		_Lcd_Cmd
  4991 ;;		_Lcd_Init
  4992 ;;		_Lcd_Write_Char
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996     0F43                     _Lcd_Port:	
  4997                           ;psect for function _Lcd_Port
  4998                           
  4999                           
  5000                           ;incstack = 0
  5001                           ; Regs used in _Lcd_Port: [wreg]
  5002                           ;Lcd_Port@a stored from wreg
  5003     0F43  00F2               	movwf	Lcd_Port@a
  5004     0F44                     l1914:
  5005                           
  5006                           ;LCD4b.c: 14:     if (a & 1)
  5007     0F44  1C72               	btfss	Lcd_Port@a,0
  5008     0F45  2F47               	goto	u1291
  5009     0F46  2F48               	goto	u1290
  5010     0F47                     u1291:
  5011     0F47  2F4C               	goto	l215
  5012     0F48                     u1290:
  5013     0F48                     l1916:
  5014                           
  5015                           ;LCD4b.c: 15:         RD4 = 1;
  5016     0F48  1283               	bcf	3,5	;RP0=0, select bank0
  5017     0F49  1303               	bcf	3,6	;RP1=0, select bank0
  5018     0F4A  1608               	bsf	8,4	;volatile
  5019     0F4B  2F4F               	goto	l216
  5020     0F4C                     l215:	
  5021                           ;LCD4b.c: 16:     else
  5022                           
  5023                           
  5024                           ;LCD4b.c: 17:         RD4 = 0;
  5025     0F4C  1283               	bcf	3,5	;RP0=0, select bank0
  5026     0F4D  1303               	bcf	3,6	;RP1=0, select bank0
  5027     0F4E  1208               	bcf	8,4	;volatile
  5028     0F4F                     l216:
  5029                           
  5030                           ;LCD4b.c: 19:     if (a & 2)
  5031     0F4F  1CF2               	btfss	Lcd_Port@a,1
  5032     0F50  2F52               	goto	u1301
  5033     0F51  2F53               	goto	u1300
  5034     0F52                     u1301:
  5035     0F52  2F55               	goto	l217
  5036     0F53                     u1300:
  5037     0F53                     l1918:
  5038                           
  5039                           ;LCD4b.c: 20:         RD5 = 1;
  5040     0F53  1688               	bsf	8,5	;volatile
  5041     0F54  2F56               	goto	l218
  5042     0F55                     l217:	
  5043                           ;LCD4b.c: 21:     else
  5044                           
  5045                           
  5046                           ;LCD4b.c: 22:         RD5 = 0;
  5047     0F55  1288               	bcf	8,5	;volatile
  5048     0F56                     l218:
  5049                           
  5050                           ;LCD4b.c: 24:     if (a & 4)
  5051     0F56  1D72               	btfss	Lcd_Port@a,2
  5052     0F57  2F59               	goto	u1311
  5053     0F58  2F5A               	goto	u1310
  5054     0F59                     u1311:
  5055     0F59  2F5C               	goto	l219
  5056     0F5A                     u1310:
  5057     0F5A                     l1920:
  5058                           
  5059                           ;LCD4b.c: 25:         RD6 = 1;
  5060     0F5A  1708               	bsf	8,6	;volatile
  5061     0F5B  2F5D               	goto	l220
  5062     0F5C                     l219:	
  5063                           ;LCD4b.c: 26:     else
  5064                           
  5065                           
  5066                           ;LCD4b.c: 27:         RD6 = 0;
  5067     0F5C  1308               	bcf	8,6	;volatile
  5068     0F5D                     l220:
  5069                           
  5070                           ;LCD4b.c: 29:     if (a & 8)
  5071     0F5D  1DF2               	btfss	Lcd_Port@a,3
  5072     0F5E  2F60               	goto	u1321
  5073     0F5F  2F61               	goto	u1320
  5074     0F60                     u1321:
  5075     0F60  2F63               	goto	l221
  5076     0F61                     u1320:
  5077     0F61                     l1922:
  5078                           
  5079                           ;LCD4b.c: 30:         RD7 = 1;
  5080     0F61  1788               	bsf	8,7	;volatile
  5081     0F62  2F64               	goto	l223
  5082     0F63                     l221:	
  5083                           ;LCD4b.c: 31:     else
  5084                           
  5085                           
  5086                           ;LCD4b.c: 32:         RD7 = 0;
  5087     0F63  1388               	bcf	8,7	;volatile
  5088     0F64                     l223:
  5089     0F64  0008               	return
  5090     0F65                     __end_of_Lcd_Port:
  5091                           
  5092                           	psect	text32
  5093     0ED0                     __ptext32:	
  5094 ;; *************** function _isr *****************
  5095 ;; Defined at:
  5096 ;;		line 78 in file "master.c"
  5097 ;; Parameters:    Size  Location     Type
  5098 ;;		None
  5099 ;; Auto vars:     Size  Location     Type
  5100 ;;		None
  5101 ;; Return value:  Size  Location     Type
  5102 ;;                  1    wreg      void 
  5103 ;; Registers used:
  5104 ;;		None
  5105 ;; Tracked objects:
  5106 ;;		On entry : 0/0
  5107 ;;		On exit  : 0/0
  5108 ;;		Unchanged: 0/0
  5109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5110 ;;      Params:         0       0       0       0       0
  5111 ;;      Locals:         0       0       0       0       0
  5112 ;;      Temps:          2       0       0       0       0
  5113 ;;      Totals:         2       0       0       0       0
  5114 ;;Total ram usage:        2 bytes
  5115 ;; Hardware stack levels used: 1
  5116 ;; This function calls:
  5117 ;;		Nothing
  5118 ;; This function is called by:
  5119 ;;		Interrupt level 1
  5120 ;; This function uses a non-reentrant model
  5121 ;;
  5122                           
  5123     0ED0                     _isr:	
  5124                           ;psect for function _isr
  5125                           
  5126     0ED0                     i1l89:
  5127     0ED0  0871               	movf	??_isr+1,w
  5128     0ED1  008A               	movwf	10
  5129     0ED2  0E70               	swapf	??_isr,w
  5130     0ED3  0083               	movwf	3
  5131     0ED4  0EFE               	swapf	btemp,f
  5132     0ED5  0E7E               	swapf	btemp,w
  5133     0ED6  0009               	retfie
  5134     0ED7                     __end_of_isr:
  5135     007E                     btemp	set	126	;btemp
  5136     007E                     wtemp0	set	126
  5137                           
  5138                           	psect	intentry
  5139     0004                     __pintentry:	
  5140                           ;incstack = 0
  5141                           ; Regs used in _isr: []
  5142                           
  5143     0004                     interrupt_function:
  5144     007E                     saved_w	set	btemp
  5145     0004  00FE               	movwf	btemp
  5146     0005  0E03               	swapf	3,w
  5147     0006  00F0               	movwf	??_isr
  5148     0007  080A               	movf	10,w
  5149     0008  00F1               	movwf	??_isr+1
  5150     0009  120A  158A  2ED0   	ljmp	_isr
  5151                           
  5152                           	psect	config
  5153                           
  5154                           ;Config register CONFIG1 @ 0x2007
  5155                           ;	Oscillator Selection bits
  5156                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5157                           ;	Watchdog Timer Enable bit
  5158                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5159                           ;	Power-up Timer Enable bit
  5160                           ;	PWRTE = OFF, PWRT disabled
  5161                           ;	RE3/MCLR pin function select bit
  5162                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5163                           ;	Code Protection bit
  5164                           ;	CP = OFF, Program memory code protection is disabled
  5165                           ;	Data Code Protection bit
  5166                           ;	CPD = OFF, Data memory code protection is disabled
  5167                           ;	Brown Out Reset Selection bits
  5168                           ;	BOREN = OFF, BOR disabled
  5169                           ;	Internal External Switchover bit
  5170                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5171                           ;	Fail-Safe Clock Monitor Enabled bit
  5172                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5173                           ;	Low Voltage Programming Enable bit
  5174                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5175                           ;	In-Circuit Debugger Mode bit
  5176                           ;	DEBUG = 0x1, unprogrammed default
  5177     2007                     	org	8199
  5178     2007  20D4               	dw	8404
  5179                           
  5180                           ;Config register CONFIG2 @ 0x2008
  5181                           ;	Brown-out Reset Selection bit
  5182                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5183                           ;	Flash Program Memory Self Write Enable bits
  5184                           ;	WRT = OFF, Write protection off
  5185     2008                     	org	8200
  5186     2008  3FFF               	dw	16383

Data Sizes:
    Strings     24
    Constant    0
    Data        1
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     42      64
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 4
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[3]), STR_4(CODE[4]), 
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), S_ired(BANK0[2]), 
		 -> S_gas(BANK0[4]), S_hum(BANK0[3]), S_temp(BANK0[4]), 

    num_to_string@dig8	PTR unsigned char  size(1) Largest target is 4
		 -> S_ired(BANK0[2]), S_gas(BANK0[4]), S_hum(BANK0[3]), S_temp(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_requestHum
    _main->_requestIR
    _writeMotors->_I2C_Master_Write
    _Lcd_Init->_Lcd_Cmd
    _I2C_Master_Init->___lldiv
    _sendDataUART->_UART_write_char
    _requestIR->_I2C_Master_Read
    _requestHum->_I2C_Master_Read
    _map->___lmul
    ___aldiv->___lmul
    _LDC_output->_Lcd_Write_String
    _num_to_string->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_setup
    _setup->_UART_TX_config
    _UART_TX_config->___aldiv
    _I2C_Master_Init->___lldiv
    _requestTemp->_map
    _requestGas->_map
    _map->___aldiv
    ___aldiv->___lmul
    _LDC_output->_num_to_string

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   19652
                                             39 BANK0      3     3      0
                         _LDC_output
                         _requestGas
                         _requestHum
                          _requestIR
                        _requestTemp
                       _sendDataUART
                              _setup
                        _writeMotors
 ---------------------------------------------------------------------------------
 (1) _writeMotors                                          2     2      0    1086
                                              4 COMMON     2     2      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _setup                                                2     2      0    2386
                                             37 BANK0      2     2      0
                    _I2C_Master_Init
                           _Lcd_Init
                     _UART_TX_config
 ---------------------------------------------------------------------------------
 (2) _UART_TX_config                                      17    13      4    1565
                                             20 BANK0     17    13      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     279
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _sendDataUART                                         3     3      0      22
                                              3 COMMON     3     3      0
                    _UART_write_char
 ---------------------------------------------------------------------------------
 (2) _UART_write_char                                      1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _requestTemp                                          2     2      0    4033
                                             36 BANK0      2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                                _map
 ---------------------------------------------------------------------------------
 (1) _requestIR                                            2     2      0    1435
                                              8 COMMON     2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _requestHum                                           2     2      0    1435
                                              8 COMMON     2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _requestGas                                           2     2      0    4033
                                             36 BANK0      2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                                _map
 ---------------------------------------------------------------------------------
 (2) _map                                                 16     9      7    2598
                                             20 BANK0     16     9      7
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     316
                                              2 COMMON     8     0      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8    1345
                                              5 BANK0     15     7      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1086
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     349
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LDC_output                                           2     2      0    5222
                                             16 BANK0      2     2      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                      _num_to_string
 ---------------------------------------------------------------------------------
 (2) _num_to_string                                       18    14      4    2788
                                              0 BANK0     16    12      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     767
                                              2 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2    1374
                                              7 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     254
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1     905
                                              6 COMMON     2     1      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     155
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LDC_output
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _num_to_string
       ___lwdiv
       ___lwmod
   _requestGas
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _map
       ___aldiv
         ___lmul (ARG)
       ___lmul
   _requestHum
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
   _requestIR
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
   _requestTemp
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _map
   _sendDataUART
     _UART_write_char
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Init
       _Lcd_Cmd
       _Lcd_Port
     _UART_TX_config
       ___aldiv
   _writeMotors
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2A      40       5       80.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4C      12        0.0%
ABS                  0      0      4C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Aug 23 19:26:35 2023

                               pc 0002                                fsr 0004                               l101 079D  
                             l110 0396                               l104 03F9                               l113 0644  
                             l121 04D0                               l107 068D                               l220 0F5D  
                             l140 01AA                               l132 0563                               l124 04D7  
                             l221 0F63                               l126 0511                               l118 04C9  
                             l223 0F64                               l215 0F4C                               l143 045A  
                             l216 0F4F                               l217 0F55                               l241 0FC7  
                             l129 00F1                               l218 0F56                               l226 0F42  
                             l219 0F5C                               l235 05FB                               l404 06D5  
                             l172 0FFF                               l229 0F1B                               l181 0EF0  
                             l190 0F03                               l238 04B7                               l247 071B  
                             l175 0F1C                               l184 0EE7                               l193 0F8A  
                             l178 0F28                               l194 0F8D                               l426 0330  
                             l195 0F92                               l187 0EF9                               l292 0F05  
                             l294 0F0B                               l455 01BF                               l295 0F0E  
                             l465 0247                               l289 02C8                               l662 075F  
                             l672 07D7                               _GIE 005F                               _RD3 0043  
                             _RD4 0044                               _RD5 0045                               _RD6 0046  
                             _RD7 0047                               u700 0F28                               u701 0F27  
                             _SCS 0478                               u690 0F22                               u691 0F21  
                             u940 0724                               u941 0723                               u960 0736  
                             u961 0735                               u955 0728                               u980 0747  
                             u981 0746                               u975 0737                               u985 0743  
                             u995 074F                               _map 03FA                               _isr 0ED0  
                             fsr0 0004                               indf 0000                       ?_LDC_output 0070  
                            l2000 01C3                              l2010 01E5                              l2002 01CE  
                            l2100 06D6                              l2020 0211                              l2012 01EE  
                            l2004 01D2                              l2102 06DB                              l2030 0234  
                            l2022 021F                              l2014 01F2                              l2006 01DA  
                            l2110 076A                              l2104 06F7                              l2032 023F  
                            l2024 0220                              l2016 01F6                              l2008 01E2  
                            l2040 046A                              l2120 078E                              l2112 076E  
                            l2200 058D                              l2106 06FF                              l2026 0229  
                            l2018 01FF                              l2130 03C6                              l2122 0397  
                            l2050 0FCF                              l2042 0479                              l2114 076F  
                            l2202 0592                              l2028 022F                              l2140 0348  
                            l2132 03D2                              l2124 03AE                              l2052 0FFC  
                            l2044 047F                              l2036 045B                              l2060 02A2  
                            l2116 0774                              l2108 0760                              l2204 0597  
                            l2150 0371                              l2142 0352                              l2134 03D7  
                            l2126 03B8                              l2054 0FFD                              l2046 0FC8  
                            l2038 0461                              l2070 02C4                              l2062 02A6  
                            l2118 077F                              l2206 05A6                              l2080 05B3  
                            l2160 004D                              l1424 0F1C                              l2152 037B  
                            l2144 0357                              l2136 03E1                              l2128 03BD  
                            l2056 0FFE                              l2048 0FCC                              l2072 02C5  
                            l2064 02BD                              l2082 05B8                              l2090 05D7  
                            l2170 0091                              l2162 005C                              l2154 0024  
                            l1426 0F22                              l2074 03FD                              l2146 0360  
                            l2138 0331                              l2066 02BE                              l2058 0248  
                            l2092 05DD                              l2084 05C5                              l1540 071C  
                            l2180 00DF                              l2172 00B4                              l2164 0076  
                            l2156 0029                              l2148 036C                              l2068 02C1  
                            l2252 04DE                              l2078 0F0F                              l2094 05EA  
                            l2086 05C8                              l1550 0732                              l1542 071E  
                            l2182 00E8                              l2174 00BC                              l2166 007F  
                            l2158 003B                              l1630 0EFA                              l2190 0576  
                            l2096 05ED                              l2088 05CE                              l1560 0755  
                            l1552 0736                              l1544 0724                              l2176 00C5  
                            l2168 0088                              l1640 0F6A                              l1632 0EFF  
                            l2192 0579                              l2184 0564                              l2098 05F3  
                            l1554 0747                              l1546 0727                              l1562 075B  
                            l1570 07A7                              l2178 00CE                              l1650 0F8E  
                            l1642 0F72                              l1634 0EDF                              l1626 0EE8  
                            l1730 066A                              l1706 0F05                              l2194 057E  
                            l2186 0569                              l1556 074D                              l1548 072E  
                            l1580 07C6                              l1572 07AE                              l1644 0F7B  
                            l1636 0EE4                              l1628 0EED                              l1732 0673  
                            l1724 0645                              l1708 0F0C                              l2196 0583  
                            l2188 0571                              l1558 074E                              l1582 07CD  
                            l1574 07B2                              l1566 079E                              l1670 0181  
                            l1646 0F80                              l1638 0F65                              l1654 0EF1  
                            l1734 067F                              l1726 065C                              l2198 0588  
                            l1920 0F5A                              l1576 07B6                              l1568 07A4  
                            l1584 07D3                              l1672 0187                              l1664 00F2  
                            l1648 0F86                              l1656 0EF6                              l1736 0684  
                            l1728 0665                              l1922 0F61                              l1914 0F44  
                            l1930 0F36                              l1578 07C0                              l1674 0193  
                            l1666 0173                              l1770 05FC                              l1834 0512  
                            l1916 0F48                              l1932 0F3F                              l1924 0F2A  
                            l1940 0FAB                              l1676 0199                              l1668 017A  
                            l1780 0636                              l1772 0613                              l1836 0556  
                            l1918 0F53                              l1926 0F2D                              l1950 0FBF  
                            l1942 0FAE                              l1934 0F94                              l1782 063B  
                            l1774 061C                              l1790 04D2                              l1928 0F33  
                            l1952 0FC4                              l1944 0FB3                              l1936 0F9A  
                            l1960 06B3                              l1776 0621                              l1784 04B8  
                            l1946 0FB6                              l1938 0F9D                              l1962 06BC  
                            l1954 068E                              l1778 062A                              l1970 02DB  
                            l1794 04D9                              l1786 04BE                              l1948 0FBC  
                            l1964 06CD                              l1956 0698                              l1980 02F8  
                            l1972 02DE                              l1796 04E9                              l1788 04CB  
                            l1958 069C                              l1982 030A                              l1974 02E7  
                            l1990 0328                              l1798 0508                              ?_map 0034  
                            l1984 0318                              l1976 02EB                              l1968 02C9  
                            l1994 01AB                              l1986 0319                              l1978 02EF  
                            l1996 01AE                              l1988 0322                              l1998 01B2  
                            ?_isr 0070                              STR_1 07FA                              STR_2 07FD  
                            STR_3 07F7                              STR_4 07EC                              STR_5 07F4  
                            STR_6 07F0                              STR_7 07E8                              u1000 075B  
                            _CREN 00C4                              u1001 075A                              u1010 07A4  
                            u1011 07A3                              u1100 0F86                              u1101 0F85  
                            u1030 07B6                              u1031 07B5                              u1040 07C0  
                            u1120 017A                              u1041 07BF                              u1025 07A8  
                            u1121 0179                              u1130 0187                              u1131 0186  
                            u1300 0F53                              u1060 07D3                              u1140 0199  
                            u1220 0F0B                              u1301 0F52                              u1061 07D2  
                            u1045 07BC                              u1141 0198                              u1221 0F0A  
                            u1310 0F5A                              u1230 04BE                              u1311 0F59  
                            u1055 07C7                              u1231 04BD                              u1320 0F61  
                            u1240 04C9                              u1321 0F60                              u1241 04C8  
                            u1410 02EF                              u1411 02EE                              u1500 01F6  
                            u1340 069C                              u1501 01F5                              u1341 069B  
                            u1405 02E0                              u1430 030A                              u1335 0FA0  
                            u1351 06A5                              u1431 0309                              u1600 05B8  
                            u1520 0211                              u1352 06AC                              u1601 05B7  
                            u1521 0210                              u1353 06B3                              u1425 02F1  
                            u1290 0F48                              u1450 0328                              u1291 0F47  
                            u1515 01F8                              u1451 0327                              u1435 0306  
                            u1620 05DD                              u1540 022F                              u1460 01B2  
                            u1380 06CD                              u1621 05DC                              u1541 022E  
                            u1525 020D                              u1461 01B1                              u1381 06CC  
                            u1365 06B5                              u1445 031A                              u1550 0234  
                            u1470 01C3                              u1390 02DB                              u1615 05BE  
                            u1551 0233                              u1535 0221                              u1471 01C2  
                            u1375 06BD                              u1391 02DA                              u1640 06E5  
                            u1480 01E2                              u1560 0FDF                              u1481 01E1  
                            u1650 0709                              u1570 028F                              u1635 05E3  
                            u1571 0290                              u1707 059F                              u1660 071B  
                            u1580 02B7                              u1572 0295                              u1661 071A  
                            u1565 0FDA                              u1573 0296                              u1717 050C  
                            u1670 0571                              u1495 01E7                              u1591 0427  
                            u1807 063F                              u1727 077A                              u1671 0570  
                            u1592 0428                              u1593 042D                              u1817 0660  
                            u1737 0465                              u1585 02B2                              u1594 042E  
                            u1595 0433                              u1827 0688                              u1747 0474  
                            u1596 0434                              u1837 034E                              u1757 0483  
                            u1847 0377                              u1767 055C                              u1857 0FB0  
                            u1777 03B4                              u1867 0FC1                              u1787 03DD  
                            _PEIE 005E                              u1877 0F3A                              u1797 0617  
                            _RCIE 0465                              _RCIF 0065                              i1l89 0ED0  
                            _SPEN 00C7                              _TXIE 0464                              _TXEN 04C5  
                            _TXIF 0064                              _SYNC 04C4                 ?_Lcd_Write_String 0077  
__end_of_I2C_Master_RepeatedStart 0EE8                              _main 0564                              _prev 004C  
                            btemp 007E                   ??_num_to_string 0079                              start 000C  
              ??_Lcd_Write_String 0020                   __end_of_Lcd_Cmd 0F43                  UART_write_char@c 0072  
                           ??_map 003B                             ??_isr 0070                  num_to_string@len 0023  
                num_to_string@num 0020                  ?_I2C_Master_Init 0026                  ?_I2C_Master_Read 0072  
                ?_I2C_Master_Wait 0070                  ?_I2C_Master_Stop 0070                   __end_of___aldiv 0248  
                           ?_main 0070                             _ANSEL 0188                   __end_of___lldiv 0331  
                 __end_of___lwdiv 0760                   __end_of___lwmod 07D8                             _RCREG 001A  
                     _writeMotors 04B8                             _SPBRG 0099                             _PORTD 0008  
                           _TRISD 0088                             _SSPIE 0463                             _SSPIF 0063  
                           _TXREG 0019               ___lmul@multiplicand 0076                             _S_gas 0052  
                           _S_hum 005A                             _n_gas 004F                             _n_hum 0050  
                           _tempC 007B                             _setup 0760                             pclath 000A  
                           status 0003                             wtemp0 007E                  __end_of_Lcd_Init 04B8  
                __end_of_Lcd_Port 0F65                   __initialization 000F                      __end_of_main 05B0  
                          ??_main 0047                 num_to_string@dig8 0022                 num_to_string@div1 0028  
               num_to_string@div2 002A                 num_to_string@div3 0024                 ?_I2C_Master_Start 0070  
               ?_I2C_Master_Write 0072                ??_I2C_Master_Start 0072                ??_I2C_Master_Write 0074  
                          ?_setup 0070                            _ANSELH 0189                         ??_Lcd_Cmd 0073  
                          _SPBRGH 009A                            _SSPADD 0093                            _TRISC3 043B  
                          _TRISC4 043C                            _SSPCON 0014                            _SSPBUF 0013  
                          _S_ired 005D                            _S_temp 0056          _I2C_Master_RepeatedStart 0EDF  
                          ___lmul 068E                         ??___aldiv 002D                            _gasPPM 004A  
                       ??___lldiv 0020                         ??___lwdiv 0076                         ??___lwmod 0076  
                          _n_ired 004E                            _n_temp 0051                      ?_requestTemp 0070  
                          map@val 0043                   _UART_write_char 0F04                            saved_w 007E  
                 Lcd_Set_Cursor@a 0020                   Lcd_Set_Cursor@b 0076                   Lcd_Set_Cursor@y 0022  
                 Lcd_Set_Cursor@z 0021              num_to_string@decenas 002C           __end_of__initialization 0020  
               __end_of_Lcd_Clear 0F1C                    __pcstackCOMMON 0070                      __pidataBANK0 0003  
                   ?_sendDataUART 0070                     __end_of_setup 079E                    _Lcd_Set_Cursor 05B0  
                    ??_LDC_output 0030                         ?_Lcd_Init 0070                         ?_Lcd_Port 0070  
                         ??_setup 0045                        __pbssBANK0 004A                  UART_TX_config@BR 0041  
                      __pmaintext 0564                           ?___lmul 0072                    ??_sendDataUART 0073  
                      __pintentry 0004                __end_of_LDC_output 00F2           __end_of_UART_write_char 0F0F  
                  ___lmul@product 0021            __end_of_Lcd_Set_Cursor 05FC                      ?_writeMotors 0070  
                      ??_Lcd_Init 0076                        ??_Lcd_Port 0072                           _SSPCON2 0091  
                         _SSPSTAT 0094                        __stringtab 07D8                    _Lcd_Write_Char 0F93  
                         _Lcd_Cmd 0F29                    _UART_TX_config 0248             __end_of_num_to_string 01AB  
                         ___aldiv 01AB                           ___lldiv 02C9                           ___lwdiv 071C  
                         ___lwmod 079E                   ?_Lcd_Set_Cursor 0076                           __ptext1 04B8  
                         __ptext2 0760                           __ptext3 0248                           __ptext4 045B  
                         __ptext5 0FC8                           __ptext6 02C9                           __ptext7 0512  
                         __ptext8 0F04                           __ptext9 0397                           _counter 004D  
                ___aldiv@dividend 0029                           map@max1 0035                           map@max2 0037  
                         map@min1 0034                           map@min2 0036                           clrloop0 0ED8  
          __end_of_Lcd_Write_Char 0FC8              end_of_initialization 0020        ??_I2C_Master_RepeatedStart 0072  
          __end_of_UART_TX_config 02C9                 __end_of_requestIR 0645                   ___lldiv@divisor 0072  
                 ___lldiv@counter 0025                  ___aldiv@quotient 0030                  I2C_Master_Init@c 0026  
                I2C_Master_Read@a 0072                        _requestGas 0331                         Lcd_Port@a 0072  
                      _requestHum 0645                  ?_UART_write_char 0070                         _PORTDbits 0008  
           num_to_string@centenas 0026                         _TRISCbits 0087              __end_of_sendDataUART 0564  
                 ?_Lcd_Write_Char 0070                 Lcd_Write_String@a 0077                 Lcd_Write_String@i 0023  
                 ?_UART_TX_config 0034                         _Lcd_Clear 0F0F             num_to_string@unidades 002E  
                  __end_of___lmul 06D6                  _Lcd_Write_String 06D6               start_initialization 000F  
                     __end_of_map 045B                       __end_of_isr 0ED7                 ??_I2C_Master_Init 002A  
               ??_I2C_Master_Read 0074                 ??_I2C_Master_Wait 0072                 ??_I2C_Master_Stop 0072  
                      ?_Lcd_Clear 0070                          ??___lmul 0020                       ?_requestGas 0070  
                     ?_requestHum 0070                       __pdataBANK0 005F                   Lcd_Write_Char@a 0076  
                 Lcd_Write_Char@y 0075                       __pbssCOMMON 007A                         ___latbits 0002  
                   __pcstackBANK0 0020               _UART_TX_config$1023 003D                          ?_Lcd_Cmd 0070  
                _I2C_Master_Start 0EE8                  _I2C_Master_Write 0EFA                  ___lwdiv@dividend 0074  
                ??_Lcd_Set_Cursor 0077                          ?___aldiv 0025                          ?___lldiv 0072  
                        ?___lwdiv 0072                          ?___lwmod 0072                         __pstrings 07D8  
                ___lwdiv@quotient 0076                   ___aldiv@divisor 0025                 interrupt_function 0004  
                 ___aldiv@counter 002E                         clear_ram0 0ED7                          Lcd_Cmd@a 0075  
                     ??_Lcd_Clear 0076                         _requestIR 05FC                      _sendDataUART 0512  
                   ??_requestTemp 0044                       __stringbase 07E7                  ??_Lcd_Write_Char 0073  
                        _Lcd_Init 045B                          _Lcd_Port 0F43               I2C_Master_Read@temp 0076  
                ??_UART_TX_config 0038                 ___lmul@multiplier 0072          __end_of_Lcd_Write_String 071C  
                      ?_requestIR 0070         ?_I2C_Master_RepeatedStart 0070                __end_of__stringtab 07E8  
                 _I2C_Master_Init 0FC8                   _I2C_Master_Read 0F65                   _I2C_Master_Wait 0F1C  
                 _I2C_Master_Stop 0EF1               __end_of_requestTemp 03FA                   ___lwdiv@divisor 0072  
                 ___lwdiv@counter 0078                          __ptext10 05FC                          __ptext11 0645  
                        __ptext20 0F65                          __ptext12 0331                          __ptext21 0F1C  
                        __ptext13 03FA                          __ptext30 0F29                          __ptext22 0024  
                        __ptext14 068E                          __ptext31 0F43                          __ptext23 00F2  
                        __ptext15 01AB                          __ptext32 0ED0                          __ptext24 079E  
                        __ptext16 0EFA                          __ptext25 071C                          __ptext17 0EF1  
                        __ptext26 06D6                          __ptext18 0EE8                          __ptext27 0F93  
                        __ptext19 0EDF                          __ptext28 05B0                          __ptext29 0F0F  
                        _motorCon 007A                     _num_to_string 00F2                          _servoPos 005F  
                    ??_requestGas 0044                      ??_requestHum 0078            UART_TX_config@baudrate 0034  
                   ??_writeMotors 0074          __end_of_I2C_Master_Start 0EF1          __end_of_I2C_Master_Write 0F04  
                      _LDC_output 0024                Lcd_Write_Char@temp 0074                          intlevel1 0000  
              __end_of_requestGas 0397                __end_of_requestHum 068E                  ___lwmod@dividend 0074  
                ___lldiv@dividend 0076                         stringcode 07E2                        _OSCCONbits 008F  
                  ?_num_to_string 0020                       ??_requestIR 0078           __end_of_I2C_Master_Init 1000  
         __end_of_I2C_Master_Read 0F93           __end_of_I2C_Master_Wait 0F29           __end_of_I2C_Master_Stop 0EFA  
              Lcd_Set_Cursor@temp 0023                       _requestTemp 0397                  ___lldiv@quotient 0021  
               I2C_Master_Write@d 0072                   ___lwmod@divisor 0072                   ___lwmod@counter 0076  
                        stringdir 07E2                          stringtab 07D8                      ___aldiv@sign 002F  
                     _SSPCON2bits 0091               __end_of_writeMotors 0512                 ??_UART_write_char 0072  
