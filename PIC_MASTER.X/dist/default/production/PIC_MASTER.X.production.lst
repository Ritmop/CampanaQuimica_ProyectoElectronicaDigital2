

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Aug 20 22:50:28 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39     0000                     
    40                           ; Generated 22/03/2023 GMT
    41                           ; 
    42                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F887 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74     0000                     	;# 
    75     0001                     	;# 
    76     0002                     	;# 
    77     0003                     	;# 
    78     0004                     	;# 
    79     0005                     	;# 
    80     0006                     	;# 
    81     0007                     	;# 
    82     0008                     	;# 
    83     0009                     	;# 
    84     000A                     	;# 
    85     000B                     	;# 
    86     000C                     	;# 
    87     000D                     	;# 
    88     000E                     	;# 
    89     000E                     	;# 
    90     000F                     	;# 
    91     0010                     	;# 
    92     0011                     	;# 
    93     0012                     	;# 
    94     0013                     	;# 
    95     0014                     	;# 
    96     0015                     	;# 
    97     0015                     	;# 
    98     0016                     	;# 
    99     0017                     	;# 
   100     0018                     	;# 
   101     0019                     	;# 
   102     001A                     	;# 
   103     001B                     	;# 
   104     001B                     	;# 
   105     001C                     	;# 
   106     001D                     	;# 
   107     001E                     	;# 
   108     001F                     	;# 
   109     0081                     	;# 
   110     0085                     	;# 
   111     0086                     	;# 
   112     0087                     	;# 
   113     0088                     	;# 
   114     0089                     	;# 
   115     008C                     	;# 
   116     008D                     	;# 
   117     008E                     	;# 
   118     008F                     	;# 
   119     0090                     	;# 
   120     0091                     	;# 
   121     0092                     	;# 
   122     0093                     	;# 
   123     0093                     	;# 
   124     0093                     	;# 
   125     0094                     	;# 
   126     0095                     	;# 
   127     0096                     	;# 
   128     0097                     	;# 
   129     0098                     	;# 
   130     0099                     	;# 
   131     009A                     	;# 
   132     009B                     	;# 
   133     009C                     	;# 
   134     009D                     	;# 
   135     009E                     	;# 
   136     009F                     	;# 
   137     0105                     	;# 
   138     0107                     	;# 
   139     0108                     	;# 
   140     0109                     	;# 
   141     010C                     	;# 
   142     010C                     	;# 
   143     010D                     	;# 
   144     010E                     	;# 
   145     010F                     	;# 
   146     0185                     	;# 
   147     0187                     	;# 
   148     0188                     	;# 
   149     0189                     	;# 
   150     018C                     	;# 
   151     018D                     	;# 
   152     0000                     	;# 
   153     0001                     	;# 
   154     0002                     	;# 
   155     0003                     	;# 
   156     0004                     	;# 
   157     0005                     	;# 
   158     0006                     	;# 
   159     0007                     	;# 
   160     0008                     	;# 
   161     0009                     	;# 
   162     000A                     	;# 
   163     000B                     	;# 
   164     000C                     	;# 
   165     000D                     	;# 
   166     000E                     	;# 
   167     000E                     	;# 
   168     000F                     	;# 
   169     0010                     	;# 
   170     0011                     	;# 
   171     0012                     	;# 
   172     0013                     	;# 
   173     0014                     	;# 
   174     0015                     	;# 
   175     0015                     	;# 
   176     0016                     	;# 
   177     0017                     	;# 
   178     0018                     	;# 
   179     0019                     	;# 
   180     001A                     	;# 
   181     001B                     	;# 
   182     001B                     	;# 
   183     001C                     	;# 
   184     001D                     	;# 
   185     001E                     	;# 
   186     001F                     	;# 
   187     0081                     	;# 
   188     0085                     	;# 
   189     0086                     	;# 
   190     0087                     	;# 
   191     0088                     	;# 
   192     0089                     	;# 
   193     008C                     	;# 
   194     008D                     	;# 
   195     008E                     	;# 
   196     008F                     	;# 
   197     0090                     	;# 
   198     0091                     	;# 
   199     0092                     	;# 
   200     0093                     	;# 
   201     0093                     	;# 
   202     0093                     	;# 
   203     0094                     	;# 
   204     0095                     	;# 
   205     0096                     	;# 
   206     0097                     	;# 
   207     0098                     	;# 
   208     0099                     	;# 
   209     009A                     	;# 
   210     009B                     	;# 
   211     009C                     	;# 
   212     009D                     	;# 
   213     009E                     	;# 
   214     009F                     	;# 
   215     0105                     	;# 
   216     0107                     	;# 
   217     0108                     	;# 
   218     0109                     	;# 
   219     010C                     	;# 
   220     010C                     	;# 
   221     010D                     	;# 
   222     010E                     	;# 
   223     010F                     	;# 
   224     0185                     	;# 
   225     0187                     	;# 
   226     0188                     	;# 
   227     0189                     	;# 
   228     018C                     	;# 
   229     018D                     	;# 
   230     0000                     	;# 
   231     0001                     	;# 
   232     0002                     	;# 
   233     0003                     	;# 
   234     0004                     	;# 
   235     0005                     	;# 
   236     0006                     	;# 
   237     0007                     	;# 
   238     0008                     	;# 
   239     0009                     	;# 
   240     000A                     	;# 
   241     000B                     	;# 
   242     000C                     	;# 
   243     000D                     	;# 
   244     000E                     	;# 
   245     000E                     	;# 
   246     000F                     	;# 
   247     0010                     	;# 
   248     0011                     	;# 
   249     0012                     	;# 
   250     0013                     	;# 
   251     0014                     	;# 
   252     0015                     	;# 
   253     0015                     	;# 
   254     0016                     	;# 
   255     0017                     	;# 
   256     0018                     	;# 
   257     0019                     	;# 
   258     001A                     	;# 
   259     001B                     	;# 
   260     001B                     	;# 
   261     001C                     	;# 
   262     001D                     	;# 
   263     001E                     	;# 
   264     001F                     	;# 
   265     0081                     	;# 
   266     0085                     	;# 
   267     0086                     	;# 
   268     0087                     	;# 
   269     0088                     	;# 
   270     0089                     	;# 
   271     008C                     	;# 
   272     008D                     	;# 
   273     008E                     	;# 
   274     008F                     	;# 
   275     0090                     	;# 
   276     0091                     	;# 
   277     0092                     	;# 
   278     0093                     	;# 
   279     0093                     	;# 
   280     0093                     	;# 
   281     0094                     	;# 
   282     0095                     	;# 
   283     0096                     	;# 
   284     0097                     	;# 
   285     0098                     	;# 
   286     0099                     	;# 
   287     009A                     	;# 
   288     009B                     	;# 
   289     009C                     	;# 
   290     009D                     	;# 
   291     009E                     	;# 
   292     009F                     	;# 
   293     0105                     	;# 
   294     0107                     	;# 
   295     0108                     	;# 
   296     0109                     	;# 
   297     010C                     	;# 
   298     010C                     	;# 
   299     010D                     	;# 
   300     010E                     	;# 
   301     010F                     	;# 
   302     0185                     	;# 
   303     0187                     	;# 
   304     0188                     	;# 
   305     0189                     	;# 
   306     018C                     	;# 
   307     018D                     	;# 
   308     0000                     	;# 
   309     0001                     	;# 
   310     0002                     	;# 
   311     0003                     	;# 
   312     0004                     	;# 
   313     0005                     	;# 
   314     0006                     	;# 
   315     0007                     	;# 
   316     0008                     	;# 
   317     0009                     	;# 
   318     000A                     	;# 
   319     000B                     	;# 
   320     000C                     	;# 
   321     000D                     	;# 
   322     000E                     	;# 
   323     000E                     	;# 
   324     000F                     	;# 
   325     0010                     	;# 
   326     0011                     	;# 
   327     0012                     	;# 
   328     0013                     	;# 
   329     0014                     	;# 
   330     0015                     	;# 
   331     0015                     	;# 
   332     0016                     	;# 
   333     0017                     	;# 
   334     0018                     	;# 
   335     0019                     	;# 
   336     001A                     	;# 
   337     001B                     	;# 
   338     001B                     	;# 
   339     001C                     	;# 
   340     001D                     	;# 
   341     001E                     	;# 
   342     001F                     	;# 
   343     0081                     	;# 
   344     0085                     	;# 
   345     0086                     	;# 
   346     0087                     	;# 
   347     0088                     	;# 
   348     0089                     	;# 
   349     008C                     	;# 
   350     008D                     	;# 
   351     008E                     	;# 
   352     008F                     	;# 
   353     0090                     	;# 
   354     0091                     	;# 
   355     0092                     	;# 
   356     0093                     	;# 
   357     0093                     	;# 
   358     0093                     	;# 
   359     0094                     	;# 
   360     0095                     	;# 
   361     0096                     	;# 
   362     0097                     	;# 
   363     0098                     	;# 
   364     0099                     	;# 
   365     009A                     	;# 
   366     009B                     	;# 
   367     009C                     	;# 
   368     009D                     	;# 
   369     009E                     	;# 
   370     009F                     	;# 
   371     0105                     	;# 
   372     0107                     	;# 
   373     0108                     	;# 
   374     0109                     	;# 
   375     010C                     	;# 
   376     010C                     	;# 
   377     010D                     	;# 
   378     010E                     	;# 
   379     010F                     	;# 
   380     0185                     	;# 
   381     0187                     	;# 
   382     0188                     	;# 
   383     0189                     	;# 
   384     018C                     	;# 
   385     018D                     	;# 
   386     0008                     _PORTDbits	set	8
   387     0013                     _SSPBUF	set	19
   388     0014                     _SSPCON	set	20
   389     0008                     _PORTD	set	8
   390     0005                     _PORTA	set	5
   391     0043                     _RD3	set	67
   392     0047                     _RD7	set	71
   393     0046                     _RD6	set	70
   394     0045                     _RD5	set	69
   395     0044                     _RD4	set	68
   396     0063                     _SSPIF	set	99
   397     005E                     _PEIE	set	94
   398     005F                     _GIE	set	95
   399     0091                     _SSPCON2bits	set	145
   400     0087                     _TRISCbits	set	135
   401     0094                     _SSPSTAT	set	148
   402     0093                     _SSPADD	set	147
   403     0091                     _SSPCON2	set	145
   404     008F                     _OSCCONbits	set	143
   405     0088                     _TRISD	set	136
   406     0085                     _TRISA	set	133
   407     0463                     _SSPIE	set	1123
   408     043C                     _TRISC4	set	1084
   409     043B                     _TRISC3	set	1083
   410     0478                     _SCS	set	1144
   411     0189                     _ANSELH	set	393
   412     0188                     _ANSEL	set	392
   413                           
   414                           	psect	strings
   415     0627                     __pstrings:
   416     0627                     stringtab:
   417     0627                     __stringtab:
   418                           
   419                           ;	String table - string pointers are 1 byte each
   420     0627  1BFF               	btfsc	btemp+1,7
   421     0628  2E31               	ljmp	stringcode
   422     0629  1383               	bcf	3,7
   423     062A  187F               	btfsc	btemp+1,0
   424     062B  1783               	bsf	3,7
   425     062C  0800               	movf	0,w
   426     062D  0A84               	incf	4,f
   427     062E  1903               	skipnz
   428     062F  0AFF               	incf	btemp+1,f
   429     0630  0008               	return
   430     0631                     stringcode:
   431     0631                     stringdir:
   432     0631  3006               	movlw	high stringdir
   433     0632  008A               	movwf	10
   434     0633  0804               	movf	4,w
   435     0634  0A84               	incf	4,f
   436     0635  0782               	addwf	2,f
   437     0636                     __stringbase:
   438     0636  3400               	retlw	0
   439     0637                     __end_of__stringtab:
   440     0637                     STR_6:
   441     0637  3449               	retlw	73	;'I'
   442     0638  3452               	retlw	82	;'R'
   443     0639  343A               	retlw	58	;':'
   444     063A  3400               	retlw	0
   445     063B                     STR_4:
   446     063B  3425               	retlw	37	;'%'
   447     063C  3452               	retlw	82	;'R'
   448     063D  3448               	retlw	72	;'H'
   449     063E  3400               	retlw	0
   450     063F                     STR_5:
   451     063F  3447               	retlw	71	;'G'
   452     0640  343A               	retlw	58	;':'
   453     0641  3400               	retlw	0
   454     0642                     STR_3:
   455     0642  3448               	retlw	72	;'H'
   456     0643  343A               	retlw	58	;':'
   457     0644  3400               	retlw	0
   458     0645                     STR_1:
   459     0645  3454               	retlw	84	;'T'
   460     0646  343A               	retlw	58	;':'
   461     0647  3400               	retlw	0
   462     0648                     STR_2:
   463     0648  3427               	retlw	39	;'''
   464     0649  3443               	retlw	67	;'C'
   465     064A  3400               	retlw	0
   466                           
   467                           	psect	cinit
   468     000F                     start_initialization:	
   469                           ; #config settings
   470                           
   471     000F                     __initialization:
   472                           
   473                           ; Clear objects allocated to COMMON
   474     000F  01FA               	clrf	__pbssCOMMON& (0+127)
   475     0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   476                           
   477                           ; Clear objects allocated to BANK0
   478     0011  1383               	bcf	3,7	;select IRP bank0
   479     0012  3020               	movlw	low __pbssBANK0
   480     0013  0084               	movwf	4
   481     0014  3036               	movlw	low (__pbssBANK0+22)
   482     0015  120A  118A  26B9  120A  118A  	fcall	clear_ram0
   483     001A                     end_of_initialization:	
   484                           ;End of C runtime variable initialization code
   485                           
   486     001A                     __end_of__initialization:
   487     001A  0183               	clrf	3
   488     001B  120A  118A  2DC8   	ljmp	_main	;jump to C main() function
   489                           
   490                           	psect	bssCOMMON
   491     007A                     __pbssCOMMON:
   492     007A                     _d_temp:
   493     007A                     	ds	1
   494     007B                     _u_temp:
   495     007B                     	ds	1
   496                           
   497                           	psect	bssBANK0
   498     0020                     __pbssBANK0:
   499     0020                     _Sd_hum:
   500     0020                     	ds	3
   501     0023                     _ired:
   502     0023                     	ds	1
   503     0024                     _gas:
   504     0024                     	ds	1
   505     0025                     _d_hum:
   506     0025                     	ds	1
   507     0026                     _u_hum:
   508     0026                     	ds	1
   509     0027                     _Sgas:
   510     0027                     	ds	4
   511     002B                     _Su_hum:
   512     002B                     	ds	3
   513     002E                     _Sd_temp:
   514     002E                     	ds	3
   515     0031                     _Su_temp:
   516     0031                     	ds	3
   517     0034                     _Sired:
   518     0034                     	ds	2
   519                           
   520                           	psect	clrtext
   521     06B9                     clear_ram0:	
   522                           ;	Called with FSR containing the base address, and
   523                           ;	W with the last address+1
   524                           
   525     06B9  0064               	clrwdt	;clear the watchdog before getting into this loop
   526     06BA                     clrloop0:
   527     06BA  0180               	clrf	0	;clear RAM location pointed to by FSR
   528     06BB  0A84               	incf	4,f	;increment pointer
   529     06BC  0604               	xorwf	4,w	;XOR with final address
   530     06BD  1903               	btfsc	3,2	;have we reached the end yet?
   531     06BE  3400               	retlw	0	;all done for this memory range, return
   532     06BF  0604               	xorwf	4,w	;XOR again to restore value
   533     06C0  2EBA               	goto	clrloop0	;do the next byte
   534                           
   535                           	psect	cstackCOMMON
   536     0070                     __pcstackCOMMON:
   537     0070                     ?_setup:
   538     0070                     ?_requestTemp:	
   539                           ; 1 bytes @ 0x0
   540                           
   541     0070                     ?_requestHum:	
   542                           ; 1 bytes @ 0x0
   543                           
   544     0070                     ?_requestGas:	
   545                           ; 1 bytes @ 0x0
   546                           
   547     0070                     ?_requestIR:	
   548                           ; 1 bytes @ 0x0
   549                           
   550     0070                     ?_LDC_output:	
   551                           ; 1 bytes @ 0x0
   552                           
   553     0070                     ?_Lcd_Init:	
   554                           ; 1 bytes @ 0x0
   555                           
   556     0070                     ?_I2C_Master_Start:	
   557                           ; 1 bytes @ 0x0
   558                           
   559     0070                     ?_I2C_Master_RepeatedStart:	
   560                           ; 1 bytes @ 0x0
   561                           
   562     0070                     ?_I2C_Master_Stop:	
   563                           ; 1 bytes @ 0x0
   564                           
   565     0070                     ?_Lcd_Write_Char:	
   566                           ; 1 bytes @ 0x0
   567                           
   568     0070                     ?_isr:	
   569                           ; 1 bytes @ 0x0
   570                           
   571     0070                     ??_isr:	
   572                           ; 1 bytes @ 0x0
   573                           
   574     0070                     ?_I2C_Master_Wait:	
   575                           ; 1 bytes @ 0x0
   576                           
   577     0070                     ?_Lcd_Port:	
   578                           ; 1 bytes @ 0x0
   579                           
   580     0070                     ?_Lcd_Cmd:	
   581                           ; 1 bytes @ 0x0
   582                           
   583     0070                     ?_main:	
   584                           ; 1 bytes @ 0x0
   585                           
   586                           
   587                           ; 2 bytes @ 0x0
   588     0070                     	ds	2
   589     0072                     ??_I2C_Master_Start:
   590     0072                     ?_I2C_Master_Write:	
   591                           ; 1 bytes @ 0x2
   592                           
   593     0072                     ??_I2C_Master_RepeatedStart:	
   594                           ; 1 bytes @ 0x2
   595                           
   596     0072                     ??_I2C_Master_Stop:	
   597                           ; 1 bytes @ 0x2
   598                           
   599     0072                     ??_I2C_Master_Wait:	
   600                           ; 1 bytes @ 0x2
   601                           
   602     0072                     ??_Lcd_Port:	
   603                           ; 1 bytes @ 0x2
   604                           
   605     0072                     ?_I2C_Master_Read:	
   606                           ; 1 bytes @ 0x2
   607                           
   608     0072                     ?___awdiv:	
   609                           ; 2 bytes @ 0x2
   610                           
   611     0072                     ?___awmod:	
   612                           ; 2 bytes @ 0x2
   613                           
   614     0072                     ?___lldiv:	
   615                           ; 2 bytes @ 0x2
   616                           
   617     0072                     Lcd_Port@a:	
   618                           ; 4 bytes @ 0x2
   619                           
   620     0072                     I2C_Master_Write@d:	
   621                           ; 1 bytes @ 0x2
   622                           
   623     0072                     I2C_Master_Read@a:	
   624                           ; 2 bytes @ 0x2
   625                           
   626     0072                     ___awdiv@divisor:	
   627                           ; 2 bytes @ 0x2
   628                           
   629     0072                     ___awmod@divisor:	
   630                           ; 2 bytes @ 0x2
   631                           
   632     0072                     ___lldiv@divisor:	
   633                           ; 2 bytes @ 0x2
   634                           
   635                           
   636                           ; 4 bytes @ 0x2
   637     0072                     	ds	1
   638     0073                     ??_Lcd_Write_Char:
   639     0073                     ??_Lcd_Cmd:	
   640                           ; 1 bytes @ 0x3
   641                           
   642                           
   643                           ; 1 bytes @ 0x3
   644     0073                     	ds	1
   645     0074                     ??_I2C_Master_Write:
   646     0074                     ??_I2C_Master_Read:	
   647                           ; 1 bytes @ 0x4
   648                           
   649     0074                     Lcd_Write_Char@temp:	
   650                           ; 1 bytes @ 0x4
   651                           
   652     0074                     ___awdiv@dividend:	
   653                           ; 1 bytes @ 0x4
   654                           
   655     0074                     ___awmod@dividend:	
   656                           ; 2 bytes @ 0x4
   657                           
   658                           
   659                           ; 2 bytes @ 0x4
   660     0074                     	ds	1
   661     0075                     Lcd_Cmd@a:
   662     0075                     Lcd_Write_Char@y:	
   663                           ; 1 bytes @ 0x5
   664                           
   665                           
   666                           ; 1 bytes @ 0x5
   667     0075                     	ds	1
   668     0076                     ??_Lcd_Init:
   669     0076                     ?_Lcd_Set_Cursor:	
   670                           ; 1 bytes @ 0x6
   671                           
   672     0076                     ??___awdiv:	
   673                           ; 1 bytes @ 0x6
   674                           
   675     0076                     ??___awmod:	
   676                           ; 1 bytes @ 0x6
   677                           
   678     0076                     Lcd_Set_Cursor@b:	
   679                           ; 1 bytes @ 0x6
   680                           
   681     0076                     Lcd_Write_Char@a:	
   682                           ; 1 bytes @ 0x6
   683                           
   684     0076                     ___awdiv@counter:	
   685                           ; 1 bytes @ 0x6
   686                           
   687     0076                     ___awmod@counter:	
   688                           ; 1 bytes @ 0x6
   689                           
   690     0076                     I2C_Master_Read@temp:	
   691                           ; 1 bytes @ 0x6
   692                           
   693     0076                     ___lldiv@dividend:	
   694                           ; 2 bytes @ 0x6
   695                           
   696                           
   697                           ; 4 bytes @ 0x6
   698     0076                     	ds	1
   699     0077                     ??_Lcd_Set_Cursor:
   700     0077                     ?_Lcd_Write_String:	
   701                           ; 1 bytes @ 0x7
   702                           
   703     0077                     ___awdiv@sign:	
   704                           ; 1 bytes @ 0x7
   705                           
   706     0077                     ___awmod@sign:	
   707                           ; 1 bytes @ 0x7
   708                           
   709     0077                     Lcd_Write_String@a:	
   710                           ; 1 bytes @ 0x7
   711                           
   712                           
   713                           ; 2 bytes @ 0x7
   714     0077                     	ds	1
   715     0078                     ___awdiv@quotient:
   716                           
   717                           ; 2 bytes @ 0x8
   718     0078                     	ds	2
   719     007A                     ??_LDC_output:
   720                           
   721                           	psect	cstackBANK0
   722     0036                     __pcstackBANK0:	
   723                           ; 1 bytes @ 0xA
   724                           
   725     0036                     ??_requestTemp:
   726     0036                     ??_requestHum:	
   727                           ; 1 bytes @ 0x0
   728                           
   729     0036                     ??_requestGas:	
   730                           ; 1 bytes @ 0x0
   731                           
   732     0036                     ??_requestIR:	
   733                           ; 1 bytes @ 0x0
   734                           
   735     0036                     ?_separar_digitos8:	
   736                           ; 1 bytes @ 0x0
   737                           
   738     0036                     ??_Lcd_Write_String:	
   739                           ; 1 bytes @ 0x0
   740                           
   741     0036                     ??___lldiv:	
   742                           ; 1 bytes @ 0x0
   743                           
   744     0036                     separar_digitos8@dig8:	
   745                           ; 1 bytes @ 0x0
   746                           
   747     0036                     Lcd_Set_Cursor@a:	
   748                           ; 1 bytes @ 0x0
   749                           
   750                           
   751                           ; 1 bytes @ 0x0
   752     0036                     	ds	1
   753     0037                     ??_separar_digitos8:
   754     0037                     Lcd_Set_Cursor@z:	
   755                           ; 1 bytes @ 0x1
   756                           
   757     0037                     ___lldiv@quotient:	
   758                           ; 1 bytes @ 0x1
   759                           
   760                           
   761                           ; 4 bytes @ 0x1
   762     0037                     	ds	1
   763     0038                     Lcd_Set_Cursor@y:
   764                           
   765                           ; 1 bytes @ 0x2
   766     0038                     	ds	1
   767     0039                     separar_digitos8@div2:
   768     0039                     Lcd_Set_Cursor@temp:	
   769                           ; 1 bytes @ 0x3
   770                           
   771     0039                     Lcd_Write_String@i:	
   772                           ; 1 bytes @ 0x3
   773                           
   774                           
   775                           ; 2 bytes @ 0x3
   776     0039                     	ds	1
   777     003A                     separar_digitos8@num:
   778                           
   779                           ; 1 bytes @ 0x4
   780     003A                     	ds	1
   781     003B                     separar_digitos8@div1:
   782     003B                     ___lldiv@counter:	
   783                           ; 1 bytes @ 0x5
   784                           
   785                           
   786                           ; 1 bytes @ 0x5
   787     003B                     	ds	1
   788     003C                     ?_I2C_Master_Init:
   789     003C                     separar_digitos8@centenas:	
   790                           ; 1 bytes @ 0x6
   791                           
   792     003C                     I2C_Master_Init@c:	
   793                           ; 1 bytes @ 0x6
   794                           
   795                           
   796                           ; 4 bytes @ 0x6
   797     003C                     	ds	1
   798     003D                     separar_digitos8@decenas:
   799                           
   800                           ; 1 bytes @ 0x7
   801     003D                     	ds	1
   802     003E                     separar_digitos8@unidades:
   803                           
   804                           ; 1 bytes @ 0x8
   805     003E                     	ds	2
   806     0040                     ??_I2C_Master_Init:
   807                           
   808                           ; 1 bytes @ 0xA
   809     0040                     	ds	4
   810     0044                     ??_setup:
   811                           
   812                           ; 1 bytes @ 0xE
   813     0044                     	ds	2
   814     0046                     ??_main:
   815                           
   816                           ; 1 bytes @ 0x10
   817     0046                     	ds	3
   818                           
   819                           	psect	maintext
   820     05C8                     __pmaintext:	
   821 ;;
   822 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   823 ;;
   824 ;; *************** function _main *****************
   825 ;; Defined at:
   826 ;;		line 71 in file "master.c"
   827 ;; Parameters:    Size  Location     Type
   828 ;;		None
   829 ;; Auto vars:     Size  Location     Type
   830 ;;		None
   831 ;; Return value:  Size  Location     Type
   832 ;;                  2   85[None  ] int 
   833 ;; Registers used:
   834 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   835 ;; Tracked objects:
   836 ;;		On entry : B00/0
   837 ;;		On exit  : 0/0
   838 ;;		Unchanged: 0/0
   839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   840 ;;      Params:         0       0       0       0       0
   841 ;;      Locals:         0       0       0       0       0
   842 ;;      Temps:          0       3       0       0       0
   843 ;;      Totals:         0       3       0       0       0
   844 ;;Total ram usage:        3 bytes
   845 ;; Hardware stack levels required when called: 5
   846 ;; This function calls:
   847 ;;		_LDC_output
   848 ;;		_requestGas
   849 ;;		_requestHum
   850 ;;		_requestIR
   851 ;;		_requestTemp
   852 ;;		_setup
   853 ;; This function is called by:
   854 ;;		Startup code after reset
   855 ;; This function uses a non-reentrant model
   856 ;;
   857                           
   858     05C8                     _main:	
   859                           ;psect for function _main
   860                           
   861     05C8                     l1808:	
   862                           ;incstack = 0
   863                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   864                           
   865                           
   866                           ;master.c: 72:     setup();
   867     05C8  120A  118A  255E  120A  118A  	fcall	_setup
   868     05CD                     l1810:
   869                           
   870                           ;master.c: 75:         requestTemp();
   871     05CD  120A  118A  20DA  120A  118A  	fcall	_requestTemp
   872     05D2                     l1812:
   873                           
   874                           ;master.c: 76:         requestHum();
   875     05D2  120A  118A  23EC  120A  118A  	fcall	_requestHum
   876     05D7                     l1814:
   877                           
   878                           ;master.c: 77:         requestGas();
   879     05D7  120A  118A  2440  120A  118A  	fcall	_requestGas
   880     05DC                     l1816:
   881                           
   882                           ;master.c: 78:         requestIR();
   883     05DC  120A  118A  2398  120A  118A  	fcall	_requestIR
   884     05E1                     l1818:
   885                           
   886                           ;master.c: 79:         LDC_output();
   887     05E1  120A  118A  201E  120A  118A  	fcall	_LDC_output
   888     05E6                     l1820:
   889                           
   890                           ;master.c: 80:         _delay((unsigned long)((2500)*(8000000/4000.0)));
   891     05E6  301A               	movlw	26
   892     05E7  1283               	bcf	3,5	;RP0=0, select bank0
   893     05E8  1303               	bcf	3,6	;RP1=0, select bank0
   894     05E9  00C8               	movwf	??_main+2
   895     05EA  305E               	movlw	94
   896     05EB  00C7               	movwf	??_main+1
   897     05EC  306D               	movlw	109
   898     05ED  00C6               	movwf	??_main
   899     05EE                     u1117:
   900     05EE  0BC6               	decfsz	??_main,f
   901     05EF  2DEE               	goto	u1117
   902     05F0  0BC7               	decfsz	??_main+1,f
   903     05F1  2DEE               	goto	u1117
   904     05F2  0BC8               	decfsz	??_main+2,f
   905     05F3  2DEE               	goto	u1117
   906     05F4  2DF5               	nop2
   907     05F5  2DCD               	goto	l1810
   908     05F6  120A  118A  280C   	ljmp	start
   909     05F9                     __end_of_main:
   910                           
   911                           	psect	text1
   912     055E                     __ptext1:	
   913 ;; *************** function _setup *****************
   914 ;; Defined at:
   915 ;;		line 84 in file "master.c"
   916 ;; Parameters:    Size  Location     Type
   917 ;;		None
   918 ;; Auto vars:     Size  Location     Type
   919 ;;		None
   920 ;; Return value:  Size  Location     Type
   921 ;;                  1    wreg      void 
   922 ;; Registers used:
   923 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   924 ;; Tracked objects:
   925 ;;		On entry : 0/0
   926 ;;		On exit  : 0/0
   927 ;;		Unchanged: 0/0
   928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   929 ;;      Params:         0       0       0       0       0
   930 ;;      Locals:         0       0       0       0       0
   931 ;;      Temps:          0       2       0       0       0
   932 ;;      Totals:         0       2       0       0       0
   933 ;;Total ram usage:        2 bytes
   934 ;; Hardware stack levels used: 1
   935 ;; Hardware stack levels required when called: 4
   936 ;; This function calls:
   937 ;;		_I2C_Master_Init
   938 ;;		_Lcd_Init
   939 ;; This function is called by:
   940 ;;		_main
   941 ;; This function uses a non-reentrant model
   942 ;;
   943                           
   944     055E                     _setup:	
   945                           ;psect for function _setup
   946                           
   947     055E                     l1702:	
   948                           ;incstack = 0
   949                           ; Regs used in _setup: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   950                           
   951                           
   952                           ;master.c: 85:     ANSEL = 0;
   953     055E  1683               	bsf	3,5	;RP0=1, select bank3
   954     055F  1703               	bsf	3,6	;RP1=1, select bank3
   955     0560  0188               	clrf	8	;volatile
   956                           
   957                           ;master.c: 86:     ANSELH= 0;
   958     0561  0189               	clrf	9	;volatile
   959                           
   960                           ;master.c: 88:     TRISA = 0;
   961     0562  1683               	bsf	3,5	;RP0=1, select bank1
   962     0563  1303               	bcf	3,6	;RP1=0, select bank1
   963     0564  0185               	clrf	5	;volatile
   964                           
   965                           ;master.c: 89:     PORTA = 0;
   966     0565  1283               	bcf	3,5	;RP0=0, select bank0
   967     0566  1303               	bcf	3,6	;RP1=0, select bank0
   968     0567  0185               	clrf	5	;volatile
   969                           
   970                           ;master.c: 91:     TRISD = 0;
   971     0568  1683               	bsf	3,5	;RP0=1, select bank1
   972     0569  1303               	bcf	3,6	;RP1=0, select bank1
   973     056A  0188               	clrf	8	;volatile
   974                           
   975                           ;master.c: 92:     PORTD = 0;
   976     056B  1283               	bcf	3,5	;RP0=0, select bank0
   977     056C  1303               	bcf	3,6	;RP1=0, select bank0
   978     056D  0188               	clrf	8	;volatile
   979     056E                     l1704:
   980                           
   981                           ;master.c: 95:     OSCCONbits.IRCF = 0b111;
   982     056E  3070               	movlw	112
   983     056F  1683               	bsf	3,5	;RP0=1, select bank1
   984     0570  1303               	bcf	3,6	;RP1=0, select bank1
   985     0571  048F               	iorwf	15,f	;volatile
   986     0572                     l1706:
   987                           
   988                           ;master.c: 96:     SCS = 1;
   989     0572  140F               	bsf	15,0	;volatile
   990     0573                     l1708:
   991                           
   992                           ;master.c: 99:     Lcd_Init();
   993     0573  120A  118A  22E2  120A  118A  	fcall	_Lcd_Init
   994     0578                     l1710:
   995                           
   996                           ;master.c: 100:     _delay((unsigned long)((10)*(8000000/4000.0)));
   997     0578  301A               	movlw	26
   998     0579  1283               	bcf	3,5	;RP0=0, select bank0
   999     057A  1303               	bcf	3,6	;RP1=0, select bank0
  1000     057B  00C5               	movwf	??_setup+1
  1001     057C  30F7               	movlw	247
  1002     057D  00C4               	movwf	??_setup
  1003     057E                     u1127:
  1004     057E  0BC4               	decfsz	??_setup,f
  1005     057F  2D7E               	goto	u1127
  1006     0580  0BC5               	decfsz	??_setup+1,f
  1007     0581  2D7E               	goto	u1127
  1008     0582  2D83               	nop2
  1009     0583                     l1712:
  1010                           
  1011                           ;master.c: 103:     I2C_Master_Init(100000);
  1012     0583  3000               	movlw	0
  1013     0584  1283               	bcf	3,5	;RP0=0, select bank0
  1014     0585  1303               	bcf	3,6	;RP1=0, select bank0
  1015     0586  00BF               	movwf	I2C_Master_Init@c+3
  1016     0587  3001               	movlw	1
  1017     0588  00BE               	movwf	I2C_Master_Init@c+2
  1018     0589  3086               	movlw	134
  1019     058A  00BD               	movwf	I2C_Master_Init@c+1
  1020     058B  30A0               	movlw	160
  1021     058C  00BC               	movwf	I2C_Master_Init@c
  1022     058D  120A  118A  2526  120A  118A  	fcall	_I2C_Master_Init
  1023     0592                     l92:
  1024     0592  0008               	return
  1025     0593                     __end_of_setup:
  1026                           
  1027                           	psect	text2
  1028     02E2                     __ptext2:	
  1029 ;; *************** function _Lcd_Init *****************
  1030 ;; Defined at:
  1031 ;;		line 65 in file "LCD4b.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;		None
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;		None
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  1    wreg      void 
  1038 ;; Registers used:
  1039 ;;		wreg, status,2, status,0, pclath, cstack
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1045 ;;      Params:         0       0       0       0       0
  1046 ;;      Locals:         0       0       0       0       0
  1047 ;;      Temps:          2       0       0       0       0
  1048 ;;      Totals:         2       0       0       0       0
  1049 ;;Total ram usage:        2 bytes
  1050 ;; Hardware stack levels used: 1
  1051 ;; Hardware stack levels required when called: 3
  1052 ;; This function calls:
  1053 ;;		_Lcd_Cmd
  1054 ;;		_Lcd_Port
  1055 ;; This function is called by:
  1056 ;;		_setup
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060     02E2                     _Lcd_Init:	
  1061                           ;psect for function _Lcd_Init
  1062                           
  1063     02E2                     l1640:	
  1064                           ;incstack = 0
  1065                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1066                           
  1067                           
  1068                           ;LCD4b.c: 66:     Lcd_Port(0x00);
  1069     02E2  3000               	movlw	0
  1070     02E3  120A  118A  264B  120A  118A  	fcall	_Lcd_Port
  1071     02E8                     l1642:
  1072                           
  1073                           ;LCD4b.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1074     02E8  3034               	movlw	52
  1075     02E9  00F7               	movwf	??_Lcd_Init+1
  1076     02EA  30F1               	movlw	241
  1077     02EB  00F6               	movwf	??_Lcd_Init
  1078     02EC                     u1137:
  1079     02EC  0BF6               	decfsz	??_Lcd_Init,f
  1080     02ED  2AEC               	goto	u1137
  1081     02EE  0BF7               	decfsz	??_Lcd_Init+1,f
  1082     02EF  2AEC               	goto	u1137
  1083     02F0  2AF1               	nop2
  1084     02F1                     l1644:
  1085                           
  1086                           ;LCD4b.c: 68:     Lcd_Cmd(0x03);
  1087     02F1  3003               	movlw	3
  1088     02F2  120A  118A  266D  120A  118A  	fcall	_Lcd_Cmd
  1089                           
  1090                           ;LCD4b.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1091     02F7  300D               	movlw	13
  1092     02F8  00F7               	movwf	??_Lcd_Init+1
  1093     02F9  30FB               	movlw	251
  1094     02FA  00F6               	movwf	??_Lcd_Init
  1095     02FB                     u1147:
  1096     02FB  0BF6               	decfsz	??_Lcd_Init,f
  1097     02FC  2AFB               	goto	u1147
  1098     02FD  0BF7               	decfsz	??_Lcd_Init+1,f
  1099     02FE  2AFB               	goto	u1147
  1100     02FF  2B00               	nop2
  1101     0300                     l1646:
  1102                           
  1103                           ;LCD4b.c: 70:     Lcd_Cmd(0x03);
  1104     0300  3003               	movlw	3
  1105     0301  120A  118A  266D  120A  118A  	fcall	_Lcd_Cmd
  1106     0306                     l1648:
  1107                           
  1108                           ;LCD4b.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  1109     0306  301D               	movlw	29
  1110     0307  00F7               	movwf	??_Lcd_Init+1
  1111     0308  3091               	movlw	145
  1112     0309  00F6               	movwf	??_Lcd_Init
  1113     030A                     u1157:
  1114     030A  0BF6               	decfsz	??_Lcd_Init,f
  1115     030B  2B0A               	goto	u1157
  1116     030C  0BF7               	decfsz	??_Lcd_Init+1,f
  1117     030D  2B0A               	goto	u1157
  1118                           
  1119                           ;LCD4b.c: 72:     Lcd_Cmd(0x03);
  1120     030E  3003               	movlw	3
  1121     030F  120A  118A  266D  120A  118A  	fcall	_Lcd_Cmd
  1122                           
  1123                           ;LCD4b.c: 74:     Lcd_Cmd(0x02);
  1124     0314  3002               	movlw	2
  1125     0315  120A  118A  266D  120A  118A  	fcall	_Lcd_Cmd
  1126                           
  1127                           ;LCD4b.c: 75:     Lcd_Cmd(0x02);
  1128     031A  3002               	movlw	2
  1129     031B  120A  118A  266D  120A  118A  	fcall	_Lcd_Cmd
  1130                           
  1131                           ;LCD4b.c: 76:     Lcd_Cmd(0x08);
  1132     0320  3008               	movlw	8
  1133     0321  120A  118A  266D  120A  118A  	fcall	_Lcd_Cmd
  1134                           
  1135                           ;LCD4b.c: 77:     Lcd_Cmd(0x00);
  1136     0326  3000               	movlw	0
  1137     0327  120A  118A  266D  120A  118A  	fcall	_Lcd_Cmd
  1138                           
  1139                           ;LCD4b.c: 78:     Lcd_Cmd(0x0C);
  1140     032C  300C               	movlw	12
  1141     032D  120A  118A  266D  120A  118A  	fcall	_Lcd_Cmd
  1142                           
  1143                           ;LCD4b.c: 79:     Lcd_Cmd(0x00);
  1144     0332  3000               	movlw	0
  1145     0333  120A  118A  266D  120A  118A  	fcall	_Lcd_Cmd
  1146                           
  1147                           ;LCD4b.c: 80:     Lcd_Cmd(0x06);
  1148     0338  3006               	movlw	6
  1149     0339  120A  118A  266D  120A  118A  	fcall	_Lcd_Cmd
  1150     033E                     l209:
  1151     033E  0008               	return
  1152     033F                     __end_of_Lcd_Init:
  1153                           
  1154                           	psect	text3
  1155     0526                     __ptext3:	
  1156 ;; *************** function _I2C_Master_Init *****************
  1157 ;; Defined at:
  1158 ;;		line 16 in file "I2C.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;  c               4    6[BANK0 ] const unsigned long 
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;		None
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  1    wreg      void 
  1165 ;; Registers used:
  1166 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1172 ;;      Params:         0       4       0       0       0
  1173 ;;      Locals:         0       0       0       0       0
  1174 ;;      Temps:          0       4       0       0       0
  1175 ;;      Totals:         0       8       0       0       0
  1176 ;;Total ram usage:        8 bytes
  1177 ;; Hardware stack levels used: 1
  1178 ;; Hardware stack levels required when called: 2
  1179 ;; This function calls:
  1180 ;;		___lldiv
  1181 ;; This function is called by:
  1182 ;;		_setup
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186     0526                     _I2C_Master_Init:	
  1187                           ;psect for function _I2C_Master_Init
  1188                           
  1189     0526                     l1650:	
  1190                           ;incstack = 0
  1191                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1192                           
  1193                           
  1194                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1195     0526  3028               	movlw	40
  1196     0527  1283               	bcf	3,5	;RP0=0, select bank0
  1197     0528  1303               	bcf	3,6	;RP1=0, select bank0
  1198     0529  0094               	movwf	20	;volatile
  1199     052A                     l1652:
  1200                           
  1201                           ;I2C.c: 19:     SSPCON2 = 0;
  1202     052A  1683               	bsf	3,5	;RP0=1, select bank1
  1203     052B  1303               	bcf	3,6	;RP1=0, select bank1
  1204     052C  0191               	clrf	17	;volatile
  1205     052D                     l1654:
  1206                           
  1207                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1208     052D  1283               	bcf	3,5	;RP0=0, select bank0
  1209     052E  1303               	bcf	3,6	;RP1=0, select bank0
  1210     052F  083C               	movf	I2C_Master_Init@c,w
  1211     0530  00C0               	movwf	??_I2C_Master_Init
  1212     0531  083D               	movf	I2C_Master_Init@c+1,w
  1213     0532  00C1               	movwf	??_I2C_Master_Init+1
  1214     0533  083E               	movf	I2C_Master_Init@c+2,w
  1215     0534  00C2               	movwf	??_I2C_Master_Init+2
  1216     0535  083F               	movf	I2C_Master_Init@c+3,w
  1217     0536  00C3               	movwf	??_I2C_Master_Init+3
  1218     0537  3002               	movlw	2
  1219     0538                     u1015:
  1220     0538  1003               	clrc
  1221     0539  0DC0               	rlf	??_I2C_Master_Init,f
  1222     053A  0DC1               	rlf	??_I2C_Master_Init+1,f
  1223     053B  0DC2               	rlf	??_I2C_Master_Init+2,f
  1224     053C  0DC3               	rlf	??_I2C_Master_Init+3,f
  1225     053D                     u1010:
  1226     053D  3EFF               	addlw	-1
  1227     053E  1D03               	skipz
  1228     053F  2D38               	goto	u1015
  1229     0540  0843               	movf	??_I2C_Master_Init+3,w
  1230     0541  00F5               	movwf	___lldiv@divisor+3
  1231     0542  0842               	movf	??_I2C_Master_Init+2,w
  1232     0543  00F4               	movwf	___lldiv@divisor+2
  1233     0544  0841               	movf	??_I2C_Master_Init+1,w
  1234     0545  00F3               	movwf	___lldiv@divisor+1
  1235     0546  0840               	movf	??_I2C_Master_Init,w
  1236     0547  00F2               	movwf	___lldiv@divisor
  1237     0548  3000               	movlw	0
  1238     0549  00F9               	movwf	___lldiv@dividend+3
  1239     054A  307A               	movlw	122
  1240     054B  00F8               	movwf	___lldiv@dividend+2
  1241     054C  3012               	movlw	18
  1242     054D  00F7               	movwf	___lldiv@dividend+1
  1243     054E  3000               	movlw	0
  1244     054F  00F6               	movwf	___lldiv@dividend
  1245     0550  120A  118A  2213  120A  118A  	fcall	___lldiv
  1246     0555  0872               	movf	?___lldiv,w
  1247     0556  3EFF               	addlw	255
  1248     0557  1683               	bsf	3,5	;RP0=1, select bank1
  1249     0558  1303               	bcf	3,6	;RP1=0, select bank1
  1250     0559  0093               	movwf	19	;volatile
  1251     055A                     l1656:
  1252                           
  1253                           ;I2C.c: 21:     SSPSTAT = 0;
  1254     055A  0194               	clrf	20	;volatile
  1255     055B                     l1658:
  1256                           
  1257                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1258     055B  1587               	bsf	7,3	;volatile
  1259     055C                     l1660:
  1260                           
  1261                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1262     055C  1607               	bsf	7,4	;volatile
  1263     055D                     l143:
  1264     055D  0008               	return
  1265     055E                     __end_of_I2C_Master_Init:
  1266                           
  1267                           	psect	text4
  1268     0213                     __ptext4:	
  1269 ;; *************** function ___lldiv *****************
  1270 ;; Defined at:
  1271 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;  divisor         4    2[COMMON] unsigned long 
  1274 ;;  dividend        4    6[COMMON] unsigned long 
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;  quotient        4    1[BANK0 ] unsigned long 
  1277 ;;  counter         1    5[BANK0 ] unsigned char 
  1278 ;; Return value:  Size  Location     Type
  1279 ;;                  4    2[COMMON] unsigned long 
  1280 ;; Registers used:
  1281 ;;		wreg, status,2, status,0, btemp+1
  1282 ;; Tracked objects:
  1283 ;;		On entry : 0/0
  1284 ;;		On exit  : 0/0
  1285 ;;		Unchanged: 0/0
  1286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1287 ;;      Params:         8       0       0       0       0
  1288 ;;      Locals:         0       5       0       0       0
  1289 ;;      Temps:          0       1       0       0       0
  1290 ;;      Totals:         8       6       0       0       0
  1291 ;;Total ram usage:       14 bytes
  1292 ;; Hardware stack levels used: 1
  1293 ;; Hardware stack levels required when called: 1
  1294 ;; This function calls:
  1295 ;;		Nothing
  1296 ;; This function is called by:
  1297 ;;		_I2C_Master_Init
  1298 ;; This function uses a non-reentrant model
  1299 ;;
  1300                           
  1301     0213                     ___lldiv:	
  1302                           ;psect for function ___lldiv
  1303                           
  1304     0213                     l1614:	
  1305                           ;incstack = 0
  1306                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  1307                           
  1308     0213  3000               	movlw	0
  1309     0214  1283               	bcf	3,5	;RP0=0, select bank0
  1310     0215  1303               	bcf	3,6	;RP1=0, select bank0
  1311     0216  00BA               	movwf	___lldiv@quotient+3
  1312     0217  3000               	movlw	0
  1313     0218  00B9               	movwf	___lldiv@quotient+2
  1314     0219  3000               	movlw	0
  1315     021A  00B8               	movwf	___lldiv@quotient+1
  1316     021B  3000               	movlw	0
  1317     021C  00B7               	movwf	___lldiv@quotient
  1318     021D  0875               	movf	___lldiv@divisor+3,w
  1319     021E  0474               	iorwf	___lldiv@divisor+2,w
  1320     021F  0473               	iorwf	___lldiv@divisor+1,w
  1321     0220  0472               	iorwf	___lldiv@divisor,w
  1322     0221  1903               	skipnz
  1323     0222  2A24               	goto	u941
  1324     0223  2A25               	goto	u940
  1325     0224                     u941:
  1326     0224  2A72               	goto	l1636
  1327     0225                     u940:
  1328     0225                     l1616:
  1329     0225  01BB               	clrf	___lldiv@counter
  1330     0226  0ABB               	incf	___lldiv@counter,f
  1331     0227  2A35               	goto	l1622
  1332     0228                     l1618:
  1333     0228  3001               	movlw	1
  1334     0229  00B6               	movwf	??___lldiv
  1335     022A                     u955:
  1336     022A  1003               	clrc
  1337     022B  0DF2               	rlf	___lldiv@divisor,f
  1338     022C  0DF3               	rlf	___lldiv@divisor+1,f
  1339     022D  0DF4               	rlf	___lldiv@divisor+2,f
  1340     022E  0DF5               	rlf	___lldiv@divisor+3,f
  1341     022F  0BB6               	decfsz	??___lldiv,f
  1342     0230  2A2A               	goto	u955
  1343     0231                     l1620:
  1344     0231  3001               	movlw	1
  1345     0232  00FF               	movwf	btemp+1
  1346     0233  087F               	movf	btemp+1,w
  1347     0234  07BB               	addwf	___lldiv@counter,f
  1348     0235                     l1622:
  1349     0235  1FF5               	btfss	___lldiv@divisor+3,7
  1350     0236  2A38               	goto	u961
  1351     0237  2A39               	goto	u960
  1352     0238                     u961:
  1353     0238  2A28               	goto	l1618
  1354     0239                     u960:
  1355     0239                     l1624:
  1356     0239  3001               	movlw	1
  1357     023A  00B6               	movwf	??___lldiv
  1358     023B                     u975:
  1359     023B  1003               	clrc
  1360     023C  0DB7               	rlf	___lldiv@quotient,f
  1361     023D  0DB8               	rlf	___lldiv@quotient+1,f
  1362     023E  0DB9               	rlf	___lldiv@quotient+2,f
  1363     023F  0DBA               	rlf	___lldiv@quotient+3,f
  1364     0240  0BB6               	decfsz	??___lldiv,f
  1365     0241  2A3B               	goto	u975
  1366     0242                     l1626:
  1367     0242  0875               	movf	___lldiv@divisor+3,w
  1368     0243  0279               	subwf	___lldiv@dividend+3,w
  1369     0244  1D03               	skipz
  1370     0245  2A50               	goto	u985
  1371     0246  0874               	movf	___lldiv@divisor+2,w
  1372     0247  0278               	subwf	___lldiv@dividend+2,w
  1373     0248  1D03               	skipz
  1374     0249  2A50               	goto	u985
  1375     024A  0873               	movf	___lldiv@divisor+1,w
  1376     024B  0277               	subwf	___lldiv@dividend+1,w
  1377     024C  1D03               	skipz
  1378     024D  2A50               	goto	u985
  1379     024E  0872               	movf	___lldiv@divisor,w
  1380     024F  0276               	subwf	___lldiv@dividend,w
  1381     0250                     u985:
  1382     0250  1C03               	skipc
  1383     0251  2A53               	goto	u981
  1384     0252  2A54               	goto	u980
  1385     0253                     u981:
  1386     0253  2A63               	goto	l1632
  1387     0254                     u980:
  1388     0254                     l1628:
  1389     0254  0872               	movf	___lldiv@divisor,w
  1390     0255  02F6               	subwf	___lldiv@dividend,f
  1391     0256  0873               	movf	___lldiv@divisor+1,w
  1392     0257  1C03               	skipc
  1393     0258  0F73               	incfsz	___lldiv@divisor+1,w
  1394     0259  02F7               	subwf	___lldiv@dividend+1,f
  1395     025A  0874               	movf	___lldiv@divisor+2,w
  1396     025B  1C03               	skipc
  1397     025C  0F74               	incfsz	___lldiv@divisor+2,w
  1398     025D  02F8               	subwf	___lldiv@dividend+2,f
  1399     025E  0875               	movf	___lldiv@divisor+3,w
  1400     025F  1C03               	skipc
  1401     0260  0F75               	incfsz	___lldiv@divisor+3,w
  1402     0261  02F9               	subwf	___lldiv@dividend+3,f
  1403     0262                     l1630:
  1404     0262  1437               	bsf	___lldiv@quotient,0
  1405     0263                     l1632:
  1406     0263  3001               	movlw	1
  1407     0264                     u995:
  1408     0264  1003               	clrc
  1409     0265  0CF5               	rrf	___lldiv@divisor+3,f
  1410     0266  0CF4               	rrf	___lldiv@divisor+2,f
  1411     0267  0CF3               	rrf	___lldiv@divisor+1,f
  1412     0268  0CF2               	rrf	___lldiv@divisor,f
  1413     0269  3EFF               	addlw	-1
  1414     026A  1D03               	skipz
  1415     026B  2A64               	goto	u995
  1416     026C                     l1634:
  1417     026C  3001               	movlw	1
  1418     026D  02BB               	subwf	___lldiv@counter,f
  1419     026E  1D03               	btfss	3,2
  1420     026F  2A71               	goto	u1001
  1421     0270  2A72               	goto	u1000
  1422     0271                     u1001:
  1423     0271  2A39               	goto	l1624
  1424     0272                     u1000:
  1425     0272                     l1636:
  1426     0272  083A               	movf	___lldiv@quotient+3,w
  1427     0273  00F5               	movwf	?___lldiv+3
  1428     0274  0839               	movf	___lldiv@quotient+2,w
  1429     0275  00F4               	movwf	?___lldiv+2
  1430     0276  0838               	movf	___lldiv@quotient+1,w
  1431     0277  00F3               	movwf	?___lldiv+1
  1432     0278  0837               	movf	___lldiv@quotient,w
  1433     0279  00F2               	movwf	?___lldiv
  1434     027A                     l346:
  1435     027A  0008               	return
  1436     027B                     __end_of___lldiv:
  1437                           
  1438                           	psect	text5
  1439     00DA                     __ptext5:	
  1440 ;; *************** function _requestTemp *****************
  1441 ;; Defined at:
  1442 ;;		line 106 in file "master.c"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;		None
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;		None
  1447 ;; Return value:  Size  Location     Type
  1448 ;;                  1    wreg      void 
  1449 ;; Registers used:
  1450 ;;		wreg, status,2, status,0, pclath, cstack
  1451 ;; Tracked objects:
  1452 ;;		On entry : 0/0
  1453 ;;		On exit  : 0/0
  1454 ;;		Unchanged: 0/0
  1455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1456 ;;      Params:         0       0       0       0       0
  1457 ;;      Locals:         0       0       0       0       0
  1458 ;;      Temps:          0       3       0       0       0
  1459 ;;      Totals:         0       3       0       0       0
  1460 ;;Total ram usage:        3 bytes
  1461 ;; Hardware stack levels used: 1
  1462 ;; Hardware stack levels required when called: 3
  1463 ;; This function calls:
  1464 ;;		_I2C_Master_Read
  1465 ;;		_I2C_Master_RepeatedStart
  1466 ;;		_I2C_Master_Start
  1467 ;;		_I2C_Master_Stop
  1468 ;;		_I2C_Master_Write
  1469 ;; This function is called by:
  1470 ;;		_main
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474     00DA                     _requestTemp:	
  1475                           ;psect for function _requestTemp
  1476                           
  1477     00DA                     l1714:	
  1478                           ;incstack = 0
  1479                           ; Regs used in _requestTemp: [wreg+status,2+status,0+pclath+cstack]
  1480                           
  1481                           
  1482                           ;master.c: 108:     I2C_Master_Start();
  1483     00DA  120A  118A  26A7  120A  118A  	fcall	_I2C_Master_Start
  1484                           
  1485                           ;master.c: 109:     I2C_Master_Write(0x10 +0);
  1486     00DF  3010               	movlw	16
  1487     00E0  00F2               	movwf	I2C_Master_Write@d
  1488     00E1  3000               	movlw	0
  1489     00E2  00F3               	movwf	I2C_Master_Write@d+1
  1490     00E3  120A  118A  2694  120A  118A  	fcall	_I2C_Master_Write
  1491                           
  1492                           ;master.c: 110:     I2C_Master_Write('T');
  1493     00E8  3054               	movlw	84
  1494     00E9  00F2               	movwf	I2C_Master_Write@d
  1495     00EA  3000               	movlw	0
  1496     00EB  00F3               	movwf	I2C_Master_Write@d+1
  1497     00EC  120A  118A  2694  120A  118A  	fcall	_I2C_Master_Write
  1498     00F1                     l1716:
  1499                           
  1500                           ;master.c: 111:     _delay((unsigned long)((200)*(8000000/4000.0)));
  1501     00F1  3003               	movlw	3
  1502     00F2  1283               	bcf	3,5	;RP0=0, select bank0
  1503     00F3  1303               	bcf	3,6	;RP1=0, select bank0
  1504     00F4  00B8               	movwf	??_requestTemp+2
  1505     00F5  3008               	movlw	8
  1506     00F6  00B7               	movwf	??_requestTemp+1
  1507     00F7  3076               	movlw	118
  1508     00F8  00B6               	movwf	??_requestTemp
  1509     00F9                     u1167:
  1510     00F9  0BB6               	decfsz	??_requestTemp,f
  1511     00FA  28F9               	goto	u1167
  1512     00FB  0BB7               	decfsz	??_requestTemp+1,f
  1513     00FC  28F9               	goto	u1167
  1514     00FD  0BB8               	decfsz	??_requestTemp+2,f
  1515     00FE  28F9               	goto	u1167
  1516     00FF  0000               	nop
  1517     0100                     l1718:
  1518                           
  1519                           ;master.c: 112:     I2C_Master_RepeatedStart();
  1520     0100  120A  118A  26B0  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1521     0105                     l1720:
  1522                           
  1523                           ;master.c: 113:     I2C_Master_Write(0x10 +1);
  1524     0105  3011               	movlw	17
  1525     0106  00F2               	movwf	I2C_Master_Write@d
  1526     0107  3000               	movlw	0
  1527     0108  00F3               	movwf	I2C_Master_Write@d+1
  1528     0109  120A  118A  2694  120A  118A  	fcall	_I2C_Master_Write
  1529     010E                     l1722:
  1530                           
  1531                           ;master.c: 114:     u_temp = I2C_Master_Read(0);
  1532     010E  3000               	movlw	0
  1533     010F  00F2               	movwf	I2C_Master_Read@a
  1534     0110  00F3               	movwf	I2C_Master_Read@a+1
  1535     0111  120A  118A  25F9  120A  118A  	fcall	_I2C_Master_Read
  1536     0116  0872               	movf	?_I2C_Master_Read,w
  1537     0117  00FB               	movwf	_u_temp
  1538     0118                     l1724:
  1539                           
  1540                           ;master.c: 115:     I2C_Master_Stop();
  1541     0118  120A  118A  269E  120A  118A  	fcall	_I2C_Master_Stop
  1542     011D                     l1726:
  1543                           
  1544                           ;master.c: 116:     _delay((unsigned long)((500)*(8000000/4000.0)));
  1545     011D  3006               	movlw	6
  1546     011E  1283               	bcf	3,5	;RP0=0, select bank0
  1547     011F  1303               	bcf	3,6	;RP1=0, select bank0
  1548     0120  00B8               	movwf	??_requestTemp+2
  1549     0121  3013               	movlw	19
  1550     0122  00B7               	movwf	??_requestTemp+1
  1551     0123  30AD               	movlw	173
  1552     0124  00B6               	movwf	??_requestTemp
  1553     0125                     u1177:
  1554     0125  0BB6               	decfsz	??_requestTemp,f
  1555     0126  2925               	goto	u1177
  1556     0127  0BB7               	decfsz	??_requestTemp+1,f
  1557     0128  2925               	goto	u1177
  1558     0129  0BB8               	decfsz	??_requestTemp+2,f
  1559     012A  2925               	goto	u1177
  1560                           
  1561                           ;master.c: 119:     I2C_Master_Start();
  1562     012B  120A  118A  26A7  120A  118A  	fcall	_I2C_Master_Start
  1563                           
  1564                           ;master.c: 120:     I2C_Master_Write(0x10 +0);
  1565     0130  3010               	movlw	16
  1566     0131  00F2               	movwf	I2C_Master_Write@d
  1567     0132  3000               	movlw	0
  1568     0133  00F3               	movwf	I2C_Master_Write@d+1
  1569     0134  120A  118A  2694  120A  118A  	fcall	_I2C_Master_Write
  1570                           
  1571                           ;master.c: 121:     I2C_Master_Write('t');
  1572     0139  3074               	movlw	116
  1573     013A  00F2               	movwf	I2C_Master_Write@d
  1574     013B  3000               	movlw	0
  1575     013C  00F3               	movwf	I2C_Master_Write@d+1
  1576     013D  120A  118A  2694  120A  118A  	fcall	_I2C_Master_Write
  1577     0142                     l1728:
  1578                           
  1579                           ;master.c: 122:     _delay((unsigned long)((200)*(8000000/4000.0)));
  1580     0142  3003               	movlw	3
  1581     0143  1283               	bcf	3,5	;RP0=0, select bank0
  1582     0144  1303               	bcf	3,6	;RP1=0, select bank0
  1583     0145  00B8               	movwf	??_requestTemp+2
  1584     0146  3008               	movlw	8
  1585     0147  00B7               	movwf	??_requestTemp+1
  1586     0148  3076               	movlw	118
  1587     0149  00B6               	movwf	??_requestTemp
  1588     014A                     u1187:
  1589     014A  0BB6               	decfsz	??_requestTemp,f
  1590     014B  294A               	goto	u1187
  1591     014C  0BB7               	decfsz	??_requestTemp+1,f
  1592     014D  294A               	goto	u1187
  1593     014E  0BB8               	decfsz	??_requestTemp+2,f
  1594     014F  294A               	goto	u1187
  1595     0150  0000               	nop
  1596     0151                     l1730:
  1597                           
  1598                           ;master.c: 123:     I2C_Master_RepeatedStart();
  1599     0151  120A  118A  26B0  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1600     0156                     l1732:
  1601                           
  1602                           ;master.c: 124:     I2C_Master_Write(0x10 +1);
  1603     0156  3011               	movlw	17
  1604     0157  00F2               	movwf	I2C_Master_Write@d
  1605     0158  3000               	movlw	0
  1606     0159  00F3               	movwf	I2C_Master_Write@d+1
  1607     015A  120A  118A  2694  120A  118A  	fcall	_I2C_Master_Write
  1608     015F                     l1734:
  1609                           
  1610                           ;master.c: 125:     d_temp = I2C_Master_Read(0);
  1611     015F  3000               	movlw	0
  1612     0160  00F2               	movwf	I2C_Master_Read@a
  1613     0161  00F3               	movwf	I2C_Master_Read@a+1
  1614     0162  120A  118A  25F9  120A  118A  	fcall	_I2C_Master_Read
  1615     0167  0872               	movf	?_I2C_Master_Read,w
  1616     0168  00FA               	movwf	_d_temp
  1617     0169                     l1736:
  1618                           
  1619                           ;master.c: 126:     I2C_Master_Stop();
  1620     0169  120A  118A  269E  120A  118A  	fcall	_I2C_Master_Stop
  1621     016E                     l1738:
  1622                           
  1623                           ;master.c: 127:     _delay((unsigned long)((500)*(8000000/4000.0)));
  1624     016E  3006               	movlw	6
  1625     016F  1283               	bcf	3,5	;RP0=0, select bank0
  1626     0170  1303               	bcf	3,6	;RP1=0, select bank0
  1627     0171  00B8               	movwf	??_requestTemp+2
  1628     0172  3013               	movlw	19
  1629     0173  00B7               	movwf	??_requestTemp+1
  1630     0174  30AD               	movlw	173
  1631     0175  00B6               	movwf	??_requestTemp
  1632     0176                     u1197:
  1633     0176  0BB6               	decfsz	??_requestTemp,f
  1634     0177  2976               	goto	u1197
  1635     0178  0BB7               	decfsz	??_requestTemp+1,f
  1636     0179  2976               	goto	u1197
  1637     017A  0BB8               	decfsz	??_requestTemp+2,f
  1638     017B  2976               	goto	u1197
  1639     017C                     l95:
  1640     017C  0008               	return
  1641     017D                     __end_of_requestTemp:
  1642                           
  1643                           	psect	text6
  1644     0398                     __ptext6:	
  1645 ;; *************** function _requestIR *****************
  1646 ;; Defined at:
  1647 ;;		line 155 in file "master.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;		None
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;		None
  1652 ;; Return value:  Size  Location     Type
  1653 ;;                  1    wreg      void 
  1654 ;; Registers used:
  1655 ;;		wreg, status,2, status,0, pclath, cstack
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1661 ;;      Params:         0       0       0       0       0
  1662 ;;      Locals:         0       0       0       0       0
  1663 ;;      Temps:          0       3       0       0       0
  1664 ;;      Totals:         0       3       0       0       0
  1665 ;;Total ram usage:        3 bytes
  1666 ;; Hardware stack levels used: 1
  1667 ;; Hardware stack levels required when called: 3
  1668 ;; This function calls:
  1669 ;;		_I2C_Master_Read
  1670 ;;		_I2C_Master_RepeatedStart
  1671 ;;		_I2C_Master_Start
  1672 ;;		_I2C_Master_Stop
  1673 ;;		_I2C_Master_Write
  1674 ;; This function is called by:
  1675 ;;		_main
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679     0398                     _requestIR:	
  1680                           ;psect for function _requestIR
  1681                           
  1682     0398                     l1768:	
  1683                           ;incstack = 0
  1684                           ; Regs used in _requestIR: [wreg+status,2+status,0+pclath+cstack]
  1685                           
  1686                           
  1687                           ;master.c: 156:     I2C_Master_Start();
  1688     0398  120A  118A  26A7  120A  118A  	fcall	_I2C_Master_Start
  1689                           
  1690                           ;master.c: 157:     I2C_Master_Write(0x20 +0);
  1691     039D  3020               	movlw	32
  1692     039E  00F2               	movwf	I2C_Master_Write@d
  1693     039F  3000               	movlw	0
  1694     03A0  00F3               	movwf	I2C_Master_Write@d+1
  1695     03A1  120A  118A  2694  120A  118A  	fcall	_I2C_Master_Write
  1696                           
  1697                           ;master.c: 158:     I2C_Master_Write('I');
  1698     03A6  3049               	movlw	73
  1699     03A7  00F2               	movwf	I2C_Master_Write@d
  1700     03A8  3000               	movlw	0
  1701     03A9  00F3               	movwf	I2C_Master_Write@d+1
  1702     03AA  120A  118A  2694  120A  118A  	fcall	_I2C_Master_Write
  1703     03AF                     l1770:
  1704                           
  1705                           ;master.c: 159:     _delay((unsigned long)((200)*(8000000/4000.0)));
  1706     03AF  3003               	movlw	3
  1707     03B0  1283               	bcf	3,5	;RP0=0, select bank0
  1708     03B1  1303               	bcf	3,6	;RP1=0, select bank0
  1709     03B2  00B8               	movwf	??_requestIR+2
  1710     03B3  3008               	movlw	8
  1711     03B4  00B7               	movwf	??_requestIR+1
  1712     03B5  3076               	movlw	118
  1713     03B6  00B6               	movwf	??_requestIR
  1714     03B7                     u1207:
  1715     03B7  0BB6               	decfsz	??_requestIR,f
  1716     03B8  2BB7               	goto	u1207
  1717     03B9  0BB7               	decfsz	??_requestIR+1,f
  1718     03BA  2BB7               	goto	u1207
  1719     03BB  0BB8               	decfsz	??_requestIR+2,f
  1720     03BC  2BB7               	goto	u1207
  1721     03BD  0000               	nop
  1722     03BE                     l1772:
  1723                           
  1724                           ;master.c: 160:     I2C_Master_RepeatedStart();
  1725     03BE  120A  118A  26B0  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1726     03C3                     l1774:
  1727                           
  1728                           ;master.c: 161:     I2C_Master_Write(0x20 +1);
  1729     03C3  3021               	movlw	33
  1730     03C4  00F2               	movwf	I2C_Master_Write@d
  1731     03C5  3000               	movlw	0
  1732     03C6  00F3               	movwf	I2C_Master_Write@d+1
  1733     03C7  120A  118A  2694  120A  118A  	fcall	_I2C_Master_Write
  1734     03CC                     l1776:
  1735                           
  1736                           ;master.c: 162:     ired = I2C_Master_Read(0);
  1737     03CC  3000               	movlw	0
  1738     03CD  00F2               	movwf	I2C_Master_Read@a
  1739     03CE  00F3               	movwf	I2C_Master_Read@a+1
  1740     03CF  120A  118A  25F9  120A  118A  	fcall	_I2C_Master_Read
  1741     03D4  0872               	movf	?_I2C_Master_Read,w
  1742     03D5  1283               	bcf	3,5	;RP0=0, select bank0
  1743     03D6  1303               	bcf	3,6	;RP1=0, select bank0
  1744     03D7  00A3               	movwf	_ired
  1745     03D8                     l1778:
  1746                           
  1747                           ;master.c: 163:     I2C_Master_Stop();
  1748     03D8  120A  118A  269E  120A  118A  	fcall	_I2C_Master_Stop
  1749     03DD                     l1780:
  1750                           
  1751                           ;master.c: 164:     _delay((unsigned long)((500)*(8000000/4000.0)));
  1752     03DD  3006               	movlw	6
  1753     03DE  1283               	bcf	3,5	;RP0=0, select bank0
  1754     03DF  1303               	bcf	3,6	;RP1=0, select bank0
  1755     03E0  00B8               	movwf	??_requestIR+2
  1756     03E1  3013               	movlw	19
  1757     03E2  00B7               	movwf	??_requestIR+1
  1758     03E3  30AD               	movlw	173
  1759     03E4  00B6               	movwf	??_requestIR
  1760     03E5                     u1217:
  1761     03E5  0BB6               	decfsz	??_requestIR,f
  1762     03E6  2BE5               	goto	u1217
  1763     03E7  0BB7               	decfsz	??_requestIR+1,f
  1764     03E8  2BE5               	goto	u1217
  1765     03E9  0BB8               	decfsz	??_requestIR+2,f
  1766     03EA  2BE5               	goto	u1217
  1767     03EB                     l104:
  1768     03EB  0008               	return
  1769     03EC                     __end_of_requestIR:
  1770                           
  1771                           	psect	text7
  1772     03EC                     __ptext7:	
  1773 ;; *************** function _requestHum *****************
  1774 ;; Defined at:
  1775 ;;		line 130 in file "master.c"
  1776 ;; Parameters:    Size  Location     Type
  1777 ;;		None
  1778 ;; Auto vars:     Size  Location     Type
  1779 ;;		None
  1780 ;; Return value:  Size  Location     Type
  1781 ;;                  1    wreg      void 
  1782 ;; Registers used:
  1783 ;;		wreg, status,2, status,0, pclath, cstack
  1784 ;; Tracked objects:
  1785 ;;		On entry : 0/0
  1786 ;;		On exit  : 0/0
  1787 ;;		Unchanged: 0/0
  1788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1789 ;;      Params:         0       0       0       0       0
  1790 ;;      Locals:         0       0       0       0       0
  1791 ;;      Temps:          0       3       0       0       0
  1792 ;;      Totals:         0       3       0       0       0
  1793 ;;Total ram usage:        3 bytes
  1794 ;; Hardware stack levels used: 1
  1795 ;; Hardware stack levels required when called: 3
  1796 ;; This function calls:
  1797 ;;		_I2C_Master_Read
  1798 ;;		_I2C_Master_RepeatedStart
  1799 ;;		_I2C_Master_Start
  1800 ;;		_I2C_Master_Stop
  1801 ;;		_I2C_Master_Write
  1802 ;; This function is called by:
  1803 ;;		_main
  1804 ;; This function uses a non-reentrant model
  1805 ;;
  1806                           
  1807     03EC                     _requestHum:	
  1808                           ;psect for function _requestHum
  1809                           
  1810     03EC                     l1740:	
  1811                           ;incstack = 0
  1812                           ; Regs used in _requestHum: [wreg+status,2+status,0+pclath+cstack]
  1813                           
  1814                           
  1815                           ;master.c: 132:     I2C_Master_Start();
  1816     03EC  120A  118A  26A7  120A  118A  	fcall	_I2C_Master_Start
  1817                           
  1818                           ;master.c: 133:     I2C_Master_Write(0x10 +0);
  1819     03F1  3010               	movlw	16
  1820     03F2  00F2               	movwf	I2C_Master_Write@d
  1821     03F3  3000               	movlw	0
  1822     03F4  00F3               	movwf	I2C_Master_Write@d+1
  1823     03F5  120A  118A  2694  120A  118A  	fcall	_I2C_Master_Write
  1824                           
  1825                           ;master.c: 134:     I2C_Master_Write('H');
  1826     03FA  3048               	movlw	72
  1827     03FB  00F2               	movwf	I2C_Master_Write@d
  1828     03FC  3000               	movlw	0
  1829     03FD  00F3               	movwf	I2C_Master_Write@d+1
  1830     03FE  120A  118A  2694  120A  118A  	fcall	_I2C_Master_Write
  1831     0403                     l1742:
  1832                           
  1833                           ;master.c: 135:     _delay((unsigned long)((200)*(8000000/4000.0)));
  1834     0403  3003               	movlw	3
  1835     0404  1283               	bcf	3,5	;RP0=0, select bank0
  1836     0405  1303               	bcf	3,6	;RP1=0, select bank0
  1837     0406  00B8               	movwf	??_requestHum+2
  1838     0407  3008               	movlw	8
  1839     0408  00B7               	movwf	??_requestHum+1
  1840     0409  3076               	movlw	118
  1841     040A  00B6               	movwf	??_requestHum
  1842     040B                     u1227:
  1843     040B  0BB6               	decfsz	??_requestHum,f
  1844     040C  2C0B               	goto	u1227
  1845     040D  0BB7               	decfsz	??_requestHum+1,f
  1846     040E  2C0B               	goto	u1227
  1847     040F  0BB8               	decfsz	??_requestHum+2,f
  1848     0410  2C0B               	goto	u1227
  1849     0411  0000               	nop
  1850     0412                     l1744:
  1851                           
  1852                           ;master.c: 136:     I2C_Master_RepeatedStart();
  1853     0412  120A  118A  26B0  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1854     0417                     l1746:
  1855                           
  1856                           ;master.c: 137:     I2C_Master_Write(0x10 +1);
  1857     0417  3011               	movlw	17
  1858     0418  00F2               	movwf	I2C_Master_Write@d
  1859     0419  3000               	movlw	0
  1860     041A  00F3               	movwf	I2C_Master_Write@d+1
  1861     041B  120A  118A  2694  120A  118A  	fcall	_I2C_Master_Write
  1862     0420                     l1748:
  1863                           
  1864                           ;master.c: 138:     u_hum = I2C_Master_Read(0);
  1865     0420  3000               	movlw	0
  1866     0421  00F2               	movwf	I2C_Master_Read@a
  1867     0422  00F3               	movwf	I2C_Master_Read@a+1
  1868     0423  120A  118A  25F9  120A  118A  	fcall	_I2C_Master_Read
  1869     0428  0872               	movf	?_I2C_Master_Read,w
  1870     0429  1283               	bcf	3,5	;RP0=0, select bank0
  1871     042A  1303               	bcf	3,6	;RP1=0, select bank0
  1872     042B  00A6               	movwf	_u_hum
  1873     042C                     l1750:
  1874                           
  1875                           ;master.c: 139:     I2C_Master_Stop();
  1876     042C  120A  118A  269E  120A  118A  	fcall	_I2C_Master_Stop
  1877     0431                     l1752:
  1878                           
  1879                           ;master.c: 140:     _delay((unsigned long)((500)*(8000000/4000.0)));
  1880     0431  3006               	movlw	6
  1881     0432  1283               	bcf	3,5	;RP0=0, select bank0
  1882     0433  1303               	bcf	3,6	;RP1=0, select bank0
  1883     0434  00B8               	movwf	??_requestHum+2
  1884     0435  3013               	movlw	19
  1885     0436  00B7               	movwf	??_requestHum+1
  1886     0437  30AD               	movlw	173
  1887     0438  00B6               	movwf	??_requestHum
  1888     0439                     u1237:
  1889     0439  0BB6               	decfsz	??_requestHum,f
  1890     043A  2C39               	goto	u1237
  1891     043B  0BB7               	decfsz	??_requestHum+1,f
  1892     043C  2C39               	goto	u1237
  1893     043D  0BB8               	decfsz	??_requestHum+2,f
  1894     043E  2C39               	goto	u1237
  1895     043F                     l98:
  1896     043F  0008               	return
  1897     0440                     __end_of_requestHum:
  1898                           
  1899                           	psect	text8
  1900     0440                     __ptext8:	
  1901 ;; *************** function _requestGas *****************
  1902 ;; Defined at:
  1903 ;;		line 143 in file "master.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;		None
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;		None
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  1    wreg      void 
  1910 ;; Registers used:
  1911 ;;		wreg, status,2, status,0, pclath, cstack
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1917 ;;      Params:         0       0       0       0       0
  1918 ;;      Locals:         0       0       0       0       0
  1919 ;;      Temps:          0       3       0       0       0
  1920 ;;      Totals:         0       3       0       0       0
  1921 ;;Total ram usage:        3 bytes
  1922 ;; Hardware stack levels used: 1
  1923 ;; Hardware stack levels required when called: 3
  1924 ;; This function calls:
  1925 ;;		_I2C_Master_Read
  1926 ;;		_I2C_Master_RepeatedStart
  1927 ;;		_I2C_Master_Start
  1928 ;;		_I2C_Master_Stop
  1929 ;;		_I2C_Master_Write
  1930 ;; This function is called by:
  1931 ;;		_main
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935     0440                     _requestGas:	
  1936                           ;psect for function _requestGas
  1937                           
  1938     0440                     l1754:	
  1939                           ;incstack = 0
  1940                           ; Regs used in _requestGas: [wreg+status,2+status,0+pclath+cstack]
  1941                           
  1942                           
  1943                           ;master.c: 144:     I2C_Master_Start();
  1944     0440  120A  118A  26A7  120A  118A  	fcall	_I2C_Master_Start
  1945                           
  1946                           ;master.c: 145:     I2C_Master_Write(0x20 +0);
  1947     0445  3020               	movlw	32
  1948     0446  00F2               	movwf	I2C_Master_Write@d
  1949     0447  3000               	movlw	0
  1950     0448  00F3               	movwf	I2C_Master_Write@d+1
  1951     0449  120A  118A  2694  120A  118A  	fcall	_I2C_Master_Write
  1952                           
  1953                           ;master.c: 146:     I2C_Master_Write('G');
  1954     044E  3047               	movlw	71
  1955     044F  00F2               	movwf	I2C_Master_Write@d
  1956     0450  3000               	movlw	0
  1957     0451  00F3               	movwf	I2C_Master_Write@d+1
  1958     0452  120A  118A  2694  120A  118A  	fcall	_I2C_Master_Write
  1959     0457                     l1756:
  1960                           
  1961                           ;master.c: 147:     _delay((unsigned long)((200)*(8000000/4000.0)));
  1962     0457  3003               	movlw	3
  1963     0458  1283               	bcf	3,5	;RP0=0, select bank0
  1964     0459  1303               	bcf	3,6	;RP1=0, select bank0
  1965     045A  00B8               	movwf	??_requestGas+2
  1966     045B  3008               	movlw	8
  1967     045C  00B7               	movwf	??_requestGas+1
  1968     045D  3076               	movlw	118
  1969     045E  00B6               	movwf	??_requestGas
  1970     045F                     u1247:
  1971     045F  0BB6               	decfsz	??_requestGas,f
  1972     0460  2C5F               	goto	u1247
  1973     0461  0BB7               	decfsz	??_requestGas+1,f
  1974     0462  2C5F               	goto	u1247
  1975     0463  0BB8               	decfsz	??_requestGas+2,f
  1976     0464  2C5F               	goto	u1247
  1977     0465  0000               	nop
  1978     0466                     l1758:
  1979                           
  1980                           ;master.c: 148:     I2C_Master_RepeatedStart();
  1981     0466  120A  118A  26B0  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1982     046B                     l1760:
  1983                           
  1984                           ;master.c: 149:     I2C_Master_Write(0x20 +1);
  1985     046B  3021               	movlw	33
  1986     046C  00F2               	movwf	I2C_Master_Write@d
  1987     046D  3000               	movlw	0
  1988     046E  00F3               	movwf	I2C_Master_Write@d+1
  1989     046F  120A  118A  2694  120A  118A  	fcall	_I2C_Master_Write
  1990     0474                     l1762:
  1991                           
  1992                           ;master.c: 150:     gas = I2C_Master_Read(0);
  1993     0474  3000               	movlw	0
  1994     0475  00F2               	movwf	I2C_Master_Read@a
  1995     0476  00F3               	movwf	I2C_Master_Read@a+1
  1996     0477  120A  118A  25F9  120A  118A  	fcall	_I2C_Master_Read
  1997     047C  0872               	movf	?_I2C_Master_Read,w
  1998     047D  1283               	bcf	3,5	;RP0=0, select bank0
  1999     047E  1303               	bcf	3,6	;RP1=0, select bank0
  2000     047F  00A4               	movwf	_gas
  2001     0480                     l1764:
  2002                           
  2003                           ;master.c: 151:     I2C_Master_Stop();
  2004     0480  120A  118A  269E  120A  118A  	fcall	_I2C_Master_Stop
  2005     0485                     l1766:
  2006                           
  2007                           ;master.c: 152:     _delay((unsigned long)((500)*(8000000/4000.0)));
  2008     0485  3006               	movlw	6
  2009     0486  1283               	bcf	3,5	;RP0=0, select bank0
  2010     0487  1303               	bcf	3,6	;RP1=0, select bank0
  2011     0488  00B8               	movwf	??_requestGas+2
  2012     0489  3013               	movlw	19
  2013     048A  00B7               	movwf	??_requestGas+1
  2014     048B  30AD               	movlw	173
  2015     048C  00B6               	movwf	??_requestGas
  2016     048D                     u1257:
  2017     048D  0BB6               	decfsz	??_requestGas,f
  2018     048E  2C8D               	goto	u1257
  2019     048F  0BB7               	decfsz	??_requestGas+1,f
  2020     0490  2C8D               	goto	u1257
  2021     0491  0BB8               	decfsz	??_requestGas+2,f
  2022     0492  2C8D               	goto	u1257
  2023     0493                     l101:
  2024     0493  0008               	return
  2025     0494                     __end_of_requestGas:
  2026                           
  2027                           	psect	text9
  2028     0694                     __ptext9:	
  2029 ;; *************** function _I2C_Master_Write *****************
  2030 ;; Defined at:
  2031 ;;		line 65 in file "I2C.c"
  2032 ;; Parameters:    Size  Location     Type
  2033 ;;  d               2    2[COMMON] unsigned int 
  2034 ;; Auto vars:     Size  Location     Type
  2035 ;;		None
  2036 ;; Return value:  Size  Location     Type
  2037 ;;                  1    wreg      void 
  2038 ;; Registers used:
  2039 ;;		wreg, status,2, status,0, pclath, cstack
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2045 ;;      Params:         2       0       0       0       0
  2046 ;;      Locals:         0       0       0       0       0
  2047 ;;      Temps:          0       0       0       0       0
  2048 ;;      Totals:         2       0       0       0       0
  2049 ;;Total ram usage:        2 bytes
  2050 ;; Hardware stack levels used: 1
  2051 ;; Hardware stack levels required when called: 2
  2052 ;; This function calls:
  2053 ;;		_I2C_Master_Wait
  2054 ;; This function is called by:
  2055 ;;		_requestTemp
  2056 ;;		_requestHum
  2057 ;;		_requestGas
  2058 ;;		_requestIR
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062     0694                     _I2C_Master_Write:	
  2063                           ;psect for function _I2C_Master_Write
  2064                           
  2065     0694                     l1380:	
  2066                           ;incstack = 0
  2067                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2068                           
  2069                           
  2070                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  2071     0694  120A  118A  2687  120A  118A  	fcall	_I2C_Master_Wait
  2072     0699                     l1382:
  2073                           
  2074                           ;I2C.c: 68:     SSPBUF = d;
  2075     0699  0872               	movf	I2C_Master_Write@d,w
  2076     069A  1283               	bcf	3,5	;RP0=0, select bank0
  2077     069B  1303               	bcf	3,6	;RP1=0, select bank0
  2078     069C  0093               	movwf	19	;volatile
  2079     069D                     l161:
  2080     069D  0008               	return
  2081     069E                     __end_of_I2C_Master_Write:
  2082                           
  2083                           	psect	text10
  2084     069E                     __ptext10:	
  2085 ;; *************** function _I2C_Master_Stop *****************
  2086 ;; Defined at:
  2087 ;;		line 55 in file "I2C.c"
  2088 ;; Parameters:    Size  Location     Type
  2089 ;;		None
  2090 ;; Auto vars:     Size  Location     Type
  2091 ;;		None
  2092 ;; Return value:  Size  Location     Type
  2093 ;;                  1    wreg      void 
  2094 ;; Registers used:
  2095 ;;		wreg, status,2, status,0, pclath, cstack
  2096 ;; Tracked objects:
  2097 ;;		On entry : 0/0
  2098 ;;		On exit  : 0/0
  2099 ;;		Unchanged: 0/0
  2100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2101 ;;      Params:         0       0       0       0       0
  2102 ;;      Locals:         0       0       0       0       0
  2103 ;;      Temps:          0       0       0       0       0
  2104 ;;      Totals:         0       0       0       0       0
  2105 ;;Total ram usage:        0 bytes
  2106 ;; Hardware stack levels used: 1
  2107 ;; Hardware stack levels required when called: 2
  2108 ;; This function calls:
  2109 ;;		_I2C_Master_Wait
  2110 ;; This function is called by:
  2111 ;;		_requestTemp
  2112 ;;		_requestHum
  2113 ;;		_requestGas
  2114 ;;		_requestIR
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118     069E                     _I2C_Master_Stop:	
  2119                           ;psect for function _I2C_Master_Stop
  2120                           
  2121     069E                     l1404:	
  2122                           ;incstack = 0
  2123                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2124                           
  2125                           
  2126                           ;I2C.c: 57:     I2C_Master_Wait();
  2127     069E  120A  118A  2687  120A  118A  	fcall	_I2C_Master_Wait
  2128     06A3                     l1406:
  2129                           
  2130                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2131     06A3  1683               	bsf	3,5	;RP0=1, select bank1
  2132     06A4  1303               	bcf	3,6	;RP1=0, select bank1
  2133     06A5  1511               	bsf	17,2	;volatile
  2134     06A6                     l158:
  2135     06A6  0008               	return
  2136     06A7                     __end_of_I2C_Master_Stop:
  2137                           
  2138                           	psect	text11
  2139     06A7                     __ptext11:	
  2140 ;; *************** function _I2C_Master_Start *****************
  2141 ;; Defined at:
  2142 ;;		line 39 in file "I2C.c"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;		None
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;		None
  2147 ;; Return value:  Size  Location     Type
  2148 ;;                  1    wreg      void 
  2149 ;; Registers used:
  2150 ;;		wreg, status,2, status,0, pclath, cstack
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2156 ;;      Params:         0       0       0       0       0
  2157 ;;      Locals:         0       0       0       0       0
  2158 ;;      Temps:          0       0       0       0       0
  2159 ;;      Totals:         0       0       0       0       0
  2160 ;;Total ram usage:        0 bytes
  2161 ;; Hardware stack levels used: 1
  2162 ;; Hardware stack levels required when called: 2
  2163 ;; This function calls:
  2164 ;;		_I2C_Master_Wait
  2165 ;; This function is called by:
  2166 ;;		_requestTemp
  2167 ;;		_requestHum
  2168 ;;		_requestGas
  2169 ;;		_requestIR
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173     06A7                     _I2C_Master_Start:	
  2174                           ;psect for function _I2C_Master_Start
  2175                           
  2176     06A7                     l1376:	
  2177                           ;incstack = 0
  2178                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2179                           
  2180                           
  2181                           ;I2C.c: 41:     I2C_Master_Wait();
  2182     06A7  120A  118A  2687  120A  118A  	fcall	_I2C_Master_Wait
  2183     06AC                     l1378:
  2184                           
  2185                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2186     06AC  1683               	bsf	3,5	;RP0=1, select bank1
  2187     06AD  1303               	bcf	3,6	;RP1=0, select bank1
  2188     06AE  1411               	bsf	17,0	;volatile
  2189     06AF                     l152:
  2190     06AF  0008               	return
  2191     06B0                     __end_of_I2C_Master_Start:
  2192                           
  2193                           	psect	text12
  2194     06B0                     __ptext12:	
  2195 ;; *************** function _I2C_Master_RepeatedStart *****************
  2196 ;; Defined at:
  2197 ;;		line 47 in file "I2C.c"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;		None
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;		None
  2202 ;; Return value:  Size  Location     Type
  2203 ;;                  1    wreg      void 
  2204 ;; Registers used:
  2205 ;;		wreg, status,2, status,0, pclath, cstack
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2211 ;;      Params:         0       0       0       0       0
  2212 ;;      Locals:         0       0       0       0       0
  2213 ;;      Temps:          0       0       0       0       0
  2214 ;;      Totals:         0       0       0       0       0
  2215 ;;Total ram usage:        0 bytes
  2216 ;; Hardware stack levels used: 1
  2217 ;; Hardware stack levels required when called: 2
  2218 ;; This function calls:
  2219 ;;		_I2C_Master_Wait
  2220 ;; This function is called by:
  2221 ;;		_requestTemp
  2222 ;;		_requestHum
  2223 ;;		_requestGas
  2224 ;;		_requestIR
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228     06B0                     _I2C_Master_RepeatedStart:	
  2229                           ;psect for function _I2C_Master_RepeatedStart
  2230                           
  2231     06B0                     l1384:	
  2232                           ;incstack = 0
  2233                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2234                           
  2235                           
  2236                           ;I2C.c: 49:     I2C_Master_Wait();
  2237     06B0  120A  118A  2687  120A  118A  	fcall	_I2C_Master_Wait
  2238     06B5                     l1386:
  2239                           
  2240                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  2241     06B5  1683               	bsf	3,5	;RP0=1, select bank1
  2242     06B6  1303               	bcf	3,6	;RP1=0, select bank1
  2243     06B7  1491               	bsf	17,1	;volatile
  2244     06B8                     l155:
  2245     06B8  0008               	return
  2246     06B9                     __end_of_I2C_Master_RepeatedStart:
  2247                           
  2248                           	psect	text13
  2249     05F9                     __ptext13:	
  2250 ;; *************** function _I2C_Master_Read *****************
  2251 ;; Defined at:
  2252 ;;		line 74 in file "I2C.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;  a               2    2[COMMON] unsigned short 
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;  temp            2    6[COMMON] unsigned short 
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  2    2[COMMON] unsigned short 
  2259 ;; Registers used:
  2260 ;;		wreg, status,2, status,0, pclath, cstack
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2266 ;;      Params:         2       0       0       0       0
  2267 ;;      Locals:         2       0       0       0       0
  2268 ;;      Temps:          2       0       0       0       0
  2269 ;;      Totals:         6       0       0       0       0
  2270 ;;Total ram usage:        6 bytes
  2271 ;; Hardware stack levels used: 1
  2272 ;; Hardware stack levels required when called: 2
  2273 ;; This function calls:
  2274 ;;		_I2C_Master_Wait
  2275 ;; This function is called by:
  2276 ;;		_requestTemp
  2277 ;;		_requestHum
  2278 ;;		_requestGas
  2279 ;;		_requestIR
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283     05F9                     _I2C_Master_Read:	
  2284                           ;psect for function _I2C_Master_Read
  2285                           
  2286     05F9                     l1388:	
  2287                           ;incstack = 0
  2288                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2289                           
  2290                           
  2291                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  2292     05F9  120A  118A  2687  120A  118A  	fcall	_I2C_Master_Wait
  2293     05FE                     l1390:
  2294                           
  2295                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  2296     05FE  1683               	bsf	3,5	;RP0=1, select bank1
  2297     05FF  1303               	bcf	3,6	;RP1=0, select bank1
  2298     0600  1591               	bsf	17,3	;volatile
  2299                           
  2300                           ;I2C.c: 79:     I2C_Master_Wait();
  2301     0601  120A  118A  2687  120A  118A  	fcall	_I2C_Master_Wait
  2302     0606                     l1392:
  2303                           
  2304                           ;I2C.c: 80:     temp = SSPBUF;
  2305     0606  1283               	bcf	3,5	;RP0=0, select bank0
  2306     0607  1303               	bcf	3,6	;RP1=0, select bank0
  2307     0608  0813               	movf	19,w	;volatile
  2308     0609  00F4               	movwf	??_I2C_Master_Read
  2309     060A  01F5               	clrf	??_I2C_Master_Read+1
  2310     060B  0874               	movf	??_I2C_Master_Read,w
  2311     060C  00F6               	movwf	I2C_Master_Read@temp
  2312     060D  0875               	movf	??_I2C_Master_Read+1,w
  2313     060E  00F7               	movwf	I2C_Master_Read@temp+1
  2314     060F                     l1394:
  2315                           
  2316                           ;I2C.c: 81:     I2C_Master_Wait();
  2317     060F  120A  118A  2687  120A  118A  	fcall	_I2C_Master_Wait
  2318     0614                     l1396:
  2319                           
  2320                           ;I2C.c: 82:     if(a == 1){
  2321     0614  0372               	decf	I2C_Master_Read@a,w
  2322     0615  0473               	iorwf	I2C_Master_Read@a+1,w
  2323     0616  1D03               	btfss	3,2
  2324     0617  2E19               	goto	u791
  2325     0618  2E1A               	goto	u790
  2326     0619                     u791:
  2327     0619  2E1E               	goto	l164
  2328     061A                     u790:
  2329     061A                     l1398:
  2330                           
  2331                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  2332     061A  1683               	bsf	3,5	;RP0=1, select bank1
  2333     061B  1303               	bcf	3,6	;RP1=0, select bank1
  2334     061C  1291               	bcf	17,5	;volatile
  2335                           
  2336                           ;I2C.c: 84:     }else{
  2337     061D  2E21               	goto	l165
  2338     061E                     l164:
  2339                           
  2340                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  2341     061E  1683               	bsf	3,5	;RP0=1, select bank1
  2342     061F  1303               	bcf	3,6	;RP1=0, select bank1
  2343     0620  1691               	bsf	17,5	;volatile
  2344     0621                     l165:	
  2345                           ;I2C.c: 86:     }
  2346                           
  2347                           
  2348                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  2349     0621  1611               	bsf	17,4	;volatile
  2350     0622                     l1400:
  2351                           
  2352                           ;I2C.c: 88:     return temp;
  2353     0622  0877               	movf	I2C_Master_Read@temp+1,w
  2354     0623  00F3               	movwf	?_I2C_Master_Read+1
  2355     0624  0876               	movf	I2C_Master_Read@temp,w
  2356     0625  00F2               	movwf	?_I2C_Master_Read
  2357     0626                     l166:
  2358     0626  0008               	return
  2359     0627                     __end_of_I2C_Master_Read:
  2360                           
  2361                           	psect	text14
  2362     0687                     __ptext14:	
  2363 ;; *************** function _I2C_Master_Wait *****************
  2364 ;; Defined at:
  2365 ;;		line 32 in file "I2C.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;		None
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;		None
  2370 ;; Return value:  Size  Location     Type
  2371 ;;                  1    wreg      void 
  2372 ;; Registers used:
  2373 ;;		wreg, status,2
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2379 ;;      Params:         0       0       0       0       0
  2380 ;;      Locals:         0       0       0       0       0
  2381 ;;      Temps:          0       0       0       0       0
  2382 ;;      Totals:         0       0       0       0       0
  2383 ;;Total ram usage:        0 bytes
  2384 ;; Hardware stack levels used: 1
  2385 ;; Hardware stack levels required when called: 1
  2386 ;; This function calls:
  2387 ;;		Nothing
  2388 ;; This function is called by:
  2389 ;;		_I2C_Master_Start
  2390 ;;		_I2C_Master_RepeatedStart
  2391 ;;		_I2C_Master_Stop
  2392 ;;		_I2C_Master_Write
  2393 ;;		_I2C_Master_Read
  2394 ;; This function uses a non-reentrant model
  2395 ;;
  2396                           
  2397     0687                     _I2C_Master_Wait:	
  2398                           ;psect for function _I2C_Master_Wait
  2399                           
  2400     0687                     l1232:	
  2401                           ;incstack = 0
  2402                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2403                           
  2404     0687                     l146:	
  2405                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2406                           
  2407     0687  1683               	bsf	3,5	;RP0=1, select bank1
  2408     0688  1303               	bcf	3,6	;RP1=0, select bank1
  2409     0689  1914               	btfsc	20,2	;volatile
  2410     068A  2E8C               	goto	u501
  2411     068B  2E8D               	goto	u500
  2412     068C                     u501:
  2413     068C  2E87               	goto	l146
  2414     068D                     u500:
  2415     068D                     l1234:
  2416     068D  0811               	movf	17,w	;volatile
  2417     068E  391F               	andlw	31
  2418     068F  1D03               	btfss	3,2
  2419     0690  2E92               	goto	u511
  2420     0691  2E93               	goto	u510
  2421     0692                     u511:
  2422     0692  2E87               	goto	l146
  2423     0693                     u510:
  2424     0693                     l149:
  2425     0693  0008               	return
  2426     0694                     __end_of_I2C_Master_Wait:
  2427                           
  2428                           	psect	text15
  2429     001E                     __ptext15:	
  2430 ;; *************** function _LDC_output *****************
  2431 ;; Defined at:
  2432 ;;		line 167 in file "master.c"
  2433 ;; Parameters:    Size  Location     Type
  2434 ;;		None
  2435 ;; Auto vars:     Size  Location     Type
  2436 ;;		None
  2437 ;; Return value:  Size  Location     Type
  2438 ;;                  1    wreg      void 
  2439 ;; Registers used:
  2440 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/0
  2443 ;;		On exit  : 0/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2446 ;;      Params:         0       0       0       0       0
  2447 ;;      Locals:         0       0       0       0       0
  2448 ;;      Temps:          0       0       0       0       0
  2449 ;;      Totals:         0       0       0       0       0
  2450 ;;Total ram usage:        0 bytes
  2451 ;; Hardware stack levels used: 1
  2452 ;; Hardware stack levels required when called: 4
  2453 ;; This function calls:
  2454 ;;		_Lcd_Set_Cursor
  2455 ;;		_Lcd_Write_Char
  2456 ;;		_Lcd_Write_String
  2457 ;;		_separar_digitos8
  2458 ;; This function is called by:
  2459 ;;		_main
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463     001E                     _LDC_output:	
  2464                           ;psect for function _LDC_output
  2465                           
  2466     001E                     l1782:	
  2467                           ;incstack = 0
  2468                           ; Regs used in _LDC_output: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2469                           
  2470                           
  2471                           ;master.c: 169:     separar_digitos8(u_temp,Su_temp);
  2472     001E  3031               	movlw	(low (_Su_temp| 0))& (0+255)
  2473     001F  1283               	bcf	3,5	;RP0=0, select bank0
  2474     0020  1303               	bcf	3,6	;RP1=0, select bank0
  2475     0021  00B6               	movwf	separar_digitos8@dig8
  2476     0022  087B               	movf	_u_temp,w
  2477     0023  120A  118A  217D  120A  118A  	fcall	_separar_digitos8
  2478                           
  2479                           ;master.c: 170:     separar_digitos8(d_temp,Sd_temp);
  2480     0028  302E               	movlw	(low (_Sd_temp| 0))& (0+255)
  2481     0029  1283               	bcf	3,5	;RP0=0, select bank0
  2482     002A  1303               	bcf	3,6	;RP1=0, select bank0
  2483     002B  00B6               	movwf	separar_digitos8@dig8
  2484     002C  087A               	movf	_d_temp,w
  2485     002D  120A  118A  217D  120A  118A  	fcall	_separar_digitos8
  2486                           
  2487                           ;master.c: 171:     separar_digitos8(u_hum,Su_hum);
  2488     0032  302B               	movlw	(low (_Su_hum| 0))& (0+255)
  2489     0033  1283               	bcf	3,5	;RP0=0, select bank0
  2490     0034  1303               	bcf	3,6	;RP1=0, select bank0
  2491     0035  00B6               	movwf	separar_digitos8@dig8
  2492     0036  0826               	movf	_u_hum,w
  2493     0037  120A  118A  217D  120A  118A  	fcall	_separar_digitos8
  2494                           
  2495                           ;master.c: 173:     separar_digitos8(gas,Sgas);
  2496     003C  3027               	movlw	(low (_Sgas| 0))& (0+255)
  2497     003D  1283               	bcf	3,5	;RP0=0, select bank0
  2498     003E  1303               	bcf	3,6	;RP1=0, select bank0
  2499     003F  00B6               	movwf	separar_digitos8@dig8
  2500     0040  0824               	movf	_gas,w
  2501     0041  120A  118A  217D  120A  118A  	fcall	_separar_digitos8
  2502                           
  2503                           ;master.c: 174:     separar_digitos8(ired,Sired);
  2504     0046  3034               	movlw	(low (_Sired| 0))& (0+255)
  2505     0047  1283               	bcf	3,5	;RP0=0, select bank0
  2506     0048  1303               	bcf	3,6	;RP1=0, select bank0
  2507     0049  00B6               	movwf	separar_digitos8@dig8
  2508     004A  0823               	movf	_ired,w
  2509     004B  120A  118A  217D  120A  118A  	fcall	_separar_digitos8
  2510     0050                     l1784:
  2511                           
  2512                           ;master.c: 176:     Lcd_Set_Cursor(1,1);
  2513     0050  01F6               	clrf	Lcd_Set_Cursor@b
  2514     0051  0AF6               	incf	Lcd_Set_Cursor@b,f
  2515     0052  3001               	movlw	1
  2516     0053  120A  118A  2494  120A  118A  	fcall	_Lcd_Set_Cursor
  2517     0058                     l1786:
  2518                           
  2519                           ;master.c: 177:     Lcd_Write_String("T:");
  2520     0058  300F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2521     0059  00F7               	movwf	Lcd_Write_String@a
  2522     005A  3080               	movlw	128
  2523     005B  00F8               	movwf	Lcd_Write_String@a+1
  2524     005C  120A  118A  24E0  120A  118A  	fcall	_Lcd_Write_String
  2525     0061                     l1788:
  2526                           
  2527                           ;master.c: 178:     Lcd_Write_String(Su_temp);
  2528     0061  3031               	movlw	(low (_Su_temp| 0))& (0+255)
  2529     0062  00F7               	movwf	Lcd_Write_String@a
  2530     0063  3000               	movlw	0
  2531     0064  00F8               	movwf	Lcd_Write_String@a+1
  2532     0065  120A  118A  24E0  120A  118A  	fcall	_Lcd_Write_String
  2533     006A                     l1790:
  2534                           
  2535                           ;master.c: 179:     Lcd_Write_Char('.');
  2536     006A  302E               	movlw	46
  2537     006B  120A  118A  2593  120A  118A  	fcall	_Lcd_Write_Char
  2538                           
  2539                           ;master.c: 180:     Lcd_Write_String(Sd_temp);
  2540     0070  302E               	movlw	(low (_Sd_temp| 0))& (0+255)
  2541     0071  00F7               	movwf	Lcd_Write_String@a
  2542     0072  3000               	movlw	0
  2543     0073  00F8               	movwf	Lcd_Write_String@a+1
  2544     0074  120A  118A  24E0  120A  118A  	fcall	_Lcd_Write_String
  2545                           
  2546                           ;master.c: 181:     Lcd_Write_String("'C");
  2547     0079  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2548     007A  00F7               	movwf	Lcd_Write_String@a
  2549     007B  3080               	movlw	128
  2550     007C  00F8               	movwf	Lcd_Write_String@a+1
  2551     007D  120A  118A  24E0  120A  118A  	fcall	_Lcd_Write_String
  2552     0082                     l1792:
  2553                           
  2554                           ;master.c: 183:     Lcd_Set_Cursor(2,1);
  2555     0082  01F6               	clrf	Lcd_Set_Cursor@b
  2556     0083  0AF6               	incf	Lcd_Set_Cursor@b,f
  2557     0084  3002               	movlw	2
  2558     0085  120A  118A  2494  120A  118A  	fcall	_Lcd_Set_Cursor
  2559     008A                     l1794:
  2560                           
  2561                           ;master.c: 184:     Lcd_Write_String("H:");
  2562     008A  300C               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2563     008B  00F7               	movwf	Lcd_Write_String@a
  2564     008C  3080               	movlw	128
  2565     008D  00F8               	movwf	Lcd_Write_String@a+1
  2566     008E  120A  118A  24E0  120A  118A  	fcall	_Lcd_Write_String
  2567     0093                     l1796:
  2568                           
  2569                           ;master.c: 185:     Lcd_Write_String(Su_hum);
  2570     0093  302B               	movlw	(low (_Su_hum| 0))& (0+255)
  2571     0094  00F7               	movwf	Lcd_Write_String@a
  2572     0095  3000               	movlw	0
  2573     0096  00F8               	movwf	Lcd_Write_String@a+1
  2574     0097  120A  118A  24E0  120A  118A  	fcall	_Lcd_Write_String
  2575     009C                     l1798:
  2576                           
  2577                           ;master.c: 186:     Lcd_Write_String("%RH");
  2578     009C  3005               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2579     009D  00F7               	movwf	Lcd_Write_String@a
  2580     009E  3080               	movlw	128
  2581     009F  00F8               	movwf	Lcd_Write_String@a+1
  2582     00A0  120A  118A  24E0  120A  118A  	fcall	_Lcd_Write_String
  2583                           
  2584                           ;master.c: 188:     Lcd_Set_Cursor(1,12);
  2585     00A5  300C               	movlw	12
  2586     00A6  00F6               	movwf	Lcd_Set_Cursor@b
  2587     00A7  3001               	movlw	1
  2588     00A8  120A  118A  2494  120A  118A  	fcall	_Lcd_Set_Cursor
  2589     00AD                     l1800:
  2590                           
  2591                           ;master.c: 189:     Lcd_Write_String("G:");
  2592     00AD  3009               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2593     00AE  00F7               	movwf	Lcd_Write_String@a
  2594     00AF  3080               	movlw	128
  2595     00B0  00F8               	movwf	Lcd_Write_String@a+1
  2596     00B1  120A  118A  24E0  120A  118A  	fcall	_Lcd_Write_String
  2597     00B6                     l1802:
  2598                           
  2599                           ;master.c: 190:     Lcd_Write_String(Sgas);
  2600     00B6  3027               	movlw	(low (_Sgas| 0))& (0+255)
  2601     00B7  00F7               	movwf	Lcd_Write_String@a
  2602     00B8  3000               	movlw	0
  2603     00B9  00F8               	movwf	Lcd_Write_String@a+1
  2604     00BA  120A  118A  24E0  120A  118A  	fcall	_Lcd_Write_String
  2605                           
  2606                           ;master.c: 192:     Lcd_Set_Cursor(2,12);
  2607     00BF  300C               	movlw	12
  2608     00C0  00F6               	movwf	Lcd_Set_Cursor@b
  2609     00C1  3002               	movlw	2
  2610     00C2  120A  118A  2494  120A  118A  	fcall	_Lcd_Set_Cursor
  2611     00C7                     l1804:
  2612                           
  2613                           ;master.c: 193:     Lcd_Write_String("IR:");
  2614     00C7  3001               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2615     00C8  00F7               	movwf	Lcd_Write_String@a
  2616     00C9  3080               	movlw	128
  2617     00CA  00F8               	movwf	Lcd_Write_String@a+1
  2618     00CB  120A  118A  24E0  120A  118A  	fcall	_Lcd_Write_String
  2619     00D0                     l1806:
  2620                           
  2621                           ;master.c: 194:     Lcd_Write_String(Sired);
  2622     00D0  3034               	movlw	(low (_Sired| 0))& (0+255)
  2623     00D1  00F7               	movwf	Lcd_Write_String@a
  2624     00D2  3000               	movlw	0
  2625     00D3  00F8               	movwf	Lcd_Write_String@a+1
  2626     00D4  120A  118A  24E0  120A  118A  	fcall	_Lcd_Write_String
  2627     00D9                     l107:
  2628     00D9  0008               	return
  2629     00DA                     __end_of_LDC_output:
  2630                           
  2631                           	psect	text16
  2632     017D                     __ptext16:	
  2633 ;; *************** function _separar_digitos8 *****************
  2634 ;; Defined at:
  2635 ;;		line 197 in file "master.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;  num             1    wreg     unsigned char 
  2638 ;;  dig8            1    0[BANK0 ] PTR unsigned char 
  2639 ;;		 -> Sired(2), Sgas(4), Su_hum(3), Sd_temp(3), 
  2640 ;;		 -> Su_temp(3), 
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;  num             1    4[BANK0 ] unsigned char 
  2643 ;;  unidades        1    8[BANK0 ] unsigned char 
  2644 ;;  decenas         1    7[BANK0 ] unsigned char 
  2645 ;;  centenas        1    6[BANK0 ] unsigned char 
  2646 ;;  div1            1    5[BANK0 ] unsigned char 
  2647 ;;  div2            1    3[BANK0 ] unsigned char 
  2648 ;; Return value:  Size  Location     Type
  2649 ;;                  1    wreg      void 
  2650 ;; Registers used:
  2651 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2652 ;; Tracked objects:
  2653 ;;		On entry : 0/0
  2654 ;;		On exit  : 0/0
  2655 ;;		Unchanged: 0/0
  2656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2657 ;;      Params:         0       1       0       0       0
  2658 ;;      Locals:         0       6       0       0       0
  2659 ;;      Temps:          0       2       0       0       0
  2660 ;;      Totals:         0       9       0       0       0
  2661 ;;Total ram usage:        9 bytes
  2662 ;; Hardware stack levels used: 1
  2663 ;; Hardware stack levels required when called: 2
  2664 ;; This function calls:
  2665 ;;		___awdiv
  2666 ;;		___awmod
  2667 ;; This function is called by:
  2668 ;;		_LDC_output
  2669 ;; This function uses a non-reentrant model
  2670 ;;
  2671                           
  2672     017D                     _separar_digitos8:	
  2673                           ;psect for function _separar_digitos8
  2674                           
  2675                           
  2676                           ;incstack = 0
  2677                           ; Regs used in _separar_digitos8: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2678                           ;separar_digitos8@num stored from wreg
  2679     017D  1283               	bcf	3,5	;RP0=0, select bank0
  2680     017E  1303               	bcf	3,6	;RP1=0, select bank0
  2681     017F  00BA               	movwf	separar_digitos8@num
  2682     0180                     l1662:
  2683                           
  2684                           ;master.c: 198:     uint8_t div1,div2,centenas,decenas,unidades;;master.c: 199:     div1
      +                           = num / 10;
  2685     0180  300A               	movlw	10
  2686     0181  00F2               	movwf	___awdiv@divisor
  2687     0182  3000               	movlw	0
  2688     0183  00F3               	movwf	___awdiv@divisor+1
  2689     0184  083A               	movf	separar_digitos8@num,w
  2690     0185  00B7               	movwf	??_separar_digitos8
  2691     0186  01B8               	clrf	??_separar_digitos8+1
  2692     0187  0837               	movf	??_separar_digitos8,w
  2693     0188  00F4               	movwf	___awdiv@dividend
  2694     0189  0838               	movf	??_separar_digitos8+1,w
  2695     018A  00F5               	movwf	___awdiv@dividend+1
  2696     018B  120A  118A  227B  120A  118A  	fcall	___awdiv
  2697     0190  0872               	movf	?___awdiv,w
  2698     0191  1283               	bcf	3,5	;RP0=0, select bank0
  2699     0192  1303               	bcf	3,6	;RP1=0, select bank0
  2700     0193  00BB               	movwf	separar_digitos8@div1
  2701                           
  2702                           ;master.c: 200:     unidades = num % 10;
  2703     0194  300A               	movlw	10
  2704     0195  00F2               	movwf	___awmod@divisor
  2705     0196  3000               	movlw	0
  2706     0197  00F3               	movwf	___awmod@divisor+1
  2707     0198  083A               	movf	separar_digitos8@num,w
  2708     0199  00B7               	movwf	??_separar_digitos8
  2709     019A  01B8               	clrf	??_separar_digitos8+1
  2710     019B  0837               	movf	??_separar_digitos8,w
  2711     019C  00F4               	movwf	___awmod@dividend
  2712     019D  0838               	movf	??_separar_digitos8+1,w
  2713     019E  00F5               	movwf	___awmod@dividend+1
  2714     019F  120A  118A  233F  120A  118A  	fcall	___awmod
  2715     01A4  0872               	movf	?___awmod,w
  2716     01A5  1283               	bcf	3,5	;RP0=0, select bank0
  2717     01A6  1303               	bcf	3,6	;RP1=0, select bank0
  2718     01A7  00BE               	movwf	separar_digitos8@unidades
  2719                           
  2720                           ;master.c: 201:     decenas = div1 % 10;
  2721     01A8  300A               	movlw	10
  2722     01A9  00F2               	movwf	___awmod@divisor
  2723     01AA  3000               	movlw	0
  2724     01AB  00F3               	movwf	___awmod@divisor+1
  2725     01AC  083B               	movf	separar_digitos8@div1,w
  2726     01AD  00B7               	movwf	??_separar_digitos8
  2727     01AE  01B8               	clrf	??_separar_digitos8+1
  2728     01AF  0837               	movf	??_separar_digitos8,w
  2729     01B0  00F4               	movwf	___awmod@dividend
  2730     01B1  0838               	movf	??_separar_digitos8+1,w
  2731     01B2  00F5               	movwf	___awmod@dividend+1
  2732     01B3  120A  118A  233F  120A  118A  	fcall	___awmod
  2733     01B8  0872               	movf	?___awmod,w
  2734     01B9  1283               	bcf	3,5	;RP0=0, select bank0
  2735     01BA  1303               	bcf	3,6	;RP1=0, select bank0
  2736     01BB  00BD               	movwf	separar_digitos8@decenas
  2737                           
  2738                           ;master.c: 202:     div2 = div1 / 10;
  2739     01BC  300A               	movlw	10
  2740     01BD  00F2               	movwf	___awdiv@divisor
  2741     01BE  3000               	movlw	0
  2742     01BF  00F3               	movwf	___awdiv@divisor+1
  2743     01C0  083B               	movf	separar_digitos8@div1,w
  2744     01C1  00B7               	movwf	??_separar_digitos8
  2745     01C2  01B8               	clrf	??_separar_digitos8+1
  2746     01C3  0837               	movf	??_separar_digitos8,w
  2747     01C4  00F4               	movwf	___awdiv@dividend
  2748     01C5  0838               	movf	??_separar_digitos8+1,w
  2749     01C6  00F5               	movwf	___awdiv@dividend+1
  2750     01C7  120A  118A  227B  120A  118A  	fcall	___awdiv
  2751     01CC  0872               	movf	?___awdiv,w
  2752     01CD  1283               	bcf	3,5	;RP0=0, select bank0
  2753     01CE  1303               	bcf	3,6	;RP1=0, select bank0
  2754     01CF  00B9               	movwf	separar_digitos8@div2
  2755                           
  2756                           ;master.c: 203:     centenas = div2 % 10;
  2757     01D0  300A               	movlw	10
  2758     01D1  00F2               	movwf	___awmod@divisor
  2759     01D2  3000               	movlw	0
  2760     01D3  00F3               	movwf	___awmod@divisor+1
  2761     01D4  0839               	movf	separar_digitos8@div2,w
  2762     01D5  00B7               	movwf	??_separar_digitos8
  2763     01D6  01B8               	clrf	??_separar_digitos8+1
  2764     01D7  0837               	movf	??_separar_digitos8,w
  2765     01D8  00F4               	movwf	___awmod@dividend
  2766     01D9  0838               	movf	??_separar_digitos8+1,w
  2767     01DA  00F5               	movwf	___awmod@dividend+1
  2768     01DB  120A  118A  233F  120A  118A  	fcall	___awmod
  2769     01E0  0872               	movf	?___awmod,w
  2770     01E1  1283               	bcf	3,5	;RP0=0, select bank0
  2771     01E2  1303               	bcf	3,6	;RP1=0, select bank0
  2772     01E3  00BC               	movwf	separar_digitos8@centenas
  2773     01E4                     l1664:
  2774                           
  2775                           ;master.c: 205:     if(decenas == 0){
  2776     01E4  083D               	movf	separar_digitos8@decenas,w
  2777     01E5  1D03               	btfss	3,2
  2778     01E6  29E8               	goto	u1021
  2779     01E7  29E9               	goto	u1020
  2780     01E8                     u1021:
  2781     01E8  29F0               	goto	l1668
  2782     01E9                     u1020:
  2783     01E9                     l1666:
  2784                           
  2785                           ;master.c: 206:         dig8[0] = unidades + '0';
  2786     01E9  0836               	movf	separar_digitos8@dig8,w
  2787     01EA  0084               	movwf	4
  2788     01EB  083E               	movf	separar_digitos8@unidades,w
  2789     01EC  3E30               	addlw	48
  2790     01ED  1383               	bcf	3,7	;select IRP bank0
  2791     01EE  0080               	movwf	0
  2792                           
  2793                           ;master.c: 207:     }
  2794     01EF  2A12               	goto	l114
  2795     01F0                     l1668:
  2796     01F0  083C               	movf	separar_digitos8@centenas,w
  2797     01F1  1D03               	btfss	3,2
  2798     01F2  29F4               	goto	u1031
  2799     01F3  29F5               	goto	u1030
  2800     01F4                     u1031:
  2801     01F4  2A01               	goto	l1672
  2802     01F5                     u1030:
  2803     01F5                     l1670:
  2804                           
  2805                           ;master.c: 209:         dig8[1] = unidades + '0';
  2806     01F5  0A36               	incf	separar_digitos8@dig8,w
  2807     01F6  0084               	movwf	4
  2808     01F7  083E               	movf	separar_digitos8@unidades,w
  2809     01F8  3E30               	addlw	48
  2810     01F9  1383               	bcf	3,7	;select IRP bank0
  2811     01FA  0080               	movwf	0
  2812                           
  2813                           ;master.c: 210:         dig8[0] = decenas + '0';
  2814     01FB  0836               	movf	separar_digitos8@dig8,w
  2815     01FC  0084               	movwf	4
  2816     01FD  083D               	movf	separar_digitos8@decenas,w
  2817     01FE  3E30               	addlw	48
  2818     01FF  0080               	movwf	0
  2819                           
  2820                           ;master.c: 211:     }
  2821     0200  2A12               	goto	l114
  2822     0201                     l1672:
  2823                           
  2824                           ;master.c: 213:         dig8[2] = unidades + '0';
  2825     0201  0836               	movf	separar_digitos8@dig8,w
  2826     0202  3E02               	addlw	2
  2827     0203  0084               	movwf	4
  2828     0204  083E               	movf	separar_digitos8@unidades,w
  2829     0205  3E30               	addlw	48
  2830     0206  1383               	bcf	3,7	;select IRP bank0
  2831     0207  0080               	movwf	0
  2832                           
  2833                           ;master.c: 214:         dig8[1] = decenas + '0';
  2834     0208  0A36               	incf	separar_digitos8@dig8,w
  2835     0209  0084               	movwf	4
  2836     020A  083D               	movf	separar_digitos8@decenas,w
  2837     020B  3E30               	addlw	48
  2838     020C  0080               	movwf	0
  2839                           
  2840                           ;master.c: 215:         dig8[0] = centenas + '0';
  2841     020D  0836               	movf	separar_digitos8@dig8,w
  2842     020E  0084               	movwf	4
  2843     020F  083C               	movf	separar_digitos8@centenas,w
  2844     0210  3E30               	addlw	48
  2845     0211  0080               	movwf	0
  2846     0212                     l114:
  2847     0212  0008               	return
  2848     0213                     __end_of_separar_digitos8:
  2849                           
  2850                           	psect	text17
  2851     033F                     __ptext17:	
  2852 ;; *************** function ___awmod *****************
  2853 ;; Defined at:
  2854 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;  divisor         2    2[COMMON] int 
  2857 ;;  dividend        2    4[COMMON] int 
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;  sign            1    7[COMMON] unsigned char 
  2860 ;;  counter         1    6[COMMON] unsigned char 
  2861 ;; Return value:  Size  Location     Type
  2862 ;;                  2    2[COMMON] int 
  2863 ;; Registers used:
  2864 ;;		wreg, status,2, status,0, btemp+1
  2865 ;; Tracked objects:
  2866 ;;		On entry : 0/0
  2867 ;;		On exit  : 0/0
  2868 ;;		Unchanged: 0/0
  2869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2870 ;;      Params:         4       0       0       0       0
  2871 ;;      Locals:         2       0       0       0       0
  2872 ;;      Temps:          0       0       0       0       0
  2873 ;;      Totals:         6       0       0       0       0
  2874 ;;Total ram usage:        6 bytes
  2875 ;; Hardware stack levels used: 1
  2876 ;; Hardware stack levels required when called: 1
  2877 ;; This function calls:
  2878 ;;		Nothing
  2879 ;; This function is called by:
  2880 ;;		_separar_digitos8
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884     033F                     ___awmod:	
  2885                           ;psect for function ___awmod
  2886                           
  2887     033F                     l1316:	
  2888                           ;incstack = 0
  2889                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  2890                           
  2891     033F  01F7               	clrf	___awmod@sign
  2892     0340                     l1318:
  2893     0340  1FF5               	btfss	___awmod@dividend+1,7
  2894     0341  2B43               	goto	u691
  2895     0342  2B44               	goto	u690
  2896     0343                     u691:
  2897     0343  2B4B               	goto	l1324
  2898     0344                     u690:
  2899     0344                     l1320:
  2900     0344  09F4               	comf	___awmod@dividend,f
  2901     0345  09F5               	comf	___awmod@dividend+1,f
  2902     0346  0AF4               	incf	___awmod@dividend,f
  2903     0347  1903               	skipnz
  2904     0348  0AF5               	incf	___awmod@dividend+1,f
  2905     0349                     l1322:
  2906     0349  01F7               	clrf	___awmod@sign
  2907     034A  0AF7               	incf	___awmod@sign,f
  2908     034B                     l1324:
  2909     034B  1FF3               	btfss	___awmod@divisor+1,7
  2910     034C  2B4E               	goto	u701
  2911     034D  2B4F               	goto	u700
  2912     034E                     u701:
  2913     034E  2B54               	goto	l1328
  2914     034F                     u700:
  2915     034F                     l1326:
  2916     034F  09F2               	comf	___awmod@divisor,f
  2917     0350  09F3               	comf	___awmod@divisor+1,f
  2918     0351  0AF2               	incf	___awmod@divisor,f
  2919     0352  1903               	skipnz
  2920     0353  0AF3               	incf	___awmod@divisor+1,f
  2921     0354                     l1328:
  2922     0354  0872               	movf	___awmod@divisor,w
  2923     0355  0473               	iorwf	___awmod@divisor+1,w
  2924     0356  1903               	btfsc	3,2
  2925     0357  2B59               	goto	u711
  2926     0358  2B5A               	goto	u710
  2927     0359                     u711:
  2928     0359  2B89               	goto	l1346
  2929     035A                     u710:
  2930     035A                     l1330:
  2931     035A  01F6               	clrf	___awmod@counter
  2932     035B  0AF6               	incf	___awmod@counter,f
  2933     035C  2B68               	goto	l1336
  2934     035D                     l1332:
  2935     035D  3001               	movlw	1
  2936     035E                     u725:
  2937     035E  1003               	clrc
  2938     035F  0DF2               	rlf	___awmod@divisor,f
  2939     0360  0DF3               	rlf	___awmod@divisor+1,f
  2940     0361  3EFF               	addlw	-1
  2941     0362  1D03               	skipz
  2942     0363  2B5E               	goto	u725
  2943     0364                     l1334:
  2944     0364  3001               	movlw	1
  2945     0365  00FF               	movwf	btemp+1
  2946     0366  087F               	movf	btemp+1,w
  2947     0367  07F6               	addwf	___awmod@counter,f
  2948     0368                     l1336:
  2949     0368  1FF3               	btfss	___awmod@divisor+1,7
  2950     0369  2B6B               	goto	u731
  2951     036A  2B6C               	goto	u730
  2952     036B                     u731:
  2953     036B  2B5D               	goto	l1332
  2954     036C                     u730:
  2955     036C                     l1338:
  2956     036C  0873               	movf	___awmod@divisor+1,w
  2957     036D  0275               	subwf	___awmod@dividend+1,w
  2958     036E  1D03               	skipz
  2959     036F  2B72               	goto	u745
  2960     0370  0872               	movf	___awmod@divisor,w
  2961     0371  0274               	subwf	___awmod@dividend,w
  2962     0372                     u745:
  2963     0372  1C03               	skipc
  2964     0373  2B75               	goto	u741
  2965     0374  2B76               	goto	u740
  2966     0375                     u741:
  2967     0375  2B7C               	goto	l1342
  2968     0376                     u740:
  2969     0376                     l1340:
  2970     0376  0872               	movf	___awmod@divisor,w
  2971     0377  02F4               	subwf	___awmod@dividend,f
  2972     0378  0873               	movf	___awmod@divisor+1,w
  2973     0379  1C03               	skipc
  2974     037A  03F5               	decf	___awmod@dividend+1,f
  2975     037B  02F5               	subwf	___awmod@dividend+1,f
  2976     037C                     l1342:
  2977     037C  3001               	movlw	1
  2978     037D                     u755:
  2979     037D  1003               	clrc
  2980     037E  0CF3               	rrf	___awmod@divisor+1,f
  2981     037F  0CF2               	rrf	___awmod@divisor,f
  2982     0380  3EFF               	addlw	-1
  2983     0381  1D03               	skipz
  2984     0382  2B7D               	goto	u755
  2985     0383                     l1344:
  2986     0383  3001               	movlw	1
  2987     0384  02F6               	subwf	___awmod@counter,f
  2988     0385  1D03               	btfss	3,2
  2989     0386  2B88               	goto	u761
  2990     0387  2B89               	goto	u760
  2991     0388                     u761:
  2992     0388  2B6C               	goto	l1338
  2993     0389                     u760:
  2994     0389                     l1346:
  2995     0389  0877               	movf	___awmod@sign,w
  2996     038A  1903               	btfsc	3,2
  2997     038B  2B8D               	goto	u771
  2998     038C  2B8E               	goto	u770
  2999     038D                     u771:
  3000     038D  2B93               	goto	l1350
  3001     038E                     u770:
  3002     038E                     l1348:
  3003     038E  09F4               	comf	___awmod@dividend,f
  3004     038F  09F5               	comf	___awmod@dividend+1,f
  3005     0390  0AF4               	incf	___awmod@dividend,f
  3006     0391  1903               	skipnz
  3007     0392  0AF5               	incf	___awmod@dividend+1,f
  3008     0393                     l1350:
  3009     0393  0875               	movf	___awmod@dividend+1,w
  3010     0394  00F3               	movwf	?___awmod+1
  3011     0395  0874               	movf	___awmod@dividend,w
  3012     0396  00F2               	movwf	?___awmod
  3013     0397                     l476:
  3014     0397  0008               	return
  3015     0398                     __end_of___awmod:
  3016                           
  3017                           	psect	text18
  3018     027B                     __ptext18:	
  3019 ;; *************** function ___awdiv *****************
  3020 ;; Defined at:
  3021 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;  divisor         2    2[COMMON] int 
  3024 ;;  dividend        2    4[COMMON] int 
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;  quotient        2    8[COMMON] int 
  3027 ;;  sign            1    7[COMMON] unsigned char 
  3028 ;;  counter         1    6[COMMON] unsigned char 
  3029 ;; Return value:  Size  Location     Type
  3030 ;;                  2    2[COMMON] int 
  3031 ;; Registers used:
  3032 ;;		wreg, status,2, status,0, btemp+1
  3033 ;; Tracked objects:
  3034 ;;		On entry : 0/0
  3035 ;;		On exit  : 0/0
  3036 ;;		Unchanged: 0/0
  3037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3038 ;;      Params:         4       0       0       0       0
  3039 ;;      Locals:         4       0       0       0       0
  3040 ;;      Temps:          0       0       0       0       0
  3041 ;;      Totals:         8       0       0       0       0
  3042 ;;Total ram usage:        8 bytes
  3043 ;; Hardware stack levels used: 1
  3044 ;; Hardware stack levels required when called: 1
  3045 ;; This function calls:
  3046 ;;		Nothing
  3047 ;; This function is called by:
  3048 ;;		_separar_digitos8
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051                           
  3052     027B                     ___awdiv:	
  3053                           ;psect for function ___awdiv
  3054                           
  3055     027B                     l1272:	
  3056                           ;incstack = 0
  3057                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  3058                           
  3059     027B  01F7               	clrf	___awdiv@sign
  3060     027C                     l1274:
  3061     027C  1FF3               	btfss	___awdiv@divisor+1,7
  3062     027D  2A7F               	goto	u591
  3063     027E  2A80               	goto	u590
  3064     027F                     u591:
  3065     027F  2A87               	goto	l1280
  3066     0280                     u590:
  3067     0280                     l1276:
  3068     0280  09F2               	comf	___awdiv@divisor,f
  3069     0281  09F3               	comf	___awdiv@divisor+1,f
  3070     0282  0AF2               	incf	___awdiv@divisor,f
  3071     0283  1903               	skipnz
  3072     0284  0AF3               	incf	___awdiv@divisor+1,f
  3073     0285                     l1278:
  3074     0285  01F7               	clrf	___awdiv@sign
  3075     0286  0AF7               	incf	___awdiv@sign,f
  3076     0287                     l1280:
  3077     0287  1FF5               	btfss	___awdiv@dividend+1,7
  3078     0288  2A8A               	goto	u601
  3079     0289  2A8B               	goto	u600
  3080     028A                     u601:
  3081     028A  2A94               	goto	l1286
  3082     028B                     u600:
  3083     028B                     l1282:
  3084     028B  09F4               	comf	___awdiv@dividend,f
  3085     028C  09F5               	comf	___awdiv@dividend+1,f
  3086     028D  0AF4               	incf	___awdiv@dividend,f
  3087     028E  1903               	skipnz
  3088     028F  0AF5               	incf	___awdiv@dividend+1,f
  3089     0290                     l1284:
  3090     0290  3001               	movlw	1
  3091     0291  00FF               	movwf	btemp+1
  3092     0292  087F               	movf	btemp+1,w
  3093     0293  06F7               	xorwf	___awdiv@sign,f
  3094     0294                     l1286:
  3095     0294  01F8               	clrf	___awdiv@quotient
  3096     0295  01F9               	clrf	___awdiv@quotient+1
  3097     0296                     l1288:
  3098     0296  0872               	movf	___awdiv@divisor,w
  3099     0297  0473               	iorwf	___awdiv@divisor+1,w
  3100     0298  1903               	btfsc	3,2
  3101     0299  2A9B               	goto	u611
  3102     029A  2A9C               	goto	u610
  3103     029B                     u611:
  3104     029B  2AD3               	goto	l1308
  3105     029C                     u610:
  3106     029C                     l1290:
  3107     029C  01F6               	clrf	___awdiv@counter
  3108     029D  0AF6               	incf	___awdiv@counter,f
  3109     029E  2AAA               	goto	l1296
  3110     029F                     l1292:
  3111     029F  3001               	movlw	1
  3112     02A0                     u625:
  3113     02A0  1003               	clrc
  3114     02A1  0DF2               	rlf	___awdiv@divisor,f
  3115     02A2  0DF3               	rlf	___awdiv@divisor+1,f
  3116     02A3  3EFF               	addlw	-1
  3117     02A4  1D03               	skipz
  3118     02A5  2AA0               	goto	u625
  3119     02A6                     l1294:
  3120     02A6  3001               	movlw	1
  3121     02A7  00FF               	movwf	btemp+1
  3122     02A8  087F               	movf	btemp+1,w
  3123     02A9  07F6               	addwf	___awdiv@counter,f
  3124     02AA                     l1296:
  3125     02AA  1FF3               	btfss	___awdiv@divisor+1,7
  3126     02AB  2AAD               	goto	u631
  3127     02AC  2AAE               	goto	u630
  3128     02AD                     u631:
  3129     02AD  2A9F               	goto	l1292
  3130     02AE                     u630:
  3131     02AE                     l1298:
  3132     02AE  3001               	movlw	1
  3133     02AF                     u645:
  3134     02AF  1003               	clrc
  3135     02B0  0DF8               	rlf	___awdiv@quotient,f
  3136     02B1  0DF9               	rlf	___awdiv@quotient+1,f
  3137     02B2  3EFF               	addlw	-1
  3138     02B3  1D03               	skipz
  3139     02B4  2AAF               	goto	u645
  3140     02B5  0873               	movf	___awdiv@divisor+1,w
  3141     02B6  0275               	subwf	___awdiv@dividend+1,w
  3142     02B7  1D03               	skipz
  3143     02B8  2ABB               	goto	u655
  3144     02B9  0872               	movf	___awdiv@divisor,w
  3145     02BA  0274               	subwf	___awdiv@dividend,w
  3146     02BB                     u655:
  3147     02BB  1C03               	skipc
  3148     02BC  2ABE               	goto	u651
  3149     02BD  2ABF               	goto	u650
  3150     02BE                     u651:
  3151     02BE  2AC6               	goto	l1304
  3152     02BF                     u650:
  3153     02BF                     l1300:
  3154     02BF  0872               	movf	___awdiv@divisor,w
  3155     02C0  02F4               	subwf	___awdiv@dividend,f
  3156     02C1  0873               	movf	___awdiv@divisor+1,w
  3157     02C2  1C03               	skipc
  3158     02C3  03F5               	decf	___awdiv@dividend+1,f
  3159     02C4  02F5               	subwf	___awdiv@dividend+1,f
  3160     02C5                     l1302:
  3161     02C5  1478               	bsf	___awdiv@quotient,0
  3162     02C6                     l1304:
  3163     02C6  3001               	movlw	1
  3164     02C7                     u665:
  3165     02C7  1003               	clrc
  3166     02C8  0CF3               	rrf	___awdiv@divisor+1,f
  3167     02C9  0CF2               	rrf	___awdiv@divisor,f
  3168     02CA  3EFF               	addlw	-1
  3169     02CB  1D03               	skipz
  3170     02CC  2AC7               	goto	u665
  3171     02CD                     l1306:
  3172     02CD  3001               	movlw	1
  3173     02CE  02F6               	subwf	___awdiv@counter,f
  3174     02CF  1D03               	btfss	3,2
  3175     02D0  2AD2               	goto	u671
  3176     02D1  2AD3               	goto	u670
  3177     02D2                     u671:
  3178     02D2  2AAE               	goto	l1298
  3179     02D3                     u670:
  3180     02D3                     l1308:
  3181     02D3  0877               	movf	___awdiv@sign,w
  3182     02D4  1903               	btfsc	3,2
  3183     02D5  2AD7               	goto	u681
  3184     02D6  2AD8               	goto	u680
  3185     02D7                     u681:
  3186     02D7  2ADD               	goto	l1312
  3187     02D8                     u680:
  3188     02D8                     l1310:
  3189     02D8  09F8               	comf	___awdiv@quotient,f
  3190     02D9  09F9               	comf	___awdiv@quotient+1,f
  3191     02DA  0AF8               	incf	___awdiv@quotient,f
  3192     02DB  1903               	skipnz
  3193     02DC  0AF9               	incf	___awdiv@quotient+1,f
  3194     02DD                     l1312:
  3195     02DD  0879               	movf	___awdiv@quotient+1,w
  3196     02DE  00F3               	movwf	?___awdiv+1
  3197     02DF  0878               	movf	___awdiv@quotient,w
  3198     02E0  00F2               	movwf	?___awdiv
  3199     02E1                     l463:
  3200     02E1  0008               	return
  3201     02E2                     __end_of___awdiv:
  3202                           
  3203                           	psect	text19
  3204     04E0                     __ptext19:	
  3205 ;; *************** function _Lcd_Write_String *****************
  3206 ;; Defined at:
  3207 ;;		line 98 in file "LCD4b.c"
  3208 ;; Parameters:    Size  Location     Type
  3209 ;;  a               2    7[COMMON] PTR unsigned char 
  3210 ;;		 -> STR_6(4), STR_5(3), STR_4(4), STR_3(3), 
  3211 ;;		 -> STR_2(3), STR_1(3), Sired(2), Sgas(4), 
  3212 ;;		 -> Su_hum(3), Sd_temp(3), Su_temp(3), 
  3213 ;; Auto vars:     Size  Location     Type
  3214 ;;  i               2    3[BANK0 ] int 
  3215 ;; Return value:  Size  Location     Type
  3216 ;;                  1    wreg      void 
  3217 ;; Registers used:
  3218 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3219 ;; Tracked objects:
  3220 ;;		On entry : 0/0
  3221 ;;		On exit  : 0/0
  3222 ;;		Unchanged: 0/0
  3223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3224 ;;      Params:         2       0       0       0       0
  3225 ;;      Locals:         0       2       0       0       0
  3226 ;;      Temps:          0       3       0       0       0
  3227 ;;      Totals:         2       5       0       0       0
  3228 ;;Total ram usage:        7 bytes
  3229 ;; Hardware stack levels used: 1
  3230 ;; Hardware stack levels required when called: 3
  3231 ;; This function calls:
  3232 ;;		_Lcd_Write_Char
  3233 ;; This function is called by:
  3234 ;;		_LDC_output
  3235 ;; This function uses a non-reentrant model
  3236 ;;
  3237                           
  3238     04E0                     _Lcd_Write_String:	
  3239                           ;psect for function _Lcd_Write_String
  3240                           
  3241     04E0                     l1694:	
  3242                           ;incstack = 0
  3243                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3244                           
  3245                           
  3246                           ;LCD4b.c: 99:     int i;;LCD4b.c: 100:     for (i = 0; a[i] != '\0'; i++)
  3247     04E0  1283               	bcf	3,5	;RP0=0, select bank0
  3248     04E1  1303               	bcf	3,6	;RP1=0, select bank0
  3249     04E2  01B9               	clrf	Lcd_Write_String@i
  3250     04E3  01BA               	clrf	Lcd_Write_String@i+1
  3251     04E4  2D09               	goto	l1700
  3252     04E5                     l1696:
  3253                           
  3254                           ;LCD4b.c: 101:         Lcd_Write_Char(a[i]);
  3255     04E5  0839               	movf	Lcd_Write_String@i,w
  3256     04E6  0777               	addwf	Lcd_Write_String@a,w
  3257     04E7  00B7               	movwf	??_Lcd_Write_String+1
  3258     04E8  0878               	movf	Lcd_Write_String@a+1,w
  3259     04E9  00B6               	movwf	??_Lcd_Write_String
  3260     04EA  1803               	skipnc
  3261     04EB  0AB6               	incf	??_Lcd_Write_String,f
  3262     04EC  1FB9               	btfss	Lcd_Write_String@i,7
  3263     04ED  2CEF               	goto	u1080
  3264     04EE  03B6               	decf	??_Lcd_Write_String,f
  3265     04EF                     u1080:
  3266     04EF  1283               	bcf	3,5	;RP0=0, select bank0
  3267     04F0  1303               	bcf	3,6	;RP1=0, select bank0
  3268     04F1  0836               	movf	??_Lcd_Write_String,w
  3269     04F2  00B8               	movwf	??_Lcd_Write_String+2
  3270     04F3  0838               	movf	??_Lcd_Write_String+2,w
  3271     04F4  00FF               	movwf	btemp+1
  3272     04F5  0837               	movf	??_Lcd_Write_String+1,w
  3273     04F6  0084               	movwf	4
  3274     04F7  120A  118A  2627  120A  118A  	fcall	stringtab
  3275     04FC  120A  118A  2593  120A  118A  	fcall	_Lcd_Write_Char
  3276     0501                     l1698:
  3277     0501  3001               	movlw	1
  3278     0502  1283               	bcf	3,5	;RP0=0, select bank0
  3279     0503  1303               	bcf	3,6	;RP1=0, select bank0
  3280     0504  07B9               	addwf	Lcd_Write_String@i,f
  3281     0505  1803               	skipnc
  3282     0506  0ABA               	incf	Lcd_Write_String@i+1,f
  3283     0507  3000               	movlw	0
  3284     0508  07BA               	addwf	Lcd_Write_String@i+1,f
  3285     0509                     l1700:
  3286     0509  0839               	movf	Lcd_Write_String@i,w
  3287     050A  0777               	addwf	Lcd_Write_String@a,w
  3288     050B  00B7               	movwf	??_Lcd_Write_String+1
  3289     050C  0878               	movf	Lcd_Write_String@a+1,w
  3290     050D  00B6               	movwf	??_Lcd_Write_String
  3291     050E  1803               	skipnc
  3292     050F  0AB6               	incf	??_Lcd_Write_String,f
  3293     0510  1FB9               	btfss	Lcd_Write_String@i,7
  3294     0511  2D13               	goto	u1090
  3295     0512  03B6               	decf	??_Lcd_Write_String,f
  3296     0513                     u1090:
  3297     0513  1283               	bcf	3,5	;RP0=0, select bank0
  3298     0514  1303               	bcf	3,6	;RP1=0, select bank0
  3299     0515  0836               	movf	??_Lcd_Write_String,w
  3300     0516  00B8               	movwf	??_Lcd_Write_String+2
  3301     0517  0838               	movf	??_Lcd_Write_String+2,w
  3302     0518  00FF               	movwf	btemp+1
  3303     0519  0837               	movf	??_Lcd_Write_String+1,w
  3304     051A  0084               	movwf	4
  3305     051B  120A  118A  2627  120A  118A  	fcall	stringtab
  3306     0520  3A00               	xorlw	0
  3307     0521  1D03               	skipz
  3308     0522  2D24               	goto	u1101
  3309     0523  2D25               	goto	u1100
  3310     0524                     u1101:
  3311     0524  2CE5               	goto	l1696
  3312     0525                     u1100:
  3313     0525                     l218:
  3314     0525  0008               	return
  3315     0526                     __end_of_Lcd_Write_String:
  3316                           
  3317                           	psect	text20
  3318     0593                     __ptext20:	
  3319 ;; *************** function _Lcd_Write_Char *****************
  3320 ;; Defined at:
  3321 ;;		line 83 in file "LCD4b.c"
  3322 ;; Parameters:    Size  Location     Type
  3323 ;;  a               1    wreg     unsigned char 
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;  a               1    6[COMMON] unsigned char 
  3326 ;;  y               1    5[COMMON] unsigned char 
  3327 ;;  temp            1    4[COMMON] unsigned char 
  3328 ;; Return value:  Size  Location     Type
  3329 ;;                  1    wreg      void 
  3330 ;; Registers used:
  3331 ;;		wreg, status,2, status,0, pclath, cstack
  3332 ;; Tracked objects:
  3333 ;;		On entry : 0/0
  3334 ;;		On exit  : 0/0
  3335 ;;		Unchanged: 0/0
  3336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3337 ;;      Params:         0       0       0       0       0
  3338 ;;      Locals:         3       0       0       0       0
  3339 ;;      Temps:          1       0       0       0       0
  3340 ;;      Totals:         4       0       0       0       0
  3341 ;;Total ram usage:        4 bytes
  3342 ;; Hardware stack levels used: 1
  3343 ;; Hardware stack levels required when called: 2
  3344 ;; This function calls:
  3345 ;;		_Lcd_Port
  3346 ;; This function is called by:
  3347 ;;		_LDC_output
  3348 ;;		_Lcd_Write_String
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352     0593                     _Lcd_Write_Char:	
  3353                           ;psect for function _Lcd_Write_Char
  3354                           
  3355                           
  3356                           ;incstack = 0
  3357                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3358                           ;Lcd_Write_Char@a stored from wreg
  3359     0593  00F6               	movwf	Lcd_Write_Char@a
  3360     0594                     l1584:
  3361                           
  3362                           ;LCD4b.c: 84:     char temp, y;;LCD4b.c: 85:     temp = a & 0x0F;
  3363     0594  0876               	movf	Lcd_Write_Char@a,w
  3364     0595  390F               	andlw	15
  3365     0596  00F4               	movwf	Lcd_Write_Char@temp
  3366                           
  3367                           ;LCD4b.c: 86:     y = a & 0xF0;
  3368     0597  0876               	movf	Lcd_Write_Char@a,w
  3369     0598  39F0               	andlw	240
  3370     0599  00F5               	movwf	Lcd_Write_Char@y
  3371     059A                     l1586:
  3372                           
  3373                           ;LCD4b.c: 87:     PORTDbits.RD2 = 1;
  3374     059A  1283               	bcf	3,5	;RP0=0, select bank0
  3375     059B  1303               	bcf	3,6	;RP1=0, select bank0
  3376     059C  1508               	bsf	8,2	;volatile
  3377     059D                     l1588:
  3378                           
  3379                           ;LCD4b.c: 88:     Lcd_Port(y >> 4);
  3380     059D  0875               	movf	Lcd_Write_Char@y,w
  3381     059E  00F3               	movwf	??_Lcd_Write_Char
  3382     059F  3004               	movlw	4
  3383     05A0                     u935:
  3384     05A0  1003               	clrc
  3385     05A1  0CF3               	rrf	??_Lcd_Write_Char,f
  3386     05A2  3EFF               	addlw	-1
  3387     05A3  1D03               	skipz
  3388     05A4  2DA0               	goto	u935
  3389     05A5  0873               	movf	??_Lcd_Write_Char,w
  3390     05A6  120A  118A  264B  120A  118A  	fcall	_Lcd_Port
  3391     05AB                     l1590:
  3392                           
  3393                           ;LCD4b.c: 89:     RD3 = 1;
  3394     05AB  1283               	bcf	3,5	;RP0=0, select bank0
  3395     05AC  1303               	bcf	3,6	;RP1=0, select bank0
  3396     05AD  1588               	bsf	8,3	;volatile
  3397     05AE                     l1592:
  3398                           
  3399                           ;LCD4b.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3400     05AE  301A               	movlw	26
  3401     05AF  00F3               	movwf	??_Lcd_Write_Char
  3402     05B0                     u1267:
  3403     05B0  0BF3               	decfsz	??_Lcd_Write_Char,f
  3404     05B1  2DB0               	goto	u1267
  3405     05B2  0000               	nop
  3406     05B3                     l1594:
  3407                           
  3408                           ;LCD4b.c: 91:     RD3 = 0;
  3409     05B3  1283               	bcf	3,5	;RP0=0, select bank0
  3410     05B4  1303               	bcf	3,6	;RP1=0, select bank0
  3411     05B5  1188               	bcf	8,3	;volatile
  3412     05B6                     l1596:
  3413                           
  3414                           ;LCD4b.c: 92:     Lcd_Port(temp);
  3415     05B6  0874               	movf	Lcd_Write_Char@temp,w
  3416     05B7  120A  118A  264B  120A  118A  	fcall	_Lcd_Port
  3417     05BC                     l1598:
  3418                           
  3419                           ;LCD4b.c: 93:     RD3 = 1;
  3420     05BC  1283               	bcf	3,5	;RP0=0, select bank0
  3421     05BD  1303               	bcf	3,6	;RP1=0, select bank0
  3422     05BE  1588               	bsf	8,3	;volatile
  3423     05BF                     l1600:
  3424                           
  3425                           ;LCD4b.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3426     05BF  301A               	movlw	26
  3427     05C0  00F3               	movwf	??_Lcd_Write_Char
  3428     05C1                     u1277:
  3429     05C1  0BF3               	decfsz	??_Lcd_Write_Char,f
  3430     05C2  2DC1               	goto	u1277
  3431     05C3  0000               	nop
  3432     05C4                     l1602:
  3433                           
  3434                           ;LCD4b.c: 95:     RD3 = 0;
  3435     05C4  1283               	bcf	3,5	;RP0=0, select bank0
  3436     05C5  1303               	bcf	3,6	;RP1=0, select bank0
  3437     05C6  1188               	bcf	8,3	;volatile
  3438     05C7                     l212:
  3439     05C7  0008               	return
  3440     05C8                     __end_of_Lcd_Write_Char:
  3441                           
  3442                           	psect	text21
  3443     0494                     __ptext21:	
  3444 ;; *************** function _Lcd_Set_Cursor *****************
  3445 ;; Defined at:
  3446 ;;		line 48 in file "LCD4b.c"
  3447 ;; Parameters:    Size  Location     Type
  3448 ;;  a               1    wreg     unsigned char 
  3449 ;;  b               1    6[COMMON] unsigned char 
  3450 ;; Auto vars:     Size  Location     Type
  3451 ;;  a               1    0[BANK0 ] unsigned char 
  3452 ;;  temp            1    3[BANK0 ] unsigned char 
  3453 ;;  y               1    2[BANK0 ] unsigned char 
  3454 ;;  z               1    1[BANK0 ] unsigned char 
  3455 ;; Return value:  Size  Location     Type
  3456 ;;                  1    wreg      void 
  3457 ;; Registers used:
  3458 ;;		wreg, status,2, status,0, pclath, cstack
  3459 ;; Tracked objects:
  3460 ;;		On entry : 0/0
  3461 ;;		On exit  : 0/0
  3462 ;;		Unchanged: 0/0
  3463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3464 ;;      Params:         1       0       0       0       0
  3465 ;;      Locals:         0       4       0       0       0
  3466 ;;      Temps:          1       0       0       0       0
  3467 ;;      Totals:         2       4       0       0       0
  3468 ;;Total ram usage:        6 bytes
  3469 ;; Hardware stack levels used: 1
  3470 ;; Hardware stack levels required when called: 3
  3471 ;; This function calls:
  3472 ;;		_Lcd_Cmd
  3473 ;; This function is called by:
  3474 ;;		_LDC_output
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477                           
  3478     0494                     _Lcd_Set_Cursor:	
  3479                           ;psect for function _Lcd_Set_Cursor
  3480                           
  3481                           
  3482                           ;incstack = 0
  3483                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3484                           ;Lcd_Set_Cursor@a stored from wreg
  3485     0494  1283               	bcf	3,5	;RP0=0, select bank0
  3486     0495  1303               	bcf	3,6	;RP1=0, select bank0
  3487     0496  00B6               	movwf	Lcd_Set_Cursor@a
  3488     0497                     l1674:
  3489                           
  3490                           ;LCD4b.c: 49:     char temp, z, y;;LCD4b.c: 50:     if (a == 1) {
  3491     0497  0336               	decf	Lcd_Set_Cursor@a,w
  3492     0498  1D03               	btfss	3,2
  3493     0499  2C9B               	goto	u1041
  3494     049A  2C9C               	goto	u1040
  3495     049B                     u1041:
  3496     049B  2CBB               	goto	l1684
  3497     049C                     u1040:
  3498     049C                     l1676:
  3499                           
  3500                           ;LCD4b.c: 51:         temp = 0x80 + b - 1;
  3501     049C  0876               	movf	Lcd_Set_Cursor@b,w
  3502     049D  3E7F               	addlw	127
  3503     049E  00B9               	movwf	Lcd_Set_Cursor@temp
  3504                           
  3505                           ;LCD4b.c: 52:         z = temp >> 4;
  3506     049F  0839               	movf	Lcd_Set_Cursor@temp,w
  3507     04A0  00F7               	movwf	??_Lcd_Set_Cursor
  3508     04A1  3004               	movlw	4
  3509     04A2                     u1055:
  3510     04A2  1003               	clrc
  3511     04A3  0CF7               	rrf	??_Lcd_Set_Cursor,f
  3512     04A4  3EFF               	addlw	-1
  3513     04A5  1D03               	skipz
  3514     04A6  2CA2               	goto	u1055
  3515     04A7  0877               	movf	??_Lcd_Set_Cursor,w
  3516     04A8  00B7               	movwf	Lcd_Set_Cursor@z
  3517     04A9                     l1678:
  3518                           
  3519                           ;LCD4b.c: 53:         y = temp & 0x0F;
  3520     04A9  0839               	movf	Lcd_Set_Cursor@temp,w
  3521     04AA  390F               	andlw	15
  3522     04AB  00B8               	movwf	Lcd_Set_Cursor@y
  3523     04AC                     l1680:
  3524                           
  3525                           ;LCD4b.c: 54:         Lcd_Cmd(z);
  3526     04AC  0837               	movf	Lcd_Set_Cursor@z,w
  3527     04AD  120A  118A  266D  120A  118A  	fcall	_Lcd_Cmd
  3528     04B2                     l1682:
  3529                           
  3530                           ;LCD4b.c: 55:         Lcd_Cmd(y);
  3531     04B2  1283               	bcf	3,5	;RP0=0, select bank0
  3532     04B3  1303               	bcf	3,6	;RP1=0, select bank0
  3533     04B4  0838               	movf	Lcd_Set_Cursor@y,w
  3534     04B5  120A  118A  266D  120A  118A  	fcall	_Lcd_Cmd
  3535                           
  3536                           ;LCD4b.c: 56:     } else if (a == 2) {
  3537     04BA  2CDF               	goto	l206
  3538     04BB                     l1684:
  3539     04BB  3002               	movlw	2
  3540     04BC  0636               	xorwf	Lcd_Set_Cursor@a,w
  3541     04BD  1D03               	btfss	3,2
  3542     04BE  2CC0               	goto	u1061
  3543     04BF  2CC1               	goto	u1060
  3544     04C0                     u1061:
  3545     04C0  2CDF               	goto	l206
  3546     04C1                     u1060:
  3547     04C1                     l1686:
  3548                           
  3549                           ;LCD4b.c: 57:         temp = 0xC0 + b - 1;
  3550     04C1  0876               	movf	Lcd_Set_Cursor@b,w
  3551     04C2  3EBF               	addlw	191
  3552     04C3  00B9               	movwf	Lcd_Set_Cursor@temp
  3553                           
  3554                           ;LCD4b.c: 58:         z = temp >> 4;
  3555     04C4  0839               	movf	Lcd_Set_Cursor@temp,w
  3556     04C5  00F7               	movwf	??_Lcd_Set_Cursor
  3557     04C6  3004               	movlw	4
  3558     04C7                     u1075:
  3559     04C7  1003               	clrc
  3560     04C8  0CF7               	rrf	??_Lcd_Set_Cursor,f
  3561     04C9  3EFF               	addlw	-1
  3562     04CA  1D03               	skipz
  3563     04CB  2CC7               	goto	u1075
  3564     04CC  0877               	movf	??_Lcd_Set_Cursor,w
  3565     04CD  00B7               	movwf	Lcd_Set_Cursor@z
  3566     04CE                     l1688:
  3567                           
  3568                           ;LCD4b.c: 59:         y = temp & 0x0F;
  3569     04CE  0839               	movf	Lcd_Set_Cursor@temp,w
  3570     04CF  390F               	andlw	15
  3571     04D0  00B8               	movwf	Lcd_Set_Cursor@y
  3572     04D1                     l1690:
  3573                           
  3574                           ;LCD4b.c: 60:         Lcd_Cmd(z);
  3575     04D1  0837               	movf	Lcd_Set_Cursor@z,w
  3576     04D2  120A  118A  266D  120A  118A  	fcall	_Lcd_Cmd
  3577     04D7                     l1692:
  3578                           
  3579                           ;LCD4b.c: 61:         Lcd_Cmd(y);
  3580     04D7  1283               	bcf	3,5	;RP0=0, select bank0
  3581     04D8  1303               	bcf	3,6	;RP1=0, select bank0
  3582     04D9  0838               	movf	Lcd_Set_Cursor@y,w
  3583     04DA  120A  118A  266D  120A  118A  	fcall	_Lcd_Cmd
  3584     04DF                     l206:
  3585     04DF  0008               	return
  3586     04E0                     __end_of_Lcd_Set_Cursor:
  3587                           
  3588                           	psect	text22
  3589     066D                     __ptext22:	
  3590 ;; *************** function _Lcd_Cmd *****************
  3591 ;; Defined at:
  3592 ;;		line 35 in file "LCD4b.c"
  3593 ;; Parameters:    Size  Location     Type
  3594 ;;  a               1    wreg     unsigned char 
  3595 ;; Auto vars:     Size  Location     Type
  3596 ;;  a               1    5[COMMON] unsigned char 
  3597 ;; Return value:  Size  Location     Type
  3598 ;;                  1    wreg      void 
  3599 ;; Registers used:
  3600 ;;		wreg, status,2, status,0, pclath, cstack
  3601 ;; Tracked objects:
  3602 ;;		On entry : 0/0
  3603 ;;		On exit  : 0/0
  3604 ;;		Unchanged: 0/0
  3605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3606 ;;      Params:         0       0       0       0       0
  3607 ;;      Locals:         1       0       0       0       0
  3608 ;;      Temps:          2       0       0       0       0
  3609 ;;      Totals:         3       0       0       0       0
  3610 ;;Total ram usage:        3 bytes
  3611 ;; Hardware stack levels used: 1
  3612 ;; Hardware stack levels required when called: 2
  3613 ;; This function calls:
  3614 ;;		_Lcd_Port
  3615 ;; This function is called by:
  3616 ;;		_Lcd_Set_Cursor
  3617 ;;		_Lcd_Init
  3618 ;;		_Lcd_Clear
  3619 ;;		_Lcd_Shift_Right
  3620 ;;		_Lcd_Shift_Left
  3621 ;; This function uses a non-reentrant model
  3622 ;;
  3623                           
  3624     066D                     _Lcd_Cmd:	
  3625                           ;psect for function _Lcd_Cmd
  3626                           
  3627                           
  3628                           ;incstack = 0
  3629                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3630                           ;Lcd_Cmd@a stored from wreg
  3631     066D  00F5               	movwf	Lcd_Cmd@a
  3632     066E                     l1604:
  3633                           
  3634                           ;LCD4b.c: 36:     PORTDbits.RD2 = 0;
  3635     066E  1283               	bcf	3,5	;RP0=0, select bank0
  3636     066F  1303               	bcf	3,6	;RP1=0, select bank0
  3637     0670  1108               	bcf	8,2	;volatile
  3638     0671                     l1606:
  3639                           
  3640                           ;LCD4b.c: 37:     Lcd_Port(a);
  3641     0671  0875               	movf	Lcd_Cmd@a,w
  3642     0672  120A  118A  264B  120A  118A  	fcall	_Lcd_Port
  3643     0677                     l1608:
  3644                           
  3645                           ;LCD4b.c: 38:     RD3 = 1;
  3646     0677  1283               	bcf	3,5	;RP0=0, select bank0
  3647     0678  1303               	bcf	3,6	;RP1=0, select bank0
  3648     0679  1588               	bsf	8,3	;volatile
  3649     067A                     l1610:
  3650                           
  3651                           ;LCD4b.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3652     067A  300B               	movlw	11
  3653     067B  00F4               	movwf	??_Lcd_Cmd+1
  3654     067C  3062               	movlw	98
  3655     067D  00F3               	movwf	??_Lcd_Cmd
  3656     067E                     u1287:
  3657     067E  0BF3               	decfsz	??_Lcd_Cmd,f
  3658     067F  2E7E               	goto	u1287
  3659     0680  0BF4               	decfsz	??_Lcd_Cmd+1,f
  3660     0681  2E7E               	goto	u1287
  3661     0682  0000               	nop
  3662     0683                     l1612:
  3663                           
  3664                           ;LCD4b.c: 40:     RD3 = 0;
  3665     0683  1283               	bcf	3,5	;RP0=0, select bank0
  3666     0684  1303               	bcf	3,6	;RP1=0, select bank0
  3667     0685  1188               	bcf	8,3	;volatile
  3668     0686                     l197:
  3669     0686  0008               	return
  3670     0687                     __end_of_Lcd_Cmd:
  3671                           
  3672                           	psect	text23
  3673     064B                     __ptext23:	
  3674 ;; *************** function _Lcd_Port *****************
  3675 ;; Defined at:
  3676 ;;		line 13 in file "LCD4b.c"
  3677 ;; Parameters:    Size  Location     Type
  3678 ;;  a               1    wreg     unsigned char 
  3679 ;; Auto vars:     Size  Location     Type
  3680 ;;  a               1    2[COMMON] unsigned char 
  3681 ;; Return value:  Size  Location     Type
  3682 ;;                  1    wreg      void 
  3683 ;; Registers used:
  3684 ;;		wreg
  3685 ;; Tracked objects:
  3686 ;;		On entry : 0/0
  3687 ;;		On exit  : 0/0
  3688 ;;		Unchanged: 0/0
  3689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3690 ;;      Params:         0       0       0       0       0
  3691 ;;      Locals:         1       0       0       0       0
  3692 ;;      Temps:          0       0       0       0       0
  3693 ;;      Totals:         1       0       0       0       0
  3694 ;;Total ram usage:        1 bytes
  3695 ;; Hardware stack levels used: 1
  3696 ;; Hardware stack levels required when called: 1
  3697 ;; This function calls:
  3698 ;;		Nothing
  3699 ;; This function is called by:
  3700 ;;		_Lcd_Cmd
  3701 ;;		_Lcd_Init
  3702 ;;		_Lcd_Write_Char
  3703 ;; This function uses a non-reentrant model
  3704 ;;
  3705                           
  3706     064B                     _Lcd_Port:	
  3707                           ;psect for function _Lcd_Port
  3708                           
  3709                           
  3710                           ;incstack = 0
  3711                           ; Regs used in _Lcd_Port: [wreg]
  3712                           ;Lcd_Port@a stored from wreg
  3713     064B  00F2               	movwf	Lcd_Port@a
  3714     064C                     l1574:
  3715                           
  3716                           ;LCD4b.c: 14:     if (a & 1)
  3717     064C  1C72               	btfss	Lcd_Port@a,0
  3718     064D  2E4F               	goto	u891
  3719     064E  2E50               	goto	u890
  3720     064F                     u891:
  3721     064F  2E54               	goto	l186
  3722     0650                     u890:
  3723     0650                     l1576:
  3724                           
  3725                           ;LCD4b.c: 15:         RD4 = 1;
  3726     0650  1283               	bcf	3,5	;RP0=0, select bank0
  3727     0651  1303               	bcf	3,6	;RP1=0, select bank0
  3728     0652  1608               	bsf	8,4	;volatile
  3729     0653  2E57               	goto	l187
  3730     0654                     l186:	
  3731                           ;LCD4b.c: 16:     else
  3732                           
  3733                           
  3734                           ;LCD4b.c: 17:         RD4 = 0;
  3735     0654  1283               	bcf	3,5	;RP0=0, select bank0
  3736     0655  1303               	bcf	3,6	;RP1=0, select bank0
  3737     0656  1208               	bcf	8,4	;volatile
  3738     0657                     l187:
  3739                           
  3740                           ;LCD4b.c: 19:     if (a & 2)
  3741     0657  1CF2               	btfss	Lcd_Port@a,1
  3742     0658  2E5A               	goto	u901
  3743     0659  2E5B               	goto	u900
  3744     065A                     u901:
  3745     065A  2E5D               	goto	l188
  3746     065B                     u900:
  3747     065B                     l1578:
  3748                           
  3749                           ;LCD4b.c: 20:         RD5 = 1;
  3750     065B  1688               	bsf	8,5	;volatile
  3751     065C  2E5E               	goto	l189
  3752     065D                     l188:	
  3753                           ;LCD4b.c: 21:     else
  3754                           
  3755                           
  3756                           ;LCD4b.c: 22:         RD5 = 0;
  3757     065D  1288               	bcf	8,5	;volatile
  3758     065E                     l189:
  3759                           
  3760                           ;LCD4b.c: 24:     if (a & 4)
  3761     065E  1D72               	btfss	Lcd_Port@a,2
  3762     065F  2E61               	goto	u911
  3763     0660  2E62               	goto	u910
  3764     0661                     u911:
  3765     0661  2E64               	goto	l190
  3766     0662                     u910:
  3767     0662                     l1580:
  3768                           
  3769                           ;LCD4b.c: 25:         RD6 = 1;
  3770     0662  1708               	bsf	8,6	;volatile
  3771     0663  2E65               	goto	l191
  3772     0664                     l190:	
  3773                           ;LCD4b.c: 26:     else
  3774                           
  3775                           
  3776                           ;LCD4b.c: 27:         RD6 = 0;
  3777     0664  1308               	bcf	8,6	;volatile
  3778     0665                     l191:
  3779                           
  3780                           ;LCD4b.c: 29:     if (a & 8)
  3781     0665  1DF2               	btfss	Lcd_Port@a,3
  3782     0666  2E68               	goto	u921
  3783     0667  2E69               	goto	u920
  3784     0668                     u921:
  3785     0668  2E6B               	goto	l192
  3786     0669                     u920:
  3787     0669                     l1582:
  3788                           
  3789                           ;LCD4b.c: 30:         RD7 = 1;
  3790     0669  1788               	bsf	8,7	;volatile
  3791     066A  2E6C               	goto	l194
  3792     066B                     l192:	
  3793                           ;LCD4b.c: 31:     else
  3794                           
  3795                           
  3796                           ;LCD4b.c: 32:         RD7 = 0;
  3797     066B  1388               	bcf	8,7	;volatile
  3798     066C                     l194:
  3799     066C  0008               	return
  3800     066D                     __end_of_Lcd_Port:
  3801                           
  3802                           	psect	text24
  3803     06C1                     __ptext24:	
  3804 ;; *************** function _isr *****************
  3805 ;; Defined at:
  3806 ;;		line 62 in file "master.c"
  3807 ;; Parameters:    Size  Location     Type
  3808 ;;		None
  3809 ;; Auto vars:     Size  Location     Type
  3810 ;;		None
  3811 ;; Return value:  Size  Location     Type
  3812 ;;                  1    wreg      void 
  3813 ;; Registers used:
  3814 ;;		None
  3815 ;; Tracked objects:
  3816 ;;		On entry : 0/0
  3817 ;;		On exit  : 0/0
  3818 ;;		Unchanged: 0/0
  3819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3820 ;;      Params:         0       0       0       0       0
  3821 ;;      Locals:         0       0       0       0       0
  3822 ;;      Temps:          2       0       0       0       0
  3823 ;;      Totals:         2       0       0       0       0
  3824 ;;Total ram usage:        2 bytes
  3825 ;; Hardware stack levels used: 1
  3826 ;; This function calls:
  3827 ;;		Nothing
  3828 ;; This function is called by:
  3829 ;;		Interrupt level 1
  3830 ;; This function uses a non-reentrant model
  3831 ;;
  3832                           
  3833     06C1                     _isr:	
  3834                           ;psect for function _isr
  3835                           
  3836     06C1                     i1l81:
  3837     06C1  0871               	movf	??_isr+1,w
  3838     06C2  008A               	movwf	10
  3839     06C3  0E70               	swapf	??_isr,w
  3840     06C4  0083               	movwf	3
  3841     06C5  0EFE               	swapf	btemp,f
  3842     06C6  0E7E               	swapf	btemp,w
  3843     06C7  0009               	retfie
  3844     06C8                     __end_of_isr:
  3845     007E                     btemp	set	126	;btemp
  3846     007E                     wtemp0	set	126
  3847                           
  3848                           	psect	intentry
  3849     0004                     __pintentry:	
  3850                           ;incstack = 0
  3851                           ; Regs used in _isr: []
  3852                           
  3853     0004                     interrupt_function:
  3854     007E                     saved_w	set	btemp
  3855     0004  00FE               	movwf	btemp
  3856     0005  0E03               	swapf	3,w
  3857     0006  00F0               	movwf	??_isr
  3858     0007  080A               	movf	10,w
  3859     0008  00F1               	movwf	??_isr+1
  3860     0009  120A  118A  2EC1   	ljmp	_isr
  3861                           
  3862                           	psect	config
  3863                           
  3864                           ;Config register CONFIG1 @ 0x2007
  3865                           ;	Oscillator Selection bits
  3866                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3867                           ;	Watchdog Timer Enable bit
  3868                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3869                           ;	Power-up Timer Enable bit
  3870                           ;	PWRTE = OFF, PWRT disabled
  3871                           ;	RE3/MCLR pin function select bit
  3872                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3873                           ;	Code Protection bit
  3874                           ;	CP = OFF, Program memory code protection is disabled
  3875                           ;	Data Code Protection bit
  3876                           ;	CPD = OFF, Data memory code protection is disabled
  3877                           ;	Brown Out Reset Selection bits
  3878                           ;	BOREN = OFF, BOR disabled
  3879                           ;	Internal External Switchover bit
  3880                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3881                           ;	Fail-Safe Clock Monitor Enabled bit
  3882                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3883                           ;	Low Voltage Programming Enable bit
  3884                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3885                           ;	In-Circuit Debugger Mode bit
  3886                           ;	DEBUG = 0x1, unprogrammed default
  3887     2007                     	org	8199
  3888     2007  20D4               	dw	8404
  3889                           
  3890                           ;Config register CONFIG2 @ 0x2008
  3891                           ;	Brown-out Reset Selection bit
  3892                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3893                           ;	Flash Program Memory Self Write Enable bits
  3894                           ;	WRT = OFF, Write protection off
  3895     2008                     	org	8200
  3896     2008  3FFF               	dw	16383

Data Sizes:
    Strings     20
    Constant    0
    Data        0
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     19      41
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_5(CODE[3]), STR_4(CODE[4]), STR_3(CODE[3]), 
		 -> STR_2(CODE[3]), STR_1(CODE[3]), Sired(BANK0[2]), Sgas(BANK0[4]), 
		 -> Su_hum(BANK0[3]), Sd_temp(BANK0[3]), Su_temp(BANK0[3]), 

    separar_digitos8@dig8	PTR unsigned char  size(1) Largest target is 4
		 -> Sired(BANK0[2]), Sgas(BANK0[4]), Su_hum(BANK0[3]), Sd_temp(BANK0[3]), 
		 -> Su_temp(BANK0[3]), 


Critical Paths under _main in COMMON

    _Lcd_Init->_Lcd_Cmd
    _I2C_Master_Init->___lldiv
    _requestTemp->_I2C_Master_Read
    _requestIR->_I2C_Master_Read
    _requestHum->_I2C_Master_Read
    _requestGas->_I2C_Master_Read
    _separar_digitos8->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_setup
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _LDC_output->_separar_digitos8

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   12112
                                             16 BANK0      3     3      0
                         _LDC_output
                         _requestGas
                         _requestHum
                          _requestIR
                        _requestTemp
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                2     2      0     821
                                             14 BANK0      2     2      0
                    _I2C_Master_Init
                           _Lcd_Init
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     279
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _requestTemp                                          3     3      0    1587
                                              0 BANK0      3     3      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _requestIR                                            3     3      0    1587
                                              0 BANK0      3     3      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _requestHum                                           3     3      0    1587
                                              0 BANK0      3     3      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _requestGas                                           3     3      0    1587
                                              0 BANK0      3     3      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1162
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     425
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LDC_output                                           0     0      0    4943
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                   _separar_digitos8
 ---------------------------------------------------------------------------------
 (2) _separar_digitos8                                     9     8      1    2410
                                              0 BANK0      9     8      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     752
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     604
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2    1374
                                              7 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     254
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1     905
                                              6 COMMON     2     1      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     155
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LDC_output
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
     _separar_digitos8
       ___awdiv
       ___awmod
   _requestGas
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _requestHum
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
   _requestIR
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
   _requestTemp
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Init
       _Lcd_Cmd
       _Lcd_Port

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      35       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     13      29       5       51.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      35      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Aug 20 22:50:28 2023

        separar_digitos8@centenas 003C                                 pc 0002                                l92 0592  
                              l95 017C                                l98 043F                      ___awdiv@sign 0077  
                              fsr 0004                               l101 0493                               l104 03EB  
                             l114 0212                               l107 00D9                               l212 05C7  
                             l206 04DF                               l143 055D                               l152 06AF  
                             l161 069D                               l209 033E                               l218 0525  
                             l146 0687                               l155 06B8                               l164 061E  
                             l149 0693                               l165 0621                               l190 0664  
                             l166 0626                               l158 06A6                               l191 0665  
                             l192 066B                               l194 066C                               l186 0654  
                             l346 027A                               l187 0657                               l188 065D  
                             l189 065E                               l197 0686                               l463 02E1  
                             l476 0397                               _GIE 005F                               _RD3 0043  
                             _RD4 0044                               _RD5 0045                               _RD6 0046  
                             _RD7 0047                               u500 068D                               u501 068C  
                             u510 0693                               u511 0692                               u600 028B  
                             u601 028A                               u610 029C                               u611 029B  
                             u700 034F                               u701 034E                               u630 02AE  
                             u710 035A                               u631 02AD                               u711 0359  
                             u625 02A0                               u650 02BF                               u730 036C  
                             u651 02BE                               u731 036B                               u900 065B  
                             u740 0376                               u901 065A                               u645 02AF  
                             u741 0375                               u725 035E                               _SCS 0478  
                             u910 0662                               u670 02D3                               u590 0280  
                             u911 0661                               u671 02D2                               u655 02BB  
                             u591 027F                               u920 0669                               u680 02D8  
                             u760 0389                               u921 0668                               u681 02D7  
                             u665 02C7                               u761 0388                               u745 0372  
                             u770 038E                               u690 0344                               u771 038D  
                             u755 037D                               u691 0343                               u940 0225  
                             u941 0224                               u790 061A                               u935 05A0  
                             u791 0619                               u960 0239                               u961 0238  
                             u890 0650                               u891 064F                               u955 022A  
                             u980 0254                               u981 0253                               u975 023B  
                             u985 0250                               u995 0264                               _gas 0024  
                             _isr 06C1                               fsr0 0004                               indf 0000  
                    ___awmod@sign 0077                       ?_LDC_output 0070          separar_digitos8@unidades 003E  
                            l1300 02BF                              l1310 02D8                              l1302 02C5  
                            l1312 02DD                              l1304 02C6                              l1320 0344  
                            l1232 0687                              l1400 0622                              l1306 02CD  
                            l1330 035A                              l1322 0349                              l1234 068D  
                            l1308 02D3                              l1340 0376                              l1332 035D  
                            l1324 034B                              l1316 033F                              l1404 069E  
                            l1350 0393                              l1342 037C                              l1334 0364  
                            l1326 034F                              l1318 0340                              l1406 06A3  
                            l1600 05BF                              l1280 0287                              l1272 027B  
                            l1344 0383                              l1336 0368                              l1328 0354  
                            l1610 067A                              l1602 05C4                              l1290 029C  
                            l1282 028B                              l1274 027C                              l1338 036C  
                            l1346 0389                              l1612 0683                              l1604 066E  
                            l1700 0509                              l1292 029F                              l1284 0290  
                            l1276 0280                              l1348 038E                              l1380 0694  
                            l1620 0231                              l1606 0671                              l1294 02A6  
                            l1286 0294                              l1278 0285                              l1390 05FE  
                            l1382 0699                              l1630 0262                              l1622 0235  
                            l1614 0213                              l1710 0578                              l1702 055E  
                            l1608 0677                              l1296 02AA                              l1288 0296  
                            l1800 00AD                              l1392 0606                              l1384 06B0  
                            l1376 06A7                              l1720 0105                              l1632 0263  
                            l1624 0239                              l1616 0225                              l1640 02E2  
                            l1712 0583                              l1704 056E                              l1298 02AE  
                            l1802 00B6                              l1394 060F                              l1386 06B5  
                            l1378 06AC                              l1730 0151                              l1722 010E  
                            l1714 00DA                              l1634 026C                              l1626 0242  
                            l1618 0228                              l1650 0526                              l1642 02E8  
                            l1706 0572                              l1810 05CD                              l1580 0662  
                            l1804 00C7                              l1396 0614                              l1388 05F9  
                            l1740 03EC                              l1732 0156                              l1724 0118  
                            l1716 00F1                              l1628 0254                              l1636 0272  
                            l1660 055C                              l1652 052A                              l1644 02F1  
                            l1708 0573                              l1820 05E6                              l1812 05D2  
                            l1582 0669                              l1574 064C                              l1590 05AB  
                            l1670 01F5                              l1662 0180                              l1806 00D0  
                            l1398 061A                              l1750 042C                              l1742 0403  
                            l1734 015F                              l1726 011D                              l1718 0100  
                            l1654 052D                              l1646 0300                              l1814 05D7  
                            l1576 0650                              l1680 04AC                              l1592 05AE  
                            l1584 0594                              l1672 0201                              l1664 01E4  
                            l1760 046B                              l1752 0431                              l1744 0412  
                            l1736 0169                              l1728 0142                              l1656 055A  
                            l1648 0306                              l1816 05DC                              l1808 05C8  
                            l1578 065B                              l1690 04D1                              l1682 04B2  
                            l1674 0497                              l1594 05B3                              l1586 059A  
                            l1666 01E9                              l1762 0474                              l1754 0440  
                            l1746 0417                              l1770 03AF                              l1738 016E  
                            l1658 055B                              l1818 05E1                              l1692 04D7  
                            l1676 049C                              l1684 04BB                              l1596 05B6  
                            l1588 059D                              l1668 01F0                              l1764 0480  
                            l1756 0457                              l1748 0420                              l1780 03DD  
                            l1772 03BE                              l1686 04C1                              l1678 04A9  
                            l1598 05BC                              l1694 04E0                              l1790 006A  
                            l1782 001E                              l1766 0485                              l1758 0466  
                            l1774 03C3                              l1688 04CE                              l1696 04E5  
                            l1792 0082                              l1784 0050                              l1776 03CC  
                            l1768 0398                              l1698 0501                              l1794 008A  
                            l1786 0058                              l1778 03D8                              l1796 0093  
                            l1788 0061                              l1798 009C                              ?_isr 0070  
                            STR_1 0645                              STR_2 0648                              STR_3 0642  
                            STR_4 063B                              STR_5 063F                              STR_6 0637  
                            u1000 0272                              u1001 0271                              u1010 053D  
                            u1100 0525                              u1020 01E9                              u1101 0524  
                            u1021 01E8                              u1030 01F5                              u1031 01F4  
                            u1015 0538                              u1040 049C                              u1041 049B  
                            u1060 04C1                              u1061 04C0                              u1117 05EE  
                            u1055 04A2                              u1207 03B7                              u1127 057E  
                            u1080 04EF                              u1217 03E5                              u1137 02EC  
                            u1090 0513                              u1075 04C7                              u1227 040B  
                            u1147 02FB                              u1237 0439                              u1157 030A  
                            u1247 045F                              u1167 00F9                              u1257 048D  
                            u1177 0125                              u1267 05B0                              u1187 014A  
                            u1277 05C1                              u1197 0176                              u1287 067E  
                            _PEIE 005E                              i1l81 06C1                              _Sgas 0027  
               ?_Lcd_Write_String 0077  __end_of_I2C_Master_RepeatedStart 06B9                              _main 05C8  
                            _ired 0023                              btemp 007E                              start 000C  
              ??_Lcd_Write_String 0036                   __end_of_Lcd_Cmd 0687                             ??_isr 0070  
                ?_I2C_Master_Init 003C                  ?_I2C_Master_Read 0072                  ?_I2C_Master_Wait 0070  
                ?_I2C_Master_Stop 0070                             ?_main 0070                   __end_of___awdiv 02E2  
                 __end_of___awmod 0398                             _ANSEL 0188                   __end_of___lldiv 027B  
                 ___awdiv@divisor 0072                   ___awdiv@counter 0076                             _PORTA 0005  
                           _PORTD 0008                             _TRISA 0085                             _TRISD 0088  
                           _SSPIE 0463                             _SSPIF 0063                             _Sired 0034  
                           _d_hum 0025                             _u_hum 0026                             _setup 055E  
               ?_separar_digitos8 0036                             pclath 000A                ??_separar_digitos8 0037  
                           status 0003                             wtemp0 007E                  __end_of_Lcd_Init 033F  
                __end_of_Lcd_Port 066D                   __initialization 000F                      __end_of_main 05F9  
                          ??_main 0046                 ?_I2C_Master_Start 0070                 ?_I2C_Master_Write 0072  
              ??_I2C_Master_Start 0072                ??_I2C_Master_Write 0074                  ___awdiv@dividend 0074  
                          ?_setup 0070                            _ANSELH 0189                         ??_Lcd_Cmd 0073  
                          _SSPADD 0093                            _TRISC3 043B                            _TRISC4 043C  
                          _SSPCON 0014                            _SSPBUF 0013                            _Sd_hum 0020  
        _I2C_Master_RepeatedStart 06B0                            _Su_hum 002B                         ??___awdiv 0076  
                       ??___awmod 0076                            _d_temp 007A                         ??___lldiv 0036  
                ___awdiv@quotient 0078                      ?_requestTemp 0070                   ___awmod@divisor 0072  
                          _u_temp 007B                   ___awmod@counter 0076                            saved_w 007E  
                 Lcd_Set_Cursor@a 0036                   Lcd_Set_Cursor@b 0076                   Lcd_Set_Cursor@y 0038  
                 Lcd_Set_Cursor@z 0037           __end_of__initialization 001A                    __pcstackCOMMON 0070  
                   __end_of_setup 0593                    _Lcd_Set_Cursor 0494                      ??_LDC_output 007A  
                       ?_Lcd_Init 0070                         ?_Lcd_Port 0070                           ??_setup 0044  
                      __pbssBANK0 0020                        __pmaintext 05C8                        __pintentry 0004  
              __end_of_LDC_output 00DA            __end_of_Lcd_Set_Cursor 04E0                        ??_Lcd_Init 0076  
                      ??_Lcd_Port 0072                           _SSPCON2 0091                           _SSPSTAT 0094  
                      __stringtab 0627                    _Lcd_Write_Char 0593                           _Lcd_Cmd 066D  
                         _Sd_temp 002E                           _Su_temp 0031                           ___awdiv 027B  
                         ___awmod 033F                           ___lldiv 0213                   ?_Lcd_Set_Cursor 0076  
                         __ptext1 055E                           __ptext2 02E2                           __ptext3 0526  
                         __ptext4 0213                           __ptext5 00DA                           __ptext6 0398  
                         __ptext7 03EC                           __ptext8 0440                           __ptext9 0694  
                ___awmod@dividend 0074                           clrloop0 06BA            __end_of_Lcd_Write_Char 05C8  
            end_of_initialization 001A        ??_I2C_Master_RepeatedStart 0072                 __end_of_requestIR 03EC  
                 ___lldiv@divisor 0072                   ___lldiv@counter 003B                  I2C_Master_Init@c 003C  
                I2C_Master_Read@a 0072                        _requestGas 0440                         Lcd_Port@a 0072  
                      _requestHum 03EC                         _PORTDbits 0008           separar_digitos8@decenas 003D  
                       _TRISCbits 0087                   ?_Lcd_Write_Char 0070                 Lcd_Write_String@a 0077  
               Lcd_Write_String@i 0039                  _Lcd_Write_String 04E0               start_initialization 000F  
                     __end_of_isr 06C8                 ??_I2C_Master_Init 0040                 ??_I2C_Master_Read 0074  
               ??_I2C_Master_Wait 0072                 ??_I2C_Master_Stop 0072                  _separar_digitos8 017D  
                     ?_requestGas 0070                       ?_requestHum 0070                   Lcd_Write_Char@a 0076  
                 Lcd_Write_Char@y 0075                       __pbssCOMMON 007A                         ___latbits 0002  
                   __pcstackBANK0 0036                          ?_Lcd_Cmd 0070                  _I2C_Master_Start 06A7  
                _I2C_Master_Write 0694                  ??_Lcd_Set_Cursor 0077                          ?___awdiv 0072  
                        ?___awmod 0072                          ?___lldiv 0072                         __pstrings 0627  
               interrupt_function 0004                         clear_ram0 06B9                          Lcd_Cmd@a 0075  
                       _requestIR 0398                     ??_requestTemp 0036                       __stringbase 0636  
                ??_Lcd_Write_Char 0073                          _Lcd_Init 02E2                          _Lcd_Port 064B  
             I2C_Master_Read@temp 0076          __end_of_Lcd_Write_String 0526                        ?_requestIR 0070  
       ?_I2C_Master_RepeatedStart 0070                __end_of__stringtab 0637                   _I2C_Master_Init 0526  
                 _I2C_Master_Read 05F9                   _I2C_Master_Wait 0687                   _I2C_Master_Stop 069E  
             __end_of_requestTemp 017D                          __ptext10 069E                          __ptext11 06A7  
                        __ptext20 0593                          __ptext12 06B0                          __ptext21 0494  
                        __ptext13 05F9                          __ptext22 066D                          __ptext14 0687  
                        __ptext23 064B                          __ptext15 001E                          __ptext24 06C1  
                        __ptext16 017D                          __ptext17 033F                          __ptext18 027B  
                        __ptext19 04E0          __end_of_separar_digitos8 0213                      ??_requestGas 0036  
                    ??_requestHum 0036          __end_of_I2C_Master_Start 06B0          __end_of_I2C_Master_Write 069E  
                      _LDC_output 001E                Lcd_Write_Char@temp 0074                          intlevel1 0000  
              __end_of_requestGas 0494                __end_of_requestHum 0440                  ___lldiv@dividend 0076  
                       stringcode 0631                        _OSCCONbits 008F                       ??_requestIR 0036  
            separar_digitos8@dig8 0036              separar_digitos8@div1 003B              separar_digitos8@div2 0039  
         __end_of_I2C_Master_Init 055E           __end_of_I2C_Master_Read 0627           __end_of_I2C_Master_Wait 0694  
         __end_of_I2C_Master_Stop 06A7                Lcd_Set_Cursor@temp 0039                       _requestTemp 00DA  
                ___lldiv@quotient 0037                 I2C_Master_Write@d 0072                          stringdir 0631  
                        stringtab 0627                       _SSPCON2bits 0091               separar_digitos8@num 003A  
