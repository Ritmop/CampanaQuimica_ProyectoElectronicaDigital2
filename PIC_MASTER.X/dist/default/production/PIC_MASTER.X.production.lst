

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Sep 01 16:06:50 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    50                           	dabs	1,0x7E,2
    51     0000                     
    52                           ; Generated 22/03/2023 GMT
    53                           ; 
    54                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution. Publication is not required when
    68                           ;        this file is used in an embedded application.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F887 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86     0000                     	;# 
    87     0001                     	;# 
    88     0002                     	;# 
    89     0003                     	;# 
    90     0004                     	;# 
    91     0005                     	;# 
    92     0006                     	;# 
    93     0007                     	;# 
    94     0008                     	;# 
    95     0009                     	;# 
    96     000A                     	;# 
    97     000B                     	;# 
    98     000C                     	;# 
    99     000D                     	;# 
   100     000E                     	;# 
   101     000E                     	;# 
   102     000F                     	;# 
   103     0010                     	;# 
   104     0011                     	;# 
   105     0012                     	;# 
   106     0013                     	;# 
   107     0014                     	;# 
   108     0015                     	;# 
   109     0015                     	;# 
   110     0016                     	;# 
   111     0017                     	;# 
   112     0018                     	;# 
   113     0019                     	;# 
   114     001A                     	;# 
   115     001B                     	;# 
   116     001B                     	;# 
   117     001C                     	;# 
   118     001D                     	;# 
   119     001E                     	;# 
   120     001F                     	;# 
   121     0081                     	;# 
   122     0085                     	;# 
   123     0086                     	;# 
   124     0087                     	;# 
   125     0088                     	;# 
   126     0089                     	;# 
   127     008C                     	;# 
   128     008D                     	;# 
   129     008E                     	;# 
   130     008F                     	;# 
   131     0090                     	;# 
   132     0091                     	;# 
   133     0092                     	;# 
   134     0093                     	;# 
   135     0093                     	;# 
   136     0093                     	;# 
   137     0094                     	;# 
   138     0095                     	;# 
   139     0096                     	;# 
   140     0097                     	;# 
   141     0098                     	;# 
   142     0099                     	;# 
   143     009A                     	;# 
   144     009B                     	;# 
   145     009C                     	;# 
   146     009D                     	;# 
   147     009E                     	;# 
   148     009F                     	;# 
   149     0105                     	;# 
   150     0107                     	;# 
   151     0108                     	;# 
   152     0109                     	;# 
   153     010C                     	;# 
   154     010C                     	;# 
   155     010D                     	;# 
   156     010E                     	;# 
   157     010F                     	;# 
   158     0185                     	;# 
   159     0187                     	;# 
   160     0188                     	;# 
   161     0189                     	;# 
   162     018C                     	;# 
   163     018D                     	;# 
   164     0000                     	;# 
   165     0001                     	;# 
   166     0002                     	;# 
   167     0003                     	;# 
   168     0004                     	;# 
   169     0005                     	;# 
   170     0006                     	;# 
   171     0007                     	;# 
   172     0008                     	;# 
   173     0009                     	;# 
   174     000A                     	;# 
   175     000B                     	;# 
   176     000C                     	;# 
   177     000D                     	;# 
   178     000E                     	;# 
   179     000E                     	;# 
   180     000F                     	;# 
   181     0010                     	;# 
   182     0011                     	;# 
   183     0012                     	;# 
   184     0013                     	;# 
   185     0014                     	;# 
   186     0015                     	;# 
   187     0015                     	;# 
   188     0016                     	;# 
   189     0017                     	;# 
   190     0018                     	;# 
   191     0019                     	;# 
   192     001A                     	;# 
   193     001B                     	;# 
   194     001B                     	;# 
   195     001C                     	;# 
   196     001D                     	;# 
   197     001E                     	;# 
   198     001F                     	;# 
   199     0081                     	;# 
   200     0085                     	;# 
   201     0086                     	;# 
   202     0087                     	;# 
   203     0088                     	;# 
   204     0089                     	;# 
   205     008C                     	;# 
   206     008D                     	;# 
   207     008E                     	;# 
   208     008F                     	;# 
   209     0090                     	;# 
   210     0091                     	;# 
   211     0092                     	;# 
   212     0093                     	;# 
   213     0093                     	;# 
   214     0093                     	;# 
   215     0094                     	;# 
   216     0095                     	;# 
   217     0096                     	;# 
   218     0097                     	;# 
   219     0098                     	;# 
   220     0099                     	;# 
   221     009A                     	;# 
   222     009B                     	;# 
   223     009C                     	;# 
   224     009D                     	;# 
   225     009E                     	;# 
   226     009F                     	;# 
   227     0105                     	;# 
   228     0107                     	;# 
   229     0108                     	;# 
   230     0109                     	;# 
   231     010C                     	;# 
   232     010C                     	;# 
   233     010D                     	;# 
   234     010E                     	;# 
   235     010F                     	;# 
   236     0185                     	;# 
   237     0187                     	;# 
   238     0188                     	;# 
   239     0189                     	;# 
   240     018C                     	;# 
   241     018D                     	;# 
   242     0000                     	;# 
   243     0001                     	;# 
   244     0002                     	;# 
   245     0003                     	;# 
   246     0004                     	;# 
   247     0005                     	;# 
   248     0006                     	;# 
   249     0007                     	;# 
   250     0008                     	;# 
   251     0009                     	;# 
   252     000A                     	;# 
   253     000B                     	;# 
   254     000C                     	;# 
   255     000D                     	;# 
   256     000E                     	;# 
   257     000E                     	;# 
   258     000F                     	;# 
   259     0010                     	;# 
   260     0011                     	;# 
   261     0012                     	;# 
   262     0013                     	;# 
   263     0014                     	;# 
   264     0015                     	;# 
   265     0015                     	;# 
   266     0016                     	;# 
   267     0017                     	;# 
   268     0018                     	;# 
   269     0019                     	;# 
   270     001A                     	;# 
   271     001B                     	;# 
   272     001B                     	;# 
   273     001C                     	;# 
   274     001D                     	;# 
   275     001E                     	;# 
   276     001F                     	;# 
   277     0081                     	;# 
   278     0085                     	;# 
   279     0086                     	;# 
   280     0087                     	;# 
   281     0088                     	;# 
   282     0089                     	;# 
   283     008C                     	;# 
   284     008D                     	;# 
   285     008E                     	;# 
   286     008F                     	;# 
   287     0090                     	;# 
   288     0091                     	;# 
   289     0092                     	;# 
   290     0093                     	;# 
   291     0093                     	;# 
   292     0093                     	;# 
   293     0094                     	;# 
   294     0095                     	;# 
   295     0096                     	;# 
   296     0097                     	;# 
   297     0098                     	;# 
   298     0099                     	;# 
   299     009A                     	;# 
   300     009B                     	;# 
   301     009C                     	;# 
   302     009D                     	;# 
   303     009E                     	;# 
   304     009F                     	;# 
   305     0105                     	;# 
   306     0107                     	;# 
   307     0108                     	;# 
   308     0109                     	;# 
   309     010C                     	;# 
   310     010C                     	;# 
   311     010D                     	;# 
   312     010E                     	;# 
   313     010F                     	;# 
   314     0185                     	;# 
   315     0187                     	;# 
   316     0188                     	;# 
   317     0189                     	;# 
   318     018C                     	;# 
   319     018D                     	;# 
   320     0000                     	;# 
   321     0001                     	;# 
   322     0002                     	;# 
   323     0003                     	;# 
   324     0004                     	;# 
   325     0005                     	;# 
   326     0006                     	;# 
   327     0007                     	;# 
   328     0008                     	;# 
   329     0009                     	;# 
   330     000A                     	;# 
   331     000B                     	;# 
   332     000C                     	;# 
   333     000D                     	;# 
   334     000E                     	;# 
   335     000E                     	;# 
   336     000F                     	;# 
   337     0010                     	;# 
   338     0011                     	;# 
   339     0012                     	;# 
   340     0013                     	;# 
   341     0014                     	;# 
   342     0015                     	;# 
   343     0015                     	;# 
   344     0016                     	;# 
   345     0017                     	;# 
   346     0018                     	;# 
   347     0019                     	;# 
   348     001A                     	;# 
   349     001B                     	;# 
   350     001B                     	;# 
   351     001C                     	;# 
   352     001D                     	;# 
   353     001E                     	;# 
   354     001F                     	;# 
   355     0081                     	;# 
   356     0085                     	;# 
   357     0086                     	;# 
   358     0087                     	;# 
   359     0088                     	;# 
   360     0089                     	;# 
   361     008C                     	;# 
   362     008D                     	;# 
   363     008E                     	;# 
   364     008F                     	;# 
   365     0090                     	;# 
   366     0091                     	;# 
   367     0092                     	;# 
   368     0093                     	;# 
   369     0093                     	;# 
   370     0093                     	;# 
   371     0094                     	;# 
   372     0095                     	;# 
   373     0096                     	;# 
   374     0097                     	;# 
   375     0098                     	;# 
   376     0099                     	;# 
   377     009A                     	;# 
   378     009B                     	;# 
   379     009C                     	;# 
   380     009D                     	;# 
   381     009E                     	;# 
   382     009F                     	;# 
   383     0105                     	;# 
   384     0107                     	;# 
   385     0108                     	;# 
   386     0109                     	;# 
   387     010C                     	;# 
   388     010C                     	;# 
   389     010D                     	;# 
   390     010E                     	;# 
   391     010F                     	;# 
   392     0185                     	;# 
   393     0187                     	;# 
   394     0188                     	;# 
   395     0189                     	;# 
   396     018C                     	;# 
   397     018D                     	;# 
   398     0000                     	;# 
   399     0001                     	;# 
   400     0002                     	;# 
   401     0003                     	;# 
   402     0004                     	;# 
   403     0005                     	;# 
   404     0006                     	;# 
   405     0007                     	;# 
   406     0008                     	;# 
   407     0009                     	;# 
   408     000A                     	;# 
   409     000B                     	;# 
   410     000C                     	;# 
   411     000D                     	;# 
   412     000E                     	;# 
   413     000E                     	;# 
   414     000F                     	;# 
   415     0010                     	;# 
   416     0011                     	;# 
   417     0012                     	;# 
   418     0013                     	;# 
   419     0014                     	;# 
   420     0015                     	;# 
   421     0015                     	;# 
   422     0016                     	;# 
   423     0017                     	;# 
   424     0018                     	;# 
   425     0019                     	;# 
   426     001A                     	;# 
   427     001B                     	;# 
   428     001B                     	;# 
   429     001C                     	;# 
   430     001D                     	;# 
   431     001E                     	;# 
   432     001F                     	;# 
   433     0081                     	;# 
   434     0085                     	;# 
   435     0086                     	;# 
   436     0087                     	;# 
   437     0088                     	;# 
   438     0089                     	;# 
   439     008C                     	;# 
   440     008D                     	;# 
   441     008E                     	;# 
   442     008F                     	;# 
   443     0090                     	;# 
   444     0091                     	;# 
   445     0092                     	;# 
   446     0093                     	;# 
   447     0093                     	;# 
   448     0093                     	;# 
   449     0094                     	;# 
   450     0095                     	;# 
   451     0096                     	;# 
   452     0097                     	;# 
   453     0098                     	;# 
   454     0099                     	;# 
   455     009A                     	;# 
   456     009B                     	;# 
   457     009C                     	;# 
   458     009D                     	;# 
   459     009E                     	;# 
   460     009F                     	;# 
   461     0105                     	;# 
   462     0107                     	;# 
   463     0108                     	;# 
   464     0109                     	;# 
   465     010C                     	;# 
   466     010C                     	;# 
   467     010D                     	;# 
   468     010E                     	;# 
   469     010F                     	;# 
   470     0185                     	;# 
   471     0187                     	;# 
   472     0188                     	;# 
   473     0189                     	;# 
   474     018C                     	;# 
   475     018D                     	;# 
   476                           
   477                           	psect	idataCOMMON
   478     07FE                     __pidataCOMMON:
   479                           
   480                           ;initializer for _servoPos
   481     07FE  3430               	retlw	48
   482     001A                     _RCREG	set	26
   483     0019                     _TXREG	set	25
   484     0008                     _PORTDbits	set	8
   485     0013                     _SSPBUF	set	19
   486     0014                     _SSPCON	set	20
   487     0008                     _PORTD	set	8
   488     0064                     _TXIF	set	100
   489     00C4                     _CREN	set	196
   490     00C7                     _SPEN	set	199
   491     0043                     _RD3	set	67
   492     0047                     _RD7	set	71
   493     0046                     _RD6	set	70
   494     0045                     _RD5	set	69
   495     0044                     _RD4	set	68
   496     0063                     _SSPIF	set	99
   497     005E                     _PEIE	set	94
   498     005F                     _GIE	set	95
   499     0065                     _RCIF	set	101
   500     009A                     _SPBRGH	set	154
   501     0099                     _SPBRG	set	153
   502     0091                     _SSPCON2bits	set	145
   503     0087                     _TRISCbits	set	135
   504     0094                     _SSPSTAT	set	148
   505     0093                     _SSPADD	set	147
   506     0091                     _SSPCON2	set	145
   507     008F                     _OSCCONbits	set	143
   508     0088                     _TRISD	set	136
   509     0464                     _TXIE	set	1124
   510     04C5                     _TXEN	set	1221
   511     0465                     _RCIE	set	1125
   512     04C4                     _SYNC	set	1220
   513     0463                     _SSPIE	set	1123
   514     043C                     _TRISC4	set	1084
   515     043B                     _TRISC3	set	1083
   516     0478                     _SCS	set	1144
   517     0189                     _ANSELH	set	393
   518     0188                     _ANSEL	set	392
   519                           
   520                           	psect	strings
   521     0800                     __pstrings:
   522     0800                     stringtab:
   523     0800                     __stringtab:
   524                           
   525                           ;	String table - string pointers are 1 byte each
   526     0800  1BFF               	btfsc	btemp+1,7
   527     0801  280A               	ljmp	stringcode
   528     0802  1383               	bcf	3,7
   529     0803  187F               	btfsc	btemp+1,0
   530     0804  1783               	bsf	3,7
   531     0805  0800               	movf	0,w
   532     0806  0A84               	incf	4,f
   533     0807  1903               	skipnz
   534     0808  0AFF               	incf	btemp+1,f
   535     0809  0008               	return
   536     080A                     stringcode:
   537     080A                     stringdir:
   538     080A  3008               	movlw	high stringdir
   539     080B  008A               	movwf	10
   540     080C  0804               	movf	4,w
   541     080D  0A84               	incf	4,f
   542     080E  0782               	addwf	2,f
   543     080F                     __stringbase:
   544     080F  3400               	retlw	0
   545     0810                     __end_of__stringtab:
   546     0810                     STR_7:
   547     0810  3444               	retlw	68	;'D'
   548     0811  344F               	retlw	79	;'O'
   549     0812  344F               	retlw	79	;'O'
   550     0813  3452               	retlw	82	;'R'
   551     0814  343A               	retlw	58	;':'
   552     0815  3400               	retlw	0
   553     0816                     STR_4:
   554     0816  3425               	retlw	37	;'%'
   555     0817  3452               	retlw	82	;'R'
   556     0818  3448               	retlw	72	;'H'
   557     0819  3400               	retlw	0
   558     081A                     STR_6:
   559     081A  3470               	retlw	112	;'p'
   560     081B  3470               	retlw	112	;'p'
   561     081C  346D               	retlw	109	;'m'
   562     081D  3400               	retlw	0
   563     081E                     STR_5:
   564     081E  3447               	retlw	71	;'G'
   565     081F  343A               	retlw	58	;':'
   566     0820  3400               	retlw	0
   567     0821                     STR_3:
   568     0821  3448               	retlw	72	;'H'
   569     0822  343A               	retlw	58	;':'
   570     0823  3400               	retlw	0
   571     0824                     STR_1:
   572     0824  3454               	retlw	84	;'T'
   573     0825  343A               	retlw	58	;':'
   574     0826  3400               	retlw	0
   575     0827                     STR_2:
   576     0827  345E               	retlw	94	;'^'
   577     0828  3443               	retlw	67	;'C'
   578     0829  3400               	retlw	0
   579                           
   580                           	psect	cinit
   581     000F                     start_initialization:	
   582                           ; #config settings
   583                           
   584     000F                     __initialization:
   585                           
   586                           ; Initialize objects allocated to COMMON
   587     000F  120A  118A  27FE  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   588     0014  00FB               	movwf	__pdataCOMMON& (0+127)
   589                           
   590                           ; Clear objects allocated to BANK0
   591     0015  1383               	bcf	3,7	;select IRP bank0
   592     0016  304A               	movlw	low __pbssBANK0
   593     0017  0084               	movwf	4
   594     0018  3061               	movlw	low (__pbssBANK0+23)
   595     0019  120A  158A  2696  120A  118A  	fcall	clear_ram0
   596                           
   597                           ; Clear objects allocated to COMMON
   598     001E  01FA               	clrf	__pbssCOMMON& (0+127)
   599     001F                     end_of_initialization:	
   600                           ;End of C runtime variable initialization code
   601                           
   602     001F                     __end_of__initialization:
   603     001F  0183               	clrf	3
   604     0020  120A  118A  2EC1   	ljmp	_main	;jump to C main() function
   605                           
   606                           	psect	bssCOMMON
   607     007A                     __pbssCOMMON:
   608     007A                     _tempC:
   609     007A                     	ds	1
   610                           
   611                           	psect	dataCOMMON
   612     007B                     __pdataCOMMON:
   613     007B                     _servoPos:
   614     007B                     	ds	1
   615                           
   616                           	psect	bssBANK0
   617     004A                     __pbssBANK0:
   618     004A                     _S_servo:
   619     004A                     	ds	4
   620     004E                     _gasPPM:
   621     004E                     	ds	2
   622     0050                     _prev:
   623     0050                     	ds	1
   624     0051                     _motorCon:
   625     0051                     	ds	1
   626     0052                     _counter:
   627     0052                     	ds	1
   628     0053                     _n_gas:
   629     0053                     	ds	1
   630     0054                     _n_hum:
   631     0054                     	ds	1
   632     0055                     _n_temp:
   633     0055                     	ds	1
   634     0056                     _S_gas:
   635     0056                     	ds	4
   636     005A                     _S_temp:
   637     005A                     	ds	4
   638     005E                     _S_hum:
   639     005E                     	ds	3
   640                           
   641                           	psect	clrtext
   642     0E96                     clear_ram0:	
   643                           ;	Called with FSR containing the base address, and
   644                           ;	W with the last address+1
   645                           
   646     0E96  0064               	clrwdt	;clear the watchdog before getting into this loop
   647     0E97                     clrloop0:
   648     0E97  0180               	clrf	0	;clear RAM location pointed to by FSR
   649     0E98  0A84               	incf	4,f	;increment pointer
   650     0E99  0604               	xorwf	4,w	;XOR with final address
   651     0E9A  1903               	btfsc	3,2	;have we reached the end yet?
   652     0E9B  3400               	retlw	0	;all done for this memory range, return
   653     0E9C  0604               	xorwf	4,w	;XOR again to restore value
   654     0E9D  2E97               	goto	clrloop0	;do the next byte
   655                           
   656                           	psect	cstackCOMMON
   657     0070                     __pcstackCOMMON:
   658     0070                     ?_UART_read_char:
   659     0070                     ??_UART_read_char:	
   660                           ; 1 bytes @ 0x0
   661                           
   662     0070                     ?_setup:	
   663                           ; 1 bytes @ 0x0
   664                           
   665     0070                     ?_requestHum:	
   666                           ; 1 bytes @ 0x0
   667                           
   668     0070                     ?_requestTemp:	
   669                           ; 1 bytes @ 0x0
   670                           
   671     0070                     ?_requestGas:	
   672                           ; 1 bytes @ 0x0
   673                           
   674     0070                     ?_writeMotors:	
   675                           ; 1 bytes @ 0x0
   676                           
   677     0070                     ?_LDC_output:	
   678                           ; 1 bytes @ 0x0
   679                           
   680     0070                     ?_sendDataUART:	
   681                           ; 1 bytes @ 0x0
   682                           
   683     0070                     ?_Lcd_Init:	
   684                           ; 1 bytes @ 0x0
   685                           
   686     0070                     ?_I2C_Master_Start:	
   687                           ; 1 bytes @ 0x0
   688                           
   689     0070                     ?_I2C_Master_RepeatedStart:	
   690                           ; 1 bytes @ 0x0
   691                           
   692     0070                     ?_I2C_Master_Stop:	
   693                           ; 1 bytes @ 0x0
   694                           
   695     0070                     ?_Lcd_Clear:	
   696                           ; 1 bytes @ 0x0
   697                           
   698     0070                     ?_Lcd_Write_Char:	
   699                           ; 1 bytes @ 0x0
   700                           
   701     0070                     ?_UART_write_char:	
   702                           ; 1 bytes @ 0x0
   703                           
   704     0070                     ?_UART_write_string:	
   705                           ; 1 bytes @ 0x0
   706                           
   707     0070                     ?_isr:	
   708                           ; 1 bytes @ 0x0
   709                           
   710     0070                     ??_isr:	
   711                           ; 1 bytes @ 0x0
   712                           
   713     0070                     ?_I2C_Master_Wait:	
   714                           ; 1 bytes @ 0x0
   715                           
   716     0070                     ?_Lcd_Port:	
   717                           ; 1 bytes @ 0x0
   718                           
   719     0070                     ?_Lcd_Cmd:	
   720                           ; 1 bytes @ 0x0
   721                           
   722     0070                     ?_main:	
   723                           ; 1 bytes @ 0x0
   724                           
   725                           
   726                           ; 2 bytes @ 0x0
   727     0070                     	ds	2
   728     0072                     ??_I2C_Master_Start:
   729     0072                     ?_I2C_Master_Write:	
   730                           ; 1 bytes @ 0x2
   731                           
   732     0072                     ??_I2C_Master_RepeatedStart:	
   733                           ; 1 bytes @ 0x2
   734                           
   735     0072                     ??_I2C_Master_Stop:	
   736                           ; 1 bytes @ 0x2
   737                           
   738     0072                     ??_UART_write_char:	
   739                           ; 1 bytes @ 0x2
   740                           
   741     0072                     ??_I2C_Master_Wait:	
   742                           ; 1 bytes @ 0x2
   743                           
   744     0072                     ??_Lcd_Port:	
   745                           ; 1 bytes @ 0x2
   746                           
   747     0072                     ?_I2C_Master_Read:	
   748                           ; 1 bytes @ 0x2
   749                           
   750     0072                     ?___lwdiv:	
   751                           ; 2 bytes @ 0x2
   752                           
   753     0072                     ?___lwmod:	
   754                           ; 2 bytes @ 0x2
   755                           
   756     0072                     ?___lmul:	
   757                           ; 2 bytes @ 0x2
   758                           
   759     0072                     ?___lldiv:	
   760                           ; 4 bytes @ 0x2
   761                           
   762     0072                     Lcd_Port@a:	
   763                           ; 4 bytes @ 0x2
   764                           
   765     0072                     UART_write_char@c:	
   766                           ; 1 bytes @ 0x2
   767                           
   768     0072                     I2C_Master_Write@d:	
   769                           ; 1 bytes @ 0x2
   770                           
   771     0072                     I2C_Master_Read@a:	
   772                           ; 2 bytes @ 0x2
   773                           
   774     0072                     ___lwdiv@divisor:	
   775                           ; 2 bytes @ 0x2
   776                           
   777     0072                     ___lwmod@divisor:	
   778                           ; 2 bytes @ 0x2
   779                           
   780     0072                     ___lmul@multiplier:	
   781                           ; 2 bytes @ 0x2
   782                           
   783     0072                     ___lldiv@divisor:	
   784                           ; 4 bytes @ 0x2
   785                           
   786                           
   787                           ; 4 bytes @ 0x2
   788     0072                     	ds	1
   789     0073                     ??_Lcd_Write_Char:
   790     0073                     ??_UART_write_string:	
   791                           ; 1 bytes @ 0x3
   792                           
   793     0073                     ??_Lcd_Cmd:	
   794                           ; 1 bytes @ 0x3
   795                           
   796                           
   797                           ; 1 bytes @ 0x3
   798     0073                     	ds	1
   799     0074                     ??_writeMotors:
   800     0074                     ??_I2C_Master_Write:	
   801                           ; 1 bytes @ 0x4
   802                           
   803     0074                     ??_I2C_Master_Read:	
   804                           ; 1 bytes @ 0x4
   805                           
   806     0074                     Lcd_Write_Char@temp:	
   807                           ; 1 bytes @ 0x4
   808                           
   809     0074                     UART_write_string@i:	
   810                           ; 1 bytes @ 0x4
   811                           
   812     0074                     ___lwdiv@dividend:	
   813                           ; 2 bytes @ 0x4
   814                           
   815     0074                     ___lwmod@dividend:	
   816                           ; 2 bytes @ 0x4
   817                           
   818                           
   819                           ; 2 bytes @ 0x4
   820     0074                     	ds	1
   821     0075                     Lcd_Cmd@a:
   822     0075                     Lcd_Write_Char@y:	
   823                           ; 1 bytes @ 0x5
   824                           
   825                           
   826                           ; 1 bytes @ 0x5
   827     0075                     	ds	1
   828     0076                     ??_Lcd_Init:
   829     0076                     ??_Lcd_Clear:	
   830                           ; 1 bytes @ 0x6
   831                           
   832     0076                     ?_Lcd_Set_Cursor:	
   833                           ; 1 bytes @ 0x6
   834                           
   835     0076                     ??___lwdiv:	
   836                           ; 1 bytes @ 0x6
   837                           
   838     0076                     ??___lwmod:	
   839                           ; 1 bytes @ 0x6
   840                           
   841     0076                     Lcd_Set_Cursor@b:	
   842                           ; 1 bytes @ 0x6
   843                           
   844     0076                     Lcd_Write_Char@a:	
   845                           ; 1 bytes @ 0x6
   846                           
   847     0076                     UART_write_string@s:	
   848                           ; 1 bytes @ 0x6
   849                           
   850     0076                     ___lwmod@counter:	
   851                           ; 1 bytes @ 0x6
   852                           
   853     0076                     I2C_Master_Read@temp:	
   854                           ; 1 bytes @ 0x6
   855                           
   856     0076                     ___lwdiv@quotient:	
   857                           ; 2 bytes @ 0x6
   858                           
   859     0076                     ___lmul@multiplicand:	
   860                           ; 2 bytes @ 0x6
   861                           
   862     0076                     ___lldiv@dividend:	
   863                           ; 4 bytes @ 0x6
   864                           
   865                           
   866                           ; 4 bytes @ 0x6
   867     0076                     	ds	1
   868     0077                     ??_sendDataUART:
   869     0077                     ??_Lcd_Set_Cursor:	
   870                           ; 1 bytes @ 0x7
   871                           
   872     0077                     ?_Lcd_Write_String:	
   873                           ; 1 bytes @ 0x7
   874                           
   875     0077                     Lcd_Write_String@a:	
   876                           ; 1 bytes @ 0x7
   877                           
   878                           
   879                           ; 2 bytes @ 0x7
   880     0077                     	ds	1
   881     0078                     ??_requestHum:
   882     0078                     ___lwdiv@counter:	
   883                           ; 1 bytes @ 0x8
   884                           
   885                           
   886                           ; 1 bytes @ 0x8
   887     0078                     	ds	1
   888     0079                     ??_num_to_string:
   889                           
   890                           ; 1 bytes @ 0x9
   891     0079                     	ds	1
   892                           
   893                           	psect	cstackBANK0
   894     0020                     __pcstackBANK0:
   895     0020                     ?_num_to_string:
   896     0020                     ??_Lcd_Write_String:	
   897                           ; 1 bytes @ 0x0
   898                           
   899     0020                     ??___lmul:	
   900                           ; 1 bytes @ 0x0
   901                           
   902     0020                     ??___lldiv:	
   903                           ; 1 bytes @ 0x0
   904                           
   905     0020                     Lcd_Set_Cursor@a:	
   906                           ; 1 bytes @ 0x0
   907                           
   908     0020                     num_to_string@num:	
   909                           ; 1 bytes @ 0x0
   910                           
   911                           
   912                           ; 2 bytes @ 0x0
   913     0020                     	ds	1
   914     0021                     Lcd_Set_Cursor@z:
   915     0021                     ___lmul@product:	
   916                           ; 1 bytes @ 0x1
   917                           
   918     0021                     ___lldiv@quotient:	
   919                           ; 4 bytes @ 0x1
   920                           
   921                           
   922                           ; 4 bytes @ 0x1
   923     0021                     	ds	1
   924     0022                     num_to_string@dig8:
   925     0022                     Lcd_Set_Cursor@y:	
   926                           ; 1 bytes @ 0x2
   927                           
   928                           
   929                           ; 1 bytes @ 0x2
   930     0022                     	ds	1
   931     0023                     num_to_string@len:
   932     0023                     Lcd_Set_Cursor@temp:	
   933                           ; 1 bytes @ 0x3
   934                           
   935     0023                     Lcd_Write_String@i:	
   936                           ; 1 bytes @ 0x3
   937                           
   938                           
   939                           ; 2 bytes @ 0x3
   940     0023                     	ds	1
   941     0024                     num_to_string@div3:
   942                           
   943                           ; 2 bytes @ 0x4
   944     0024                     	ds	1
   945     0025                     ?___aldiv:
   946     0025                     ___lldiv@counter:	
   947                           ; 4 bytes @ 0x5
   948                           
   949     0025                     ___aldiv@divisor:	
   950                           ; 1 bytes @ 0x5
   951                           
   952                           
   953                           ; 4 bytes @ 0x5
   954     0025                     	ds	1
   955     0026                     ?_I2C_Master_Init:
   956     0026                     num_to_string@centenas:	
   957                           ; 1 bytes @ 0x6
   958                           
   959     0026                     I2C_Master_Init@c:	
   960                           ; 2 bytes @ 0x6
   961                           
   962                           
   963                           ; 4 bytes @ 0x6
   964     0026                     	ds	2
   965     0028                     num_to_string@div1:
   966                           
   967                           ; 2 bytes @ 0x8
   968     0028                     	ds	1
   969     0029                     ___aldiv@dividend:
   970                           
   971                           ; 4 bytes @ 0x9
   972     0029                     	ds	1
   973     002A                     ??_I2C_Master_Init:
   974     002A                     num_to_string@div2:	
   975                           ; 1 bytes @ 0xA
   976                           
   977                           
   978                           ; 2 bytes @ 0xA
   979     002A                     	ds	2
   980     002C                     num_to_string@decenas:
   981                           
   982                           ; 2 bytes @ 0xC
   983     002C                     	ds	1
   984     002D                     ??___aldiv:
   985                           
   986                           ; 1 bytes @ 0xD
   987     002D                     	ds	1
   988     002E                     ___aldiv@counter:
   989     002E                     num_to_string@unidades:	
   990                           ; 1 bytes @ 0xE
   991                           
   992                           
   993                           ; 2 bytes @ 0xE
   994     002E                     	ds	1
   995     002F                     ___aldiv@sign:
   996                           
   997                           ; 1 bytes @ 0xF
   998     002F                     	ds	1
   999     0030                     ??_LDC_output:
  1000     0030                     ___aldiv@quotient:	
  1001                           ; 1 bytes @ 0x10
  1002                           
  1003                           
  1004                           ; 4 bytes @ 0x10
  1005     0030                     	ds	4
  1006     0034                     ?_UART_RX_config:
  1007     0034                     ?_UART_TX_config:	
  1008                           ; 1 bytes @ 0x14
  1009                           
  1010     0034                     ?_map:	
  1011                           ; 1 bytes @ 0x14
  1012                           
  1013     0034                     map@min1:	
  1014                           ; 2 bytes @ 0x14
  1015                           
  1016     0034                     UART_RX_config@baudrate:	
  1017                           ; 1 bytes @ 0x14
  1018                           
  1019     0034                     UART_TX_config@baudrate:	
  1020                           ; 4 bytes @ 0x14
  1021                           
  1022                           
  1023                           ; 4 bytes @ 0x14
  1024     0034                     	ds	1
  1025     0035                     map@max1:
  1026                           
  1027                           ; 1 bytes @ 0x15
  1028     0035                     	ds	1
  1029     0036                     map@min2:
  1030                           
  1031                           ; 1 bytes @ 0x16
  1032     0036                     	ds	1
  1033     0037                     map@max2:
  1034                           
  1035                           ; 4 bytes @ 0x17
  1036     0037                     	ds	1
  1037     0038                     ??_UART_RX_config:
  1038     0038                     ??_UART_TX_config:	
  1039                           ; 1 bytes @ 0x18
  1040                           
  1041                           
  1042                           ; 1 bytes @ 0x18
  1043     0038                     	ds	3
  1044     003B                     ??_map:
  1045                           
  1046                           ; 1 bytes @ 0x1B
  1047     003B                     	ds	2
  1048     003D                     _UART_RX_config$1024:
  1049     003D                     _UART_TX_config$1025:	
  1050                           ; 4 bytes @ 0x1D
  1051                           
  1052                           
  1053                           ; 4 bytes @ 0x1D
  1054     003D                     	ds	4
  1055     0041                     UART_RX_config@BR:
  1056     0041                     UART_TX_config@BR:	
  1057                           ; 4 bytes @ 0x21
  1058                           
  1059                           
  1060                           ; 4 bytes @ 0x21
  1061     0041                     	ds	2
  1062     0043                     map@val:
  1063                           
  1064                           ; 1 bytes @ 0x23
  1065     0043                     	ds	1
  1066     0044                     ??_requestTemp:
  1067     0044                     ??_requestGas:	
  1068                           ; 1 bytes @ 0x24
  1069                           
  1070                           
  1071                           ; 1 bytes @ 0x24
  1072     0044                     	ds	1
  1073     0045                     ??_setup:
  1074                           
  1075                           ; 1 bytes @ 0x25
  1076     0045                     	ds	2
  1077     0047                     ??_main:
  1078                           
  1079                           ; 1 bytes @ 0x27
  1080     0047                     	ds	3
  1081                           
  1082                           	psect	maintext
  1083     06C1                     __pmaintext:	
  1084 ;;
  1085 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1086 ;;
  1087 ;; *************** function _main *****************
  1088 ;; Defined at:
  1089 ;;		line 99 in file "master.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;		None
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;		None
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  2  100[None  ] int 
  1096 ;; Registers used:
  1097 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1098 ;; Tracked objects:
  1099 ;;		On entry : B00/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1103 ;;      Params:         0       0       0       0       0
  1104 ;;      Locals:         0       0       0       0       0
  1105 ;;      Temps:          0       3       0       0       0
  1106 ;;      Totals:         0       3       0       0       0
  1107 ;;Total ram usage:        3 bytes
  1108 ;; Hardware stack levels required when called: 6
  1109 ;; This function calls:
  1110 ;;		_LDC_output
  1111 ;;		_requestGas
  1112 ;;		_requestHum
  1113 ;;		_requestTemp
  1114 ;;		_sendDataUART
  1115 ;;		_setup
  1116 ;;		_writeMotors
  1117 ;; This function is called by:
  1118 ;;		Startup code after reset
  1119 ;; This function uses a non-reentrant model
  1120 ;;
  1121                           
  1122     06C1                     _main:	
  1123                           ;psect for function _main
  1124                           
  1125     06C1                     l2212:	
  1126                           ;incstack = 0
  1127                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1128                           
  1129                           
  1130                           ;master.c: 100:     setup();
  1131     06C1  120A  118A  2597  120A  118A  	fcall	_setup
  1132     06C6                     l2214:
  1133                           
  1134                           ;master.c: 104:         if (counter >= 25){
  1135     06C6  3019               	movlw	25
  1136     06C7  1283               	bcf	3,5	;RP0=0, select bank0
  1137     06C8  1303               	bcf	3,6	;RP1=0, select bank0
  1138     06C9  0252               	subwf	_counter,w
  1139     06CA  1C03               	skipc
  1140     06CB  2ECD               	goto	u1731
  1141     06CC  2ECE               	goto	u1730
  1142     06CD                     u1731:
  1143     06CD  2ED6               	goto	l2220
  1144     06CE                     u1730:
  1145     06CE                     l2216:
  1146                           
  1147                           ;master.c: 105:             requestHum();
  1148     06CE  120A  118A  2630  120A  118A  	fcall	_requestHum
  1149     06D3                     l2218:
  1150                           
  1151                           ;master.c: 106:             counter = 0;
  1152     06D3  1283               	bcf	3,5	;RP0=0, select bank0
  1153     06D4  1303               	bcf	3,6	;RP1=0, select bank0
  1154     06D5  01D2               	clrf	_counter
  1155     06D6                     l2220:
  1156                           
  1157                           ;master.c: 108:         requestTemp();
  1158     06D6  120A  118A  2476  120A  118A  	fcall	_requestTemp
  1159     06DB                     l2222:
  1160                           
  1161                           ;master.c: 109:         requestGas();
  1162     06DB  120A  118A  23AB  120A  118A  	fcall	_requestGas
  1163     06E0                     l2224:
  1164                           
  1165                           ;master.c: 112:         writeMotors();
  1166     06E0  120A  118A  2411  120A  118A  	fcall	_writeMotors
  1167     06E5                     l2226:
  1168                           
  1169                           ;master.c: 114:         LDC_output();
  1170     06E5  120A  118A  2023  120A  118A  	fcall	_LDC_output
  1171     06EA                     l2228:
  1172                           
  1173                           ;master.c: 115:         sendDataUART();
  1174     06EA  120A  158A  2790  120A  118A  	fcall	_sendDataUART
  1175     06EF                     l2230:
  1176                           
  1177                           ;master.c: 117:         counter++;
  1178     06EF  3001               	movlw	1
  1179     06F0  00FF               	movwf	btemp+1
  1180     06F1  087F               	movf	btemp+1,w
  1181     06F2  1283               	bcf	3,5	;RP0=0, select bank0
  1182     06F3  1303               	bcf	3,6	;RP1=0, select bank0
  1183     06F4  07D2               	addwf	_counter,f
  1184     06F5                     l2232:
  1185                           
  1186                           ;master.c: 118:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1187     06F5  3002               	movlw	2
  1188     06F6  1283               	bcf	3,5	;RP0=0, select bank0
  1189     06F7  1303               	bcf	3,6	;RP1=0, select bank0
  1190     06F8  00C9               	movwf	??_main+2
  1191     06F9  3004               	movlw	4
  1192     06FA  00C8               	movwf	??_main+1
  1193     06FB  30B9               	movlw	185
  1194     06FC  00C7               	movwf	??_main
  1195     06FD                     u1747:
  1196     06FD  0BC7               	decfsz	??_main,f
  1197     06FE  2EFD               	goto	u1747
  1198     06FF  0BC8               	decfsz	??_main+1,f
  1199     0700  2EFD               	goto	u1747
  1200     0701  0BC9               	decfsz	??_main+2,f
  1201     0702  2EFD               	goto	u1747
  1202     0703  2F04               	nop2
  1203     0704  2EC6               	goto	l2214
  1204     0705  120A  118A  280C   	ljmp	start
  1205     0708                     __end_of_main:
  1206                           
  1207                           	psect	text1
  1208     0411                     __ptext1:	
  1209 ;; *************** function _writeMotors *****************
  1210 ;; Defined at:
  1211 ;;		line 188 in file "master.c"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;		None
  1214 ;; Auto vars:     Size  Location     Type
  1215 ;;		None
  1216 ;; Return value:  Size  Location     Type
  1217 ;;                  1    wreg      void 
  1218 ;; Registers used:
  1219 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1220 ;; Tracked objects:
  1221 ;;		On entry : 0/0
  1222 ;;		On exit  : 0/0
  1223 ;;		Unchanged: 0/0
  1224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1225 ;;      Params:         0       0       0       0       0
  1226 ;;      Locals:         0       0       0       0       0
  1227 ;;      Temps:          2       0       0       0       0
  1228 ;;      Totals:         2       0       0       0       0
  1229 ;;Total ram usage:        2 bytes
  1230 ;; Hardware stack levels used: 1
  1231 ;; Hardware stack levels required when called: 4
  1232 ;; This function calls:
  1233 ;;		_I2C_Master_Start
  1234 ;;		_I2C_Master_Stop
  1235 ;;		_I2C_Master_Write
  1236 ;; This function is called by:
  1237 ;;		_main
  1238 ;; This function uses a non-reentrant model
  1239 ;;
  1240                           
  1241     0411                     _writeMotors:	
  1242                           ;psect for function _writeMotors
  1243                           
  1244     0411                     l1808:	
  1245                           ;incstack = 0
  1246                           ; Regs used in _writeMotors: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1247                           
  1248                           
  1249                           ;master.c: 190:     if(tempC > 50 || gasPPM > 400)
  1250     0411  3033               	movlw	51
  1251     0412  027A               	subwf	_tempC,w
  1252     0413  1803               	skipnc
  1253     0414  2C16               	goto	u1281
  1254     0415  2C17               	goto	u1280
  1255     0416                     u1281:
  1256     0416  2C22               	goto	l122
  1257     0417                     u1280:
  1258     0417                     l1810:
  1259     0417  3001               	movlw	1
  1260     0418  1283               	bcf	3,5	;RP0=0, select bank0
  1261     0419  1303               	bcf	3,6	;RP1=0, select bank0
  1262     041A  024F               	subwf	_gasPPM+1,w
  1263     041B  3091               	movlw	145
  1264     041C  1903               	skipnz
  1265     041D  024E               	subwf	_gasPPM,w
  1266     041E  1C03               	skipc
  1267     041F  2C21               	goto	u1291
  1268     0420  2C22               	goto	u1290
  1269     0421                     u1291:
  1270     0421  2C26               	goto	l1812
  1271     0422                     u1290:
  1272     0422                     l122:
  1273                           
  1274                           ;master.c: 191:         motorCon |= 0x10;
  1275     0422  1283               	bcf	3,5	;RP0=0, select bank0
  1276     0423  1303               	bcf	3,6	;RP1=0, select bank0
  1277     0424  1651               	bsf	_motorCon,4
  1278     0425  2C2A               	goto	l123
  1279     0426                     l1812:
  1280                           
  1281                           ;master.c: 193:         motorCon &= 0x0F;
  1282     0426  300F               	movlw	15
  1283     0427  00FF               	movwf	btemp+1
  1284     0428  087F               	movf	btemp+1,w
  1285     0429  05D1               	andwf	_motorCon,f
  1286     042A                     l123:
  1287                           
  1288                           ;master.c: 197:     motorCon &= 0xF0;
  1289     042A  30F0               	movlw	240
  1290     042B  00FF               	movwf	btemp+1
  1291     042C  087F               	movf	btemp+1,w
  1292     042D  05D1               	andwf	_motorCon,f
  1293                           
  1294                           ;master.c: 198:     switch(servoPos){
  1295     042E  2C38               	goto	l1818
  1296     042F                     l125:	
  1297                           ;master.c: 199:         case '0':
  1298                           
  1299                           
  1300                           ;master.c: 200:             motorCon |= 0x02;
  1301     042F  14D1               	bsf	_motorCon,1
  1302                           
  1303                           ;master.c: 201:             break;
  1304     0430  2C4B               	goto	l1820
  1305     0431                     l1814:
  1306                           
  1307                           ;master.c: 203:             motorCon |= 0x03;
  1308     0431  3003               	movlw	3
  1309     0432  00FF               	movwf	btemp+1
  1310     0433  087F               	movf	btemp+1,w
  1311     0434  04D1               	iorwf	_motorCon,f
  1312                           
  1313                           ;master.c: 204:             break;
  1314     0435  2C4B               	goto	l1820
  1315     0436                     l128:	
  1316                           ;master.c: 205:         case '2':
  1317                           
  1318                           
  1319                           ;master.c: 206:             motorCon |= 0x04;
  1320     0436  1551               	bsf	_motorCon,2
  1321                           
  1322                           ;master.c: 207:             break;
  1323     0437  2C4B               	goto	l1820
  1324     0438                     l1818:
  1325     0438  087B               	movf	_servoPos,w
  1326     0439  00F4               	movwf	??_writeMotors
  1327     043A  01F5               	clrf	??_writeMotors+1
  1328                           
  1329                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1330                           ; Switch size 1, requested type "simple"
  1331                           ; Number of cases is 1, Range of values is 0 to 0
  1332                           ; switch strategies available:
  1333                           ; Name         Instructions Cycles
  1334                           ; simple_byte            4     3 (average)
  1335                           ; direct_byte           11     8 (fixed)
  1336                           ; jumptable            260     6 (fixed)
  1337                           ;	Chosen strategy is simple_byte
  1338     043B  0875               	movf	??_writeMotors+1,w
  1339     043C  3A00               	xorlw	0	; case 0
  1340     043D  1903               	skipnz
  1341     043E  2C40               	goto	l2258
  1342     043F  2C2F               	goto	l125
  1343     0440                     l2258:
  1344                           
  1345                           ; Switch size 1, requested type "simple"
  1346                           ; Number of cases is 3, Range of values is 48 to 50
  1347                           ; switch strategies available:
  1348                           ; Name         Instructions Cycles
  1349                           ; simple_byte           10     6 (average)
  1350                           ; direct_byte           20    11 (fixed)
  1351                           ; jumptable            263     9 (fixed)
  1352                           ;	Chosen strategy is simple_byte
  1353     0440  0874               	movf	??_writeMotors,w
  1354     0441  3A30               	xorlw	48	; case 48
  1355     0442  1903               	skipnz
  1356     0443  2C2F               	goto	l125
  1357     0444  3A01               	xorlw	1	; case 49
  1358     0445  1903               	skipnz
  1359     0446  2C31               	goto	l1814
  1360     0447  3A03               	xorlw	3	; case 50
  1361     0448  1903               	skipnz
  1362     0449  2C36               	goto	l128
  1363     044A  2C2F               	goto	l125
  1364     044B                     l1820:
  1365                           
  1366                           ;master.c: 214:     I2C_Master_Start();
  1367     044B  120A  158A  26A7  120A  118A  	fcall	_I2C_Master_Start
  1368                           
  1369                           ;master.c: 215:     I2C_Master_Write(0x30 +0);
  1370     0450  3030               	movlw	48
  1371     0451  00F2               	movwf	I2C_Master_Write@d
  1372     0452  3000               	movlw	0
  1373     0453  00F3               	movwf	I2C_Master_Write@d+1
  1374     0454  120A  158A  26B9  120A  118A  	fcall	_I2C_Master_Write
  1375                           
  1376                           ;master.c: 216:     I2C_Master_Write(motorCon);
  1377     0459  1283               	bcf	3,5	;RP0=0, select bank0
  1378     045A  1303               	bcf	3,6	;RP1=0, select bank0
  1379     045B  0851               	movf	_motorCon,w
  1380     045C  00F4               	movwf	??_writeMotors
  1381     045D  01F5               	clrf	??_writeMotors+1
  1382     045E  0874               	movf	??_writeMotors,w
  1383     045F  00F2               	movwf	I2C_Master_Write@d
  1384     0460  0875               	movf	??_writeMotors+1,w
  1385     0461  00F3               	movwf	I2C_Master_Write@d+1
  1386     0462  120A  158A  26B9  120A  118A  	fcall	_I2C_Master_Write
  1387                           
  1388                           ;master.c: 217:     I2C_Master_Stop();
  1389     0467  120A  158A  26B0  120A  118A  	fcall	_I2C_Master_Stop
  1390     046C                     l1822:
  1391                           
  1392                           ;master.c: 218:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1393     046C  3034               	movlw	52
  1394     046D  00F5               	movwf	??_writeMotors+1
  1395     046E  30F1               	movlw	241
  1396     046F  00F4               	movwf	??_writeMotors
  1397     0470                     u1757:
  1398     0470  0BF4               	decfsz	??_writeMotors,f
  1399     0471  2C70               	goto	u1757
  1400     0472  0BF5               	decfsz	??_writeMotors+1,f
  1401     0473  2C70               	goto	u1757
  1402     0474  2C75               	nop2
  1403     0475                     l130:
  1404     0475  0008               	return
  1405     0476                     __end_of_writeMotors:
  1406                           
  1407                           	psect	text2
  1408     0597                     __ptext2:	
  1409 ;; *************** function _setup *****************
  1410 ;; Defined at:
  1411 ;;		line 122 in file "master.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;		None
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;		None
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  1    wreg      void 
  1418 ;; Registers used:
  1419 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1425 ;;      Params:         0       0       0       0       0
  1426 ;;      Locals:         0       0       0       0       0
  1427 ;;      Temps:          0       2       0       0       0
  1428 ;;      Totals:         0       2       0       0       0
  1429 ;;Total ram usage:        2 bytes
  1430 ;; Hardware stack levels used: 1
  1431 ;; Hardware stack levels required when called: 5
  1432 ;; This function calls:
  1433 ;;		_I2C_Master_Init
  1434 ;;		_Lcd_Init
  1435 ;;		_UART_RX_config
  1436 ;;		_UART_TX_config
  1437 ;; This function is called by:
  1438 ;;		_main
  1439 ;; This function uses a non-reentrant model
  1440 ;;
  1441                           
  1442     0597                     _setup:	
  1443                           ;psect for function _setup
  1444                           
  1445     0597                     l2132:	
  1446                           ;incstack = 0
  1447                           ; Regs used in _setup: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1448                           
  1449                           
  1450                           ;master.c: 123:     ANSEL = 0;
  1451     0597  1683               	bsf	3,5	;RP0=1, select bank3
  1452     0598  1703               	bsf	3,6	;RP1=1, select bank3
  1453     0599  0188               	clrf	8	;volatile
  1454                           
  1455                           ;master.c: 124:     ANSELH= 0;
  1456     059A  0189               	clrf	9	;volatile
  1457                           
  1458                           ;master.c: 126:     TRISD = 0;
  1459     059B  1683               	bsf	3,5	;RP0=1, select bank1
  1460     059C  1303               	bcf	3,6	;RP1=0, select bank1
  1461     059D  0188               	clrf	8	;volatile
  1462                           
  1463                           ;master.c: 127:     PORTD = 0;
  1464     059E  1283               	bcf	3,5	;RP0=0, select bank0
  1465     059F  1303               	bcf	3,6	;RP1=0, select bank0
  1466     05A0  0188               	clrf	8	;volatile
  1467     05A1                     l2134:
  1468                           
  1469                           ;master.c: 130:     OSCCONbits.IRCF = 0b111;
  1470     05A1  3070               	movlw	112
  1471     05A2  1683               	bsf	3,5	;RP0=1, select bank1
  1472     05A3  1303               	bcf	3,6	;RP1=0, select bank1
  1473     05A4  048F               	iorwf	15,f	;volatile
  1474     05A5                     l2136:
  1475                           
  1476                           ;master.c: 131:     SCS = 1;
  1477     05A5  140F               	bsf	15,0	;volatile
  1478     05A6                     l2138:
  1479                           
  1480                           ;master.c: 134:     Lcd_Init();
  1481     05A6  120A  118A  253A  120A  118A  	fcall	_Lcd_Init
  1482     05AB                     l2140:
  1483                           
  1484                           ;master.c: 135:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1485     05AB  301A               	movlw	26
  1486     05AC  1283               	bcf	3,5	;RP0=0, select bank0
  1487     05AD  1303               	bcf	3,6	;RP1=0, select bank0
  1488     05AE  00C6               	movwf	??_setup+1
  1489     05AF  30F7               	movlw	247
  1490     05B0  00C5               	movwf	??_setup
  1491     05B1                     u1767:
  1492     05B1  0BC5               	decfsz	??_setup,f
  1493     05B2  2DB1               	goto	u1767
  1494     05B3  0BC6               	decfsz	??_setup+1,f
  1495     05B4  2DB1               	goto	u1767
  1496     05B5  2DB6               	nop2
  1497     05B6                     l2142:
  1498                           
  1499                           ;master.c: 138:     I2C_Master_Init(100000);
  1500     05B6  3000               	movlw	0
  1501     05B7  1283               	bcf	3,5	;RP0=0, select bank0
  1502     05B8  1303               	bcf	3,6	;RP1=0, select bank0
  1503     05B9  00A9               	movwf	I2C_Master_Init@c+3
  1504     05BA  3001               	movlw	1
  1505     05BB  00A8               	movwf	I2C_Master_Init@c+2
  1506     05BC  3086               	movlw	134
  1507     05BD  00A7               	movwf	I2C_Master_Init@c+1
  1508     05BE  30A0               	movlw	160
  1509     05BF  00A6               	movwf	I2C_Master_Init@c
  1510     05C0  120A  158A  27C8  120A  118A  	fcall	_I2C_Master_Init
  1511     05C5                     l2144:
  1512                           
  1513                           ;master.c: 141:     UART_RX_config(9600);
  1514     05C5  3000               	movlw	0
  1515     05C6  1283               	bcf	3,5	;RP0=0, select bank0
  1516     05C7  1303               	bcf	3,6	;RP1=0, select bank0
  1517     05C8  00B7               	movwf	UART_RX_config@baudrate+3
  1518     05C9  3000               	movlw	0
  1519     05CA  00B6               	movwf	UART_RX_config@baudrate+2
  1520     05CB  3025               	movlw	37
  1521     05CC  00B5               	movwf	UART_RX_config@baudrate+1
  1522     05CD  3080               	movlw	128
  1523     05CE  00B4               	movwf	UART_RX_config@baudrate
  1524     05CF  120A  118A  223F  120A  118A  	fcall	_UART_RX_config
  1525     05D4                     l2146:
  1526                           
  1527                           ;master.c: 142:     UART_TX_config(9600);
  1528     05D4  3000               	movlw	0
  1529     05D5  1283               	bcf	3,5	;RP0=0, select bank0
  1530     05D6  1303               	bcf	3,6	;RP1=0, select bank0
  1531     05D7  00B7               	movwf	UART_TX_config@baudrate+3
  1532     05D8  3000               	movlw	0
  1533     05D9  00B6               	movwf	UART_TX_config@baudrate+2
  1534     05DA  3025               	movlw	37
  1535     05DB  00B5               	movwf	UART_TX_config@baudrate+1
  1536     05DC  3080               	movlw	128
  1537     05DD  00B4               	movwf	UART_TX_config@baudrate
  1538     05DE  120A  118A  22C2  120A  118A  	fcall	_UART_TX_config
  1539     05E3                     l108:
  1540     05E3  0008               	return
  1541     05E4                     __end_of_setup:
  1542                           
  1543                           	psect	text3
  1544     02C2                     __ptext3:	
  1545 ;; *************** function _UART_TX_config *****************
  1546 ;; Defined at:
  1547 ;;		line 25 in file "UART.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;  baudrate        4   20[BANK0 ] long 
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;  BR              4   33[BANK0 ] long 
  1552 ;; Return value:  Size  Location     Type
  1553 ;;                  1    wreg      void 
  1554 ;; Registers used:
  1555 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1561 ;;      Params:         0       4       0       0       0
  1562 ;;      Locals:         0       8       0       0       0
  1563 ;;      Temps:          0       5       0       0       0
  1564 ;;      Totals:         0      17       0       0       0
  1565 ;;Total ram usage:       17 bytes
  1566 ;; Hardware stack levels used: 1
  1567 ;; Hardware stack levels required when called: 3
  1568 ;; This function calls:
  1569 ;;		___aldiv
  1570 ;; This function is called by:
  1571 ;;		_setup
  1572 ;; This function uses a non-reentrant model
  1573 ;;
  1574                           
  1575     02C2                     _UART_TX_config:	
  1576                           ;psect for function _UART_TX_config
  1577                           
  1578     02C2                     l2082:	
  1579                           ;incstack = 0
  1580                           ; Regs used in _UART_TX_config: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1581                           
  1582                           
  1583                           ;UART.c: 28:     long BR;;UART.c: 29:     BR = ((8000000/baudrate)/64) - 1;
  1584     02C2  1283               	bcf	3,5	;RP0=0, select bank0
  1585     02C3  1303               	bcf	3,6	;RP1=0, select bank0
  1586     02C4  0837               	movf	UART_TX_config@baudrate+3,w
  1587     02C5  00A8               	movwf	___aldiv@divisor+3
  1588     02C6  0836               	movf	UART_TX_config@baudrate+2,w
  1589     02C7  00A7               	movwf	___aldiv@divisor+2
  1590     02C8  0835               	movf	UART_TX_config@baudrate+1,w
  1591     02C9  00A6               	movwf	___aldiv@divisor+1
  1592     02CA  0834               	movf	UART_TX_config@baudrate,w
  1593     02CB  00A5               	movwf	___aldiv@divisor
  1594     02CC  3000               	movlw	0
  1595     02CD  00AC               	movwf	___aldiv@dividend+3
  1596     02CE  307A               	movlw	122
  1597     02CF  00AB               	movwf	___aldiv@dividend+2
  1598     02D0  3012               	movlw	18
  1599     02D1  00AA               	movwf	___aldiv@dividend+1
  1600     02D2  3000               	movlw	0
  1601     02D3  00A9               	movwf	___aldiv@dividend
  1602     02D4  120A  118A  21A2  120A  118A  	fcall	___aldiv
  1603     02D9  1283               	bcf	3,5	;RP0=0, select bank0
  1604     02DA  1303               	bcf	3,6	;RP1=0, select bank0
  1605     02DB  0828               	movf	?___aldiv+3,w
  1606     02DC  00C0               	movwf	_UART_TX_config$1025+3
  1607     02DD  0827               	movf	?___aldiv+2,w
  1608     02DE  00BF               	movwf	_UART_TX_config$1025+2
  1609     02DF  0826               	movf	?___aldiv+1,w
  1610     02E0  00BE               	movwf	_UART_TX_config$1025+1
  1611     02E1  0825               	movf	?___aldiv,w
  1612     02E2  00BD               	movwf	_UART_TX_config$1025
  1613                           
  1614                           ;UART.c: 28:     long BR;;UART.c: 29:     BR = ((8000000/baudrate)/64) - 1;
  1615     02E3  30FF               	movlw	255
  1616     02E4  00B8               	movwf	??_UART_TX_config
  1617     02E5  30FF               	movlw	255
  1618     02E6  00B9               	movwf	??_UART_TX_config+1
  1619     02E7  30FF               	movlw	255
  1620     02E8  00BA               	movwf	??_UART_TX_config+2
  1621     02E9  30FF               	movlw	255
  1622     02EA  00BB               	movwf	??_UART_TX_config+3
  1623     02EB  3000               	movlw	0
  1624     02EC  00A8               	movwf	___aldiv@divisor+3
  1625     02ED  3000               	movlw	0
  1626     02EE  00A7               	movwf	___aldiv@divisor+2
  1627     02EF  3000               	movlw	0
  1628     02F0  00A6               	movwf	___aldiv@divisor+1
  1629     02F1  3040               	movlw	64
  1630     02F2  00A5               	movwf	___aldiv@divisor
  1631     02F3  0840               	movf	_UART_TX_config$1025+3,w
  1632     02F4  00AC               	movwf	___aldiv@dividend+3
  1633     02F5  083F               	movf	_UART_TX_config$1025+2,w
  1634     02F6  00AB               	movwf	___aldiv@dividend+2
  1635     02F7  083E               	movf	_UART_TX_config$1025+1,w
  1636     02F8  00AA               	movwf	___aldiv@dividend+1
  1637     02F9  083D               	movf	_UART_TX_config$1025,w
  1638     02FA  00A9               	movwf	___aldiv@dividend
  1639     02FB  120A  118A  21A2  120A  118A  	fcall	___aldiv
  1640     0300  1283               	bcf	3,5	;RP0=0, select bank0
  1641     0301  1303               	bcf	3,6	;RP1=0, select bank0
  1642     0302  0825               	movf	?___aldiv,w
  1643     0303  07B8               	addwf	??_UART_TX_config,f
  1644     0304  0826               	movf	?___aldiv+1,w
  1645     0305  1803               	skipnc
  1646     0306  0F26               	incfsz	?___aldiv+1,w
  1647     0307  2B09               	goto	u1620
  1648     0308  2B0A               	goto	u1621
  1649     0309                     u1620:
  1650     0309  07B9               	addwf	??_UART_TX_config+1,f
  1651     030A                     u1621:
  1652     030A  0827               	movf	?___aldiv+2,w
  1653     030B  1803               	skipnc
  1654     030C  0F27               	incfsz	?___aldiv+2,w
  1655     030D  2B0F               	goto	u1622
  1656     030E  2B10               	goto	u1623
  1657     030F                     u1622:
  1658     030F  07BA               	addwf	??_UART_TX_config+2,f
  1659     0310                     u1623:
  1660     0310  0828               	movf	?___aldiv+3,w
  1661     0311  1803               	skipnc
  1662     0312  0A28               	incf	?___aldiv+3,w
  1663     0313  07BB               	addwf	??_UART_TX_config+3,f
  1664     0314  083B               	movf	??_UART_TX_config+3,w
  1665     0315  00C4               	movwf	UART_TX_config@BR+3
  1666     0316  083A               	movf	??_UART_TX_config+2,w
  1667     0317  00C3               	movwf	UART_TX_config@BR+2
  1668     0318  0839               	movf	??_UART_TX_config+1,w
  1669     0319  00C2               	movwf	UART_TX_config@BR+1
  1670     031A  0838               	movf	??_UART_TX_config,w
  1671     031B  00C1               	movwf	UART_TX_config@BR
  1672     031C                     l2084:
  1673                           
  1674                           ;UART.c: 30:     SPBRG = BR & 0x00FF;
  1675     031C  0841               	movf	UART_TX_config@BR,w
  1676     031D  1683               	bsf	3,5	;RP0=1, select bank1
  1677     031E  1303               	bcf	3,6	;RP1=0, select bank1
  1678     031F  0099               	movwf	25	;volatile
  1679     0320                     l2086:
  1680                           
  1681                           ;UART.c: 31:     SPBRGH = (BR & 0xFF00) >> 8;
  1682     0320  1283               	bcf	3,5	;RP0=0, select bank0
  1683     0321  1303               	bcf	3,6	;RP1=0, select bank0
  1684     0322  0841               	movf	UART_TX_config@BR,w
  1685     0323  00B8               	movwf	??_UART_TX_config
  1686     0324  0842               	movf	UART_TX_config@BR+1,w
  1687     0325  00B9               	movwf	??_UART_TX_config+1
  1688     0326  0843               	movf	UART_TX_config@BR+2,w
  1689     0327  00BA               	movwf	??_UART_TX_config+2
  1690     0328  0844               	movf	UART_TX_config@BR+3,w
  1691     0329  00BB               	movwf	??_UART_TX_config+3
  1692     032A  3008               	movlw	8
  1693     032B  00BC               	movwf	??_UART_TX_config+4
  1694     032C                     u1635:
  1695     032C  0D3B               	rlf	??_UART_TX_config+3,w
  1696     032D  0CBB               	rrf	??_UART_TX_config+3,f
  1697     032E  0CBA               	rrf	??_UART_TX_config+2,f
  1698     032F  0CB9               	rrf	??_UART_TX_config+1,f
  1699     0330  0CB8               	rrf	??_UART_TX_config,f
  1700     0331                     u1630:
  1701     0331  0BBC               	decfsz	??_UART_TX_config+4,f
  1702     0332  2B2C               	goto	u1635
  1703     0333  0838               	movf	??_UART_TX_config,w
  1704     0334  1683               	bsf	3,5	;RP0=1, select bank1
  1705     0335  1303               	bcf	3,6	;RP1=0, select bank1
  1706     0336  009A               	movwf	26	;volatile
  1707     0337                     l2088:
  1708                           
  1709                           ;UART.c: 33:     SYNC = 0;
  1710     0337  1218               	bcf	24,4	;volatile
  1711     0338                     l2090:
  1712                           
  1713                           ;UART.c: 34:     SPEN = 1;
  1714     0338  1283               	bcf	3,5	;RP0=0, select bank0
  1715     0339  1303               	bcf	3,6	;RP1=0, select bank0
  1716     033A  1798               	bsf	24,7	;volatile
  1717     033B                     l2092:
  1718                           
  1719                           ;UART.c: 36:     TXEN = 1;
  1720     033B  1683               	bsf	3,5	;RP0=1, select bank1
  1721     033C  1303               	bcf	3,6	;RP1=0, select bank1
  1722     033D  1698               	bsf	24,5	;volatile
  1723     033E                     l2094:
  1724                           
  1725                           ;UART.c: 37:     TXIE = 0;
  1726     033E  120C               	bcf	12,4	;volatile
  1727     033F                     l2096:
  1728                           
  1729                           ;UART.c: 38:     TXIF = 0;
  1730     033F  1283               	bcf	3,5	;RP0=0, select bank0
  1731     0340  1303               	bcf	3,6	;RP1=0, select bank0
  1732     0341  120C               	bcf	12,4	;volatile
  1733     0342                     l295:
  1734     0342  0008               	return
  1735     0343                     __end_of_UART_TX_config:
  1736                           
  1737                           	psect	text4
  1738     023F                     __ptext4:	
  1739 ;; *************** function _UART_RX_config *****************
  1740 ;; Defined at:
  1741 ;;		line 6 in file "UART.c"
  1742 ;; Parameters:    Size  Location     Type
  1743 ;;  baudrate        4   20[BANK0 ] long 
  1744 ;; Auto vars:     Size  Location     Type
  1745 ;;  BR              4   33[BANK0 ] long 
  1746 ;; Return value:  Size  Location     Type
  1747 ;;                  1    wreg      void 
  1748 ;; Registers used:
  1749 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1750 ;; Tracked objects:
  1751 ;;		On entry : 0/0
  1752 ;;		On exit  : 0/0
  1753 ;;		Unchanged: 0/0
  1754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1755 ;;      Params:         0       4       0       0       0
  1756 ;;      Locals:         0       8       0       0       0
  1757 ;;      Temps:          0       5       0       0       0
  1758 ;;      Totals:         0      17       0       0       0
  1759 ;;Total ram usage:       17 bytes
  1760 ;; Hardware stack levels used: 1
  1761 ;; Hardware stack levels required when called: 3
  1762 ;; This function calls:
  1763 ;;		___aldiv
  1764 ;; This function is called by:
  1765 ;;		_setup
  1766 ;; This function uses a non-reentrant model
  1767 ;;
  1768                           
  1769     023F                     _UART_RX_config:	
  1770                           ;psect for function _UART_RX_config
  1771                           
  1772     023F                     l2062:	
  1773                           ;incstack = 0
  1774                           ; Regs used in _UART_RX_config: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1775                           
  1776                           
  1777                           ;UART.c: 9:     long BR;;UART.c: 10:     BR = ((8000000/baudrate)/64) - 1;
  1778     023F  1283               	bcf	3,5	;RP0=0, select bank0
  1779     0240  1303               	bcf	3,6	;RP1=0, select bank0
  1780     0241  0837               	movf	UART_RX_config@baudrate+3,w
  1781     0242  00A8               	movwf	___aldiv@divisor+3
  1782     0243  0836               	movf	UART_RX_config@baudrate+2,w
  1783     0244  00A7               	movwf	___aldiv@divisor+2
  1784     0245  0835               	movf	UART_RX_config@baudrate+1,w
  1785     0246  00A6               	movwf	___aldiv@divisor+1
  1786     0247  0834               	movf	UART_RX_config@baudrate,w
  1787     0248  00A5               	movwf	___aldiv@divisor
  1788     0249  3000               	movlw	0
  1789     024A  00AC               	movwf	___aldiv@dividend+3
  1790     024B  307A               	movlw	122
  1791     024C  00AB               	movwf	___aldiv@dividend+2
  1792     024D  3012               	movlw	18
  1793     024E  00AA               	movwf	___aldiv@dividend+1
  1794     024F  3000               	movlw	0
  1795     0250  00A9               	movwf	___aldiv@dividend
  1796     0251  120A  118A  21A2  120A  118A  	fcall	___aldiv
  1797     0256  1283               	bcf	3,5	;RP0=0, select bank0
  1798     0257  1303               	bcf	3,6	;RP1=0, select bank0
  1799     0258  0828               	movf	?___aldiv+3,w
  1800     0259  00C0               	movwf	_UART_RX_config$1024+3
  1801     025A  0827               	movf	?___aldiv+2,w
  1802     025B  00BF               	movwf	_UART_RX_config$1024+2
  1803     025C  0826               	movf	?___aldiv+1,w
  1804     025D  00BE               	movwf	_UART_RX_config$1024+1
  1805     025E  0825               	movf	?___aldiv,w
  1806     025F  00BD               	movwf	_UART_RX_config$1024
  1807                           
  1808                           ;UART.c: 9:     long BR;;UART.c: 10:     BR = ((8000000/baudrate)/64) - 1;
  1809     0260  30FF               	movlw	255
  1810     0261  00B8               	movwf	??_UART_RX_config
  1811     0262  30FF               	movlw	255
  1812     0263  00B9               	movwf	??_UART_RX_config+1
  1813     0264  30FF               	movlw	255
  1814     0265  00BA               	movwf	??_UART_RX_config+2
  1815     0266  30FF               	movlw	255
  1816     0267  00BB               	movwf	??_UART_RX_config+3
  1817     0268  3000               	movlw	0
  1818     0269  00A8               	movwf	___aldiv@divisor+3
  1819     026A  3000               	movlw	0
  1820     026B  00A7               	movwf	___aldiv@divisor+2
  1821     026C  3000               	movlw	0
  1822     026D  00A6               	movwf	___aldiv@divisor+1
  1823     026E  3040               	movlw	64
  1824     026F  00A5               	movwf	___aldiv@divisor
  1825     0270  0840               	movf	_UART_RX_config$1024+3,w
  1826     0271  00AC               	movwf	___aldiv@dividend+3
  1827     0272  083F               	movf	_UART_RX_config$1024+2,w
  1828     0273  00AB               	movwf	___aldiv@dividend+2
  1829     0274  083E               	movf	_UART_RX_config$1024+1,w
  1830     0275  00AA               	movwf	___aldiv@dividend+1
  1831     0276  083D               	movf	_UART_RX_config$1024,w
  1832     0277  00A9               	movwf	___aldiv@dividend
  1833     0278  120A  118A  21A2  120A  118A  	fcall	___aldiv
  1834     027D  1283               	bcf	3,5	;RP0=0, select bank0
  1835     027E  1303               	bcf	3,6	;RP1=0, select bank0
  1836     027F  0825               	movf	?___aldiv,w
  1837     0280  07B8               	addwf	??_UART_RX_config,f
  1838     0281  0826               	movf	?___aldiv+1,w
  1839     0282  1803               	skipnc
  1840     0283  0F26               	incfsz	?___aldiv+1,w
  1841     0284  2A86               	goto	u1600
  1842     0285  2A87               	goto	u1601
  1843     0286                     u1600:
  1844     0286  07B9               	addwf	??_UART_RX_config+1,f
  1845     0287                     u1601:
  1846     0287  0827               	movf	?___aldiv+2,w
  1847     0288  1803               	skipnc
  1848     0289  0F27               	incfsz	?___aldiv+2,w
  1849     028A  2A8C               	goto	u1602
  1850     028B  2A8D               	goto	u1603
  1851     028C                     u1602:
  1852     028C  07BA               	addwf	??_UART_RX_config+2,f
  1853     028D                     u1603:
  1854     028D  0828               	movf	?___aldiv+3,w
  1855     028E  1803               	skipnc
  1856     028F  0A28               	incf	?___aldiv+3,w
  1857     0290  07BB               	addwf	??_UART_RX_config+3,f
  1858     0291  083B               	movf	??_UART_RX_config+3,w
  1859     0292  00C4               	movwf	UART_RX_config@BR+3
  1860     0293  083A               	movf	??_UART_RX_config+2,w
  1861     0294  00C3               	movwf	UART_RX_config@BR+2
  1862     0295  0839               	movf	??_UART_RX_config+1,w
  1863     0296  00C2               	movwf	UART_RX_config@BR+1
  1864     0297  0838               	movf	??_UART_RX_config,w
  1865     0298  00C1               	movwf	UART_RX_config@BR
  1866     0299                     l2064:
  1867                           
  1868                           ;UART.c: 11:     SPBRG = BR & 0x00FF;
  1869     0299  0841               	movf	UART_RX_config@BR,w
  1870     029A  1683               	bsf	3,5	;RP0=1, select bank1
  1871     029B  1303               	bcf	3,6	;RP1=0, select bank1
  1872     029C  0099               	movwf	25	;volatile
  1873     029D                     l2066:
  1874                           
  1875                           ;UART.c: 12:     SPBRGH = (BR & 0xFF00) >> 8;
  1876     029D  1283               	bcf	3,5	;RP0=0, select bank0
  1877     029E  1303               	bcf	3,6	;RP1=0, select bank0
  1878     029F  0841               	movf	UART_RX_config@BR,w
  1879     02A0  00B8               	movwf	??_UART_RX_config
  1880     02A1  0842               	movf	UART_RX_config@BR+1,w
  1881     02A2  00B9               	movwf	??_UART_RX_config+1
  1882     02A3  0843               	movf	UART_RX_config@BR+2,w
  1883     02A4  00BA               	movwf	??_UART_RX_config+2
  1884     02A5  0844               	movf	UART_RX_config@BR+3,w
  1885     02A6  00BB               	movwf	??_UART_RX_config+3
  1886     02A7  3008               	movlw	8
  1887     02A8  00BC               	movwf	??_UART_RX_config+4
  1888     02A9                     u1615:
  1889     02A9  0D3B               	rlf	??_UART_RX_config+3,w
  1890     02AA  0CBB               	rrf	??_UART_RX_config+3,f
  1891     02AB  0CBA               	rrf	??_UART_RX_config+2,f
  1892     02AC  0CB9               	rrf	??_UART_RX_config+1,f
  1893     02AD  0CB8               	rrf	??_UART_RX_config,f
  1894     02AE                     u1610:
  1895     02AE  0BBC               	decfsz	??_UART_RX_config+4,f
  1896     02AF  2AA9               	goto	u1615
  1897     02B0  0838               	movf	??_UART_RX_config,w
  1898     02B1  1683               	bsf	3,5	;RP0=1, select bank1
  1899     02B2  1303               	bcf	3,6	;RP1=0, select bank1
  1900     02B3  009A               	movwf	26	;volatile
  1901     02B4                     l2068:
  1902                           
  1903                           ;UART.c: 14:     SYNC = 0;
  1904     02B4  1218               	bcf	24,4	;volatile
  1905     02B5                     l2070:
  1906                           
  1907                           ;UART.c: 15:     SPEN = 1;
  1908     02B5  1283               	bcf	3,5	;RP0=0, select bank0
  1909     02B6  1303               	bcf	3,6	;RP1=0, select bank0
  1910     02B7  1798               	bsf	24,7	;volatile
  1911     02B8                     l2072:
  1912                           
  1913                           ;UART.c: 17:     CREN = 1;
  1914     02B8  1618               	bsf	24,4	;volatile
  1915     02B9                     l2074:
  1916                           
  1917                           ;UART.c: 18:     RCIE = 1;
  1918     02B9  1683               	bsf	3,5	;RP0=1, select bank1
  1919     02BA  1303               	bcf	3,6	;RP1=0, select bank1
  1920     02BB  168C               	bsf	12,5	;volatile
  1921     02BC                     l2076:
  1922                           
  1923                           ;UART.c: 19:     PEIE = 1;
  1924     02BC  170B               	bsf	11,6	;volatile
  1925     02BD                     l2078:
  1926                           
  1927                           ;UART.c: 20:     GIE = 1;
  1928     02BD  178B               	bsf	11,7	;volatile
  1929     02BE                     l2080:
  1930                           
  1931                           ;UART.c: 21:     RCIF = 0;
  1932     02BE  1283               	bcf	3,5	;RP0=0, select bank0
  1933     02BF  1303               	bcf	3,6	;RP1=0, select bank0
  1934     02C0  128C               	bcf	12,5	;volatile
  1935     02C1                     l292:
  1936     02C1  0008               	return
  1937     02C2                     __end_of_UART_RX_config:
  1938                           
  1939                           	psect	text5
  1940     053A                     __ptext5:	
  1941 ;; *************** function _Lcd_Init *****************
  1942 ;; Defined at:
  1943 ;;		line 65 in file "LCD4b.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;		None
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;		None
  1948 ;; Return value:  Size  Location     Type
  1949 ;;                  1    wreg      void 
  1950 ;; Registers used:
  1951 ;;		wreg, status,2, status,0, pclath, cstack
  1952 ;; Tracked objects:
  1953 ;;		On entry : 0/0
  1954 ;;		On exit  : 0/0
  1955 ;;		Unchanged: 0/0
  1956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1957 ;;      Params:         0       0       0       0       0
  1958 ;;      Locals:         0       0       0       0       0
  1959 ;;      Temps:          2       0       0       0       0
  1960 ;;      Totals:         2       0       0       0       0
  1961 ;;Total ram usage:        2 bytes
  1962 ;; Hardware stack levels used: 1
  1963 ;; Hardware stack levels required when called: 4
  1964 ;; This function calls:
  1965 ;;		_Lcd_Cmd
  1966 ;;		_Lcd_Port
  1967 ;; This function is called by:
  1968 ;;		_setup
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972     053A                     _Lcd_Init:	
  1973                           ;psect for function _Lcd_Init
  1974                           
  1975     053A                     l2040:	
  1976                           ;incstack = 0
  1977                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1978                           
  1979                           
  1980                           ;LCD4b.c: 66:     Lcd_Port(0x00);
  1981     053A  3000               	movlw	0
  1982     053B  120A  158A  2739  120A  118A  	fcall	_Lcd_Port
  1983     0540                     l2042:
  1984                           
  1985                           ;LCD4b.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1986     0540  3034               	movlw	52
  1987     0541  00F7               	movwf	??_Lcd_Init+1
  1988     0542  30F1               	movlw	241
  1989     0543  00F6               	movwf	??_Lcd_Init
  1990     0544                     u1777:
  1991     0544  0BF6               	decfsz	??_Lcd_Init,f
  1992     0545  2D44               	goto	u1777
  1993     0546  0BF7               	decfsz	??_Lcd_Init+1,f
  1994     0547  2D44               	goto	u1777
  1995     0548  2D49               	nop2
  1996     0549                     l2044:
  1997                           
  1998                           ;LCD4b.c: 68:     Lcd_Cmd(0x03);
  1999     0549  3003               	movlw	3
  2000     054A  120A  158A  26FE  120A  118A  	fcall	_Lcd_Cmd
  2001                           
  2002                           ;LCD4b.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2003     054F  300D               	movlw	13
  2004     0550  00F7               	movwf	??_Lcd_Init+1
  2005     0551  30FB               	movlw	251
  2006     0552  00F6               	movwf	??_Lcd_Init
  2007     0553                     u1787:
  2008     0553  0BF6               	decfsz	??_Lcd_Init,f
  2009     0554  2D53               	goto	u1787
  2010     0555  0BF7               	decfsz	??_Lcd_Init+1,f
  2011     0556  2D53               	goto	u1787
  2012     0557  2D58               	nop2
  2013     0558                     l2046:
  2014                           
  2015                           ;LCD4b.c: 70:     Lcd_Cmd(0x03);
  2016     0558  3003               	movlw	3
  2017     0559  120A  158A  26FE  120A  118A  	fcall	_Lcd_Cmd
  2018     055E                     l2048:
  2019                           
  2020                           ;LCD4b.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2021     055E  301D               	movlw	29
  2022     055F  00F7               	movwf	??_Lcd_Init+1
  2023     0560  3091               	movlw	145
  2024     0561  00F6               	movwf	??_Lcd_Init
  2025     0562                     u1797:
  2026     0562  0BF6               	decfsz	??_Lcd_Init,f
  2027     0563  2D62               	goto	u1797
  2028     0564  0BF7               	decfsz	??_Lcd_Init+1,f
  2029     0565  2D62               	goto	u1797
  2030                           
  2031                           ;LCD4b.c: 72:     Lcd_Cmd(0x03);
  2032     0566  3003               	movlw	3
  2033     0567  120A  158A  26FE  120A  118A  	fcall	_Lcd_Cmd
  2034                           
  2035                           ;LCD4b.c: 74:     Lcd_Cmd(0x02);
  2036     056C  3002               	movlw	2
  2037     056D  120A  158A  26FE  120A  118A  	fcall	_Lcd_Cmd
  2038                           
  2039                           ;LCD4b.c: 75:     Lcd_Cmd(0x02);
  2040     0572  3002               	movlw	2
  2041     0573  120A  158A  26FE  120A  118A  	fcall	_Lcd_Cmd
  2042                           
  2043                           ;LCD4b.c: 76:     Lcd_Cmd(0x08);
  2044     0578  3008               	movlw	8
  2045     0579  120A  158A  26FE  120A  118A  	fcall	_Lcd_Cmd
  2046                           
  2047                           ;LCD4b.c: 77:     Lcd_Cmd(0x00);
  2048     057E  3000               	movlw	0
  2049     057F  120A  158A  26FE  120A  118A  	fcall	_Lcd_Cmd
  2050                           
  2051                           ;LCD4b.c: 78:     Lcd_Cmd(0x0C);
  2052     0584  300C               	movlw	12
  2053     0585  120A  158A  26FE  120A  118A  	fcall	_Lcd_Cmd
  2054                           
  2055                           ;LCD4b.c: 79:     Lcd_Cmd(0x00);
  2056     058A  3000               	movlw	0
  2057     058B  120A  158A  26FE  120A  118A  	fcall	_Lcd_Cmd
  2058                           
  2059                           ;LCD4b.c: 80:     Lcd_Cmd(0x06);
  2060     0590  3006               	movlw	6
  2061     0591  120A  158A  26FE  120A  118A  	fcall	_Lcd_Cmd
  2062     0596                     l244:
  2063     0596  0008               	return
  2064     0597                     __end_of_Lcd_Init:
  2065                           
  2066                           	psect	text6
  2067     0FC8                     __ptext6:	
  2068 ;; *************** function _I2C_Master_Init *****************
  2069 ;; Defined at:
  2070 ;;		line 16 in file "I2C.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;  c               4    6[BANK0 ] const unsigned long 
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;		None
  2075 ;; Return value:  Size  Location     Type
  2076 ;;                  1    wreg      void 
  2077 ;; Registers used:
  2078 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2079 ;; Tracked objects:
  2080 ;;		On entry : 0/0
  2081 ;;		On exit  : 0/0
  2082 ;;		Unchanged: 0/0
  2083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2084 ;;      Params:         0       4       0       0       0
  2085 ;;      Locals:         0       0       0       0       0
  2086 ;;      Temps:          0       4       0       0       0
  2087 ;;      Totals:         0       8       0       0       0
  2088 ;;Total ram usage:        8 bytes
  2089 ;; Hardware stack levels used: 1
  2090 ;; Hardware stack levels required when called: 3
  2091 ;; This function calls:
  2092 ;;		___lldiv
  2093 ;; This function is called by:
  2094 ;;		_setup
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098     0FC8                     _I2C_Master_Init:	
  2099                           ;psect for function _I2C_Master_Init
  2100                           
  2101     0FC8                     l2050:	
  2102                           ;incstack = 0
  2103                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2104                           
  2105                           
  2106                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2107     0FC8  3028               	movlw	40
  2108     0FC9  1283               	bcf	3,5	;RP0=0, select bank0
  2109     0FCA  1303               	bcf	3,6	;RP1=0, select bank0
  2110     0FCB  0094               	movwf	20	;volatile
  2111     0FCC                     l2052:
  2112                           
  2113                           ;I2C.c: 19:     SSPCON2 = 0;
  2114     0FCC  1683               	bsf	3,5	;RP0=1, select bank1
  2115     0FCD  1303               	bcf	3,6	;RP1=0, select bank1
  2116     0FCE  0191               	clrf	17	;volatile
  2117     0FCF                     l2054:
  2118                           
  2119                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  2120     0FCF  1283               	bcf	3,5	;RP0=0, select bank0
  2121     0FD0  1303               	bcf	3,6	;RP1=0, select bank0
  2122     0FD1  0826               	movf	I2C_Master_Init@c,w
  2123     0FD2  00AA               	movwf	??_I2C_Master_Init
  2124     0FD3  0827               	movf	I2C_Master_Init@c+1,w
  2125     0FD4  00AB               	movwf	??_I2C_Master_Init+1
  2126     0FD5  0828               	movf	I2C_Master_Init@c+2,w
  2127     0FD6  00AC               	movwf	??_I2C_Master_Init+2
  2128     0FD7  0829               	movf	I2C_Master_Init@c+3,w
  2129     0FD8  00AD               	movwf	??_I2C_Master_Init+3
  2130     0FD9  3002               	movlw	2
  2131     0FDA                     u1595:
  2132     0FDA  1003               	clrc
  2133     0FDB  0DAA               	rlf	??_I2C_Master_Init,f
  2134     0FDC  0DAB               	rlf	??_I2C_Master_Init+1,f
  2135     0FDD  0DAC               	rlf	??_I2C_Master_Init+2,f
  2136     0FDE  0DAD               	rlf	??_I2C_Master_Init+3,f
  2137     0FDF                     u1590:
  2138     0FDF  3EFF               	addlw	-1
  2139     0FE0  1D03               	skipz
  2140     0FE1  2FDA               	goto	u1595
  2141     0FE2  082D               	movf	??_I2C_Master_Init+3,w
  2142     0FE3  00F5               	movwf	___lldiv@divisor+3
  2143     0FE4  082C               	movf	??_I2C_Master_Init+2,w
  2144     0FE5  00F4               	movwf	___lldiv@divisor+2
  2145     0FE6  082B               	movf	??_I2C_Master_Init+1,w
  2146     0FE7  00F3               	movwf	___lldiv@divisor+1
  2147     0FE8  082A               	movf	??_I2C_Master_Init,w
  2148     0FE9  00F2               	movwf	___lldiv@divisor
  2149     0FEA  3000               	movlw	0
  2150     0FEB  00F9               	movwf	___lldiv@dividend+3
  2151     0FEC  307A               	movlw	122
  2152     0FED  00F8               	movwf	___lldiv@dividend+2
  2153     0FEE  3012               	movlw	18
  2154     0FEF  00F7               	movwf	___lldiv@dividend+1
  2155     0FF0  3000               	movlw	0
  2156     0FF1  00F6               	movwf	___lldiv@dividend
  2157     0FF2  120A  118A  2343  120A  158A  	fcall	___lldiv
  2158     0FF7  0872               	movf	?___lldiv,w
  2159     0FF8  3EFF               	addlw	255
  2160     0FF9  1683               	bsf	3,5	;RP0=1, select bank1
  2161     0FFA  1303               	bcf	3,6	;RP1=0, select bank1
  2162     0FFB  0093               	movwf	19	;volatile
  2163     0FFC                     l2056:
  2164                           
  2165                           ;I2C.c: 21:     SSPSTAT = 0;
  2166     0FFC  0194               	clrf	20	;volatile
  2167     0FFD                     l2058:
  2168                           
  2169                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2170     0FFD  1587               	bsf	7,3	;volatile
  2171     0FFE                     l2060:
  2172                           
  2173                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2174     0FFE  1607               	bsf	7,4	;volatile
  2175     0FFF                     l178:
  2176     0FFF  0008               	return
  2177     1000                     __end_of_I2C_Master_Init:
  2178                           
  2179                           	psect	text7
  2180     0343                     __ptext7:	
  2181 ;; *************** function ___lldiv *****************
  2182 ;; Defined at:
  2183 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;  divisor         4    2[COMMON] unsigned long 
  2186 ;;  dividend        4    6[COMMON] unsigned long 
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;  quotient        4    1[BANK0 ] unsigned long 
  2189 ;;  counter         1    5[BANK0 ] unsigned char 
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  4    2[COMMON] unsigned long 
  2192 ;; Registers used:
  2193 ;;		wreg, status,2, status,0, btemp+1
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2199 ;;      Params:         8       0       0       0       0
  2200 ;;      Locals:         0       5       0       0       0
  2201 ;;      Temps:          0       1       0       0       0
  2202 ;;      Totals:         8       6       0       0       0
  2203 ;;Total ram usage:       14 bytes
  2204 ;; Hardware stack levels used: 1
  2205 ;; Hardware stack levels required when called: 2
  2206 ;; This function calls:
  2207 ;;		Nothing
  2208 ;; This function is called by:
  2209 ;;		_I2C_Master_Init
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213     0343                     ___lldiv:	
  2214                           ;psect for function ___lldiv
  2215                           
  2216     0343                     l1972:	
  2217                           ;incstack = 0
  2218                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  2219                           
  2220     0343  3000               	movlw	0
  2221     0344  1283               	bcf	3,5	;RP0=0, select bank0
  2222     0345  1303               	bcf	3,6	;RP1=0, select bank0
  2223     0346  00A4               	movwf	___lldiv@quotient+3
  2224     0347  3000               	movlw	0
  2225     0348  00A3               	movwf	___lldiv@quotient+2
  2226     0349  3000               	movlw	0
  2227     034A  00A2               	movwf	___lldiv@quotient+1
  2228     034B  3000               	movlw	0
  2229     034C  00A1               	movwf	___lldiv@quotient
  2230     034D  0875               	movf	___lldiv@divisor+3,w
  2231     034E  0474               	iorwf	___lldiv@divisor+2,w
  2232     034F  0473               	iorwf	___lldiv@divisor+1,w
  2233     0350  0472               	iorwf	___lldiv@divisor,w
  2234     0351  1903               	skipnz
  2235     0352  2B54               	goto	u1421
  2236     0353  2B55               	goto	u1420
  2237     0354                     u1421:
  2238     0354  2BA2               	goto	l1994
  2239     0355                     u1420:
  2240     0355                     l1974:
  2241     0355  01A5               	clrf	___lldiv@counter
  2242     0356  0AA5               	incf	___lldiv@counter,f
  2243     0357  2B65               	goto	l1980
  2244     0358                     l1976:
  2245     0358  3001               	movlw	1
  2246     0359  00A0               	movwf	??___lldiv
  2247     035A                     u1435:
  2248     035A  1003               	clrc
  2249     035B  0DF2               	rlf	___lldiv@divisor,f
  2250     035C  0DF3               	rlf	___lldiv@divisor+1,f
  2251     035D  0DF4               	rlf	___lldiv@divisor+2,f
  2252     035E  0DF5               	rlf	___lldiv@divisor+3,f
  2253     035F  0BA0               	decfsz	??___lldiv,f
  2254     0360  2B5A               	goto	u1435
  2255     0361                     l1978:
  2256     0361  3001               	movlw	1
  2257     0362  00FF               	movwf	btemp+1
  2258     0363  087F               	movf	btemp+1,w
  2259     0364  07A5               	addwf	___lldiv@counter,f
  2260     0365                     l1980:
  2261     0365  1FF5               	btfss	___lldiv@divisor+3,7
  2262     0366  2B68               	goto	u1441
  2263     0367  2B69               	goto	u1440
  2264     0368                     u1441:
  2265     0368  2B58               	goto	l1976
  2266     0369                     u1440:
  2267     0369                     l1982:
  2268     0369  3001               	movlw	1
  2269     036A  00A0               	movwf	??___lldiv
  2270     036B                     u1455:
  2271     036B  1003               	clrc
  2272     036C  0DA1               	rlf	___lldiv@quotient,f
  2273     036D  0DA2               	rlf	___lldiv@quotient+1,f
  2274     036E  0DA3               	rlf	___lldiv@quotient+2,f
  2275     036F  0DA4               	rlf	___lldiv@quotient+3,f
  2276     0370  0BA0               	decfsz	??___lldiv,f
  2277     0371  2B6B               	goto	u1455
  2278     0372                     l1984:
  2279     0372  0875               	movf	___lldiv@divisor+3,w
  2280     0373  0279               	subwf	___lldiv@dividend+3,w
  2281     0374  1D03               	skipz
  2282     0375  2B80               	goto	u1465
  2283     0376  0874               	movf	___lldiv@divisor+2,w
  2284     0377  0278               	subwf	___lldiv@dividend+2,w
  2285     0378  1D03               	skipz
  2286     0379  2B80               	goto	u1465
  2287     037A  0873               	movf	___lldiv@divisor+1,w
  2288     037B  0277               	subwf	___lldiv@dividend+1,w
  2289     037C  1D03               	skipz
  2290     037D  2B80               	goto	u1465
  2291     037E  0872               	movf	___lldiv@divisor,w
  2292     037F  0276               	subwf	___lldiv@dividend,w
  2293     0380                     u1465:
  2294     0380  1C03               	skipc
  2295     0381  2B83               	goto	u1461
  2296     0382  2B84               	goto	u1460
  2297     0383                     u1461:
  2298     0383  2B93               	goto	l1990
  2299     0384                     u1460:
  2300     0384                     l1986:
  2301     0384  0872               	movf	___lldiv@divisor,w
  2302     0385  02F6               	subwf	___lldiv@dividend,f
  2303     0386  0873               	movf	___lldiv@divisor+1,w
  2304     0387  1C03               	skipc
  2305     0388  0F73               	incfsz	___lldiv@divisor+1,w
  2306     0389  02F7               	subwf	___lldiv@dividend+1,f
  2307     038A  0874               	movf	___lldiv@divisor+2,w
  2308     038B  1C03               	skipc
  2309     038C  0F74               	incfsz	___lldiv@divisor+2,w
  2310     038D  02F8               	subwf	___lldiv@dividend+2,f
  2311     038E  0875               	movf	___lldiv@divisor+3,w
  2312     038F  1C03               	skipc
  2313     0390  0F75               	incfsz	___lldiv@divisor+3,w
  2314     0391  02F9               	subwf	___lldiv@dividend+3,f
  2315     0392                     l1988:
  2316     0392  1421               	bsf	___lldiv@quotient,0
  2317     0393                     l1990:
  2318     0393  3001               	movlw	1
  2319     0394                     u1475:
  2320     0394  1003               	clrc
  2321     0395  0CF5               	rrf	___lldiv@divisor+3,f
  2322     0396  0CF4               	rrf	___lldiv@divisor+2,f
  2323     0397  0CF3               	rrf	___lldiv@divisor+1,f
  2324     0398  0CF2               	rrf	___lldiv@divisor,f
  2325     0399  3EFF               	addlw	-1
  2326     039A  1D03               	skipz
  2327     039B  2B94               	goto	u1475
  2328     039C                     l1992:
  2329     039C  3001               	movlw	1
  2330     039D  02A5               	subwf	___lldiv@counter,f
  2331     039E  1D03               	btfss	3,2
  2332     039F  2BA1               	goto	u1481
  2333     03A0  2BA2               	goto	u1480
  2334     03A1                     u1481:
  2335     03A1  2B69               	goto	l1982
  2336     03A2                     u1480:
  2337     03A2                     l1994:
  2338     03A2  0824               	movf	___lldiv@quotient+3,w
  2339     03A3  00F5               	movwf	?___lldiv+3
  2340     03A4  0823               	movf	___lldiv@quotient+2,w
  2341     03A5  00F4               	movwf	?___lldiv+2
  2342     03A6  0822               	movf	___lldiv@quotient+1,w
  2343     03A7  00F3               	movwf	?___lldiv+1
  2344     03A8  0821               	movf	___lldiv@quotient,w
  2345     03A9  00F2               	movwf	?___lldiv
  2346     03AA                     l432:
  2347     03AA  0008               	return
  2348     03AB                     __end_of___lldiv:
  2349                           
  2350                           	psect	text8
  2351     0F90                     __ptext8:	
  2352 ;; *************** function _sendDataUART *****************
  2353 ;; Defined at:
  2354 ;;		line 253 in file "master.c"
  2355 ;; Parameters:    Size  Location     Type
  2356 ;;		None
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;		None
  2359 ;; Return value:  Size  Location     Type
  2360 ;;                  1    wreg      void 
  2361 ;; Registers used:
  2362 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2363 ;; Tracked objects:
  2364 ;;		On entry : 0/0
  2365 ;;		On exit  : 0/0
  2366 ;;		Unchanged: 0/0
  2367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2368 ;;      Params:         0       0       0       0       0
  2369 ;;      Locals:         0       0       0       0       0
  2370 ;;      Temps:          3       0       0       0       0
  2371 ;;      Totals:         3       0       0       0       0
  2372 ;;Total ram usage:        3 bytes
  2373 ;; Hardware stack levels used: 1
  2374 ;; Hardware stack levels required when called: 4
  2375 ;; This function calls:
  2376 ;;		_UART_write_char
  2377 ;;		_UART_write_string
  2378 ;; This function is called by:
  2379 ;;		_main
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383     0F90                     _sendDataUART:	
  2384                           ;psect for function _sendDataUART
  2385                           
  2386     0F90                     l1860:	
  2387                           ;incstack = 0
  2388                           ; Regs used in _sendDataUART: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2389                           
  2390                           
  2391                           ;master.c: 255:     UART_write_char('\n');
  2392     0F90  300A               	movlw	10
  2393     0F91  120A  158A  26C3  120A  158A  	fcall	_UART_write_char
  2394     0F96                     l1862:
  2395                           
  2396                           ;master.c: 256:     UART_write_string(S_temp);
  2397     0F96  305A               	movlw	(low (_S_temp| 0))& (0+255)
  2398     0F97  120A  158A  2718  120A  158A  	fcall	_UART_write_string
  2399     0F9C                     l1864:
  2400                           
  2401                           ;master.c: 257:     UART_write_char(' ');
  2402     0F9C  3020               	movlw	32
  2403     0F9D  120A  158A  26C3  120A  158A  	fcall	_UART_write_char
  2404                           
  2405                           ;master.c: 258:     UART_write_string(S_hum);
  2406     0FA2  305E               	movlw	(low (_S_hum| 0))& (0+255)
  2407     0FA3  120A  158A  2718  120A  158A  	fcall	_UART_write_string
  2408     0FA8                     l1866:
  2409                           
  2410                           ;master.c: 259:     UART_write_char(' ');
  2411     0FA8  3020               	movlw	32
  2412     0FA9  120A  158A  26C3  120A  158A  	fcall	_UART_write_char
  2413     0FAE                     l1868:
  2414                           
  2415                           ;master.c: 260:     UART_write_string(S_gas);
  2416     0FAE  3056               	movlw	(low (_S_gas| 0))& (0+255)
  2417     0FAF  120A  158A  2718  120A  158A  	fcall	_UART_write_string
  2418                           
  2419                           ;master.c: 261:     UART_write_char(' ');
  2420     0FB4  3020               	movlw	32
  2421     0FB5  120A  158A  26C3  120A  158A  	fcall	_UART_write_char
  2422     0FBA                     l1870:
  2423                           
  2424                           ;master.c: 262:     _delay((unsigned long)((500)*(8000000/4000.0)));
  2425     0FBA  3006               	movlw	6
  2426     0FBB  00F9               	movwf	??_sendDataUART+2
  2427     0FBC  3013               	movlw	19
  2428     0FBD  00F8               	movwf	??_sendDataUART+1
  2429     0FBE  30AD               	movlw	173
  2430     0FBF  00F7               	movwf	??_sendDataUART
  2431     0FC0                     u1807:
  2432     0FC0  0BF7               	decfsz	??_sendDataUART,f
  2433     0FC1  2FC0               	goto	u1807
  2434     0FC2  0BF8               	decfsz	??_sendDataUART+1,f
  2435     0FC3  2FC0               	goto	u1807
  2436     0FC4  0BF9               	decfsz	??_sendDataUART+2,f
  2437     0FC5  2FC0               	goto	u1807
  2438     0FC6  2FC7               	nop2
  2439     0FC7                     l138:
  2440     0FC7  0008               	return
  2441     0FC8                     __end_of_sendDataUART:
  2442                           
  2443                           	psect	text9
  2444     0F18                     __ptext9:	
  2445 ;; *************** function _UART_write_string *****************
  2446 ;; Defined at:
  2447 ;;		line 49 in file "UART.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;  s               1    wreg     PTR unsigned char 
  2450 ;;		 -> S_gas(4), S_hum(3), S_temp(4), 
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;  s               1    6[COMMON] PTR unsigned char 
  2453 ;;		 -> S_gas(4), S_hum(3), S_temp(4), 
  2454 ;;  i               2    4[COMMON] int 
  2455 ;; Return value:  Size  Location     Type
  2456 ;;                  1    wreg      void 
  2457 ;; Registers used:
  2458 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2459 ;; Tracked objects:
  2460 ;;		On entry : 0/0
  2461 ;;		On exit  : 0/0
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2464 ;;      Params:         0       0       0       0       0
  2465 ;;      Locals:         3       0       0       0       0
  2466 ;;      Temps:          1       0       0       0       0
  2467 ;;      Totals:         4       0       0       0       0
  2468 ;;Total ram usage:        4 bytes
  2469 ;; Hardware stack levels used: 1
  2470 ;; Hardware stack levels required when called: 3
  2471 ;; This function calls:
  2472 ;;		_UART_write_char
  2473 ;; This function is called by:
  2474 ;;		_sendDataUART
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478     0F18                     _UART_write_string:	
  2479                           ;psect for function _UART_write_string
  2480                           
  2481                           
  2482                           ;incstack = 0
  2483                           ; Regs used in _UART_write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2484                           ;UART_write_string@s stored from wreg
  2485     0F18  00F6               	movwf	UART_write_string@s
  2486     0F19                     l1738:
  2487                           
  2488                           ;UART.c: 50:     int i;;UART.c: 51:     for (i = 0; s[i] != '\0'; i++)
  2489     0F19  01F4               	clrf	UART_write_string@i
  2490     0F1A  01F5               	clrf	UART_write_string@i+1
  2491     0F1B  2F2D               	goto	l1744
  2492     0F1C                     l1740:
  2493                           
  2494                           ;UART.c: 52:         UART_write_char(s[i]);
  2495     0F1C  0874               	movf	UART_write_string@i,w
  2496     0F1D  0776               	addwf	UART_write_string@s,w
  2497     0F1E  00F3               	movwf	??_UART_write_string
  2498     0F1F  0873               	movf	??_UART_write_string,w
  2499     0F20  0084               	movwf	4
  2500     0F21  0800               	movf	0,w
  2501     0F22  120A  158A  26C3  120A  158A  	fcall	_UART_write_char
  2502     0F27                     l1742:
  2503     0F27  3001               	movlw	1
  2504     0F28  07F4               	addwf	UART_write_string@i,f
  2505     0F29  1803               	skipnc
  2506     0F2A  0AF5               	incf	UART_write_string@i+1,f
  2507     0F2B  3000               	movlw	0
  2508     0F2C  07F5               	addwf	UART_write_string@i+1,f
  2509     0F2D                     l1744:
  2510     0F2D  0874               	movf	UART_write_string@i,w
  2511     0F2E  0776               	addwf	UART_write_string@s,w
  2512     0F2F  00F3               	movwf	??_UART_write_string
  2513     0F30  0873               	movf	??_UART_write_string,w
  2514     0F31  0084               	movwf	4
  2515     0F32  1383               	bcf	3,7	;select IRP bank0
  2516     0F33  0800               	movf	0,w
  2517     0F34  1D03               	btfss	3,2
  2518     0F35  2F37               	goto	u1271
  2519     0F36  2F38               	goto	u1270
  2520     0F37                     u1271:
  2521     0F37  2F1C               	goto	l1740
  2522     0F38                     u1270:
  2523     0F38                     l307:
  2524     0F38  0008               	return
  2525     0F39                     __end_of_UART_write_string:
  2526                           
  2527                           	psect	text10
  2528     0EC3                     __ptext10:	
  2529 ;; *************** function _UART_write_char *****************
  2530 ;; Defined at:
  2531 ;;		line 42 in file "UART.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;  c               1    wreg     unsigned char 
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;  c               1    2[COMMON] unsigned char 
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  1    wreg      void 
  2538 ;; Registers used:
  2539 ;;		wreg
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2545 ;;      Params:         0       0       0       0       0
  2546 ;;      Locals:         1       0       0       0       0
  2547 ;;      Temps:          0       0       0       0       0
  2548 ;;      Totals:         1       0       0       0       0
  2549 ;;Total ram usage:        1 bytes
  2550 ;; Hardware stack levels used: 1
  2551 ;; Hardware stack levels required when called: 2
  2552 ;; This function calls:
  2553 ;;		Nothing
  2554 ;; This function is called by:
  2555 ;;		_sendDataUART
  2556 ;;		_UART_write_string
  2557 ;; This function uses a non-reentrant model
  2558 ;;
  2559                           
  2560     0EC3                     _UART_write_char:	
  2561                           ;psect for function _UART_write_char
  2562                           
  2563                           
  2564                           ;incstack = 0
  2565                           ; Regs used in _UART_write_char: [wreg]
  2566                           ;UART_write_char@c stored from wreg
  2567     0EC3  00F2               	movwf	UART_write_char@c
  2568     0EC4                     l1452:
  2569     0EC4                     l298:	
  2570                           ;UART.c: 43:     while(!TXIF);
  2571                           
  2572     0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  2573     0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  2574     0EC6  1E0C               	btfss	12,4	;volatile
  2575     0EC7  2EC9               	goto	u721
  2576     0EC8  2ECA               	goto	u720
  2577     0EC9                     u721:
  2578     0EC9  2EC4               	goto	l298
  2579     0ECA                     u720:
  2580     0ECA                     l300:
  2581                           
  2582                           ;UART.c: 44:     TXIF = 0;
  2583     0ECA  120C               	bcf	12,4	;volatile
  2584     0ECB                     l1454:
  2585                           
  2586                           ;UART.c: 45:     TXREG = c;
  2587     0ECB  0872               	movf	UART_write_char@c,w
  2588     0ECC  0099               	movwf	25	;volatile
  2589     0ECD                     l301:
  2590     0ECD  0008               	return
  2591     0ECE                     __end_of_UART_write_char:
  2592                           
  2593                           	psect	text11
  2594     0476                     __ptext11:	
  2595 ;; *************** function _requestTemp *****************
  2596 ;; Defined at:
  2597 ;;		line 145 in file "master.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;		None
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;		None
  2602 ;; Return value:  Size  Location     Type
  2603 ;;                  1    wreg      void 
  2604 ;; Registers used:
  2605 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2606 ;; Tracked objects:
  2607 ;;		On entry : 0/0
  2608 ;;		On exit  : 0/0
  2609 ;;		Unchanged: 0/0
  2610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2611 ;;      Params:         0       0       0       0       0
  2612 ;;      Locals:         0       0       0       0       0
  2613 ;;      Temps:          0       2       0       0       0
  2614 ;;      Totals:         0       2       0       0       0
  2615 ;;Total ram usage:        2 bytes
  2616 ;; Hardware stack levels used: 1
  2617 ;; Hardware stack levels required when called: 4
  2618 ;; This function calls:
  2619 ;;		_I2C_Master_Read
  2620 ;;		_I2C_Master_RepeatedStart
  2621 ;;		_I2C_Master_Start
  2622 ;;		_I2C_Master_Stop
  2623 ;;		_I2C_Master_Write
  2624 ;;		_map
  2625 ;; This function is called by:
  2626 ;;		_main
  2627 ;; This function uses a non-reentrant model
  2628 ;;
  2629                           
  2630     0476                     _requestTemp:	
  2631                           ;psect for function _requestTemp
  2632                           
  2633     0476                     l2148:	
  2634                           ;incstack = 0
  2635                           ; Regs used in _requestTemp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2636                           
  2637                           
  2638                           ;master.c: 147:     I2C_Master_Start();
  2639     0476  120A  158A  26A7  120A  118A  	fcall	_I2C_Master_Start
  2640                           
  2641                           ;master.c: 148:     I2C_Master_Write(0x20 +0);
  2642     047B  3020               	movlw	32
  2643     047C  00F2               	movwf	I2C_Master_Write@d
  2644     047D  3000               	movlw	0
  2645     047E  00F3               	movwf	I2C_Master_Write@d+1
  2646     047F  120A  158A  26B9  120A  118A  	fcall	_I2C_Master_Write
  2647                           
  2648                           ;master.c: 149:     I2C_Master_Write('T');
  2649     0484  3054               	movlw	84
  2650     0485  00F2               	movwf	I2C_Master_Write@d
  2651     0486  3000               	movlw	0
  2652     0487  00F3               	movwf	I2C_Master_Write@d+1
  2653     0488  120A  158A  26B9  120A  118A  	fcall	_I2C_Master_Write
  2654     048D                     l2150:
  2655                           
  2656                           ;master.c: 150:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2657     048D  3034               	movlw	52
  2658     048E  1283               	bcf	3,5	;RP0=0, select bank0
  2659     048F  1303               	bcf	3,6	;RP1=0, select bank0
  2660     0490  00C5               	movwf	??_requestTemp+1
  2661     0491  30F1               	movlw	241
  2662     0492  00C4               	movwf	??_requestTemp
  2663     0493                     u1817:
  2664     0493  0BC4               	decfsz	??_requestTemp,f
  2665     0494  2C93               	goto	u1817
  2666     0495  0BC5               	decfsz	??_requestTemp+1,f
  2667     0496  2C93               	goto	u1817
  2668     0497                     l2152:
  2669                           
  2670                           ;master.c: 151:     I2C_Master_RepeatedStart();
  2671     0497  120A  158A  269E  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2672     049C                     l2154:
  2673                           
  2674                           ;master.c: 152:     I2C_Master_Write(0x20 +1);
  2675     049C  3021               	movlw	33
  2676     049D  00F2               	movwf	I2C_Master_Write@d
  2677     049E  3000               	movlw	0
  2678     049F  00F3               	movwf	I2C_Master_Write@d+1
  2679     04A0  120A  158A  26B9  120A  118A  	fcall	_I2C_Master_Write
  2680     04A5                     l2156:
  2681                           
  2682                           ;master.c: 153:     n_temp = I2C_Master_Read(0);
  2683     04A5  3000               	movlw	0
  2684     04A6  00F2               	movwf	I2C_Master_Read@a
  2685     04A7  00F3               	movwf	I2C_Master_Read@a+1
  2686     04A8  120A  118A  27CC  120A  118A  	fcall	_I2C_Master_Read
  2687     04AD  0872               	movf	?_I2C_Master_Read,w
  2688     04AE  1283               	bcf	3,5	;RP0=0, select bank0
  2689     04AF  1303               	bcf	3,6	;RP1=0, select bank0
  2690     04B0  00D5               	movwf	_n_temp
  2691     04B1                     l2158:
  2692                           
  2693                           ;master.c: 154:     I2C_Master_Stop();
  2694     04B1  120A  158A  26B0  120A  118A  	fcall	_I2C_Master_Stop
  2695     04B6                     l2160:
  2696                           
  2697                           ;master.c: 155:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2698     04B6  3034               	movlw	52
  2699     04B7  1283               	bcf	3,5	;RP0=0, select bank0
  2700     04B8  1303               	bcf	3,6	;RP1=0, select bank0
  2701     04B9  00C5               	movwf	??_requestTemp+1
  2702     04BA  30F1               	movlw	241
  2703     04BB  00C4               	movwf	??_requestTemp
  2704     04BC                     u1827:
  2705     04BC  0BC4               	decfsz	??_requestTemp,f
  2706     04BD  2CBC               	goto	u1827
  2707     04BE  0BC5               	decfsz	??_requestTemp+1,f
  2708     04BF  2CBC               	goto	u1827
  2709     04C0                     l2162:
  2710                           
  2711                           ;master.c: 157:     tempC = map(n_temp,0,77,0,150);
  2712     04C0  1283               	bcf	3,5	;RP0=0, select bank0
  2713     04C1  1303               	bcf	3,6	;RP1=0, select bank0
  2714     04C2  01B4               	clrf	map@min1
  2715     04C3  304D               	movlw	77
  2716     04C4  00B5               	movwf	map@max1
  2717     04C5  01B6               	clrf	map@min2
  2718     04C6  3000               	movlw	0
  2719     04C7  00BA               	movwf	map@max2+3
  2720     04C8  3000               	movlw	0
  2721     04C9  00B9               	movwf	map@max2+2
  2722     04CA  3000               	movlw	0
  2723     04CB  00B8               	movwf	map@max2+1
  2724     04CC  3096               	movlw	150
  2725     04CD  00B7               	movwf	map@max2
  2726     04CE  0855               	movf	_n_temp,w
  2727     04CF  120A  118A  24D9  120A  118A  	fcall	_map
  2728     04D4  1283               	bcf	3,5	;RP0=0, select bank0
  2729     04D5  1303               	bcf	3,6	;RP1=0, select bank0
  2730     04D6  0834               	movf	?_map,w
  2731     04D7  00FA               	movwf	_tempC
  2732     04D8                     l111:
  2733     04D8  0008               	return
  2734     04D9                     __end_of_requestTemp:
  2735                           
  2736                           	psect	text12
  2737     0630                     __ptext12:	
  2738 ;; *************** function _requestHum *****************
  2739 ;; Defined at:
  2740 ;;		line 160 in file "master.c"
  2741 ;; Parameters:    Size  Location     Type
  2742 ;;		None
  2743 ;; Auto vars:     Size  Location     Type
  2744 ;;		None
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  1    wreg      void 
  2747 ;; Registers used:
  2748 ;;		wreg, status,2, status,0, pclath, cstack
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2754 ;;      Params:         0       0       0       0       0
  2755 ;;      Locals:         0       0       0       0       0
  2756 ;;      Temps:          2       0       0       0       0
  2757 ;;      Totals:         2       0       0       0       0
  2758 ;;Total ram usage:        2 bytes
  2759 ;; Hardware stack levels used: 1
  2760 ;; Hardware stack levels required when called: 4
  2761 ;; This function calls:
  2762 ;;		_I2C_Master_Read
  2763 ;;		_I2C_Master_RepeatedStart
  2764 ;;		_I2C_Master_Start
  2765 ;;		_I2C_Master_Stop
  2766 ;;		_I2C_Master_Write
  2767 ;; This function is called by:
  2768 ;;		_main
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           
  2772     0630                     _requestHum:	
  2773                           ;psect for function _requestHum
  2774                           
  2775     0630                     l1762:	
  2776                           ;incstack = 0
  2777                           ; Regs used in _requestHum: [wreg+status,2+status,0+pclath+cstack]
  2778                           
  2779                           
  2780                           ;master.c: 162:     I2C_Master_Start();
  2781     0630  120A  158A  26A7  120A  118A  	fcall	_I2C_Master_Start
  2782                           
  2783                           ;master.c: 163:     I2C_Master_Write(0x10 +0);
  2784     0635  3010               	movlw	16
  2785     0636  00F2               	movwf	I2C_Master_Write@d
  2786     0637  3000               	movlw	0
  2787     0638  00F3               	movwf	I2C_Master_Write@d+1
  2788     0639  120A  158A  26B9  120A  118A  	fcall	_I2C_Master_Write
  2789                           
  2790                           ;master.c: 164:     I2C_Master_Write('H');
  2791     063E  3048               	movlw	72
  2792     063F  00F2               	movwf	I2C_Master_Write@d
  2793     0640  3000               	movlw	0
  2794     0641  00F3               	movwf	I2C_Master_Write@d+1
  2795     0642  120A  158A  26B9  120A  118A  	fcall	_I2C_Master_Write
  2796     0647                     l1764:
  2797                           
  2798                           ;master.c: 165:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2799     0647  3034               	movlw	52
  2800     0648  00F9               	movwf	??_requestHum+1
  2801     0649  30F1               	movlw	241
  2802     064A  00F8               	movwf	??_requestHum
  2803     064B                     u1837:
  2804     064B  0BF8               	decfsz	??_requestHum,f
  2805     064C  2E4B               	goto	u1837
  2806     064D  0BF9               	decfsz	??_requestHum+1,f
  2807     064E  2E4B               	goto	u1837
  2808     064F  2E50               	nop2
  2809     0650                     l1766:
  2810                           
  2811                           ;master.c: 166:     I2C_Master_RepeatedStart();
  2812     0650  120A  158A  269E  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2813     0655                     l1768:
  2814                           
  2815                           ;master.c: 167:     I2C_Master_Write(0x10 +1);
  2816     0655  3011               	movlw	17
  2817     0656  00F2               	movwf	I2C_Master_Write@d
  2818     0657  3000               	movlw	0
  2819     0658  00F3               	movwf	I2C_Master_Write@d+1
  2820     0659  120A  158A  26B9  120A  118A  	fcall	_I2C_Master_Write
  2821     065E                     l1770:
  2822                           
  2823                           ;master.c: 168:     n_hum = I2C_Master_Read(0);
  2824     065E  3000               	movlw	0
  2825     065F  00F2               	movwf	I2C_Master_Read@a
  2826     0660  00F3               	movwf	I2C_Master_Read@a+1
  2827     0661  120A  118A  27CC  120A  118A  	fcall	_I2C_Master_Read
  2828     0666  0872               	movf	?_I2C_Master_Read,w
  2829     0667  1283               	bcf	3,5	;RP0=0, select bank0
  2830     0668  1303               	bcf	3,6	;RP1=0, select bank0
  2831     0669  00D4               	movwf	_n_hum
  2832     066A                     l1772:
  2833                           
  2834                           ;master.c: 169:     I2C_Master_Stop();
  2835     066A  120A  158A  26B0  120A  118A  	fcall	_I2C_Master_Stop
  2836     066F                     l1774:
  2837                           
  2838                           ;master.c: 170:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2839     066F  3034               	movlw	52
  2840     0670  00F9               	movwf	??_requestHum+1
  2841     0671  30F1               	movlw	241
  2842     0672  00F8               	movwf	??_requestHum
  2843     0673                     u1847:
  2844     0673  0BF8               	decfsz	??_requestHum,f
  2845     0674  2E73               	goto	u1847
  2846     0675  0BF9               	decfsz	??_requestHum+1,f
  2847     0676  2E73               	goto	u1847
  2848     0677  2E78               	nop2
  2849     0678                     l114:
  2850     0678  0008               	return
  2851     0679                     __end_of_requestHum:
  2852                           
  2853                           	psect	text13
  2854     03AB                     __ptext13:	
  2855 ;; *************** function _requestGas *****************
  2856 ;; Defined at:
  2857 ;;		line 173 in file "master.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;		None
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;		None
  2862 ;; Return value:  Size  Location     Type
  2863 ;;                  1    wreg      void 
  2864 ;; Registers used:
  2865 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2866 ;; Tracked objects:
  2867 ;;		On entry : 0/0
  2868 ;;		On exit  : 0/0
  2869 ;;		Unchanged: 0/0
  2870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2871 ;;      Params:         0       0       0       0       0
  2872 ;;      Locals:         0       0       0       0       0
  2873 ;;      Temps:          0       2       0       0       0
  2874 ;;      Totals:         0       2       0       0       0
  2875 ;;Total ram usage:        2 bytes
  2876 ;; Hardware stack levels used: 1
  2877 ;; Hardware stack levels required when called: 4
  2878 ;; This function calls:
  2879 ;;		_I2C_Master_Read
  2880 ;;		_I2C_Master_RepeatedStart
  2881 ;;		_I2C_Master_Start
  2882 ;;		_I2C_Master_Stop
  2883 ;;		_I2C_Master_Write
  2884 ;;		_map
  2885 ;; This function is called by:
  2886 ;;		_main
  2887 ;; This function uses a non-reentrant model
  2888 ;;
  2889                           
  2890     03AB                     _requestGas:	
  2891                           ;psect for function _requestGas
  2892                           
  2893     03AB                     l2164:	
  2894                           ;incstack = 0
  2895                           ; Regs used in _requestGas: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2896                           
  2897                           
  2898                           ;master.c: 175:     I2C_Master_Start();
  2899     03AB  120A  158A  26A7  120A  118A  	fcall	_I2C_Master_Start
  2900                           
  2901                           ;master.c: 176:     I2C_Master_Write(0x20 +0);
  2902     03B0  3020               	movlw	32
  2903     03B1  00F2               	movwf	I2C_Master_Write@d
  2904     03B2  3000               	movlw	0
  2905     03B3  00F3               	movwf	I2C_Master_Write@d+1
  2906     03B4  120A  158A  26B9  120A  118A  	fcall	_I2C_Master_Write
  2907                           
  2908                           ;master.c: 177:     I2C_Master_Write('G');
  2909     03B9  3047               	movlw	71
  2910     03BA  00F2               	movwf	I2C_Master_Write@d
  2911     03BB  3000               	movlw	0
  2912     03BC  00F3               	movwf	I2C_Master_Write@d+1
  2913     03BD  120A  158A  26B9  120A  118A  	fcall	_I2C_Master_Write
  2914     03C2                     l2166:
  2915                           
  2916                           ;master.c: 178:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2917     03C2  3034               	movlw	52
  2918     03C3  1283               	bcf	3,5	;RP0=0, select bank0
  2919     03C4  1303               	bcf	3,6	;RP1=0, select bank0
  2920     03C5  00C5               	movwf	??_requestGas+1
  2921     03C6  30F1               	movlw	241
  2922     03C7  00C4               	movwf	??_requestGas
  2923     03C8                     u1857:
  2924     03C8  0BC4               	decfsz	??_requestGas,f
  2925     03C9  2BC8               	goto	u1857
  2926     03CA  0BC5               	decfsz	??_requestGas+1,f
  2927     03CB  2BC8               	goto	u1857
  2928     03CC                     l2168:
  2929                           
  2930                           ;master.c: 179:     I2C_Master_RepeatedStart();
  2931     03CC  120A  158A  269E  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2932     03D1                     l2170:
  2933                           
  2934                           ;master.c: 180:     I2C_Master_Write(0x20 +1);
  2935     03D1  3021               	movlw	33
  2936     03D2  00F2               	movwf	I2C_Master_Write@d
  2937     03D3  3000               	movlw	0
  2938     03D4  00F3               	movwf	I2C_Master_Write@d+1
  2939     03D5  120A  158A  26B9  120A  118A  	fcall	_I2C_Master_Write
  2940     03DA                     l2172:
  2941                           
  2942                           ;master.c: 181:     n_gas = I2C_Master_Read(0);
  2943     03DA  3000               	movlw	0
  2944     03DB  00F2               	movwf	I2C_Master_Read@a
  2945     03DC  00F3               	movwf	I2C_Master_Read@a+1
  2946     03DD  120A  118A  27CC  120A  118A  	fcall	_I2C_Master_Read
  2947     03E2  0872               	movf	?_I2C_Master_Read,w
  2948     03E3  1283               	bcf	3,5	;RP0=0, select bank0
  2949     03E4  1303               	bcf	3,6	;RP1=0, select bank0
  2950     03E5  00D3               	movwf	_n_gas
  2951     03E6                     l2174:
  2952                           
  2953                           ;master.c: 182:     I2C_Master_Stop();
  2954     03E6  120A  158A  26B0  120A  118A  	fcall	_I2C_Master_Stop
  2955     03EB                     l2176:
  2956                           
  2957                           ;master.c: 183:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2958     03EB  3034               	movlw	52
  2959     03EC  1283               	bcf	3,5	;RP0=0, select bank0
  2960     03ED  1303               	bcf	3,6	;RP1=0, select bank0
  2961     03EE  00C5               	movwf	??_requestGas+1
  2962     03EF  30F1               	movlw	241
  2963     03F0  00C4               	movwf	??_requestGas
  2964     03F1                     u1867:
  2965     03F1  0BC4               	decfsz	??_requestGas,f
  2966     03F2  2BF1               	goto	u1867
  2967     03F3  0BC5               	decfsz	??_requestGas+1,f
  2968     03F4  2BF1               	goto	u1867
  2969     03F5                     l2178:
  2970                           
  2971                           ;master.c: 185:     gasPPM = map(n_gas,0,255,100,800);
  2972     03F5  1283               	bcf	3,5	;RP0=0, select bank0
  2973     03F6  1303               	bcf	3,6	;RP1=0, select bank0
  2974     03F7  01B4               	clrf	map@min1
  2975     03F8  30FF               	movlw	255
  2976     03F9  00B5               	movwf	map@max1
  2977     03FA  3064               	movlw	100
  2978     03FB  00B6               	movwf	map@min2
  2979     03FC  3000               	movlw	0
  2980     03FD  00BA               	movwf	map@max2+3
  2981     03FE  3000               	movlw	0
  2982     03FF  00B9               	movwf	map@max2+2
  2983     0400  3003               	movlw	3
  2984     0401  00B8               	movwf	map@max2+1
  2985     0402  3020               	movlw	32
  2986     0403  00B7               	movwf	map@max2
  2987     0404  0853               	movf	_n_gas,w
  2988     0405  120A  118A  24D9  120A  118A  	fcall	_map
  2989     040A  1283               	bcf	3,5	;RP0=0, select bank0
  2990     040B  1303               	bcf	3,6	;RP1=0, select bank0
  2991     040C  0835               	movf	?_map+1,w
  2992     040D  00CF               	movwf	_gasPPM+1
  2993     040E  0834               	movf	?_map,w
  2994     040F  00CE               	movwf	_gasPPM
  2995     0410                     l117:
  2996     0410  0008               	return
  2997     0411                     __end_of_requestGas:
  2998                           
  2999                           	psect	text14
  3000     04D9                     __ptext14:	
  3001 ;; *************** function _map *****************
  3002 ;; Defined at:
  3003 ;;		line 289 in file "master.c"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;  val             1    wreg     unsigned char 
  3006 ;;  min1            1   20[BANK0 ] unsigned char 
  3007 ;;  max1            1   21[BANK0 ] unsigned char 
  3008 ;;  min2            1   22[BANK0 ] unsigned char 
  3009 ;;  max2            4   23[BANK0 ] long 
  3010 ;; Auto vars:     Size  Location     Type
  3011 ;;  val             1   35[BANK0 ] unsigned char 
  3012 ;; Return value:  Size  Location     Type
  3013 ;;                  2   20[BANK0 ] unsigned int 
  3014 ;; Registers used:
  3015 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3016 ;; Tracked objects:
  3017 ;;		On entry : 0/0
  3018 ;;		On exit  : 0/0
  3019 ;;		Unchanged: 0/0
  3020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3021 ;;      Params:         0       7       0       0       0
  3022 ;;      Locals:         0       1       0       0       0
  3023 ;;      Temps:          0       8       0       0       0
  3024 ;;      Totals:         0      16       0       0       0
  3025 ;;Total ram usage:       16 bytes
  3026 ;; Hardware stack levels used: 1
  3027 ;; Hardware stack levels required when called: 3
  3028 ;; This function calls:
  3029 ;;		___aldiv
  3030 ;;		___lmul
  3031 ;; This function is called by:
  3032 ;;		_requestTemp
  3033 ;;		_requestGas
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037     04D9                     _map:	
  3038                           ;psect for function _map
  3039                           
  3040                           
  3041                           ;incstack = 0
  3042                           ; Regs used in _map: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3043                           ;map@val stored from wreg
  3044     04D9  1283               	bcf	3,5	;RP0=0, select bank0
  3045     04DA  1303               	bcf	3,6	;RP1=0, select bank0
  3046     04DB  00C3               	movwf	map@val
  3047     04DC                     l2098:
  3048                           
  3049                           ;master.c: 290:     return ((val-min1)*(max2-min2)/(max1-min1))+min2;
  3050     04DC  0834               	movf	map@min1,w
  3051     04DD  0235               	subwf	map@max1,w
  3052     04DE  00A5               	movwf	___aldiv@divisor
  3053     04DF  01A6               	clrf	___aldiv@divisor+1
  3054     04E0  1C03               	skipc
  3055     04E1  03A6               	decf	___aldiv@divisor+1,f
  3056     04E2  01A7               	clrf	___aldiv@divisor+2
  3057     04E3  1BA6               	btfsc	___aldiv@divisor+1,7
  3058     04E4  03A7               	decf	___aldiv@divisor+2,f
  3059     04E5  0827               	movf	___aldiv@divisor+2,w
  3060     04E6  00A8               	movwf	___aldiv@divisor+3
  3061     04E7  0834               	movf	map@min1,w
  3062     04E8  0243               	subwf	map@val,w
  3063     04E9  00F2               	movwf	___lmul@multiplier
  3064     04EA  01F3               	clrf	___lmul@multiplier+1
  3065     04EB  1C03               	skipc
  3066     04EC  03F3               	decf	___lmul@multiplier+1,f
  3067     04ED  01F4               	clrf	___lmul@multiplier+2
  3068     04EE  1BF3               	btfsc	___lmul@multiplier+1,7
  3069     04EF  03F4               	decf	___lmul@multiplier+2,f
  3070     04F0  0874               	movf	___lmul@multiplier+2,w
  3071     04F1  00F5               	movwf	___lmul@multiplier+3
  3072     04F2  0836               	movf	map@min2,w
  3073     04F3  00BB               	movwf	??_map
  3074     04F4  01BC               	clrf	??_map+1
  3075     04F5  01BD               	clrf	??_map+2
  3076     04F6  01BE               	clrf	??_map+3
  3077     04F7  0837               	movf	map@max2,w
  3078     04F8  00BF               	movwf	??_map+4
  3079     04F9  0838               	movf	map@max2+1,w
  3080     04FA  00C0               	movwf	??_map+5
  3081     04FB  0839               	movf	map@max2+2,w
  3082     04FC  00C1               	movwf	??_map+6
  3083     04FD  083A               	movf	map@max2+3,w
  3084     04FE  00C2               	movwf	??_map+7
  3085     04FF  083B               	movf	??_map,w
  3086     0500  02BF               	subwf	??_map+4,f
  3087     0501  083C               	movf	??_map+1,w
  3088     0502  1C03               	skipc
  3089     0503  0F3C               	incfsz	??_map+1,w
  3090     0504  2D06               	goto	u1641
  3091     0505  2D07               	goto	u1642
  3092     0506                     u1641:
  3093     0506  02C0               	subwf	??_map+5,f
  3094     0507                     u1642:
  3095     0507  083D               	movf	??_map+2,w
  3096     0508  1C03               	skipc
  3097     0509  0F3D               	incfsz	??_map+2,w
  3098     050A  2D0C               	goto	u1643
  3099     050B  2D0D               	goto	u1644
  3100     050C                     u1643:
  3101     050C  02C1               	subwf	??_map+6,f
  3102     050D                     u1644:
  3103     050D  083E               	movf	??_map+3,w
  3104     050E  1C03               	skipc
  3105     050F  0F3E               	incfsz	??_map+3,w
  3106     0510  2D12               	goto	u1645
  3107     0511  2D13               	goto	u1646
  3108     0512                     u1645:
  3109     0512  02C2               	subwf	??_map+7,f
  3110     0513                     u1646:
  3111     0513  0842               	movf	??_map+7,w
  3112     0514  00F9               	movwf	___lmul@multiplicand+3
  3113     0515  0841               	movf	??_map+6,w
  3114     0516  00F8               	movwf	___lmul@multiplicand+2
  3115     0517  0840               	movf	??_map+5,w
  3116     0518  00F7               	movwf	___lmul@multiplicand+1
  3117     0519  083F               	movf	??_map+4,w
  3118     051A  00F6               	movwf	___lmul@multiplicand
  3119     051B  120A  118A  2679  120A  118A  	fcall	___lmul
  3120     0520  0875               	movf	?___lmul+3,w
  3121     0521  1283               	bcf	3,5	;RP0=0, select bank0
  3122     0522  1303               	bcf	3,6	;RP1=0, select bank0
  3123     0523  00AC               	movwf	___aldiv@dividend+3
  3124     0524  0874               	movf	?___lmul+2,w
  3125     0525  00AB               	movwf	___aldiv@dividend+2
  3126     0526  0873               	movf	?___lmul+1,w
  3127     0527  00AA               	movwf	___aldiv@dividend+1
  3128     0528  0872               	movf	?___lmul,w
  3129     0529  00A9               	movwf	___aldiv@dividend
  3130     052A  120A  118A  21A2  120A  118A  	fcall	___aldiv
  3131     052F  1283               	bcf	3,5	;RP0=0, select bank0
  3132     0530  1303               	bcf	3,6	;RP1=0, select bank0
  3133     0531  0836               	movf	map@min2,w
  3134     0532  0725               	addwf	?___aldiv,w
  3135     0533  00B4               	movwf	?_map
  3136     0534  3000               	movlw	0
  3137     0535  1803               	skipnc
  3138     0536  3001               	movlw	1
  3139     0537  0726               	addwf	?___aldiv+1,w
  3140     0538  00B5               	movwf	?_map+1
  3141     0539                     l149:
  3142     0539  0008               	return
  3143     053A                     __end_of_map:
  3144                           
  3145                           	psect	text15
  3146     0679                     __ptext15:	
  3147 ;; *************** function ___lmul *****************
  3148 ;; Defined at:
  3149 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul32.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;  multiplier      4    2[COMMON] unsigned long 
  3152 ;;  multiplicand    4    6[COMMON] unsigned long 
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;  product         4    1[BANK0 ] unsigned long 
  3155 ;; Return value:  Size  Location     Type
  3156 ;;                  4    2[COMMON] unsigned long 
  3157 ;; Registers used:
  3158 ;;		wreg, status,2, status,0
  3159 ;; Tracked objects:
  3160 ;;		On entry : 0/0
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3164 ;;      Params:         8       0       0       0       0
  3165 ;;      Locals:         0       4       0       0       0
  3166 ;;      Temps:          0       1       0       0       0
  3167 ;;      Totals:         8       5       0       0       0
  3168 ;;Total ram usage:       13 bytes
  3169 ;; Hardware stack levels used: 1
  3170 ;; Hardware stack levels required when called: 2
  3171 ;; This function calls:
  3172 ;;		Nothing
  3173 ;; This function is called by:
  3174 ;;		_map
  3175 ;; This function uses a non-reentrant model
  3176 ;;
  3177                           
  3178     0679                     ___lmul:	
  3179                           ;psect for function ___lmul
  3180                           
  3181     0679                     l1958:	
  3182                           ;incstack = 0
  3183                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3184                           
  3185     0679  3000               	movlw	0
  3186     067A  1283               	bcf	3,5	;RP0=0, select bank0
  3187     067B  1303               	bcf	3,6	;RP1=0, select bank0
  3188     067C  00A4               	movwf	___lmul@product+3
  3189     067D  3000               	movlw	0
  3190     067E  00A3               	movwf	___lmul@product+2
  3191     067F  3000               	movlw	0
  3192     0680  00A2               	movwf	___lmul@product+1
  3193     0681  3000               	movlw	0
  3194     0682  00A1               	movwf	___lmul@product
  3195     0683                     l1960:
  3196     0683  1C72               	btfss	___lmul@multiplier,0
  3197     0684  2E86               	goto	u1371
  3198     0685  2E87               	goto	u1370
  3199     0686                     u1371:
  3200     0686  2E9E               	goto	l1964
  3201     0687                     u1370:
  3202     0687                     l1962:
  3203     0687  0876               	movf	___lmul@multiplicand,w
  3204     0688  07A1               	addwf	___lmul@product,f
  3205     0689  0877               	movf	___lmul@multiplicand+1,w
  3206     068A  1103               	clrz
  3207     068B  1803               	skipnc
  3208     068C  3E01               	addlw	1
  3209     068D  1903               	skipnz
  3210     068E  2E90               	goto	u1381
  3211     068F  07A2               	addwf	___lmul@product+1,f
  3212     0690                     u1381:
  3213     0690  0878               	movf	___lmul@multiplicand+2,w
  3214     0691  1103               	clrz
  3215     0692  1803               	skipnc
  3216     0693  3E01               	addlw	1
  3217     0694  1903               	skipnz
  3218     0695  2E97               	goto	u1382
  3219     0696  07A3               	addwf	___lmul@product+2,f
  3220     0697                     u1382:
  3221     0697  0879               	movf	___lmul@multiplicand+3,w
  3222     0698  1103               	clrz
  3223     0699  1803               	skipnc
  3224     069A  3E01               	addlw	1
  3225     069B  1903               	skipnz
  3226     069C  2E9E               	goto	u1383
  3227     069D  07A4               	addwf	___lmul@product+3,f
  3228     069E                     u1383:
  3229     069E                     l1964:
  3230     069E  3001               	movlw	1
  3231     069F  00A0               	movwf	??___lmul
  3232     06A0                     u1395:
  3233     06A0  1003               	clrc
  3234     06A1  0DF6               	rlf	___lmul@multiplicand,f
  3235     06A2  0DF7               	rlf	___lmul@multiplicand+1,f
  3236     06A3  0DF8               	rlf	___lmul@multiplicand+2,f
  3237     06A4  0DF9               	rlf	___lmul@multiplicand+3,f
  3238     06A5  0BA0               	decfsz	??___lmul,f
  3239     06A6  2EA0               	goto	u1395
  3240     06A7                     l1966:
  3241     06A7  3001               	movlw	1
  3242     06A8                     u1405:
  3243     06A8  1003               	clrc
  3244     06A9  0CF5               	rrf	___lmul@multiplier+3,f
  3245     06AA  0CF4               	rrf	___lmul@multiplier+2,f
  3246     06AB  0CF3               	rrf	___lmul@multiplier+1,f
  3247     06AC  0CF2               	rrf	___lmul@multiplier,f
  3248     06AD  3EFF               	addlw	-1
  3249     06AE  1D03               	skipz
  3250     06AF  2EA8               	goto	u1405
  3251     06B0  0875               	movf	___lmul@multiplier+3,w
  3252     06B1  0474               	iorwf	___lmul@multiplier+2,w
  3253     06B2  0473               	iorwf	___lmul@multiplier+1,w
  3254     06B3  0472               	iorwf	___lmul@multiplier,w
  3255     06B4  1D03               	skipz
  3256     06B5  2EB7               	goto	u1411
  3257     06B6  2EB8               	goto	u1410
  3258     06B7                     u1411:
  3259     06B7  2E83               	goto	l1960
  3260     06B8                     u1410:
  3261     06B8                     l1968:
  3262     06B8  0824               	movf	___lmul@product+3,w
  3263     06B9  00F5               	movwf	?___lmul+3
  3264     06BA  0823               	movf	___lmul@product+2,w
  3265     06BB  00F4               	movwf	?___lmul+2
  3266     06BC  0822               	movf	___lmul@product+1,w
  3267     06BD  00F3               	movwf	?___lmul+1
  3268     06BE  0821               	movf	___lmul@product,w
  3269     06BF  00F2               	movwf	?___lmul
  3270     06C0                     l410:
  3271     06C0  0008               	return
  3272     06C1                     __end_of___lmul:
  3273                           
  3274                           	psect	text16
  3275     01A2                     __ptext16:	
  3276 ;; *************** function ___aldiv *****************
  3277 ;; Defined at:
  3278 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\aldiv.c"
  3279 ;; Parameters:    Size  Location     Type
  3280 ;;  divisor         4    5[BANK0 ] long 
  3281 ;;  dividend        4    9[BANK0 ] long 
  3282 ;; Auto vars:     Size  Location     Type
  3283 ;;  quotient        4   16[BANK0 ] long 
  3284 ;;  sign            1   15[BANK0 ] unsigned char 
  3285 ;;  counter         1   14[BANK0 ] unsigned char 
  3286 ;; Return value:  Size  Location     Type
  3287 ;;                  4    5[BANK0 ] long 
  3288 ;; Registers used:
  3289 ;;		wreg, status,2, status,0, btemp+1
  3290 ;; Tracked objects:
  3291 ;;		On entry : 0/0
  3292 ;;		On exit  : 0/0
  3293 ;;		Unchanged: 0/0
  3294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3295 ;;      Params:         0       8       0       0       0
  3296 ;;      Locals:         0       6       0       0       0
  3297 ;;      Temps:          0       1       0       0       0
  3298 ;;      Totals:         0      15       0       0       0
  3299 ;;Total ram usage:       15 bytes
  3300 ;; Hardware stack levels used: 1
  3301 ;; Hardware stack levels required when called: 2
  3302 ;; This function calls:
  3303 ;;		Nothing
  3304 ;; This function is called by:
  3305 ;;		_map
  3306 ;;		_UART_RX_config
  3307 ;;		_UART_TX_config
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310                           
  3311     01A2                     ___aldiv:	
  3312                           ;psect for function ___aldiv
  3313                           
  3314     01A2                     l1998:	
  3315                           ;incstack = 0
  3316                           ; Regs used in ___aldiv: [wreg+status,2+status,0+btemp+1]
  3317                           
  3318     01A2  1283               	bcf	3,5	;RP0=0, select bank0
  3319     01A3  1303               	bcf	3,6	;RP1=0, select bank0
  3320     01A4  01AF               	clrf	___aldiv@sign
  3321     01A5                     l2000:
  3322     01A5  1FA8               	btfss	___aldiv@divisor+3,7
  3323     01A6  29A8               	goto	u1491
  3324     01A7  29A9               	goto	u1490
  3325     01A8                     u1491:
  3326     01A8  29B6               	goto	l461
  3327     01A9                     u1490:
  3328     01A9                     l2002:
  3329     01A9  09A5               	comf	___aldiv@divisor,f
  3330     01AA  09A6               	comf	___aldiv@divisor+1,f
  3331     01AB  09A7               	comf	___aldiv@divisor+2,f
  3332     01AC  09A8               	comf	___aldiv@divisor+3,f
  3333     01AD  0AA5               	incf	___aldiv@divisor,f
  3334     01AE  1903               	skipnz
  3335     01AF  0AA6               	incf	___aldiv@divisor+1,f
  3336     01B0  1903               	skipnz
  3337     01B1  0AA7               	incf	___aldiv@divisor+2,f
  3338     01B2  1903               	skipnz
  3339     01B3  0AA8               	incf	___aldiv@divisor+3,f
  3340     01B4  01AF               	clrf	___aldiv@sign
  3341     01B5  0AAF               	incf	___aldiv@sign,f
  3342     01B6                     l461:
  3343     01B6  1FAC               	btfss	___aldiv@dividend+3,7
  3344     01B7  29B9               	goto	u1501
  3345     01B8  29BA               	goto	u1500
  3346     01B9                     u1501:
  3347     01B9  29C9               	goto	l2008
  3348     01BA                     u1500:
  3349     01BA                     l2004:
  3350     01BA  09A9               	comf	___aldiv@dividend,f
  3351     01BB  09AA               	comf	___aldiv@dividend+1,f
  3352     01BC  09AB               	comf	___aldiv@dividend+2,f
  3353     01BD  09AC               	comf	___aldiv@dividend+3,f
  3354     01BE  0AA9               	incf	___aldiv@dividend,f
  3355     01BF  1903               	skipnz
  3356     01C0  0AAA               	incf	___aldiv@dividend+1,f
  3357     01C1  1903               	skipnz
  3358     01C2  0AAB               	incf	___aldiv@dividend+2,f
  3359     01C3  1903               	skipnz
  3360     01C4  0AAC               	incf	___aldiv@dividend+3,f
  3361     01C5                     l2006:
  3362     01C5  3001               	movlw	1
  3363     01C6  00FF               	movwf	btemp+1
  3364     01C7  087F               	movf	btemp+1,w
  3365     01C8  06AF               	xorwf	___aldiv@sign,f
  3366     01C9                     l2008:
  3367     01C9  3000               	movlw	0
  3368     01CA  00B3               	movwf	___aldiv@quotient+3
  3369     01CB  3000               	movlw	0
  3370     01CC  00B2               	movwf	___aldiv@quotient+2
  3371     01CD  3000               	movlw	0
  3372     01CE  00B1               	movwf	___aldiv@quotient+1
  3373     01CF  3000               	movlw	0
  3374     01D0  00B0               	movwf	___aldiv@quotient
  3375     01D1                     l2010:
  3376     01D1  0828               	movf	___aldiv@divisor+3,w
  3377     01D2  0427               	iorwf	___aldiv@divisor+2,w
  3378     01D3  0426               	iorwf	___aldiv@divisor+1,w
  3379     01D4  0425               	iorwf	___aldiv@divisor,w
  3380     01D5  1903               	skipnz
  3381     01D6  29D8               	goto	u1511
  3382     01D7  29D9               	goto	u1510
  3383     01D8                     u1511:
  3384     01D8  2A26               	goto	l2032
  3385     01D9                     u1510:
  3386     01D9                     l2012:
  3387     01D9  01AE               	clrf	___aldiv@counter
  3388     01DA  0AAE               	incf	___aldiv@counter,f
  3389     01DB  29E9               	goto	l2018
  3390     01DC                     l2014:
  3391     01DC  3001               	movlw	1
  3392     01DD  00AD               	movwf	??___aldiv
  3393     01DE                     u1525:
  3394     01DE  1003               	clrc
  3395     01DF  0DA5               	rlf	___aldiv@divisor,f
  3396     01E0  0DA6               	rlf	___aldiv@divisor+1,f
  3397     01E1  0DA7               	rlf	___aldiv@divisor+2,f
  3398     01E2  0DA8               	rlf	___aldiv@divisor+3,f
  3399     01E3  0BAD               	decfsz	??___aldiv,f
  3400     01E4  29DE               	goto	u1525
  3401     01E5                     l2016:
  3402     01E5  3001               	movlw	1
  3403     01E6  00FF               	movwf	btemp+1
  3404     01E7  087F               	movf	btemp+1,w
  3405     01E8  07AE               	addwf	___aldiv@counter,f
  3406     01E9                     l2018:
  3407     01E9  1FA8               	btfss	___aldiv@divisor+3,7
  3408     01EA  29EC               	goto	u1531
  3409     01EB  29ED               	goto	u1530
  3410     01EC                     u1531:
  3411     01EC  29DC               	goto	l2014
  3412     01ED                     u1530:
  3413     01ED                     l2020:
  3414     01ED  3001               	movlw	1
  3415     01EE  00AD               	movwf	??___aldiv
  3416     01EF                     u1545:
  3417     01EF  1003               	clrc
  3418     01F0  0DB0               	rlf	___aldiv@quotient,f
  3419     01F1  0DB1               	rlf	___aldiv@quotient+1,f
  3420     01F2  0DB2               	rlf	___aldiv@quotient+2,f
  3421     01F3  0DB3               	rlf	___aldiv@quotient+3,f
  3422     01F4  0BAD               	decfsz	??___aldiv,f
  3423     01F5  29EF               	goto	u1545
  3424     01F6                     l2022:
  3425     01F6  0828               	movf	___aldiv@divisor+3,w
  3426     01F7  022C               	subwf	___aldiv@dividend+3,w
  3427     01F8  1D03               	skipz
  3428     01F9  2A04               	goto	u1555
  3429     01FA  0827               	movf	___aldiv@divisor+2,w
  3430     01FB  022B               	subwf	___aldiv@dividend+2,w
  3431     01FC  1D03               	skipz
  3432     01FD  2A04               	goto	u1555
  3433     01FE  0826               	movf	___aldiv@divisor+1,w
  3434     01FF  022A               	subwf	___aldiv@dividend+1,w
  3435     0200  1D03               	skipz
  3436     0201  2A04               	goto	u1555
  3437     0202  0825               	movf	___aldiv@divisor,w
  3438     0203  0229               	subwf	___aldiv@dividend,w
  3439     0204                     u1555:
  3440     0204  1C03               	skipc
  3441     0205  2A07               	goto	u1551
  3442     0206  2A08               	goto	u1550
  3443     0207                     u1551:
  3444     0207  2A17               	goto	l2028
  3445     0208                     u1550:
  3446     0208                     l2024:
  3447     0208  0825               	movf	___aldiv@divisor,w
  3448     0209  02A9               	subwf	___aldiv@dividend,f
  3449     020A  0826               	movf	___aldiv@divisor+1,w
  3450     020B  1C03               	skipc
  3451     020C  0F26               	incfsz	___aldiv@divisor+1,w
  3452     020D  02AA               	subwf	___aldiv@dividend+1,f
  3453     020E  0827               	movf	___aldiv@divisor+2,w
  3454     020F  1C03               	skipc
  3455     0210  0F27               	incfsz	___aldiv@divisor+2,w
  3456     0211  02AB               	subwf	___aldiv@dividend+2,f
  3457     0212  0828               	movf	___aldiv@divisor+3,w
  3458     0213  1C03               	skipc
  3459     0214  0F28               	incfsz	___aldiv@divisor+3,w
  3460     0215  02AC               	subwf	___aldiv@dividend+3,f
  3461     0216                     l2026:
  3462     0216  1430               	bsf	___aldiv@quotient,0
  3463     0217                     l2028:
  3464     0217  3001               	movlw	1
  3465     0218                     u1565:
  3466     0218  1003               	clrc
  3467     0219  0CA8               	rrf	___aldiv@divisor+3,f
  3468     021A  0CA7               	rrf	___aldiv@divisor+2,f
  3469     021B  0CA6               	rrf	___aldiv@divisor+1,f
  3470     021C  0CA5               	rrf	___aldiv@divisor,f
  3471     021D  3EFF               	addlw	-1
  3472     021E  1D03               	skipz
  3473     021F  2A18               	goto	u1565
  3474     0220                     l2030:
  3475     0220  3001               	movlw	1
  3476     0221  02AE               	subwf	___aldiv@counter,f
  3477     0222  1D03               	btfss	3,2
  3478     0223  2A25               	goto	u1571
  3479     0224  2A26               	goto	u1570
  3480     0225                     u1571:
  3481     0225  29ED               	goto	l2020
  3482     0226                     u1570:
  3483     0226                     l2032:
  3484     0226  082F               	movf	___aldiv@sign,w
  3485     0227  1903               	btfsc	3,2
  3486     0228  2A2A               	goto	u1581
  3487     0229  2A2B               	goto	u1580
  3488     022A                     u1581:
  3489     022A  2A36               	goto	l2036
  3490     022B                     u1580:
  3491     022B                     l2034:
  3492     022B  09B0               	comf	___aldiv@quotient,f
  3493     022C  09B1               	comf	___aldiv@quotient+1,f
  3494     022D  09B2               	comf	___aldiv@quotient+2,f
  3495     022E  09B3               	comf	___aldiv@quotient+3,f
  3496     022F  0AB0               	incf	___aldiv@quotient,f
  3497     0230  1903               	skipnz
  3498     0231  0AB1               	incf	___aldiv@quotient+1,f
  3499     0232  1903               	skipnz
  3500     0233  0AB2               	incf	___aldiv@quotient+2,f
  3501     0234  1903               	skipnz
  3502     0235  0AB3               	incf	___aldiv@quotient+3,f
  3503     0236                     l2036:
  3504     0236  0833               	movf	___aldiv@quotient+3,w
  3505     0237  00A8               	movwf	?___aldiv+3
  3506     0238  0832               	movf	___aldiv@quotient+2,w
  3507     0239  00A7               	movwf	?___aldiv+2
  3508     023A  0831               	movf	___aldiv@quotient+1,w
  3509     023B  00A6               	movwf	?___aldiv+1
  3510     023C  0830               	movf	___aldiv@quotient,w
  3511     023D  00A5               	movwf	?___aldiv
  3512     023E                     l471:
  3513     023E  0008               	return
  3514     023F                     __end_of___aldiv:
  3515                           
  3516                           	psect	text17
  3517     0EB9                     __ptext17:	
  3518 ;; *************** function _I2C_Master_Write *****************
  3519 ;; Defined at:
  3520 ;;		line 65 in file "I2C.c"
  3521 ;; Parameters:    Size  Location     Type
  3522 ;;  d               2    2[COMMON] unsigned int 
  3523 ;; Auto vars:     Size  Location     Type
  3524 ;;		None
  3525 ;; Return value:  Size  Location     Type
  3526 ;;                  1    wreg      void 
  3527 ;; Registers used:
  3528 ;;		wreg, status,2, status,0, pclath, cstack
  3529 ;; Tracked objects:
  3530 ;;		On entry : 0/0
  3531 ;;		On exit  : 0/0
  3532 ;;		Unchanged: 0/0
  3533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3534 ;;      Params:         2       0       0       0       0
  3535 ;;      Locals:         0       0       0       0       0
  3536 ;;      Temps:          0       0       0       0       0
  3537 ;;      Totals:         2       0       0       0       0
  3538 ;;Total ram usage:        2 bytes
  3539 ;; Hardware stack levels used: 1
  3540 ;; Hardware stack levels required when called: 3
  3541 ;; This function calls:
  3542 ;;		_I2C_Master_Wait
  3543 ;; This function is called by:
  3544 ;;		_requestTemp
  3545 ;;		_requestHum
  3546 ;;		_requestGas
  3547 ;;		_writeMotors
  3548 ;; This function uses a non-reentrant model
  3549 ;;
  3550                           
  3551     0EB9                     _I2C_Master_Write:	
  3552                           ;psect for function _I2C_Master_Write
  3553                           
  3554     0EB9                     l1662:	
  3555                           ;incstack = 0
  3556                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3557                           
  3558                           
  3559                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3560     0EB9  120A  158A  26DB  120A  158A  	fcall	_I2C_Master_Wait
  3561     0EBE                     l1664:
  3562                           
  3563                           ;I2C.c: 68:     SSPBUF = d;
  3564     0EBE  0872               	movf	I2C_Master_Write@d,w
  3565     0EBF  1283               	bcf	3,5	;RP0=0, select bank0
  3566     0EC0  1303               	bcf	3,6	;RP1=0, select bank0
  3567     0EC1  0093               	movwf	19	;volatile
  3568     0EC2                     l196:
  3569     0EC2  0008               	return
  3570     0EC3                     __end_of_I2C_Master_Write:
  3571                           
  3572                           	psect	text18
  3573     0EB0                     __ptext18:	
  3574 ;; *************** function _I2C_Master_Stop *****************
  3575 ;; Defined at:
  3576 ;;		line 55 in file "I2C.c"
  3577 ;; Parameters:    Size  Location     Type
  3578 ;;		None
  3579 ;; Auto vars:     Size  Location     Type
  3580 ;;		None
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  1    wreg      void 
  3583 ;; Registers used:
  3584 ;;		wreg, status,2, status,0, pclath, cstack
  3585 ;; Tracked objects:
  3586 ;;		On entry : 0/0
  3587 ;;		On exit  : 0/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3590 ;;      Params:         0       0       0       0       0
  3591 ;;      Locals:         0       0       0       0       0
  3592 ;;      Temps:          0       0       0       0       0
  3593 ;;      Totals:         0       0       0       0       0
  3594 ;;Total ram usage:        0 bytes
  3595 ;; Hardware stack levels used: 1
  3596 ;; Hardware stack levels required when called: 3
  3597 ;; This function calls:
  3598 ;;		_I2C_Master_Wait
  3599 ;; This function is called by:
  3600 ;;		_requestTemp
  3601 ;;		_requestHum
  3602 ;;		_requestGas
  3603 ;;		_writeMotors
  3604 ;; This function uses a non-reentrant model
  3605 ;;
  3606                           
  3607     0EB0                     _I2C_Master_Stop:	
  3608                           ;psect for function _I2C_Master_Stop
  3609                           
  3610     0EB0                     l1686:	
  3611                           ;incstack = 0
  3612                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3613                           
  3614                           
  3615                           ;I2C.c: 57:     I2C_Master_Wait();
  3616     0EB0  120A  158A  26DB  120A  158A  	fcall	_I2C_Master_Wait
  3617     0EB5                     l1688:
  3618                           
  3619                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3620     0EB5  1683               	bsf	3,5	;RP0=1, select bank1
  3621     0EB6  1303               	bcf	3,6	;RP1=0, select bank1
  3622     0EB7  1511               	bsf	17,2	;volatile
  3623     0EB8                     l193:
  3624     0EB8  0008               	return
  3625     0EB9                     __end_of_I2C_Master_Stop:
  3626                           
  3627                           	psect	text19
  3628     0EA7                     __ptext19:	
  3629 ;; *************** function _I2C_Master_Start *****************
  3630 ;; Defined at:
  3631 ;;		line 39 in file "I2C.c"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;		None
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;		None
  3636 ;; Return value:  Size  Location     Type
  3637 ;;                  1    wreg      void 
  3638 ;; Registers used:
  3639 ;;		wreg, status,2, status,0, pclath, cstack
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3645 ;;      Params:         0       0       0       0       0
  3646 ;;      Locals:         0       0       0       0       0
  3647 ;;      Temps:          0       0       0       0       0
  3648 ;;      Totals:         0       0       0       0       0
  3649 ;;Total ram usage:        0 bytes
  3650 ;; Hardware stack levels used: 1
  3651 ;; Hardware stack levels required when called: 3
  3652 ;; This function calls:
  3653 ;;		_I2C_Master_Wait
  3654 ;; This function is called by:
  3655 ;;		_requestTemp
  3656 ;;		_requestHum
  3657 ;;		_requestGas
  3658 ;;		_writeMotors
  3659 ;; This function uses a non-reentrant model
  3660 ;;
  3661                           
  3662     0EA7                     _I2C_Master_Start:	
  3663                           ;psect for function _I2C_Master_Start
  3664                           
  3665     0EA7                     l1658:	
  3666                           ;incstack = 0
  3667                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3668                           
  3669                           
  3670                           ;I2C.c: 41:     I2C_Master_Wait();
  3671     0EA7  120A  158A  26DB  120A  158A  	fcall	_I2C_Master_Wait
  3672     0EAC                     l1660:
  3673                           
  3674                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  3675     0EAC  1683               	bsf	3,5	;RP0=1, select bank1
  3676     0EAD  1303               	bcf	3,6	;RP1=0, select bank1
  3677     0EAE  1411               	bsf	17,0	;volatile
  3678     0EAF                     l187:
  3679     0EAF  0008               	return
  3680     0EB0                     __end_of_I2C_Master_Start:
  3681                           
  3682                           	psect	text20
  3683     0E9E                     __ptext20:	
  3684 ;; *************** function _I2C_Master_RepeatedStart *****************
  3685 ;; Defined at:
  3686 ;;		line 47 in file "I2C.c"
  3687 ;; Parameters:    Size  Location     Type
  3688 ;;		None
  3689 ;; Auto vars:     Size  Location     Type
  3690 ;;		None
  3691 ;; Return value:  Size  Location     Type
  3692 ;;                  1    wreg      void 
  3693 ;; Registers used:
  3694 ;;		wreg, status,2, status,0, pclath, cstack
  3695 ;; Tracked objects:
  3696 ;;		On entry : 0/0
  3697 ;;		On exit  : 0/0
  3698 ;;		Unchanged: 0/0
  3699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3700 ;;      Params:         0       0       0       0       0
  3701 ;;      Locals:         0       0       0       0       0
  3702 ;;      Temps:          0       0       0       0       0
  3703 ;;      Totals:         0       0       0       0       0
  3704 ;;Total ram usage:        0 bytes
  3705 ;; Hardware stack levels used: 1
  3706 ;; Hardware stack levels required when called: 3
  3707 ;; This function calls:
  3708 ;;		_I2C_Master_Wait
  3709 ;; This function is called by:
  3710 ;;		_requestTemp
  3711 ;;		_requestHum
  3712 ;;		_requestGas
  3713 ;; This function uses a non-reentrant model
  3714 ;;
  3715                           
  3716     0E9E                     _I2C_Master_RepeatedStart:	
  3717                           ;psect for function _I2C_Master_RepeatedStart
  3718                           
  3719     0E9E                     l1666:	
  3720                           ;incstack = 0
  3721                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3722                           
  3723                           
  3724                           ;I2C.c: 49:     I2C_Master_Wait();
  3725     0E9E  120A  158A  26DB  120A  158A  	fcall	_I2C_Master_Wait
  3726     0EA3                     l1668:
  3727                           
  3728                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  3729     0EA3  1683               	bsf	3,5	;RP0=1, select bank1
  3730     0EA4  1303               	bcf	3,6	;RP1=0, select bank1
  3731     0EA5  1491               	bsf	17,1	;volatile
  3732     0EA6                     l190:
  3733     0EA6  0008               	return
  3734     0EA7                     __end_of_I2C_Master_RepeatedStart:
  3735                           
  3736                           	psect	text21
  3737     07CC                     __ptext21:	
  3738 ;; *************** function _I2C_Master_Read *****************
  3739 ;; Defined at:
  3740 ;;		line 74 in file "I2C.c"
  3741 ;; Parameters:    Size  Location     Type
  3742 ;;  a               2    2[COMMON] unsigned short 
  3743 ;; Auto vars:     Size  Location     Type
  3744 ;;  temp            2    6[COMMON] unsigned short 
  3745 ;; Return value:  Size  Location     Type
  3746 ;;                  2    2[COMMON] unsigned short 
  3747 ;; Registers used:
  3748 ;;		wreg, status,2, status,0, pclath, cstack
  3749 ;; Tracked objects:
  3750 ;;		On entry : 0/0
  3751 ;;		On exit  : 0/0
  3752 ;;		Unchanged: 0/0
  3753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3754 ;;      Params:         2       0       0       0       0
  3755 ;;      Locals:         2       0       0       0       0
  3756 ;;      Temps:          2       0       0       0       0
  3757 ;;      Totals:         6       0       0       0       0
  3758 ;;Total ram usage:        6 bytes
  3759 ;; Hardware stack levels used: 1
  3760 ;; Hardware stack levels required when called: 3
  3761 ;; This function calls:
  3762 ;;		_I2C_Master_Wait
  3763 ;; This function is called by:
  3764 ;;		_requestTemp
  3765 ;;		_requestHum
  3766 ;;		_requestGas
  3767 ;; This function uses a non-reentrant model
  3768 ;;
  3769                           
  3770     07CC                     _I2C_Master_Read:	
  3771                           ;psect for function _I2C_Master_Read
  3772                           
  3773     07CC                     l1670:	
  3774                           ;incstack = 0
  3775                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3776                           
  3777                           
  3778                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3779     07CC  120A  158A  26DB  120A  118A  	fcall	_I2C_Master_Wait
  3780     07D1                     l1672:
  3781                           
  3782                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3783     07D1  1683               	bsf	3,5	;RP0=1, select bank1
  3784     07D2  1303               	bcf	3,6	;RP1=0, select bank1
  3785     07D3  1591               	bsf	17,3	;volatile
  3786                           
  3787                           ;I2C.c: 79:     I2C_Master_Wait();
  3788     07D4  120A  158A  26DB  120A  118A  	fcall	_I2C_Master_Wait
  3789     07D9                     l1674:
  3790                           
  3791                           ;I2C.c: 80:     temp = SSPBUF;
  3792     07D9  1283               	bcf	3,5	;RP0=0, select bank0
  3793     07DA  1303               	bcf	3,6	;RP1=0, select bank0
  3794     07DB  0813               	movf	19,w	;volatile
  3795     07DC  00F4               	movwf	??_I2C_Master_Read
  3796     07DD  01F5               	clrf	??_I2C_Master_Read+1
  3797     07DE  0874               	movf	??_I2C_Master_Read,w
  3798     07DF  00F6               	movwf	I2C_Master_Read@temp
  3799     07E0  0875               	movf	??_I2C_Master_Read+1,w
  3800     07E1  00F7               	movwf	I2C_Master_Read@temp+1
  3801     07E2                     l1676:
  3802                           
  3803                           ;I2C.c: 81:     I2C_Master_Wait();
  3804     07E2  120A  158A  26DB  120A  118A  	fcall	_I2C_Master_Wait
  3805     07E7                     l1678:
  3806                           
  3807                           ;I2C.c: 82:     if(a == 1){
  3808     07E7  0372               	decf	I2C_Master_Read@a,w
  3809     07E8  0473               	iorwf	I2C_Master_Read@a+1,w
  3810     07E9  1D03               	btfss	3,2
  3811     07EA  2FEC               	goto	u1151
  3812     07EB  2FED               	goto	u1150
  3813     07EC                     u1151:
  3814     07EC  2FF1               	goto	l199
  3815     07ED                     u1150:
  3816     07ED                     l1680:
  3817                           
  3818                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3819     07ED  1683               	bsf	3,5	;RP0=1, select bank1
  3820     07EE  1303               	bcf	3,6	;RP1=0, select bank1
  3821     07EF  1291               	bcf	17,5	;volatile
  3822                           
  3823                           ;I2C.c: 84:     }else{
  3824     07F0  2FF4               	goto	l200
  3825     07F1                     l199:
  3826                           
  3827                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3828     07F1  1683               	bsf	3,5	;RP0=1, select bank1
  3829     07F2  1303               	bcf	3,6	;RP1=0, select bank1
  3830     07F3  1691               	bsf	17,5	;volatile
  3831     07F4                     l200:	
  3832                           ;I2C.c: 86:     }
  3833                           
  3834                           
  3835                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3836     07F4  1611               	bsf	17,4	;volatile
  3837     07F5                     l1682:
  3838                           
  3839                           ;I2C.c: 88:     return temp;
  3840     07F5  0877               	movf	I2C_Master_Read@temp+1,w
  3841     07F6  00F3               	movwf	?_I2C_Master_Read+1
  3842     07F7  0876               	movf	I2C_Master_Read@temp,w
  3843     07F8  00F2               	movwf	?_I2C_Master_Read
  3844     07F9                     l201:
  3845     07F9  0008               	return
  3846     07FA                     __end_of_I2C_Master_Read:
  3847                           
  3848                           	psect	text22
  3849     0EDB                     __ptext22:	
  3850 ;; *************** function _I2C_Master_Wait *****************
  3851 ;; Defined at:
  3852 ;;		line 32 in file "I2C.c"
  3853 ;; Parameters:    Size  Location     Type
  3854 ;;		None
  3855 ;; Auto vars:     Size  Location     Type
  3856 ;;		None
  3857 ;; Return value:  Size  Location     Type
  3858 ;;                  1    wreg      void 
  3859 ;; Registers used:
  3860 ;;		wreg, status,2
  3861 ;; Tracked objects:
  3862 ;;		On entry : 0/0
  3863 ;;		On exit  : 0/0
  3864 ;;		Unchanged: 0/0
  3865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3866 ;;      Params:         0       0       0       0       0
  3867 ;;      Locals:         0       0       0       0       0
  3868 ;;      Temps:          0       0       0       0       0
  3869 ;;      Totals:         0       0       0       0       0
  3870 ;;Total ram usage:        0 bytes
  3871 ;; Hardware stack levels used: 1
  3872 ;; Hardware stack levels required when called: 2
  3873 ;; This function calls:
  3874 ;;		Nothing
  3875 ;; This function is called by:
  3876 ;;		_I2C_Master_Start
  3877 ;;		_I2C_Master_RepeatedStart
  3878 ;;		_I2C_Master_Stop
  3879 ;;		_I2C_Master_Write
  3880 ;;		_I2C_Master_Read
  3881 ;; This function uses a non-reentrant model
  3882 ;;
  3883                           
  3884     0EDB                     _I2C_Master_Wait:	
  3885                           ;psect for function _I2C_Master_Wait
  3886                           
  3887     0EDB                     l1456:	
  3888                           ;incstack = 0
  3889                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3890                           
  3891     0EDB                     l181:	
  3892                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3893                           
  3894     0EDB  1683               	bsf	3,5	;RP0=1, select bank1
  3895     0EDC  1303               	bcf	3,6	;RP1=0, select bank1
  3896     0EDD  1914               	btfsc	20,2	;volatile
  3897     0EDE  2EE0               	goto	u731
  3898     0EDF  2EE1               	goto	u730
  3899     0EE0                     u731:
  3900     0EE0  2EDB               	goto	l181
  3901     0EE1                     u730:
  3902     0EE1                     l1458:
  3903     0EE1  0811               	movf	17,w	;volatile
  3904     0EE2  391F               	andlw	31
  3905     0EE3  1D03               	btfss	3,2
  3906     0EE4  2EE6               	goto	u741
  3907     0EE5  2EE7               	goto	u740
  3908     0EE6                     u741:
  3909     0EE6  2EDB               	goto	l181
  3910     0EE7                     u740:
  3911     0EE7                     l184:
  3912     0EE7  0008               	return
  3913     0EE8                     __end_of_I2C_Master_Wait:
  3914                           
  3915                           	psect	text23
  3916     0023                     __ptext23:	
  3917 ;; *************** function _LDC_output *****************
  3918 ;; Defined at:
  3919 ;;		line 221 in file "master.c"
  3920 ;; Parameters:    Size  Location     Type
  3921 ;;		None
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;		None
  3924 ;; Return value:  Size  Location     Type
  3925 ;;                  1    wreg      void 
  3926 ;; Registers used:
  3927 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3933 ;;      Params:         0       0       0       0       0
  3934 ;;      Locals:         0       0       0       0       0
  3935 ;;      Temps:          0       2       0       0       0
  3936 ;;      Totals:         0       2       0       0       0
  3937 ;;Total ram usage:        2 bytes
  3938 ;; Hardware stack levels used: 1
  3939 ;; Hardware stack levels required when called: 5
  3940 ;; This function calls:
  3941 ;;		_Lcd_Clear
  3942 ;;		_Lcd_Set_Cursor
  3943 ;;		_Lcd_Write_Char
  3944 ;;		_Lcd_Write_String
  3945 ;;		_num_to_string
  3946 ;; This function is called by:
  3947 ;;		_main
  3948 ;; This function uses a non-reentrant model
  3949 ;;
  3950                           
  3951     0023                     _LDC_output:	
  3952                           ;psect for function _LDC_output
  3953                           
  3954     0023                     l2180:	
  3955                           ;incstack = 0
  3956                           ; Regs used in _LDC_output: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3957                           
  3958                           
  3959                           ;master.c: 222:     Lcd_Clear();
  3960     0023  120A  158A  26CE  120A  118A  	fcall	_Lcd_Clear
  3961     0028                     l2182:
  3962                           
  3963                           ;master.c: 224:     num_to_string(tempC,S_temp,3);
  3964     0028  087A               	movf	_tempC,w
  3965     0029  1283               	bcf	3,5	;RP0=0, select bank0
  3966     002A  1303               	bcf	3,6	;RP1=0, select bank0
  3967     002B  00B0               	movwf	??_LDC_output
  3968     002C  01B1               	clrf	??_LDC_output+1
  3969     002D  0830               	movf	??_LDC_output,w
  3970     002E  00A0               	movwf	num_to_string@num
  3971     002F  0831               	movf	??_LDC_output+1,w
  3972     0030  00A1               	movwf	num_to_string@num+1
  3973     0031  305A               	movlw	(low (_S_temp| 0))& (0+255)
  3974     0032  00A2               	movwf	num_to_string@dig8
  3975     0033  3003               	movlw	3
  3976     0034  00A3               	movwf	num_to_string@len
  3977     0035  120A  118A  20E9  120A  118A  	fcall	_num_to_string
  3978     003A                     l2184:
  3979                           
  3980                           ;master.c: 225:     num_to_string(n_hum,S_hum,2);
  3981     003A  1283               	bcf	3,5	;RP0=0, select bank0
  3982     003B  1303               	bcf	3,6	;RP1=0, select bank0
  3983     003C  0854               	movf	_n_hum,w
  3984     003D  00B0               	movwf	??_LDC_output
  3985     003E  01B1               	clrf	??_LDC_output+1
  3986     003F  0830               	movf	??_LDC_output,w
  3987     0040  00A0               	movwf	num_to_string@num
  3988     0041  0831               	movf	??_LDC_output+1,w
  3989     0042  00A1               	movwf	num_to_string@num+1
  3990     0043  305E               	movlw	(low (_S_hum| 0))& (0+255)
  3991     0044  00A2               	movwf	num_to_string@dig8
  3992     0045  3002               	movlw	2
  3993     0046  00A3               	movwf	num_to_string@len
  3994     0047  120A  118A  20E9  120A  118A  	fcall	_num_to_string
  3995     004C                     l2186:
  3996                           
  3997                           ;master.c: 226:     num_to_string(gasPPM,S_gas,3);
  3998     004C  1283               	bcf	3,5	;RP0=0, select bank0
  3999     004D  1303               	bcf	3,6	;RP1=0, select bank0
  4000     004E  084F               	movf	_gasPPM+1,w
  4001     004F  00A1               	movwf	num_to_string@num+1
  4002     0050  084E               	movf	_gasPPM,w
  4003     0051  00A0               	movwf	num_to_string@num
  4004     0052  3056               	movlw	(low (_S_gas| 0))& (0+255)
  4005     0053  00A2               	movwf	num_to_string@dig8
  4006     0054  3003               	movlw	3
  4007     0055  00A3               	movwf	num_to_string@len
  4008     0056  120A  118A  20E9  120A  118A  	fcall	_num_to_string
  4009     005B                     l2188:
  4010                           
  4011                           ;master.c: 229:     Lcd_Set_Cursor(1,1);
  4012     005B  01F6               	clrf	Lcd_Set_Cursor@b
  4013     005C  0AF6               	incf	Lcd_Set_Cursor@b,f
  4014     005D  3001               	movlw	1
  4015     005E  120A  118A  25E4  120A  118A  	fcall	_Lcd_Set_Cursor
  4016                           
  4017                           ;master.c: 230:     Lcd_Write_String("T:");
  4018     0063  3015               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  4019     0064  00F7               	movwf	Lcd_Write_String@a
  4020     0065  3080               	movlw	128
  4021     0066  00F8               	movwf	Lcd_Write_String@a+1
  4022     0067  120A  118A  2708  120A  118A  	fcall	_Lcd_Write_String
  4023                           
  4024                           ;master.c: 231:     Lcd_Write_String(S_temp);
  4025     006C  305A               	movlw	(low (_S_temp| 0))& (0+255)
  4026     006D  00F7               	movwf	Lcd_Write_String@a
  4027     006E  3000               	movlw	0
  4028     006F  00F8               	movwf	Lcd_Write_String@a+1
  4029     0070  120A  118A  2708  120A  118A  	fcall	_Lcd_Write_String
  4030                           
  4031                           ;master.c: 232:     Lcd_Write_String("^C");
  4032     0075  3018               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  4033     0076  00F7               	movwf	Lcd_Write_String@a
  4034     0077  3080               	movlw	128
  4035     0078  00F8               	movwf	Lcd_Write_String@a+1
  4036     0079  120A  118A  2708  120A  118A  	fcall	_Lcd_Write_String
  4037     007E                     l2190:
  4038                           
  4039                           ;master.c: 234:     Lcd_Set_Cursor(2,1);
  4040     007E  01F6               	clrf	Lcd_Set_Cursor@b
  4041     007F  0AF6               	incf	Lcd_Set_Cursor@b,f
  4042     0080  3002               	movlw	2
  4043     0081  120A  118A  25E4  120A  118A  	fcall	_Lcd_Set_Cursor
  4044     0086                     l2192:
  4045                           
  4046                           ;master.c: 235:     Lcd_Write_String("H:");
  4047     0086  3012               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  4048     0087  00F7               	movwf	Lcd_Write_String@a
  4049     0088  3080               	movlw	128
  4050     0089  00F8               	movwf	Lcd_Write_String@a+1
  4051     008A  120A  118A  2708  120A  118A  	fcall	_Lcd_Write_String
  4052     008F                     l2194:
  4053                           
  4054                           ;master.c: 236:     Lcd_Write_String(S_hum);
  4055     008F  305E               	movlw	(low (_S_hum| 0))& (0+255)
  4056     0090  00F7               	movwf	Lcd_Write_String@a
  4057     0091  3000               	movlw	0
  4058     0092  00F8               	movwf	Lcd_Write_String@a+1
  4059     0093  120A  118A  2708  120A  118A  	fcall	_Lcd_Write_String
  4060     0098                     l2196:
  4061                           
  4062                           ;master.c: 237:     Lcd_Write_String("%RH");
  4063     0098  3007               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  4064     0099  00F7               	movwf	Lcd_Write_String@a
  4065     009A  3080               	movlw	128
  4066     009B  00F8               	movwf	Lcd_Write_String@a+1
  4067     009C  120A  118A  2708  120A  118A  	fcall	_Lcd_Write_String
  4068                           
  4069                           ;master.c: 239:     Lcd_Set_Cursor(1,9);
  4070     00A1  3009               	movlw	9
  4071     00A2  00F6               	movwf	Lcd_Set_Cursor@b
  4072     00A3  3001               	movlw	1
  4073     00A4  120A  118A  25E4  120A  118A  	fcall	_Lcd_Set_Cursor
  4074     00A9                     l2198:
  4075                           
  4076                           ;master.c: 240:     Lcd_Write_String("G:");
  4077     00A9  300F               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  4078     00AA  00F7               	movwf	Lcd_Write_String@a
  4079     00AB  3080               	movlw	128
  4080     00AC  00F8               	movwf	Lcd_Write_String@a+1
  4081     00AD  120A  118A  2708  120A  118A  	fcall	_Lcd_Write_String
  4082     00B2                     l2200:
  4083                           
  4084                           ;master.c: 241:     Lcd_Write_String(S_gas);
  4085     00B2  3056               	movlw	(low (_S_gas| 0))& (0+255)
  4086     00B3  00F7               	movwf	Lcd_Write_String@a
  4087     00B4  3000               	movlw	0
  4088     00B5  00F8               	movwf	Lcd_Write_String@a+1
  4089     00B6  120A  118A  2708  120A  118A  	fcall	_Lcd_Write_String
  4090     00BB                     l2202:
  4091                           
  4092                           ;master.c: 242:     Lcd_Write_String("ppm");
  4093     00BB  300B               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  4094     00BC  00F7               	movwf	Lcd_Write_String@a
  4095     00BD  3080               	movlw	128
  4096     00BE  00F8               	movwf	Lcd_Write_String@a+1
  4097     00BF  120A  118A  2708  120A  118A  	fcall	_Lcd_Write_String
  4098     00C4                     l2204:
  4099                           
  4100                           ;master.c: 244:     Lcd_Set_Cursor(2,9);
  4101     00C4  3009               	movlw	9
  4102     00C5  00F6               	movwf	Lcd_Set_Cursor@b
  4103     00C6  3002               	movlw	2
  4104     00C7  120A  118A  25E4  120A  118A  	fcall	_Lcd_Set_Cursor
  4105                           
  4106                           ;master.c: 245:     Lcd_Write_String("DOOR:");
  4107     00CC  3001               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  4108     00CD  00F7               	movwf	Lcd_Write_String@a
  4109     00CE  3080               	movlw	128
  4110     00CF  00F8               	movwf	Lcd_Write_String@a+1
  4111     00D0  120A  118A  2708  120A  118A  	fcall	_Lcd_Write_String
  4112     00D5                     l2206:
  4113                           
  4114                           ;master.c: 246:     if(servoPos == '0')
  4115     00D5  3030               	movlw	48
  4116     00D6  067B               	xorwf	_servoPos,w
  4117     00D7  1D03               	btfss	3,2
  4118     00D8  28DA               	goto	u1721
  4119     00D9  28DB               	goto	u1720
  4120     00DA                     u1721:
  4121     00DA  28E2               	goto	l2210
  4122     00DB                     u1720:
  4123     00DB                     l2208:
  4124                           
  4125                           ;master.c: 247:         Lcd_Write_Char('C');
  4126     00DB  3043               	movlw	67
  4127     00DC  120A  158A  275B  120A  118A  	fcall	_Lcd_Write_Char
  4128     00E1  28E8               	goto	l135
  4129     00E2                     l2210:
  4130                           
  4131                           ;master.c: 249:         Lcd_Write_Char('O');
  4132     00E2  304F               	movlw	79
  4133     00E3  120A  158A  275B  120A  118A  	fcall	_Lcd_Write_Char
  4134     00E8                     l135:
  4135     00E8  0008               	return
  4136     00E9                     __end_of_LDC_output:
  4137                           
  4138                           	psect	text24
  4139     00E9                     __ptext24:	
  4140 ;; *************** function _num_to_string *****************
  4141 ;; Defined at:
  4142 ;;		line 265 in file "master.c"
  4143 ;; Parameters:    Size  Location     Type
  4144 ;;  num             2    0[BANK0 ] unsigned int 
  4145 ;;  dig8            1    2[BANK0 ] PTR unsigned char 
  4146 ;;		 -> S_gas(4), S_hum(3), S_temp(4), 
  4147 ;;  len             1    3[BANK0 ] unsigned char 
  4148 ;; Auto vars:     Size  Location     Type
  4149 ;;  unidades        2   14[BANK0 ] unsigned int 
  4150 ;;  decenas         2   12[BANK0 ] unsigned int 
  4151 ;;  div2            2   10[BANK0 ] unsigned int 
  4152 ;;  div1            2    8[BANK0 ] unsigned int 
  4153 ;;  centenas        2    6[BANK0 ] unsigned int 
  4154 ;;  div3            2    4[BANK0 ] unsigned int 
  4155 ;;  miles           2    0        unsigned int 
  4156 ;; Return value:  Size  Location     Type
  4157 ;;                  1    wreg      void 
  4158 ;; Registers used:
  4159 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4160 ;; Tracked objects:
  4161 ;;		On entry : 0/0
  4162 ;;		On exit  : 0/0
  4163 ;;		Unchanged: 0/0
  4164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4165 ;;      Params:         0       4       0       0       0
  4166 ;;      Locals:         0      12       0       0       0
  4167 ;;      Temps:          0       0       0       0       0
  4168 ;;      Totals:         0      16       0       0       0
  4169 ;;Total ram usage:       16 bytes
  4170 ;; Hardware stack levels used: 1
  4171 ;; Hardware stack levels required when called: 3
  4172 ;; This function calls:
  4173 ;;		___lwdiv
  4174 ;;		___lwmod
  4175 ;; This function is called by:
  4176 ;;		_LDC_output
  4177 ;; This function uses a non-reentrant model
  4178 ;;
  4179                           
  4180     00E9                     _num_to_string:	
  4181                           ;psect for function _num_to_string
  4182                           
  4183     00E9                     l1696:	
  4184                           ;incstack = 0
  4185                           ; Regs used in _num_to_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4186                           
  4187                           
  4188                           ;master.c: 266:     uint16_t div1,div2,div3,miles,centenas,decenas,unidades;;master.c: 2
      +                          67:     div1 = num / 10;
  4189     00E9  300A               	movlw	10
  4190     00EA  00F2               	movwf	___lwdiv@divisor
  4191     00EB  3000               	movlw	0
  4192     00EC  00F3               	movwf	___lwdiv@divisor+1
  4193     00ED  1283               	bcf	3,5	;RP0=0, select bank0
  4194     00EE  1303               	bcf	3,6	;RP1=0, select bank0
  4195     00EF  0821               	movf	num_to_string@num+1,w
  4196     00F0  00F5               	movwf	___lwdiv@dividend+1
  4197     00F1  0820               	movf	num_to_string@num,w
  4198     00F2  00F4               	movwf	___lwdiv@dividend
  4199     00F3  120A  118A  274E  120A  118A  	fcall	___lwdiv
  4200     00F8  0873               	movf	?___lwdiv+1,w
  4201     00F9  1283               	bcf	3,5	;RP0=0, select bank0
  4202     00FA  1303               	bcf	3,6	;RP1=0, select bank0
  4203     00FB  00A9               	movwf	num_to_string@div1+1
  4204     00FC  0872               	movf	?___lwdiv,w
  4205     00FD  00A8               	movwf	num_to_string@div1
  4206                           
  4207                           ;master.c: 268:     unidades = num % 10;
  4208     00FE  300A               	movlw	10
  4209     00FF  00F2               	movwf	___lwmod@divisor
  4210     0100  3000               	movlw	0
  4211     0101  00F3               	movwf	___lwmod@divisor+1
  4212     0102  0821               	movf	num_to_string@num+1,w
  4213     0103  00F5               	movwf	___lwmod@dividend+1
  4214     0104  0820               	movf	num_to_string@num,w
  4215     0105  00F4               	movwf	___lwmod@dividend
  4216     0106  120A  118A  2792  120A  118A  	fcall	___lwmod
  4217     010B  0873               	movf	?___lwmod+1,w
  4218     010C  1283               	bcf	3,5	;RP0=0, select bank0
  4219     010D  1303               	bcf	3,6	;RP1=0, select bank0
  4220     010E  00AF               	movwf	num_to_string@unidades+1
  4221     010F  0872               	movf	?___lwmod,w
  4222     0110  00AE               	movwf	num_to_string@unidades
  4223                           
  4224                           ;master.c: 269:     div2 = div1 / 10;
  4225     0111  300A               	movlw	10
  4226     0112  00F2               	movwf	___lwdiv@divisor
  4227     0113  3000               	movlw	0
  4228     0114  00F3               	movwf	___lwdiv@divisor+1
  4229     0115  0829               	movf	num_to_string@div1+1,w
  4230     0116  00F5               	movwf	___lwdiv@dividend+1
  4231     0117  0828               	movf	num_to_string@div1,w
  4232     0118  00F4               	movwf	___lwdiv@dividend
  4233     0119  120A  118A  274E  120A  118A  	fcall	___lwdiv
  4234     011E  0873               	movf	?___lwdiv+1,w
  4235     011F  1283               	bcf	3,5	;RP0=0, select bank0
  4236     0120  1303               	bcf	3,6	;RP1=0, select bank0
  4237     0121  00AB               	movwf	num_to_string@div2+1
  4238     0122  0872               	movf	?___lwdiv,w
  4239     0123  00AA               	movwf	num_to_string@div2
  4240                           
  4241                           ;master.c: 270:     decenas = div1 % 10;
  4242     0124  300A               	movlw	10
  4243     0125  00F2               	movwf	___lwmod@divisor
  4244     0126  3000               	movlw	0
  4245     0127  00F3               	movwf	___lwmod@divisor+1
  4246     0128  0829               	movf	num_to_string@div1+1,w
  4247     0129  00F5               	movwf	___lwmod@dividend+1
  4248     012A  0828               	movf	num_to_string@div1,w
  4249     012B  00F4               	movwf	___lwmod@dividend
  4250     012C  120A  118A  2792  120A  118A  	fcall	___lwmod
  4251     0131  0873               	movf	?___lwmod+1,w
  4252     0132  1283               	bcf	3,5	;RP0=0, select bank0
  4253     0133  1303               	bcf	3,6	;RP1=0, select bank0
  4254     0134  00AD               	movwf	num_to_string@decenas+1
  4255     0135  0872               	movf	?___lwmod,w
  4256     0136  00AC               	movwf	num_to_string@decenas
  4257                           
  4258                           ;master.c: 271:     div3 = div2 / 10;
  4259     0137  300A               	movlw	10
  4260     0138  00F2               	movwf	___lwdiv@divisor
  4261     0139  3000               	movlw	0
  4262     013A  00F3               	movwf	___lwdiv@divisor+1
  4263     013B  082B               	movf	num_to_string@div2+1,w
  4264     013C  00F5               	movwf	___lwdiv@dividend+1
  4265     013D  082A               	movf	num_to_string@div2,w
  4266     013E  00F4               	movwf	___lwdiv@dividend
  4267     013F  120A  118A  274E  120A  118A  	fcall	___lwdiv
  4268     0144  0873               	movf	?___lwdiv+1,w
  4269     0145  1283               	bcf	3,5	;RP0=0, select bank0
  4270     0146  1303               	bcf	3,6	;RP1=0, select bank0
  4271     0147  00A5               	movwf	num_to_string@div3+1
  4272     0148  0872               	movf	?___lwdiv,w
  4273     0149  00A4               	movwf	num_to_string@div3
  4274                           
  4275                           ;master.c: 272:     centenas = div2 % 10;
  4276     014A  300A               	movlw	10
  4277     014B  00F2               	movwf	___lwmod@divisor
  4278     014C  3000               	movlw	0
  4279     014D  00F3               	movwf	___lwmod@divisor+1
  4280     014E  082B               	movf	num_to_string@div2+1,w
  4281     014F  00F5               	movwf	___lwmod@dividend+1
  4282     0150  082A               	movf	num_to_string@div2,w
  4283     0151  00F4               	movwf	___lwmod@dividend
  4284     0152  120A  118A  2792  120A  118A  	fcall	___lwmod
  4285     0157  0873               	movf	?___lwmod+1,w
  4286     0158  1283               	bcf	3,5	;RP0=0, select bank0
  4287     0159  1303               	bcf	3,6	;RP1=0, select bank0
  4288     015A  00A7               	movwf	num_to_string@centenas+1
  4289     015B  0872               	movf	?___lwmod,w
  4290     015C  00A6               	movwf	num_to_string@centenas
  4291     015D  300A               	movlw	10
  4292     015E  00F2               	movwf	___lwmod@divisor
  4293     015F  3000               	movlw	0
  4294     0160  00F3               	movwf	___lwmod@divisor+1
  4295     0161  0825               	movf	num_to_string@div3+1,w
  4296     0162  00F5               	movwf	___lwmod@dividend+1
  4297     0163  0824               	movf	num_to_string@div3,w
  4298     0164  00F4               	movwf	___lwmod@dividend
  4299     0165  120A  118A  2792  120A  118A  	fcall	___lwmod
  4300     016A                     l1698:
  4301                           
  4302                           ;master.c: 275:     if(len == 1){
  4303     016A  1283               	bcf	3,5	;RP0=0, select bank0
  4304     016B  1303               	bcf	3,6	;RP1=0, select bank0
  4305     016C  0323               	decf	num_to_string@len,w
  4306     016D  1D03               	btfss	3,2
  4307     016E  2970               	goto	u1171
  4308     016F  2971               	goto	u1170
  4309     0170                     u1171:
  4310     0170  2978               	goto	l1702
  4311     0171                     u1170:
  4312     0171                     l1700:
  4313                           
  4314                           ;master.c: 276:         dig8[0] = unidades + '0';
  4315     0171  0822               	movf	num_to_string@dig8,w
  4316     0172  0084               	movwf	4
  4317     0173  082E               	movf	num_to_string@unidades,w
  4318     0174  3E30               	addlw	48
  4319     0175  1383               	bcf	3,7	;select IRP bank0
  4320     0176  0080               	movwf	0
  4321                           
  4322                           ;master.c: 277:     }
  4323     0177  29A1               	goto	l146
  4324     0178                     l1702:
  4325     0178  3002               	movlw	2
  4326     0179  0623               	xorwf	num_to_string@len,w
  4327     017A  1D03               	btfss	3,2
  4328     017B  297D               	goto	u1181
  4329     017C  297E               	goto	u1180
  4330     017D                     u1181:
  4331     017D  298A               	goto	l1706
  4332     017E                     u1180:
  4333     017E                     l1704:
  4334                           
  4335                           ;master.c: 279:         dig8[1] = unidades + '0';
  4336     017E  0A22               	incf	num_to_string@dig8,w
  4337     017F  0084               	movwf	4
  4338     0180  082E               	movf	num_to_string@unidades,w
  4339     0181  3E30               	addlw	48
  4340     0182  1383               	bcf	3,7	;select IRP bank0
  4341     0183  0080               	movwf	0
  4342                           
  4343                           ;master.c: 280:         dig8[0] = decenas + '0';
  4344     0184  0822               	movf	num_to_string@dig8,w
  4345     0185  0084               	movwf	4
  4346     0186  082C               	movf	num_to_string@decenas,w
  4347     0187  3E30               	addlw	48
  4348     0188  0080               	movwf	0
  4349                           
  4350                           ;master.c: 281:     }
  4351     0189  29A1               	goto	l146
  4352     018A                     l1706:
  4353     018A  3003               	movlw	3
  4354     018B  0623               	xorwf	num_to_string@len,w
  4355     018C  1D03               	btfss	3,2
  4356     018D  298F               	goto	u1191
  4357     018E  2990               	goto	u1190
  4358     018F                     u1191:
  4359     018F  29A1               	goto	l146
  4360     0190                     u1190:
  4361     0190                     l1708:
  4362                           
  4363                           ;master.c: 283:         dig8[2] = unidades + '0';
  4364     0190  0822               	movf	num_to_string@dig8,w
  4365     0191  3E02               	addlw	2
  4366     0192  0084               	movwf	4
  4367     0193  082E               	movf	num_to_string@unidades,w
  4368     0194  3E30               	addlw	48
  4369     0195  1383               	bcf	3,7	;select IRP bank0
  4370     0196  0080               	movwf	0
  4371                           
  4372                           ;master.c: 284:         dig8[1] = decenas + '0';
  4373     0197  0A22               	incf	num_to_string@dig8,w
  4374     0198  0084               	movwf	4
  4375     0199  082C               	movf	num_to_string@decenas,w
  4376     019A  3E30               	addlw	48
  4377     019B  0080               	movwf	0
  4378                           
  4379                           ;master.c: 285:         dig8[0] = centenas + '0';
  4380     019C  0822               	movf	num_to_string@dig8,w
  4381     019D  0084               	movwf	4
  4382     019E  0826               	movf	num_to_string@centenas,w
  4383     019F  3E30               	addlw	48
  4384     01A0  0080               	movwf	0
  4385     01A1                     l146:
  4386     01A1  0008               	return
  4387     01A2                     __end_of_num_to_string:
  4388                           
  4389                           	psect	text25
  4390     0792                     __ptext25:	
  4391 ;; *************** function ___lwmod *****************
  4392 ;; Defined at:
  4393 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  4394 ;; Parameters:    Size  Location     Type
  4395 ;;  divisor         2    2[COMMON] unsigned int 
  4396 ;;  dividend        2    4[COMMON] unsigned int 
  4397 ;; Auto vars:     Size  Location     Type
  4398 ;;  counter         1    6[COMMON] unsigned char 
  4399 ;; Return value:  Size  Location     Type
  4400 ;;                  2    2[COMMON] unsigned int 
  4401 ;; Registers used:
  4402 ;;		wreg, status,2, status,0, btemp+1
  4403 ;; Tracked objects:
  4404 ;;		On entry : 0/0
  4405 ;;		On exit  : 0/0
  4406 ;;		Unchanged: 0/0
  4407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4408 ;;      Params:         4       0       0       0       0
  4409 ;;      Locals:         1       0       0       0       0
  4410 ;;      Temps:          0       0       0       0       0
  4411 ;;      Totals:         5       0       0       0       0
  4412 ;;Total ram usage:        5 bytes
  4413 ;; Hardware stack levels used: 1
  4414 ;; Hardware stack levels required when called: 2
  4415 ;; This function calls:
  4416 ;;		Nothing
  4417 ;; This function is called by:
  4418 ;;		_num_to_string
  4419 ;; This function uses a non-reentrant model
  4420 ;;
  4421                           
  4422     0792                     ___lwmod:	
  4423                           ;psect for function ___lwmod
  4424                           
  4425     0792                     l1578:	
  4426                           ;incstack = 0
  4427                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  4428                           
  4429     0792  0872               	movf	___lwmod@divisor,w
  4430     0793  0473               	iorwf	___lwmod@divisor+1,w
  4431     0794  1903               	btfsc	3,2
  4432     0795  2F97               	goto	u1041
  4433     0796  2F98               	goto	u1040
  4434     0797                     u1041:
  4435     0797  2FC7               	goto	l1596
  4436     0798                     u1040:
  4437     0798                     l1580:
  4438     0798  01F6               	clrf	___lwmod@counter
  4439     0799  0AF6               	incf	___lwmod@counter,f
  4440     079A  2FA6               	goto	l1586
  4441     079B                     l1582:
  4442     079B  3001               	movlw	1
  4443     079C                     u1055:
  4444     079C  1003               	clrc
  4445     079D  0DF2               	rlf	___lwmod@divisor,f
  4446     079E  0DF3               	rlf	___lwmod@divisor+1,f
  4447     079F  3EFF               	addlw	-1
  4448     07A0  1D03               	skipz
  4449     07A1  2F9C               	goto	u1055
  4450     07A2                     l1584:
  4451     07A2  3001               	movlw	1
  4452     07A3  00FF               	movwf	btemp+1
  4453     07A4  087F               	movf	btemp+1,w
  4454     07A5  07F6               	addwf	___lwmod@counter,f
  4455     07A6                     l1586:
  4456     07A6  1FF3               	btfss	___lwmod@divisor+1,7
  4457     07A7  2FA9               	goto	u1061
  4458     07A8  2FAA               	goto	u1060
  4459     07A9                     u1061:
  4460     07A9  2F9B               	goto	l1582
  4461     07AA                     u1060:
  4462     07AA                     l1588:
  4463     07AA  0873               	movf	___lwmod@divisor+1,w
  4464     07AB  0275               	subwf	___lwmod@dividend+1,w
  4465     07AC  1D03               	skipz
  4466     07AD  2FB0               	goto	u1075
  4467     07AE  0872               	movf	___lwmod@divisor,w
  4468     07AF  0274               	subwf	___lwmod@dividend,w
  4469     07B0                     u1075:
  4470     07B0  1C03               	skipc
  4471     07B1  2FB3               	goto	u1071
  4472     07B2  2FB4               	goto	u1070
  4473     07B3                     u1071:
  4474     07B3  2FBA               	goto	l1592
  4475     07B4                     u1070:
  4476     07B4                     l1590:
  4477     07B4  0872               	movf	___lwmod@divisor,w
  4478     07B5  02F4               	subwf	___lwmod@dividend,f
  4479     07B6  0873               	movf	___lwmod@divisor+1,w
  4480     07B7  1C03               	skipc
  4481     07B8  03F5               	decf	___lwmod@dividend+1,f
  4482     07B9  02F5               	subwf	___lwmod@dividend+1,f
  4483     07BA                     l1592:
  4484     07BA  3001               	movlw	1
  4485     07BB                     u1085:
  4486     07BB  1003               	clrc
  4487     07BC  0CF3               	rrf	___lwmod@divisor+1,f
  4488     07BD  0CF2               	rrf	___lwmod@divisor,f
  4489     07BE  3EFF               	addlw	-1
  4490     07BF  1D03               	skipz
  4491     07C0  2FBB               	goto	u1085
  4492     07C1                     l1594:
  4493     07C1  3001               	movlw	1
  4494     07C2  02F6               	subwf	___lwmod@counter,f
  4495     07C3  1D03               	btfss	3,2
  4496     07C4  2FC6               	goto	u1091
  4497     07C5  2FC7               	goto	u1090
  4498     07C6                     u1091:
  4499     07C6  2FAA               	goto	l1588
  4500     07C7                     u1090:
  4501     07C7                     l1596:
  4502     07C7  0875               	movf	___lwmod@dividend+1,w
  4503     07C8  00F3               	movwf	?___lwmod+1
  4504     07C9  0874               	movf	___lwmod@dividend,w
  4505     07CA  00F2               	movwf	?___lwmod
  4506     07CB                     l678:
  4507     07CB  0008               	return
  4508     07CC                     __end_of___lwmod:
  4509                           
  4510                           	psect	text26
  4511     074E                     __ptext26:	
  4512 ;; *************** function ___lwdiv *****************
  4513 ;; Defined at:
  4514 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  4515 ;; Parameters:    Size  Location     Type
  4516 ;;  divisor         2    2[COMMON] unsigned int 
  4517 ;;  dividend        2    4[COMMON] unsigned int 
  4518 ;; Auto vars:     Size  Location     Type
  4519 ;;  quotient        2    6[COMMON] unsigned int 
  4520 ;;  counter         1    8[COMMON] unsigned char 
  4521 ;; Return value:  Size  Location     Type
  4522 ;;                  2    2[COMMON] unsigned int 
  4523 ;; Registers used:
  4524 ;;		wreg, status,2, status,0, btemp+1
  4525 ;; Tracked objects:
  4526 ;;		On entry : 0/0
  4527 ;;		On exit  : 0/0
  4528 ;;		Unchanged: 0/0
  4529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4530 ;;      Params:         4       0       0       0       0
  4531 ;;      Locals:         3       0       0       0       0
  4532 ;;      Temps:          0       0       0       0       0
  4533 ;;      Totals:         7       0       0       0       0
  4534 ;;Total ram usage:        7 bytes
  4535 ;; Hardware stack levels used: 1
  4536 ;; Hardware stack levels required when called: 2
  4537 ;; This function calls:
  4538 ;;		Nothing
  4539 ;; This function is called by:
  4540 ;;		_num_to_string
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544     074E                     ___lwdiv:	
  4545                           ;psect for function ___lwdiv
  4546                           
  4547     074E                     l1552:	
  4548                           ;incstack = 0
  4549                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  4550                           
  4551     074E  01F6               	clrf	___lwdiv@quotient
  4552     074F  01F7               	clrf	___lwdiv@quotient+1
  4553     0750                     l1554:
  4554     0750  0872               	movf	___lwdiv@divisor,w
  4555     0751  0473               	iorwf	___lwdiv@divisor+1,w
  4556     0752  1903               	btfsc	3,2
  4557     0753  2F55               	goto	u971
  4558     0754  2F56               	goto	u970
  4559     0755                     u971:
  4560     0755  2F8D               	goto	l1574
  4561     0756                     u970:
  4562     0756                     l1556:
  4563     0756  01F8               	clrf	___lwdiv@counter
  4564     0757  0AF8               	incf	___lwdiv@counter,f
  4565     0758  2F64               	goto	l1562
  4566     0759                     l1558:
  4567     0759  3001               	movlw	1
  4568     075A                     u985:
  4569     075A  1003               	clrc
  4570     075B  0DF2               	rlf	___lwdiv@divisor,f
  4571     075C  0DF3               	rlf	___lwdiv@divisor+1,f
  4572     075D  3EFF               	addlw	-1
  4573     075E  1D03               	skipz
  4574     075F  2F5A               	goto	u985
  4575     0760                     l1560:
  4576     0760  3001               	movlw	1
  4577     0761  00FF               	movwf	btemp+1
  4578     0762  087F               	movf	btemp+1,w
  4579     0763  07F8               	addwf	___lwdiv@counter,f
  4580     0764                     l1562:
  4581     0764  1FF3               	btfss	___lwdiv@divisor+1,7
  4582     0765  2F67               	goto	u991
  4583     0766  2F68               	goto	u990
  4584     0767                     u991:
  4585     0767  2F59               	goto	l1558
  4586     0768                     u990:
  4587     0768                     l1564:
  4588     0768  3001               	movlw	1
  4589     0769                     u1005:
  4590     0769  1003               	clrc
  4591     076A  0DF6               	rlf	___lwdiv@quotient,f
  4592     076B  0DF7               	rlf	___lwdiv@quotient+1,f
  4593     076C  3EFF               	addlw	-1
  4594     076D  1D03               	skipz
  4595     076E  2F69               	goto	u1005
  4596     076F  0873               	movf	___lwdiv@divisor+1,w
  4597     0770  0275               	subwf	___lwdiv@dividend+1,w
  4598     0771  1D03               	skipz
  4599     0772  2F75               	goto	u1015
  4600     0773  0872               	movf	___lwdiv@divisor,w
  4601     0774  0274               	subwf	___lwdiv@dividend,w
  4602     0775                     u1015:
  4603     0775  1C03               	skipc
  4604     0776  2F78               	goto	u1011
  4605     0777  2F79               	goto	u1010
  4606     0778                     u1011:
  4607     0778  2F80               	goto	l1570
  4608     0779                     u1010:
  4609     0779                     l1566:
  4610     0779  0872               	movf	___lwdiv@divisor,w
  4611     077A  02F4               	subwf	___lwdiv@dividend,f
  4612     077B  0873               	movf	___lwdiv@divisor+1,w
  4613     077C  1C03               	skipc
  4614     077D  03F5               	decf	___lwdiv@dividend+1,f
  4615     077E  02F5               	subwf	___lwdiv@dividend+1,f
  4616     077F                     l1568:
  4617     077F  1476               	bsf	___lwdiv@quotient,0
  4618     0780                     l1570:
  4619     0780  3001               	movlw	1
  4620     0781                     u1025:
  4621     0781  1003               	clrc
  4622     0782  0CF3               	rrf	___lwdiv@divisor+1,f
  4623     0783  0CF2               	rrf	___lwdiv@divisor,f
  4624     0784  3EFF               	addlw	-1
  4625     0785  1D03               	skipz
  4626     0786  2F81               	goto	u1025
  4627     0787                     l1572:
  4628     0787  3001               	movlw	1
  4629     0788  02F8               	subwf	___lwdiv@counter,f
  4630     0789  1D03               	btfss	3,2
  4631     078A  2F8C               	goto	u1031
  4632     078B  2F8D               	goto	u1030
  4633     078C                     u1031:
  4634     078C  2F68               	goto	l1564
  4635     078D                     u1030:
  4636     078D                     l1574:
  4637     078D  0877               	movf	___lwdiv@quotient+1,w
  4638     078E  00F3               	movwf	?___lwdiv+1
  4639     078F  0876               	movf	___lwdiv@quotient,w
  4640     0790  00F2               	movwf	?___lwdiv
  4641     0791                     l668:
  4642     0791  0008               	return
  4643     0792                     __end_of___lwdiv:
  4644                           
  4645                           	psect	text27
  4646     0708                     __ptext27:	
  4647 ;; *************** function _Lcd_Write_String *****************
  4648 ;; Defined at:
  4649 ;;		line 98 in file "LCD4b.c"
  4650 ;; Parameters:    Size  Location     Type
  4651 ;;  a               2    7[COMMON] PTR unsigned char 
  4652 ;;		 -> STR_7(6), STR_6(4), STR_5(3), STR_4(4), 
  4653 ;;		 -> STR_3(3), STR_2(3), STR_1(3), S_gas(4), 
  4654 ;;		 -> S_hum(3), S_temp(4), 
  4655 ;; Auto vars:     Size  Location     Type
  4656 ;;  i               2    3[BANK0 ] int 
  4657 ;; Return value:  Size  Location     Type
  4658 ;;                  1    wreg      void 
  4659 ;; Registers used:
  4660 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4661 ;; Tracked objects:
  4662 ;;		On entry : 0/0
  4663 ;;		On exit  : 0/0
  4664 ;;		Unchanged: 0/0
  4665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4666 ;;      Params:         2       0       0       0       0
  4667 ;;      Locals:         0       2       0       0       0
  4668 ;;      Temps:          0       3       0       0       0
  4669 ;;      Totals:         2       5       0       0       0
  4670 ;;Total ram usage:        7 bytes
  4671 ;; Hardware stack levels used: 1
  4672 ;; Hardware stack levels required when called: 4
  4673 ;; This function calls:
  4674 ;;		_Lcd_Write_Char
  4675 ;; This function is called by:
  4676 ;;		_LDC_output
  4677 ;; This function uses a non-reentrant model
  4678 ;;
  4679                           
  4680     0708                     _Lcd_Write_String:	
  4681                           ;psect for function _Lcd_Write_String
  4682                           
  4683     0708                     l2124:	
  4684                           ;incstack = 0
  4685                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4686                           
  4687                           
  4688                           ;LCD4b.c: 99:     int i;;LCD4b.c: 100:     for (i = 0; a[i] != '\0'; i++)
  4689     0708  1283               	bcf	3,5	;RP0=0, select bank0
  4690     0709  1303               	bcf	3,6	;RP1=0, select bank0
  4691     070A  01A3               	clrf	Lcd_Write_String@i
  4692     070B  01A4               	clrf	Lcd_Write_String@i+1
  4693     070C  2F31               	goto	l2130
  4694     070D                     l2126:
  4695                           
  4696                           ;LCD4b.c: 101:         Lcd_Write_Char(a[i]);
  4697     070D  0823               	movf	Lcd_Write_String@i,w
  4698     070E  0777               	addwf	Lcd_Write_String@a,w
  4699     070F  00A1               	movwf	??_Lcd_Write_String+1
  4700     0710  0878               	movf	Lcd_Write_String@a+1,w
  4701     0711  00A0               	movwf	??_Lcd_Write_String
  4702     0712  1803               	skipnc
  4703     0713  0AA0               	incf	??_Lcd_Write_String,f
  4704     0714  1FA3               	btfss	Lcd_Write_String@i,7
  4705     0715  2F17               	goto	u1690
  4706     0716  03A0               	decf	??_Lcd_Write_String,f
  4707     0717                     u1690:
  4708     0717  1283               	bcf	3,5	;RP0=0, select bank0
  4709     0718  1303               	bcf	3,6	;RP1=0, select bank0
  4710     0719  0820               	movf	??_Lcd_Write_String,w
  4711     071A  00A2               	movwf	??_Lcd_Write_String+2
  4712     071B  0822               	movf	??_Lcd_Write_String+2,w
  4713     071C  00FF               	movwf	btemp+1
  4714     071D  0821               	movf	??_Lcd_Write_String+1,w
  4715     071E  0084               	movwf	4
  4716     071F  120A  158A  2000  120A  118A  	fcall	stringtab
  4717     0724  120A  158A  275B  120A  118A  	fcall	_Lcd_Write_Char
  4718     0729                     l2128:
  4719     0729  3001               	movlw	1
  4720     072A  1283               	bcf	3,5	;RP0=0, select bank0
  4721     072B  1303               	bcf	3,6	;RP1=0, select bank0
  4722     072C  07A3               	addwf	Lcd_Write_String@i,f
  4723     072D  1803               	skipnc
  4724     072E  0AA4               	incf	Lcd_Write_String@i+1,f
  4725     072F  3000               	movlw	0
  4726     0730  07A4               	addwf	Lcd_Write_String@i+1,f
  4727     0731                     l2130:
  4728     0731  0823               	movf	Lcd_Write_String@i,w
  4729     0732  0777               	addwf	Lcd_Write_String@a,w
  4730     0733  00A1               	movwf	??_Lcd_Write_String+1
  4731     0734  0878               	movf	Lcd_Write_String@a+1,w
  4732     0735  00A0               	movwf	??_Lcd_Write_String
  4733     0736  1803               	skipnc
  4734     0737  0AA0               	incf	??_Lcd_Write_String,f
  4735     0738  1FA3               	btfss	Lcd_Write_String@i,7
  4736     0739  2F3B               	goto	u1700
  4737     073A  03A0               	decf	??_Lcd_Write_String,f
  4738     073B                     u1700:
  4739     073B  1283               	bcf	3,5	;RP0=0, select bank0
  4740     073C  1303               	bcf	3,6	;RP1=0, select bank0
  4741     073D  0820               	movf	??_Lcd_Write_String,w
  4742     073E  00A2               	movwf	??_Lcd_Write_String+2
  4743     073F  0822               	movf	??_Lcd_Write_String+2,w
  4744     0740  00FF               	movwf	btemp+1
  4745     0741  0821               	movf	??_Lcd_Write_String+1,w
  4746     0742  0084               	movwf	4
  4747     0743  120A  158A  2000  120A  118A  	fcall	stringtab
  4748     0748  3A00               	xorlw	0
  4749     0749  1D03               	skipz
  4750     074A  2F4C               	goto	u1711
  4751     074B  2F4D               	goto	u1710
  4752     074C                     u1711:
  4753     074C  2F0D               	goto	l2126
  4754     074D                     u1710:
  4755     074D                     l253:
  4756     074D  0008               	return
  4757     074E                     __end_of_Lcd_Write_String:
  4758                           
  4759                           	psect	text28
  4760     0F5B                     __ptext28:	
  4761 ;; *************** function _Lcd_Write_Char *****************
  4762 ;; Defined at:
  4763 ;;		line 83 in file "LCD4b.c"
  4764 ;; Parameters:    Size  Location     Type
  4765 ;;  a               1    wreg     unsigned char 
  4766 ;; Auto vars:     Size  Location     Type
  4767 ;;  a               1    6[COMMON] unsigned char 
  4768 ;;  y               1    5[COMMON] unsigned char 
  4769 ;;  temp            1    4[COMMON] unsigned char 
  4770 ;; Return value:  Size  Location     Type
  4771 ;;                  1    wreg      void 
  4772 ;; Registers used:
  4773 ;;		wreg, status,2, status,0, pclath, cstack
  4774 ;; Tracked objects:
  4775 ;;		On entry : 0/0
  4776 ;;		On exit  : 0/0
  4777 ;;		Unchanged: 0/0
  4778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4779 ;;      Params:         0       0       0       0       0
  4780 ;;      Locals:         3       0       0       0       0
  4781 ;;      Temps:          1       0       0       0       0
  4782 ;;      Totals:         4       0       0       0       0
  4783 ;;Total ram usage:        4 bytes
  4784 ;; Hardware stack levels used: 1
  4785 ;; Hardware stack levels required when called: 3
  4786 ;; This function calls:
  4787 ;;		_Lcd_Port
  4788 ;; This function is called by:
  4789 ;;		_LDC_output
  4790 ;;		_Lcd_Write_String
  4791 ;; This function uses a non-reentrant model
  4792 ;;
  4793                           
  4794     0F5B                     _Lcd_Write_Char:	
  4795                           ;psect for function _Lcd_Write_Char
  4796                           
  4797                           
  4798                           ;incstack = 0
  4799                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4800                           ;Lcd_Write_Char@a stored from wreg
  4801     0F5B  00F6               	movwf	Lcd_Write_Char@a
  4802     0F5C                     l1928:
  4803                           
  4804                           ;LCD4b.c: 84:     char temp, y;;LCD4b.c: 85:     temp = a & 0x0F;
  4805     0F5C  0876               	movf	Lcd_Write_Char@a,w
  4806     0F5D  390F               	andlw	15
  4807     0F5E  00F4               	movwf	Lcd_Write_Char@temp
  4808                           
  4809                           ;LCD4b.c: 86:     y = a & 0xF0;
  4810     0F5F  0876               	movf	Lcd_Write_Char@a,w
  4811     0F60  39F0               	andlw	240
  4812     0F61  00F5               	movwf	Lcd_Write_Char@y
  4813     0F62                     l1930:
  4814                           
  4815                           ;LCD4b.c: 87:     PORTDbits.RD2 = 1;
  4816     0F62  1283               	bcf	3,5	;RP0=0, select bank0
  4817     0F63  1303               	bcf	3,6	;RP1=0, select bank0
  4818     0F64  1508               	bsf	8,2	;volatile
  4819     0F65                     l1932:
  4820                           
  4821                           ;LCD4b.c: 88:     Lcd_Port(y >> 4);
  4822     0F65  0875               	movf	Lcd_Write_Char@y,w
  4823     0F66  00F3               	movwf	??_Lcd_Write_Char
  4824     0F67  3004               	movlw	4
  4825     0F68                     u1365:
  4826     0F68  1003               	clrc
  4827     0F69  0CF3               	rrf	??_Lcd_Write_Char,f
  4828     0F6A  3EFF               	addlw	-1
  4829     0F6B  1D03               	skipz
  4830     0F6C  2F68               	goto	u1365
  4831     0F6D  0873               	movf	??_Lcd_Write_Char,w
  4832     0F6E  120A  158A  2739  120A  158A  	fcall	_Lcd_Port
  4833     0F73                     l1934:
  4834                           
  4835                           ;LCD4b.c: 89:     RD3 = 1;
  4836     0F73  1283               	bcf	3,5	;RP0=0, select bank0
  4837     0F74  1303               	bcf	3,6	;RP1=0, select bank0
  4838     0F75  1588               	bsf	8,3	;volatile
  4839     0F76                     l1936:
  4840                           
  4841                           ;LCD4b.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4842     0F76  301A               	movlw	26
  4843     0F77  00F3               	movwf	??_Lcd_Write_Char
  4844     0F78                     u1877:
  4845     0F78  0BF3               	decfsz	??_Lcd_Write_Char,f
  4846     0F79  2F78               	goto	u1877
  4847     0F7A  0000               	nop
  4848     0F7B                     l1938:
  4849                           
  4850                           ;LCD4b.c: 91:     RD3 = 0;
  4851     0F7B  1283               	bcf	3,5	;RP0=0, select bank0
  4852     0F7C  1303               	bcf	3,6	;RP1=0, select bank0
  4853     0F7D  1188               	bcf	8,3	;volatile
  4854     0F7E                     l1940:
  4855                           
  4856                           ;LCD4b.c: 92:     Lcd_Port(temp);
  4857     0F7E  0874               	movf	Lcd_Write_Char@temp,w
  4858     0F7F  120A  158A  2739  120A  158A  	fcall	_Lcd_Port
  4859     0F84                     l1942:
  4860                           
  4861                           ;LCD4b.c: 93:     RD3 = 1;
  4862     0F84  1283               	bcf	3,5	;RP0=0, select bank0
  4863     0F85  1303               	bcf	3,6	;RP1=0, select bank0
  4864     0F86  1588               	bsf	8,3	;volatile
  4865     0F87                     l1944:
  4866                           
  4867                           ;LCD4b.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4868     0F87  301A               	movlw	26
  4869     0F88  00F3               	movwf	??_Lcd_Write_Char
  4870     0F89                     u1887:
  4871     0F89  0BF3               	decfsz	??_Lcd_Write_Char,f
  4872     0F8A  2F89               	goto	u1887
  4873     0F8B  0000               	nop
  4874     0F8C                     l1946:
  4875                           
  4876                           ;LCD4b.c: 95:     RD3 = 0;
  4877     0F8C  1283               	bcf	3,5	;RP0=0, select bank0
  4878     0F8D  1303               	bcf	3,6	;RP1=0, select bank0
  4879     0F8E  1188               	bcf	8,3	;volatile
  4880     0F8F                     l247:
  4881     0F8F  0008               	return
  4882     0F90                     __end_of_Lcd_Write_Char:
  4883                           
  4884                           	psect	text29
  4885     05E4                     __ptext29:	
  4886 ;; *************** function _Lcd_Set_Cursor *****************
  4887 ;; Defined at:
  4888 ;;		line 48 in file "LCD4b.c"
  4889 ;; Parameters:    Size  Location     Type
  4890 ;;  a               1    wreg     unsigned char 
  4891 ;;  b               1    6[COMMON] unsigned char 
  4892 ;; Auto vars:     Size  Location     Type
  4893 ;;  a               1    0[BANK0 ] unsigned char 
  4894 ;;  temp            1    3[BANK0 ] unsigned char 
  4895 ;;  y               1    2[BANK0 ] unsigned char 
  4896 ;;  z               1    1[BANK0 ] unsigned char 
  4897 ;; Return value:  Size  Location     Type
  4898 ;;                  1    wreg      void 
  4899 ;; Registers used:
  4900 ;;		wreg, status,2, status,0, pclath, cstack
  4901 ;; Tracked objects:
  4902 ;;		On entry : 0/0
  4903 ;;		On exit  : 0/0
  4904 ;;		Unchanged: 0/0
  4905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4906 ;;      Params:         1       0       0       0       0
  4907 ;;      Locals:         0       4       0       0       0
  4908 ;;      Temps:          1       0       0       0       0
  4909 ;;      Totals:         2       4       0       0       0
  4910 ;;Total ram usage:        6 bytes
  4911 ;; Hardware stack levels used: 1
  4912 ;; Hardware stack levels required when called: 4
  4913 ;; This function calls:
  4914 ;;		_Lcd_Cmd
  4915 ;; This function is called by:
  4916 ;;		_LDC_output
  4917 ;; This function uses a non-reentrant model
  4918 ;;
  4919                           
  4920     05E4                     _Lcd_Set_Cursor:	
  4921                           ;psect for function _Lcd_Set_Cursor
  4922                           
  4923                           
  4924                           ;incstack = 0
  4925                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4926                           ;Lcd_Set_Cursor@a stored from wreg
  4927     05E4  1283               	bcf	3,5	;RP0=0, select bank0
  4928     05E5  1303               	bcf	3,6	;RP1=0, select bank0
  4929     05E6  00A0               	movwf	Lcd_Set_Cursor@a
  4930     05E7                     l2104:
  4931                           
  4932                           ;LCD4b.c: 49:     char temp, z, y;;LCD4b.c: 50:     if (a == 1) {
  4933     05E7  0320               	decf	Lcd_Set_Cursor@a,w
  4934     05E8  1D03               	btfss	3,2
  4935     05E9  2DEB               	goto	u1651
  4936     05EA  2DEC               	goto	u1650
  4937     05EB                     u1651:
  4938     05EB  2E0B               	goto	l2114
  4939     05EC                     u1650:
  4940     05EC                     l2106:
  4941                           
  4942                           ;LCD4b.c: 51:         temp = 0x80 + b - 1;
  4943     05EC  0876               	movf	Lcd_Set_Cursor@b,w
  4944     05ED  3E7F               	addlw	127
  4945     05EE  00A3               	movwf	Lcd_Set_Cursor@temp
  4946                           
  4947                           ;LCD4b.c: 52:         z = temp >> 4;
  4948     05EF  0823               	movf	Lcd_Set_Cursor@temp,w
  4949     05F0  00F7               	movwf	??_Lcd_Set_Cursor
  4950     05F1  3004               	movlw	4
  4951     05F2                     u1665:
  4952     05F2  1003               	clrc
  4953     05F3  0CF7               	rrf	??_Lcd_Set_Cursor,f
  4954     05F4  3EFF               	addlw	-1
  4955     05F5  1D03               	skipz
  4956     05F6  2DF2               	goto	u1665
  4957     05F7  0877               	movf	??_Lcd_Set_Cursor,w
  4958     05F8  00A1               	movwf	Lcd_Set_Cursor@z
  4959     05F9                     l2108:
  4960                           
  4961                           ;LCD4b.c: 53:         y = temp & 0x0F;
  4962     05F9  0823               	movf	Lcd_Set_Cursor@temp,w
  4963     05FA  390F               	andlw	15
  4964     05FB  00A2               	movwf	Lcd_Set_Cursor@y
  4965     05FC                     l2110:
  4966                           
  4967                           ;LCD4b.c: 54:         Lcd_Cmd(z);
  4968     05FC  0821               	movf	Lcd_Set_Cursor@z,w
  4969     05FD  120A  158A  26FE  120A  118A  	fcall	_Lcd_Cmd
  4970     0602                     l2112:
  4971                           
  4972                           ;LCD4b.c: 55:         Lcd_Cmd(y);
  4973     0602  1283               	bcf	3,5	;RP0=0, select bank0
  4974     0603  1303               	bcf	3,6	;RP1=0, select bank0
  4975     0604  0822               	movf	Lcd_Set_Cursor@y,w
  4976     0605  120A  158A  26FE  120A  118A  	fcall	_Lcd_Cmd
  4977                           
  4978                           ;LCD4b.c: 56:     } else if (a == 2) {
  4979     060A  2E2F               	goto	l241
  4980     060B                     l2114:
  4981     060B  3002               	movlw	2
  4982     060C  0620               	xorwf	Lcd_Set_Cursor@a,w
  4983     060D  1D03               	btfss	3,2
  4984     060E  2E10               	goto	u1671
  4985     060F  2E11               	goto	u1670
  4986     0610                     u1671:
  4987     0610  2E2F               	goto	l241
  4988     0611                     u1670:
  4989     0611                     l2116:
  4990                           
  4991                           ;LCD4b.c: 57:         temp = 0xC0 + b - 1;
  4992     0611  0876               	movf	Lcd_Set_Cursor@b,w
  4993     0612  3EBF               	addlw	191
  4994     0613  00A3               	movwf	Lcd_Set_Cursor@temp
  4995                           
  4996                           ;LCD4b.c: 58:         z = temp >> 4;
  4997     0614  0823               	movf	Lcd_Set_Cursor@temp,w
  4998     0615  00F7               	movwf	??_Lcd_Set_Cursor
  4999     0616  3004               	movlw	4
  5000     0617                     u1685:
  5001     0617  1003               	clrc
  5002     0618  0CF7               	rrf	??_Lcd_Set_Cursor,f
  5003     0619  3EFF               	addlw	-1
  5004     061A  1D03               	skipz
  5005     061B  2E17               	goto	u1685
  5006     061C  0877               	movf	??_Lcd_Set_Cursor,w
  5007     061D  00A1               	movwf	Lcd_Set_Cursor@z
  5008     061E                     l2118:
  5009                           
  5010                           ;LCD4b.c: 59:         y = temp & 0x0F;
  5011     061E  0823               	movf	Lcd_Set_Cursor@temp,w
  5012     061F  390F               	andlw	15
  5013     0620  00A2               	movwf	Lcd_Set_Cursor@y
  5014     0621                     l2120:
  5015                           
  5016                           ;LCD4b.c: 60:         Lcd_Cmd(z);
  5017     0621  0821               	movf	Lcd_Set_Cursor@z,w
  5018     0622  120A  158A  26FE  120A  118A  	fcall	_Lcd_Cmd
  5019     0627                     l2122:
  5020                           
  5021                           ;LCD4b.c: 61:         Lcd_Cmd(y);
  5022     0627  1283               	bcf	3,5	;RP0=0, select bank0
  5023     0628  1303               	bcf	3,6	;RP1=0, select bank0
  5024     0629  0822               	movf	Lcd_Set_Cursor@y,w
  5025     062A  120A  158A  26FE  120A  118A  	fcall	_Lcd_Cmd
  5026     062F                     l241:
  5027     062F  0008               	return
  5028     0630                     __end_of_Lcd_Set_Cursor:
  5029                           
  5030                           	psect	text30
  5031     0ECE                     __ptext30:	
  5032 ;; *************** function _Lcd_Clear *****************
  5033 ;; Defined at:
  5034 ;;		line 43 in file "LCD4b.c"
  5035 ;; Parameters:    Size  Location     Type
  5036 ;;		None
  5037 ;; Auto vars:     Size  Location     Type
  5038 ;;		None
  5039 ;; Return value:  Size  Location     Type
  5040 ;;                  1    wreg      void 
  5041 ;; Registers used:
  5042 ;;		wreg, status,2, status,0, pclath, cstack
  5043 ;; Tracked objects:
  5044 ;;		On entry : 0/0
  5045 ;;		On exit  : 0/0
  5046 ;;		Unchanged: 0/0
  5047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5048 ;;      Params:         0       0       0       0       0
  5049 ;;      Locals:         0       0       0       0       0
  5050 ;;      Temps:          0       0       0       0       0
  5051 ;;      Totals:         0       0       0       0       0
  5052 ;;Total ram usage:        0 bytes
  5053 ;; Hardware stack levels used: 1
  5054 ;; Hardware stack levels required when called: 4
  5055 ;; This function calls:
  5056 ;;		_Lcd_Cmd
  5057 ;; This function is called by:
  5058 ;;		_LDC_output
  5059 ;; This function uses a non-reentrant model
  5060 ;;
  5061                           
  5062     0ECE                     _Lcd_Clear:	
  5063                           ;psect for function _Lcd_Clear
  5064                           
  5065     0ECE                     l2102:	
  5066                           ;incstack = 0
  5067                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  5068                           
  5069                           
  5070                           ;LCD4b.c: 44:     Lcd_Cmd(0);
  5071     0ECE  3000               	movlw	0
  5072     0ECF  120A  158A  26FE  120A  158A  	fcall	_Lcd_Cmd
  5073                           
  5074                           ;LCD4b.c: 45:     Lcd_Cmd(1);
  5075     0ED4  3001               	movlw	1
  5076     0ED5  120A  158A  26FE  120A  158A  	fcall	_Lcd_Cmd
  5077     0EDA                     l235:
  5078     0EDA  0008               	return
  5079     0EDB                     __end_of_Lcd_Clear:
  5080                           
  5081                           	psect	text31
  5082     0EFE                     __ptext31:	
  5083 ;; *************** function _Lcd_Cmd *****************
  5084 ;; Defined at:
  5085 ;;		line 35 in file "LCD4b.c"
  5086 ;; Parameters:    Size  Location     Type
  5087 ;;  a               1    wreg     unsigned char 
  5088 ;; Auto vars:     Size  Location     Type
  5089 ;;  a               1    5[COMMON] unsigned char 
  5090 ;; Return value:  Size  Location     Type
  5091 ;;                  1    wreg      void 
  5092 ;; Registers used:
  5093 ;;		wreg, status,2, status,0, pclath, cstack
  5094 ;; Tracked objects:
  5095 ;;		On entry : 0/0
  5096 ;;		On exit  : 0/0
  5097 ;;		Unchanged: 0/0
  5098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5099 ;;      Params:         0       0       0       0       0
  5100 ;;      Locals:         1       0       0       0       0
  5101 ;;      Temps:          2       0       0       0       0
  5102 ;;      Totals:         3       0       0       0       0
  5103 ;;Total ram usage:        3 bytes
  5104 ;; Hardware stack levels used: 1
  5105 ;; Hardware stack levels required when called: 3
  5106 ;; This function calls:
  5107 ;;		_Lcd_Port
  5108 ;; This function is called by:
  5109 ;;		_Lcd_Clear
  5110 ;;		_Lcd_Set_Cursor
  5111 ;;		_Lcd_Init
  5112 ;;		_Lcd_Shift_Right
  5113 ;;		_Lcd_Shift_Left
  5114 ;; This function uses a non-reentrant model
  5115 ;;
  5116                           
  5117     0EFE                     _Lcd_Cmd:	
  5118                           ;psect for function _Lcd_Cmd
  5119                           
  5120                           
  5121                           ;incstack = 0
  5122                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  5123                           ;Lcd_Cmd@a stored from wreg
  5124     0EFE  00F5               	movwf	Lcd_Cmd@a
  5125     0EFF                     l1948:
  5126                           
  5127                           ;LCD4b.c: 36:     PORTDbits.RD2 = 0;
  5128     0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  5129     0F00  1303               	bcf	3,6	;RP1=0, select bank0
  5130     0F01  1108               	bcf	8,2	;volatile
  5131     0F02                     l1950:
  5132                           
  5133                           ;LCD4b.c: 37:     Lcd_Port(a);
  5134     0F02  0875               	movf	Lcd_Cmd@a,w
  5135     0F03  120A  158A  2739  120A  158A  	fcall	_Lcd_Port
  5136     0F08                     l1952:
  5137                           
  5138                           ;LCD4b.c: 38:     RD3 = 1;
  5139     0F08  1283               	bcf	3,5	;RP0=0, select bank0
  5140     0F09  1303               	bcf	3,6	;RP1=0, select bank0
  5141     0F0A  1588               	bsf	8,3	;volatile
  5142     0F0B                     l1954:
  5143                           
  5144                           ;LCD4b.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  5145     0F0B  300B               	movlw	11
  5146     0F0C  00F4               	movwf	??_Lcd_Cmd+1
  5147     0F0D  3062               	movlw	98
  5148     0F0E  00F3               	movwf	??_Lcd_Cmd
  5149     0F0F                     u1897:
  5150     0F0F  0BF3               	decfsz	??_Lcd_Cmd,f
  5151     0F10  2F0F               	goto	u1897
  5152     0F11  0BF4               	decfsz	??_Lcd_Cmd+1,f
  5153     0F12  2F0F               	goto	u1897
  5154     0F13  0000               	nop
  5155     0F14                     l1956:
  5156                           
  5157                           ;LCD4b.c: 40:     RD3 = 0;
  5158     0F14  1283               	bcf	3,5	;RP0=0, select bank0
  5159     0F15  1303               	bcf	3,6	;RP1=0, select bank0
  5160     0F16  1188               	bcf	8,3	;volatile
  5161     0F17                     l232:
  5162     0F17  0008               	return
  5163     0F18                     __end_of_Lcd_Cmd:
  5164                           
  5165                           	psect	text32
  5166     0F39                     __ptext32:	
  5167 ;; *************** function _Lcd_Port *****************
  5168 ;; Defined at:
  5169 ;;		line 13 in file "LCD4b.c"
  5170 ;; Parameters:    Size  Location     Type
  5171 ;;  a               1    wreg     unsigned char 
  5172 ;; Auto vars:     Size  Location     Type
  5173 ;;  a               1    2[COMMON] unsigned char 
  5174 ;; Return value:  Size  Location     Type
  5175 ;;                  1    wreg      void 
  5176 ;; Registers used:
  5177 ;;		wreg
  5178 ;; Tracked objects:
  5179 ;;		On entry : 0/0
  5180 ;;		On exit  : 0/0
  5181 ;;		Unchanged: 0/0
  5182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5183 ;;      Params:         0       0       0       0       0
  5184 ;;      Locals:         1       0       0       0       0
  5185 ;;      Temps:          0       0       0       0       0
  5186 ;;      Totals:         1       0       0       0       0
  5187 ;;Total ram usage:        1 bytes
  5188 ;; Hardware stack levels used: 1
  5189 ;; Hardware stack levels required when called: 2
  5190 ;; This function calls:
  5191 ;;		Nothing
  5192 ;; This function is called by:
  5193 ;;		_Lcd_Cmd
  5194 ;;		_Lcd_Init
  5195 ;;		_Lcd_Write_Char
  5196 ;; This function uses a non-reentrant model
  5197 ;;
  5198                           
  5199     0F39                     _Lcd_Port:	
  5200                           ;psect for function _Lcd_Port
  5201                           
  5202                           
  5203                           ;incstack = 0
  5204                           ; Regs used in _Lcd_Port: [wreg]
  5205                           ;Lcd_Port@a stored from wreg
  5206     0F39  00F2               	movwf	Lcd_Port@a
  5207     0F3A                     l1918:
  5208                           
  5209                           ;LCD4b.c: 14:     if (a & 1)
  5210     0F3A  1C72               	btfss	Lcd_Port@a,0
  5211     0F3B  2F3D               	goto	u1321
  5212     0F3C  2F3E               	goto	u1320
  5213     0F3D                     u1321:
  5214     0F3D  2F42               	goto	l221
  5215     0F3E                     u1320:
  5216     0F3E                     l1920:
  5217                           
  5218                           ;LCD4b.c: 15:         RD4 = 1;
  5219     0F3E  1283               	bcf	3,5	;RP0=0, select bank0
  5220     0F3F  1303               	bcf	3,6	;RP1=0, select bank0
  5221     0F40  1608               	bsf	8,4	;volatile
  5222     0F41  2F45               	goto	l222
  5223     0F42                     l221:	
  5224                           ;LCD4b.c: 16:     else
  5225                           
  5226                           
  5227                           ;LCD4b.c: 17:         RD4 = 0;
  5228     0F42  1283               	bcf	3,5	;RP0=0, select bank0
  5229     0F43  1303               	bcf	3,6	;RP1=0, select bank0
  5230     0F44  1208               	bcf	8,4	;volatile
  5231     0F45                     l222:
  5232                           
  5233                           ;LCD4b.c: 19:     if (a & 2)
  5234     0F45  1CF2               	btfss	Lcd_Port@a,1
  5235     0F46  2F48               	goto	u1331
  5236     0F47  2F49               	goto	u1330
  5237     0F48                     u1331:
  5238     0F48  2F4B               	goto	l223
  5239     0F49                     u1330:
  5240     0F49                     l1922:
  5241                           
  5242                           ;LCD4b.c: 20:         RD5 = 1;
  5243     0F49  1688               	bsf	8,5	;volatile
  5244     0F4A  2F4C               	goto	l224
  5245     0F4B                     l223:	
  5246                           ;LCD4b.c: 21:     else
  5247                           
  5248                           
  5249                           ;LCD4b.c: 22:         RD5 = 0;
  5250     0F4B  1288               	bcf	8,5	;volatile
  5251     0F4C                     l224:
  5252                           
  5253                           ;LCD4b.c: 24:     if (a & 4)
  5254     0F4C  1D72               	btfss	Lcd_Port@a,2
  5255     0F4D  2F4F               	goto	u1341
  5256     0F4E  2F50               	goto	u1340
  5257     0F4F                     u1341:
  5258     0F4F  2F52               	goto	l225
  5259     0F50                     u1340:
  5260     0F50                     l1924:
  5261                           
  5262                           ;LCD4b.c: 25:         RD6 = 1;
  5263     0F50  1708               	bsf	8,6	;volatile
  5264     0F51  2F53               	goto	l226
  5265     0F52                     l225:	
  5266                           ;LCD4b.c: 26:     else
  5267                           
  5268                           
  5269                           ;LCD4b.c: 27:         RD6 = 0;
  5270     0F52  1308               	bcf	8,6	;volatile
  5271     0F53                     l226:
  5272                           
  5273                           ;LCD4b.c: 29:     if (a & 8)
  5274     0F53  1DF2               	btfss	Lcd_Port@a,3
  5275     0F54  2F56               	goto	u1351
  5276     0F55  2F57               	goto	u1350
  5277     0F56                     u1351:
  5278     0F56  2F59               	goto	l227
  5279     0F57                     u1350:
  5280     0F57                     l1926:
  5281                           
  5282                           ;LCD4b.c: 30:         RD7 = 1;
  5283     0F57  1788               	bsf	8,7	;volatile
  5284     0F58  2F5A               	goto	l229
  5285     0F59                     l227:	
  5286                           ;LCD4b.c: 31:     else
  5287                           
  5288                           
  5289                           ;LCD4b.c: 32:         RD7 = 0;
  5290     0F59  1388               	bcf	8,7	;volatile
  5291     0F5A                     l229:
  5292     0F5A  0008               	return
  5293     0F5B                     __end_of_Lcd_Port:
  5294                           
  5295                           	psect	text33
  5296     0EE8                     __ptext33:	
  5297 ;; *************** function _isr *****************
  5298 ;; Defined at:
  5299 ;;		line 88 in file "master.c"
  5300 ;; Parameters:    Size  Location     Type
  5301 ;;		None
  5302 ;; Auto vars:     Size  Location     Type
  5303 ;;		None
  5304 ;; Return value:  Size  Location     Type
  5305 ;;                  1    wreg      void 
  5306 ;; Registers used:
  5307 ;;		wreg, pclath, cstack
  5308 ;; Tracked objects:
  5309 ;;		On entry : 0/0
  5310 ;;		On exit  : 0/0
  5311 ;;		Unchanged: 0/0
  5312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5313 ;;      Params:         0       0       0       0       0
  5314 ;;      Locals:         0       0       0       0       0
  5315 ;;      Temps:          2       0       0       0       0
  5316 ;;      Totals:         2       0       0       0       0
  5317 ;;Total ram usage:        2 bytes
  5318 ;; Hardware stack levels used: 1
  5319 ;; Hardware stack levels required when called: 1
  5320 ;; This function calls:
  5321 ;;		_UART_read_char
  5322 ;; This function is called by:
  5323 ;;		Interrupt level 1
  5324 ;; This function uses a non-reentrant model
  5325 ;;
  5326                           
  5327     0EE8                     _isr:	
  5328                           ;psect for function _isr
  5329                           
  5330     0EE8                     i1l1356:
  5331                           
  5332                           ;master.c: 89:     if(RCIF){
  5333     0EE8  1283               	bcf	3,5	;RP0=0, select bank0
  5334     0EE9  1303               	bcf	3,6	;RP1=0, select bank0
  5335     0EEA  1E8C               	btfss	12,5	;volatile
  5336     0EEB  2EED               	goto	u65_21
  5337     0EEC  2EEE               	goto	u65_20
  5338     0EED                     u65_21:
  5339     0EED  2EF7               	goto	i1l96
  5340     0EEE                     u65_20:
  5341     0EEE                     i1l1358:
  5342                           
  5343                           ;master.c: 90:         servoPos = UART_read_char();
  5344     0EEE  120A  118A  27FA  120A  158A  	fcall	_UART_read_char
  5345     0EF3  00FB               	movwf	_servoPos
  5346     0EF4                     i1l1360:
  5347                           
  5348                           ;master.c: 91:         RCIF = 0;
  5349     0EF4  1283               	bcf	3,5	;RP0=0, select bank0
  5350     0EF5  1303               	bcf	3,6	;RP1=0, select bank0
  5351     0EF6  128C               	bcf	12,5	;volatile
  5352     0EF7                     i1l96:
  5353     0EF7  0871               	movf	??_isr+1,w
  5354     0EF8  008A               	movwf	10
  5355     0EF9  0E70               	swapf	??_isr,w
  5356     0EFA  0083               	movwf	3
  5357     0EFB  0EFE               	swapf	btemp,f
  5358     0EFC  0E7E               	swapf	btemp,w
  5359     0EFD  0009               	retfie
  5360     0EFE                     __end_of_isr:
  5361                           
  5362                           	psect	intentry
  5363     0004                     __pintentry:	
  5364                           ;incstack = 0
  5365                           ; Regs used in _isr: [wreg+pclath+cstack]
  5366                           
  5367     0004                     interrupt_function:
  5368     007E                     saved_w	set	btemp
  5369     0004  00FE               	movwf	btemp
  5370     0005  0E03               	swapf	3,w
  5371     0006  00F0               	movwf	??_isr
  5372     0007  080A               	movf	10,w
  5373     0008  00F1               	movwf	??_isr+1
  5374     0009  120A  158A  2EE8   	ljmp	_isr
  5375                           
  5376                           	psect	text34
  5377     07FA                     __ptext34:	
  5378 ;; *************** function _UART_read_char *****************
  5379 ;; Defined at:
  5380 ;;		line 57 in file "UART.c"
  5381 ;; Parameters:    Size  Location     Type
  5382 ;;		None
  5383 ;; Auto vars:     Size  Location     Type
  5384 ;;		None
  5385 ;; Return value:  Size  Location     Type
  5386 ;;                  1    wreg      unsigned char 
  5387 ;; Registers used:
  5388 ;;		wreg
  5389 ;; Tracked objects:
  5390 ;;		On entry : 0/0
  5391 ;;		On exit  : 0/0
  5392 ;;		Unchanged: 0/0
  5393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5394 ;;      Params:         0       0       0       0       0
  5395 ;;      Locals:         0       0       0       0       0
  5396 ;;      Temps:          0       0       0       0       0
  5397 ;;      Totals:         0       0       0       0       0
  5398 ;;Total ram usage:        0 bytes
  5399 ;; Hardware stack levels used: 1
  5400 ;; This function calls:
  5401 ;;		Nothing
  5402 ;; This function is called by:
  5403 ;;		_isr
  5404 ;; This function uses a non-reentrant model
  5405 ;;
  5406                           
  5407     07FA                     _UART_read_char:	
  5408                           ;psect for function _UART_read_char
  5409                           
  5410     07FA                     i1l1226:	
  5411                           ;incstack = 0
  5412                           ; Regs used in _UART_read_char: [wreg]
  5413                           
  5414                           
  5415                           ;UART.c: 68:     return RCREG;
  5416     07FA  1283               	bcf	3,5	;RP0=0, select bank0
  5417     07FB  1303               	bcf	3,6	;RP1=0, select bank0
  5418     07FC  081A               	movf	26,w	;volatile
  5419     07FD                     i1l310:
  5420     07FD  0008               	return
  5421     07FE                     __end_of_UART_read_char:
  5422     007E                     btemp	set	126	;btemp
  5423     007E                     wtemp0	set	126
  5424                           
  5425                           	psect	config
  5426                           
  5427                           ;Config register CONFIG1 @ 0x2007
  5428                           ;	Oscillator Selection bits
  5429                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5430                           ;	Watchdog Timer Enable bit
  5431                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5432                           ;	Power-up Timer Enable bit
  5433                           ;	PWRTE = OFF, PWRT disabled
  5434                           ;	RE3/MCLR pin function select bit
  5435                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5436                           ;	Code Protection bit
  5437                           ;	CP = OFF, Program memory code protection is disabled
  5438                           ;	Data Code Protection bit
  5439                           ;	CPD = OFF, Data memory code protection is disabled
  5440                           ;	Brown Out Reset Selection bits
  5441                           ;	BOREN = OFF, BOR disabled
  5442                           ;	Internal External Switchover bit
  5443                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5444                           ;	Fail-Safe Clock Monitor Enabled bit
  5445                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5446                           ;	Low Voltage Programming Enable bit
  5447                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5448                           ;	In-Circuit Debugger Mode bit
  5449                           ;	DEBUG = 0x1, unprogrammed default
  5450     2007                     	org	8199
  5451     2007  20D4               	dw	8404
  5452                           
  5453                           ;Config register CONFIG2 @ 0x2008
  5454                           ;	Brown-out Reset Selection bit
  5455                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5456                           ;	Flash Program Memory Self Write Enable bits
  5457                           ;	WRT = OFF, Write protection off
  5458     2008                     	org	8200
  5459     2008  3FFF               	dw	16383

Data Sizes:
    Strings     26
    Constant    0
    Data        1
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     42      65
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_write_string@s	PTR unsigned char  size(1) Largest target is 4
		 -> S_gas(BANK0[4]), S_hum(BANK0[3]), S_temp(BANK0[4]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 6
		 -> STR_7(CODE[6]), STR_6(CODE[4]), STR_5(CODE[3]), STR_4(CODE[4]), 
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), S_gas(BANK0[4]), 
		 -> S_hum(BANK0[3]), S_temp(BANK0[4]), 

    num_to_string@dig8	PTR unsigned char  size(1) Largest target is 4
		 -> S_gas(BANK0[4]), S_hum(BANK0[3]), S_temp(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_requestHum
    _main->_sendDataUART
    _writeMotors->_I2C_Master_Write
    _Lcd_Init->_Lcd_Cmd
    _I2C_Master_Init->___lldiv
    _sendDataUART->_UART_write_string
    _UART_write_string->_UART_write_char
    _requestHum->_I2C_Master_Read
    _map->___lmul
    ___aldiv->___lmul
    _LDC_output->_Lcd_Write_String
    _num_to_string->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_setup
    _setup->_UART_RX_config
    _setup->_UART_TX_config
    _UART_TX_config->___aldiv
    _UART_RX_config->___aldiv
    _I2C_Master_Init->___lldiv
    _requestTemp->_map
    _requestGas->_map
    _map->___aldiv
    ___aldiv->___lmul
    _LDC_output->_num_to_string

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   18789
                                             39 BANK0      3     3      0
                         _LDC_output
                         _requestGas
                         _requestHum
                        _requestTemp
                       _sendDataUART
                              _setup
                        _writeMotors
 ---------------------------------------------------------------------------------
 (1) _writeMotors                                          2     2      0     858
                                              4 COMMON     2     2      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _setup                                                2     2      0    3951
                                             37 BANK0      2     2      0
                    _I2C_Master_Init
                           _Lcd_Init
                     _UART_RX_config
                     _UART_TX_config
 ---------------------------------------------------------------------------------
 (2) _UART_TX_config                                      17    13      4    1565
                                             20 BANK0     17    13      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) _UART_RX_config                                      17    13      4    1565
                                             20 BANK0     17    13      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     279
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _sendDataUART                                         3     3      0     233
                                              7 COMMON     3     3      0
                    _UART_write_char
                  _UART_write_string
 ---------------------------------------------------------------------------------
 (2) _UART_write_string                                    4     4      0     211
                                              3 COMMON     4     4      0
                    _UART_write_char
 ---------------------------------------------------------------------------------
 (3) _UART_write_char                                      1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _requestTemp                                          2     2      0    3729
                                             36 BANK0      2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                                _map
 ---------------------------------------------------------------------------------
 (1) _requestHum                                           2     2      0    1131
                                              8 COMMON     2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _requestGas                                           2     2      0    3729
                                             36 BANK0      2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                                _map
 ---------------------------------------------------------------------------------
 (2) _map                                                 16     9      7    2598
                                             20 BANK0     16     9      7
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     316
                                              2 COMMON     8     0      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8    1345
                                              5 BANK0     15     7      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     858
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     273
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LDC_output                                           2     2      0    5158
                                             16 BANK0      2     2      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                      _num_to_string
 ---------------------------------------------------------------------------------
 (2) _num_to_string                                       18    14      4    2560
                                              0 BANK0     16    12      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     767
                                              2 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2    1284
                                              7 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     254
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1     905
                                              6 COMMON     2     1      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     155
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
                     _UART_read_char
 ---------------------------------------------------------------------------------
 (6) _UART_read_char                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LDC_output
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_Char
       _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
     _num_to_string
       ___lwdiv
       ___lwmod
   _requestGas
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _map
       ___aldiv
         ___lmul (ARG)
       ___lmul
   _requestHum
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
   _requestTemp
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _map
   _sendDataUART
     _UART_write_char
     _UART_write_string
       _UART_write_char
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Init
       _Lcd_Cmd
       _Lcd_Port
     _UART_RX_config
       ___aldiv
     _UART_TX_config
       ___aldiv
   _writeMotors
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write

 _isr (ROOT)
   _UART_read_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2A      41       5       81.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4D      12        0.0%
ABS                  0      0      4D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Sep 01 16:06:50 2023

                               pc 0002                                fsr 0004                               l111 04D8  
                             l200 07F4                               l201 07F9                               l114 0678  
                             l130 0475                               l122 0422                               l123 042A  
                             l300 0ECA                               l108 05E3                               l221 0F42  
                             l117 0410                               l301 0ECD                               l125 042F  
                             l222 0F45                               l223 0F4B                               l135 00E8  
                             l224 0F4C                               l232 0F17                               l128 0436  
                             l225 0F52                               l241 062F                               l226 0F53  
                             l146 01A1                               l410 06C0                               l138 0FC7  
                             l227 0F59                               l235 0EDA                               l307 0F38  
                             l244 0596                               l229 0F5A                               l253 074D  
                             l181 0EDB                               l149 0539                               l190 0EA6  
                             l247 0F8F                               l184 0EE7                               l432 03AA  
                             l193 0EB8                               l178 0FFF                               l187 0EAF  
                             l196 0EC2                               l292 02C1                               l461 01B6  
                             l199 07F1                               l471 023E                               l295 0342  
                             l298 0EC4                               l668 0791                               l678 07CB  
                             _GIE 005F                               _RD3 0043                               _RD4 0044  
                             _RD5 0045                               _RD6 0046                               _RD7 0047  
                             u720 0ECA                               u721 0EC9                               u730 0EE1  
                             u731 0EE0                               u740 0EE7                               u741 0EE6  
                             _SCS 0478                               u970 0756                               u971 0755  
                             u990 0768                               u991 0767                               u985 075A  
                             _map 04D9                               _isr 0EE8                               fsr0 0004  
                             indf 0000                       ?_LDC_output 0070                              l2000 01A5  
                            l2010 01D1                              l2002 01A9                              l2020 01ED  
                            l2012 01D9                              l2004 01BA                              l2102 0ECE  
                            l2110 05FC                              l2030 0220                              l2022 01F6  
                            l2014 01DC                              l2006 01C5                              l2120 0621  
                            l2112 0602                              l2104 05E7                              l2200 00B2  
                            l2024 0208                              l2016 01E5                              l2032 0226  
                            l2008 01C9                              l2040 053A                              l2122 0627  
                            l2106 05EC                              l2114 060B                              l2130 0731  
                            l2210 00E2                              l2202 00BB                              l2034 022B  
                            l2026 0216                              l2018 01E9                              l2050 0FC8  
                            l2042 0540                              l2116 0611                              l2108 05F9  
                            l2124 0708                              l2204 00C4                              l2036 0236  
                            l2028 0217                              l2060 0FFE                              l2052 0FCC  
                            l2044 0549                              l2140 05AB                              l2132 0597  
                            l2220 06D6                              l2212 06C1                              l2118 061E  
                            l2126 070D                              l2206 00D5                              l2150 048D  
                            l2054 0FCF                              l2046 0558                              l2070 02B5  
                            l2062 023F                              l2142 05B6                              l2134 05A1  
                            l2230 06EF                              l2222 06DB                              l2214 06C6  
                            l2128 0729                              l2208 00DB                              l2160 04B6  
                            l2152 0497                              l2056 0FFC                              l2048 055E  
                            l2080 02BE                              l2072 02B8                              l2064 0299  
                            l2144 05C5                              l2136 05A5                              l2232 06F5  
                            l2224 06E0                              l2216 06CE                              l2170 03D1  
                            l2162 04C0                              l2154 049C                              l2058 0FFD  
                            l2074 02B9                              l2066 029D                              l2090 0338  
                            l2082 02C2                              l2146 05D4                              l2138 05A6  
                            l2226 06E5                              l2218 06D3                              l1700 0171  
                            l2180 0023                              l2172 03DA                              l2164 03AB  
                            l2156 04A5                              l2148 0476                              l1452 0EC4  
                            l2076 02BC                              l2068 02B4                              l2092 033B  
                            l2084 031C                              l2228 06EA                              l1702 0178  
                            l2190 007E                              l2182 0028                              l2174 03E6  
                            l2166 03C2                              l2158 04B1                              l1454 0ECB  
                            l2078 02BD                              l2094 033E                              l2086 0320  
                            l1560 0760                              l1552 074E                              l1704 017E  
                            l2192 0086                              l2184 003A                              l1456 0EDB  
                            l2176 03EB                              l2168 03CC                              l2096 033F  
                            l2088 0337                              l1570 0780                              l1562 0764  
                            l1554 0750                              l1706 018A                              l2194 008F  
                            l2186 004C                              l1458 0EE1                              l2098 04DC  
                            l2178 03F5                              l2258 0440                              l1810 0417  
                            l1572 0787                              l1564 0768                              l1556 0756  
                            l1580 0798                              l1708 0190                              l2196 0098  
                            l2188 005B                              l1660 0EAC                              l1740 0F1C  
                            l1820 044B                              l1812 0426                              l1566 0779  
                            l1558 0759                              l1574 078D                              l1590 07B4  
                            l1582 079B                              l2198 00A9                              l1670 07CC  
                            l1662 0EB9                              l1742 0F27                              l1822 046C  
                            l1814 0431                              l1920 0F3E                              l1568 077F  
                            l1592 07BA                              l1584 07A2                              l1680 07ED  
                            l1672 07D1                              l1664 0EBE                              l1744 0F2D  
                            l1808 0411                              l1922 0F49                              l1930 0F62  
                            l1594 07C1                              l1586 07A6                              l1578 0792  
                            l1682 07F5                              l1674 07D9                              l1666 0E9E  
                            l1658 0EA7                              l1770 065E                              l1762 0630  
                            l1738 0F19                              l1818 0438                              l1924 0F50  
                            l1940 0F7E                              l1932 0F65                              l1588 07AA  
                            l1596 07C7                              l1676 07E2                              l1668 0EA3  
                            l1772 066A                              l1764 0647                              l1860 0F90  
                            l1926 0F57                              l1918 0F3A                              l1950 0F02  
                            l1942 0F84                              l1934 0F73                              l1678 07E7  
                            l1686 0EB0                              l1774 066F                              l1766 0650  
                            l1870 0FBA                              l1862 0F96                              l1952 0F08  
                            l1944 0F87                              l1936 0F76                              l1928 0F5C  
                            l1696 00E9                              l1688 0EB5                              l1960 0683  
                            l1768 0655                              l1864 0F9C                              l1954 0F0B  
                            l1946 0F8C                              l1938 0F7B                              l1698 016A  
                            l1962 0687                              l1866 0FA8                              l1956 0F14  
                            l1948 0EFF                              l1964 069E                              l1868 0FAE  
                            l1980 0365                              l1972 0343                              l1966 06A7  
                            l1958 0679                              l1990 0393                              l1982 0369  
                            l1974 0355                              ?_map 0034                              l1968 06B8  
                            l1992 039C                              l1984 0372                              l1976 0358  
                            l1986 0384                              l1978 0361                              l1994 03A2  
                            l1988 0392                              l1998 01A2                              ?_isr 0070  
                            STR_1 0824                              STR_2 0827                              STR_3 0821  
                            STR_4 0816                              STR_5 081E                              STR_6 081A  
                            STR_7 0810                              _CREN 00C4                              u1010 0779  
                            u1011 0778                              u1005 0769                              u1030 078D  
                            u1031 078C                              u1015 0775                              u1040 0798  
                            u1025 0781                              u1041 0797                              u1060 07AA  
                            u1061 07A9                              u1070 07B4                              u1150 07ED  
                            u1071 07B3                              u1055 079C                              u1151 07EC  
                            u1320 0F3E                              u1321 0F3D                              u1330 0F49  
                            u1090 07C7                              u1170 0171                              u1410 06B8  
                            u1331 0F48                              u1091 07C6                              u1075 07B0  
                            u1171 0170                              u1411 06B7                              u1340 0F50  
                            u1180 017E                              u1500 01BA                              u1420 0355  
                            u1341 0F4F                              u1085 07BB                              u1181 017D  
                            u1501 01B9                              u1405 06A8                              u1421 0354  
                            u1350 0F57                              u1190 0190                              u1510 01D9  
                            u1270 0F38                              u1351 0F56                              u1191 018F  
                            u1511 01D8                              u1271 0F37                              u1440 0369  
                            u1600 0286                              u1280 0417                              u1441 0368  
                            u1601 0287                              u1281 0416                              u1530 01ED  
                            u1370 0687                              u1610 02AE                              u1602 028C  
                            u1290 0422                              u1531 01EC                              u1371 0686  
                            u1435 035A                              u1603 028D                              u1291 0421  
                            u1700 073B                              u1460 0384                              u1620 0309  
                            u1365 0F68                              u1525 01DE                              u1381 0690  
                            u1461 0383                              u1621 030A                              u1710 074D  
                            u1550 0208                              u1382 0697                              u1630 0331  
                            u1622 030F                              u1711 074C                              u1551 0207  
                            u1383 069E                              u1455 036B                              u1615 02A9  
                            u1623 0310                              u1720 00DB                              u1480 03A2  
                            u1721 00DA                              u1545 01EF                              u1641 0506  
                            u1481 03A1                              u1465 0380                              u1650 05EC  
                            u1570 0226                              u1490 01A9                              u1642 0507  
                            u1730 06CE                              u1651 05EB                              u1571 0225  
                            u1555 0204                              u1491 01A8                              u1395 06A0  
                            u1643 050C                              u1475 0394                              u1635 032C  
                            u1731 06CD                              u1580 022B                              u1644 050D  
                            u1581 022A                              u1565 0218                              u1645 0512  
                            u1670 0611                              u1646 0513                              u1590 0FDF  
                            u1671 0610                              u1807 0FC0                              u1665 05F2  
                            u1817 0493                              u1690 0717                              u1827 04BC  
                            u1595 0FDA                              u1747 06FD                              u1685 0617  
                            u1837 064B                              u1757 0470                              u1847 0673  
                            u1767 05B1                              u1857 03C8                              u1777 0544  
                            u1867 03F1                              u1787 0553                              _PEIE 005E  
                            u1877 0F78                              u1797 0562                              u1887 0F89  
                            u1897 0F0F                              _RCIE 0465                              _RCIF 0065  
                            i1l96 0EF7                              _SPEN 00C7                              _TXIE 0464  
                            _TXEN 04C5                              _TXIF 0064                              _SYNC 04C4  
               ?_Lcd_Write_String 0077  __end_of_I2C_Master_RepeatedStart 0EA7                              _main 06C1  
                            _prev 0050                              btemp 007E                   ??_num_to_string 0079  
                            start 000C                ??_Lcd_Write_String 0020                   __end_of_Lcd_Cmd 0F18  
                UART_write_char@c 0072                             ??_map 003B                             ??_isr 0070  
                num_to_string@len 0023                  num_to_string@num 0020                  ?_I2C_Master_Init 0026  
                ?_I2C_Master_Read 0072                  ?_I2C_Master_Wait 0070                  ?_I2C_Master_Stop 0070  
                 __end_of___aldiv 023F                             ?_main 0070                             _ANSEL 0188  
                 __end_of___lldiv 03AB                   __end_of___lwdiv 0792                             i1l310 07FD  
                 __end_of___lwmod 07CC                             _RCREG 001A                       _writeMotors 0411  
                           _SPBRG 0099                             _PORTD 0008                             u65_20 0EEE  
                           u65_21 0EED                             _TRISD 0088                             _SSPIE 0463  
                           _SSPIF 0063                             _TXREG 0019               ___lmul@multiplicand 0076  
                           _S_gas 0056                             _S_hum 005E                             _n_gas 0053  
                           _n_hum 0054                             _tempC 007A                             _setup 0597  
                           pclath 000A                             status 0003                             wtemp0 007E  
                __end_of_Lcd_Init 0597                  __end_of_Lcd_Port 0F5B                   __initialization 000F  
                    __end_of_main 0708                            ??_main 0047                 num_to_string@dig8 0022  
               num_to_string@div1 0028                 num_to_string@div2 002A                 num_to_string@div3 0024  
               ?_I2C_Master_Start 0070                 ?_I2C_Master_Write 0072                ??_I2C_Master_Start 0072  
              ??_I2C_Master_Write 0074                            ?_setup 0070                            _ANSELH 0189  
                          i1l1226 07FA                            i1l1360 0EF4                            i1l1356 0EE8  
                          i1l1358 0EEE                         ??_Lcd_Cmd 0073                            _SPBRGH 009A  
                          _SSPADD 0093                            _TRISC3 043B                            _TRISC4 043C  
                          _SSPCON 0014                            _SSPBUF 0013                            _S_temp 005A  
        _I2C_Master_RepeatedStart 0E9E                            ___lmul 0679                         ??___aldiv 002D  
                          _gasPPM 004E                         ??___lldiv 0020                         ??___lwdiv 0076  
                       ??___lwmod 0076                            _n_temp 0055                      ?_requestTemp 0070  
                          map@val 0043                      __pdataCOMMON 007B                   _UART_write_char 0EC3  
                          saved_w 007E                   Lcd_Set_Cursor@a 0020                   Lcd_Set_Cursor@b 0076  
                 Lcd_Set_Cursor@y 0022                   Lcd_Set_Cursor@z 0021              num_to_string@decenas 002C  
         __end_of__initialization 001F                  UART_RX_config@BR 0041                 __end_of_Lcd_Clear 0EDB  
                  __pcstackCOMMON 0070                     ?_sendDataUART 0070                     __end_of_setup 05E4  
                  _Lcd_Set_Cursor 05E4                      ??_LDC_output 0030                         ?_Lcd_Init 0070  
                       ?_Lcd_Port 0070                           ??_setup 0045                        __pbssBANK0 004A  
                UART_TX_config@BR 0041                        __pmaintext 06C1                           ?___lmul 0072  
                  ??_sendDataUART 0077                UART_write_string@i 0074                UART_write_string@s 0076  
                      __pintentry 0004                __end_of_LDC_output 00E9           __end_of_UART_write_char 0ECE  
                  ___lmul@product 0021            __end_of_Lcd_Set_Cursor 0630                      ?_writeMotors 0070  
                      ??_Lcd_Init 0076                        ??_Lcd_Port 0072               _UART_RX_config$1024 003D  
                         _SSPCON2 0091                           _SSPSTAT 0094                        __stringtab 0800  
                  _Lcd_Write_Char 0F5B                           _Lcd_Cmd 0EFE                    _UART_RX_config 023F  
                  _UART_TX_config 02C2                           _S_servo 004A             __end_of_num_to_string 01A2  
                         ___aldiv 01A2                           ___lldiv 0343                           ___lwdiv 074E  
                         ___lwmod 0792                   ?_Lcd_Set_Cursor 0076                           __ptext1 0411  
                         __ptext2 0597                           __ptext3 02C2                           __ptext4 023F  
                         __ptext5 053A                           __ptext6 0FC8                           __ptext7 0343  
                         __ptext8 0F90                           __ptext9 0F18                           _counter 0052  
                ___aldiv@dividend 0029                           map@max1 0035                           map@max2 0037  
                         map@min1 0034                           map@min2 0036                           clrloop0 0E97  
          __end_of_Lcd_Write_Char 0F90              end_of_initialization 001F            __end_of_UART_RX_config 02C2  
      ??_I2C_Master_RepeatedStart 0072            __end_of_UART_TX_config 0343                   ___lldiv@divisor 0072  
                 ___lldiv@counter 0025                  ___aldiv@quotient 0030                  I2C_Master_Init@c 0026  
                I2C_Master_Read@a 0072                        _requestGas 03AB                         Lcd_Port@a 0072  
                      _requestHum 0630                  ?_UART_write_char 0070                         _PORTDbits 0008  
           num_to_string@centenas 0026                         _TRISCbits 0087              __end_of_sendDataUART 0FC8  
                 ?_Lcd_Write_Char 0070                 Lcd_Write_String@a 0077                 Lcd_Write_String@i 0023  
                 ?_UART_RX_config 0034                   ?_UART_TX_config 0034                         _Lcd_Clear 0ECE  
           num_to_string@unidades 002E            UART_RX_config@baudrate 0034                    __end_of___lmul 06C1  
                  _UART_read_char 07FA                  _Lcd_Write_String 0708                     __pidataCOMMON 07FE  
             start_initialization 000F                       __end_of_map 053A                       __end_of_isr 0EFE  
               ??_I2C_Master_Init 002A                 ??_I2C_Master_Read 0074                 ??_I2C_Master_Wait 0072  
               ??_I2C_Master_Stop 0072                        ?_Lcd_Clear 0070                          ??___lmul 0020  
          __end_of_UART_read_char 07FE                       ?_requestGas 0070                       ?_requestHum 0070  
                 Lcd_Write_Char@a 0076                   Lcd_Write_Char@y 0075                       __pbssCOMMON 007A  
                       ___latbits 0002                     __pcstackBANK0 0020               _UART_TX_config$1025 003D  
                        ?_Lcd_Cmd 0070                  _I2C_Master_Start 0EA7                  _I2C_Master_Write 0EB9  
                ___lwdiv@dividend 0074                  ??_Lcd_Set_Cursor 0077                          ?___aldiv 0025  
                 ?_UART_read_char 0070                          ?___lldiv 0072                          ?___lwdiv 0072  
                        ?___lwmod 0072                         __pstrings 0800                  ___lwdiv@quotient 0076  
                 ___aldiv@divisor 0025                 interrupt_function 0004                   ___aldiv@counter 002E  
                       clear_ram0 0E96                          Lcd_Cmd@a 0075                       ??_Lcd_Clear 0076  
                    _sendDataUART 0F90                     ??_requestTemp 0044                       __stringbase 080F  
                ??_Lcd_Write_Char 0073                  ??_UART_RX_config 0038                          _Lcd_Init 053A  
                        _Lcd_Port 0F39               I2C_Master_Read@temp 0076                  ??_UART_TX_config 0038  
               ___lmul@multiplier 0072          __end_of_Lcd_Write_String 074E         ?_I2C_Master_RepeatedStart 0070  
              __end_of__stringtab 0810                   _I2C_Master_Init 0FC8                   _I2C_Master_Read 07CC  
                 _I2C_Master_Wait 0EDB                   _I2C_Master_Stop 0EB0               __end_of_requestTemp 04D9  
                 ___lwdiv@divisor 0072                   ___lwdiv@counter 0078                          __ptext10 0EC3  
                        __ptext11 0476                          __ptext20 0E9E                          __ptext12 0630  
                        __ptext21 07CC                          __ptext13 03AB                          __ptext30 0ECE  
                        __ptext22 0EDB                          __ptext14 04D9                          __ptext31 0EFE  
                        __ptext23 0023                          __ptext15 0679                          __ptext32 0F39  
                        __ptext24 00E9                          __ptext16 01A2                          __ptext33 0EE8  
                        __ptext25 0792                          __ptext17 0EB9                          __ptext34 07FA  
                        __ptext26 074E                          __ptext18 0EB0                          __ptext27 0708  
                        __ptext19 0EA7                          __ptext28 0F5B                          __ptext29 05E4  
                        _motorCon 0051                     _num_to_string 00E9                          _servoPos 007B  
                    ??_requestGas 0044                      ??_requestHum 0078            UART_TX_config@baudrate 0034  
                   ??_writeMotors 0074          __end_of_I2C_Master_Start 0EB0          __end_of_I2C_Master_Write 0EC3  
                      _LDC_output 0023                Lcd_Write_Char@temp 0074                          intlevel1 0000  
              __end_of_requestGas 0411                __end_of_requestHum 0679                  ___lwmod@dividend 0074  
                ___lldiv@dividend 0076                 _UART_write_string 0F18                  ??_UART_read_char 0070  
                       stringcode 080A                        _OSCCONbits 008F                ?_UART_write_string 0070  
                  ?_num_to_string 0020           __end_of_I2C_Master_Init 1000           __end_of_I2C_Master_Read 07FA  
         __end_of_I2C_Master_Wait 0EE8           __end_of_I2C_Master_Stop 0EB9                Lcd_Set_Cursor@temp 0023  
             ??_UART_write_string 0073                       _requestTemp 0476                  ___lldiv@quotient 0021  
               I2C_Master_Write@d 0072                   ___lwmod@divisor 0072                   ___lwmod@counter 0076  
                        stringdir 080A                          stringtab 0800                      ___aldiv@sign 002F  
                     _SSPCON2bits 0091               __end_of_writeMotors 0476         __end_of_UART_write_string 0F39  
               ??_UART_write_char 0072  
