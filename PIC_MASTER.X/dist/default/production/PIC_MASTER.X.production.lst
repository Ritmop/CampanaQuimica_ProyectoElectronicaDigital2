

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Aug 23 14:56:08 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	intentry,global,class=CODE,delta=2
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    45                           	dabs	1,0x7E,2
    46     0000                     
    47                           ; Generated 22/03/2023 GMT
    48                           ; 
    49                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution. Publication is not required when
    63                           ;        this file is used in an embedded application.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F887 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81     0000                     	;# 
    82     0001                     	;# 
    83     0002                     	;# 
    84     0003                     	;# 
    85     0004                     	;# 
    86     0005                     	;# 
    87     0006                     	;# 
    88     0007                     	;# 
    89     0008                     	;# 
    90     0009                     	;# 
    91     000A                     	;# 
    92     000B                     	;# 
    93     000C                     	;# 
    94     000D                     	;# 
    95     000E                     	;# 
    96     000E                     	;# 
    97     000F                     	;# 
    98     0010                     	;# 
    99     0011                     	;# 
   100     0012                     	;# 
   101     0013                     	;# 
   102     0014                     	;# 
   103     0015                     	;# 
   104     0015                     	;# 
   105     0016                     	;# 
   106     0017                     	;# 
   107     0018                     	;# 
   108     0019                     	;# 
   109     001A                     	;# 
   110     001B                     	;# 
   111     001B                     	;# 
   112     001C                     	;# 
   113     001D                     	;# 
   114     001E                     	;# 
   115     001F                     	;# 
   116     0081                     	;# 
   117     0085                     	;# 
   118     0086                     	;# 
   119     0087                     	;# 
   120     0088                     	;# 
   121     0089                     	;# 
   122     008C                     	;# 
   123     008D                     	;# 
   124     008E                     	;# 
   125     008F                     	;# 
   126     0090                     	;# 
   127     0091                     	;# 
   128     0092                     	;# 
   129     0093                     	;# 
   130     0093                     	;# 
   131     0093                     	;# 
   132     0094                     	;# 
   133     0095                     	;# 
   134     0096                     	;# 
   135     0097                     	;# 
   136     0098                     	;# 
   137     0099                     	;# 
   138     009A                     	;# 
   139     009B                     	;# 
   140     009C                     	;# 
   141     009D                     	;# 
   142     009E                     	;# 
   143     009F                     	;# 
   144     0105                     	;# 
   145     0107                     	;# 
   146     0108                     	;# 
   147     0109                     	;# 
   148     010C                     	;# 
   149     010C                     	;# 
   150     010D                     	;# 
   151     010E                     	;# 
   152     010F                     	;# 
   153     0185                     	;# 
   154     0187                     	;# 
   155     0188                     	;# 
   156     0189                     	;# 
   157     018C                     	;# 
   158     018D                     	;# 
   159     0000                     	;# 
   160     0001                     	;# 
   161     0002                     	;# 
   162     0003                     	;# 
   163     0004                     	;# 
   164     0005                     	;# 
   165     0006                     	;# 
   166     0007                     	;# 
   167     0008                     	;# 
   168     0009                     	;# 
   169     000A                     	;# 
   170     000B                     	;# 
   171     000C                     	;# 
   172     000D                     	;# 
   173     000E                     	;# 
   174     000E                     	;# 
   175     000F                     	;# 
   176     0010                     	;# 
   177     0011                     	;# 
   178     0012                     	;# 
   179     0013                     	;# 
   180     0014                     	;# 
   181     0015                     	;# 
   182     0015                     	;# 
   183     0016                     	;# 
   184     0017                     	;# 
   185     0018                     	;# 
   186     0019                     	;# 
   187     001A                     	;# 
   188     001B                     	;# 
   189     001B                     	;# 
   190     001C                     	;# 
   191     001D                     	;# 
   192     001E                     	;# 
   193     001F                     	;# 
   194     0081                     	;# 
   195     0085                     	;# 
   196     0086                     	;# 
   197     0087                     	;# 
   198     0088                     	;# 
   199     0089                     	;# 
   200     008C                     	;# 
   201     008D                     	;# 
   202     008E                     	;# 
   203     008F                     	;# 
   204     0090                     	;# 
   205     0091                     	;# 
   206     0092                     	;# 
   207     0093                     	;# 
   208     0093                     	;# 
   209     0093                     	;# 
   210     0094                     	;# 
   211     0095                     	;# 
   212     0096                     	;# 
   213     0097                     	;# 
   214     0098                     	;# 
   215     0099                     	;# 
   216     009A                     	;# 
   217     009B                     	;# 
   218     009C                     	;# 
   219     009D                     	;# 
   220     009E                     	;# 
   221     009F                     	;# 
   222     0105                     	;# 
   223     0107                     	;# 
   224     0108                     	;# 
   225     0109                     	;# 
   226     010C                     	;# 
   227     010C                     	;# 
   228     010D                     	;# 
   229     010E                     	;# 
   230     010F                     	;# 
   231     0185                     	;# 
   232     0187                     	;# 
   233     0188                     	;# 
   234     0189                     	;# 
   235     018C                     	;# 
   236     018D                     	;# 
   237     0000                     	;# 
   238     0001                     	;# 
   239     0002                     	;# 
   240     0003                     	;# 
   241     0004                     	;# 
   242     0005                     	;# 
   243     0006                     	;# 
   244     0007                     	;# 
   245     0008                     	;# 
   246     0009                     	;# 
   247     000A                     	;# 
   248     000B                     	;# 
   249     000C                     	;# 
   250     000D                     	;# 
   251     000E                     	;# 
   252     000E                     	;# 
   253     000F                     	;# 
   254     0010                     	;# 
   255     0011                     	;# 
   256     0012                     	;# 
   257     0013                     	;# 
   258     0014                     	;# 
   259     0015                     	;# 
   260     0015                     	;# 
   261     0016                     	;# 
   262     0017                     	;# 
   263     0018                     	;# 
   264     0019                     	;# 
   265     001A                     	;# 
   266     001B                     	;# 
   267     001B                     	;# 
   268     001C                     	;# 
   269     001D                     	;# 
   270     001E                     	;# 
   271     001F                     	;# 
   272     0081                     	;# 
   273     0085                     	;# 
   274     0086                     	;# 
   275     0087                     	;# 
   276     0088                     	;# 
   277     0089                     	;# 
   278     008C                     	;# 
   279     008D                     	;# 
   280     008E                     	;# 
   281     008F                     	;# 
   282     0090                     	;# 
   283     0091                     	;# 
   284     0092                     	;# 
   285     0093                     	;# 
   286     0093                     	;# 
   287     0093                     	;# 
   288     0094                     	;# 
   289     0095                     	;# 
   290     0096                     	;# 
   291     0097                     	;# 
   292     0098                     	;# 
   293     0099                     	;# 
   294     009A                     	;# 
   295     009B                     	;# 
   296     009C                     	;# 
   297     009D                     	;# 
   298     009E                     	;# 
   299     009F                     	;# 
   300     0105                     	;# 
   301     0107                     	;# 
   302     0108                     	;# 
   303     0109                     	;# 
   304     010C                     	;# 
   305     010C                     	;# 
   306     010D                     	;# 
   307     010E                     	;# 
   308     010F                     	;# 
   309     0185                     	;# 
   310     0187                     	;# 
   311     0188                     	;# 
   312     0189                     	;# 
   313     018C                     	;# 
   314     018D                     	;# 
   315     0000                     	;# 
   316     0001                     	;# 
   317     0002                     	;# 
   318     0003                     	;# 
   319     0004                     	;# 
   320     0005                     	;# 
   321     0006                     	;# 
   322     0007                     	;# 
   323     0008                     	;# 
   324     0009                     	;# 
   325     000A                     	;# 
   326     000B                     	;# 
   327     000C                     	;# 
   328     000D                     	;# 
   329     000E                     	;# 
   330     000E                     	;# 
   331     000F                     	;# 
   332     0010                     	;# 
   333     0011                     	;# 
   334     0012                     	;# 
   335     0013                     	;# 
   336     0014                     	;# 
   337     0015                     	;# 
   338     0015                     	;# 
   339     0016                     	;# 
   340     0017                     	;# 
   341     0018                     	;# 
   342     0019                     	;# 
   343     001A                     	;# 
   344     001B                     	;# 
   345     001B                     	;# 
   346     001C                     	;# 
   347     001D                     	;# 
   348     001E                     	;# 
   349     001F                     	;# 
   350     0081                     	;# 
   351     0085                     	;# 
   352     0086                     	;# 
   353     0087                     	;# 
   354     0088                     	;# 
   355     0089                     	;# 
   356     008C                     	;# 
   357     008D                     	;# 
   358     008E                     	;# 
   359     008F                     	;# 
   360     0090                     	;# 
   361     0091                     	;# 
   362     0092                     	;# 
   363     0093                     	;# 
   364     0093                     	;# 
   365     0093                     	;# 
   366     0094                     	;# 
   367     0095                     	;# 
   368     0096                     	;# 
   369     0097                     	;# 
   370     0098                     	;# 
   371     0099                     	;# 
   372     009A                     	;# 
   373     009B                     	;# 
   374     009C                     	;# 
   375     009D                     	;# 
   376     009E                     	;# 
   377     009F                     	;# 
   378     0105                     	;# 
   379     0107                     	;# 
   380     0108                     	;# 
   381     0109                     	;# 
   382     010C                     	;# 
   383     010C                     	;# 
   384     010D                     	;# 
   385     010E                     	;# 
   386     010F                     	;# 
   387     0185                     	;# 
   388     0187                     	;# 
   389     0188                     	;# 
   390     0189                     	;# 
   391     018C                     	;# 
   392     018D                     	;# 
   393                           
   394                           	psect	idataBANK0
   395     0003                     __pidataBANK0:
   396                           
   397                           ;initializer for _servoPos
   398     0003  34B4               	retlw	180
   399     0008                     _PORTDbits	set	8
   400     0013                     _SSPBUF	set	19
   401     0014                     _SSPCON	set	20
   402     0008                     _PORTD	set	8
   403     0005                     _PORTA	set	5
   404     0043                     _RD3	set	67
   405     0047                     _RD7	set	71
   406     0046                     _RD6	set	70
   407     0045                     _RD5	set	69
   408     0044                     _RD4	set	68
   409     0063                     _SSPIF	set	99
   410     005E                     _PEIE	set	94
   411     005F                     _GIE	set	95
   412     0091                     _SSPCON2bits	set	145
   413     0087                     _TRISCbits	set	135
   414     0094                     _SSPSTAT	set	148
   415     0093                     _SSPADD	set	147
   416     0091                     _SSPCON2	set	145
   417     008F                     _OSCCONbits	set	143
   418     0088                     _TRISD	set	136
   419     0085                     _TRISA	set	133
   420     0463                     _SSPIE	set	1123
   421     043C                     _TRISC4	set	1084
   422     043B                     _TRISC3	set	1083
   423     0478                     _SCS	set	1144
   424     0189                     _ANSELH	set	393
   425     0188                     _ANSEL	set	392
   426                           
   427                           	psect	strings
   428     0792                     __pstrings:
   429     0792                     stringtab:
   430     0792                     __stringtab:
   431                           
   432                           ;	String table - string pointers are 1 byte each
   433     0792  1BFF               	btfsc	btemp+1,7
   434     0793  2F9C               	ljmp	stringcode
   435     0794  1383               	bcf	3,7
   436     0795  187F               	btfsc	btemp+1,0
   437     0796  1783               	bsf	3,7
   438     0797  0800               	movf	0,w
   439     0798  0A84               	incf	4,f
   440     0799  1903               	skipnz
   441     079A  0AFF               	incf	btemp+1,f
   442     079B  0008               	return
   443     079C                     stringcode:
   444     079C                     stringdir:
   445     079C  3007               	movlw	high stringdir
   446     079D  008A               	movwf	10
   447     079E  0804               	movf	4,w
   448     079F  0A84               	incf	4,f
   449     07A0  0782               	addwf	2,f
   450     07A1                     __stringbase:
   451     07A1  3400               	retlw	0
   452     07A2                     __end_of__stringtab:
   453     07A2                     STR_7:
   454     07A2  3449               	retlw	73	;'I'
   455     07A3  3452               	retlw	82	;'R'
   456     07A4  343A               	retlw	58	;':'
   457     07A5  3400               	retlw	0
   458     07A6                     STR_4:
   459     07A6  3425               	retlw	37	;'%'
   460     07A7  3452               	retlw	82	;'R'
   461     07A8  3448               	retlw	72	;'H'
   462     07A9  3400               	retlw	0
   463     07AA                     STR_6:
   464     07AA  3470               	retlw	112	;'p'
   465     07AB  3470               	retlw	112	;'p'
   466     07AC  346D               	retlw	109	;'m'
   467     07AD  3400               	retlw	0
   468     07AE                     STR_5:
   469     07AE  3447               	retlw	71	;'G'
   470     07AF  343A               	retlw	58	;':'
   471     07B0  3400               	retlw	0
   472     07B1                     STR_3:
   473     07B1  3448               	retlw	72	;'H'
   474     07B2  343A               	retlw	58	;':'
   475     07B3  3400               	retlw	0
   476     07B4                     STR_1:
   477     07B4  3454               	retlw	84	;'T'
   478     07B5  343A               	retlw	58	;':'
   479     07B6  3400               	retlw	0
   480     07B7                     STR_2:
   481     07B7  345E               	retlw	94	;'^'
   482     07B8  3443               	retlw	67	;'C'
   483     07B9  3400               	retlw	0
   484                           
   485                           	psect	cinit
   486     000F                     start_initialization:	
   487                           ; #config settings
   488                           
   489     000F                     __initialization:
   490                           
   491                           ; Initialize objects allocated to BANK0
   492     000F  120A  118A  2003  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   493     0014  00DD               	movwf	__pdataBANK0& (0+127)
   494                           
   495                           ; Clear objects allocated to BANK0
   496     0015  1383               	bcf	3,7	;select IRP bank0
   497     0016  3049               	movlw	low __pbssBANK0
   498     0017  0084               	movwf	4
   499     0018  305D               	movlw	low (__pbssBANK0+20)
   500     0019  120A  158A  27C3  120A  118A  	fcall	clear_ram0
   501                           
   502                           ; Clear objects allocated to COMMON
   503     001E  01FA               	clrf	__pbssCOMMON& (0+127)
   504     001F  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   505     0020                     end_of_initialization:	
   506                           ;End of C runtime variable initialization code
   507                           
   508     0020                     __end_of__initialization:
   509     0020  0183               	clrf	3
   510     0021  120A  118A  2DB7   	ljmp	_main	;jump to C main() function
   511                           
   512                           	psect	bssCOMMON
   513     007A                     __pbssCOMMON:
   514     007A                     _motorCon:
   515     007A                     	ds	1
   516     007B                     _tempC:
   517     007B                     	ds	1
   518                           
   519                           	psect	bssBANK0
   520     0049                     __pbssBANK0:
   521     0049                     _gasPPM:
   522     0049                     	ds	2
   523     004B                     _counter:
   524     004B                     	ds	1
   525     004C                     _n_ired:
   526     004C                     	ds	1
   527     004D                     _n_gas:
   528     004D                     	ds	1
   529     004E                     _n_hum:
   530     004E                     	ds	1
   531     004F                     _n_temp:
   532     004F                     	ds	1
   533     0050                     _S_gas:
   534     0050                     	ds	4
   535     0054                     _S_temp:
   536     0054                     	ds	4
   537     0058                     _S_hum:
   538     0058                     	ds	3
   539     005B                     _S_ired:
   540     005B                     	ds	2
   541                           
   542                           	psect	dataBANK0
   543     005D                     __pdataBANK0:
   544     005D                     _servoPos:
   545     005D                     	ds	1
   546                           
   547                           	psect	clrtext
   548     0FC3                     clear_ram0:	
   549                           ;	Called with FSR containing the base address, and
   550                           ;	W with the last address+1
   551                           
   552     0FC3  0064               	clrwdt	;clear the watchdog before getting into this loop
   553     0FC4                     clrloop0:
   554     0FC4  0180               	clrf	0	;clear RAM location pointed to by FSR
   555     0FC5  0A84               	incf	4,f	;increment pointer
   556     0FC6  0604               	xorwf	4,w	;XOR with final address
   557     0FC7  1903               	btfsc	3,2	;have we reached the end yet?
   558     0FC8  3400               	retlw	0	;all done for this memory range, return
   559     0FC9  0604               	xorwf	4,w	;XOR again to restore value
   560     0FCA  2FC4               	goto	clrloop0	;do the next byte
   561                           
   562                           	psect	cstackCOMMON
   563     0070                     __pcstackCOMMON:
   564     0070                     ?_setup:
   565     0070                     ?_requestHum:	
   566                           ; 1 bytes @ 0x0
   567                           
   568     0070                     ?_requestTemp:	
   569                           ; 1 bytes @ 0x0
   570                           
   571     0070                     ?_requestGas:	
   572                           ; 1 bytes @ 0x0
   573                           
   574     0070                     ?_requestIR:	
   575                           ; 1 bytes @ 0x0
   576                           
   577     0070                     ?_writeMotors:	
   578                           ; 1 bytes @ 0x0
   579                           
   580     0070                     ?_LDC_output:	
   581                           ; 1 bytes @ 0x0
   582                           
   583     0070                     ?_Lcd_Init:	
   584                           ; 1 bytes @ 0x0
   585                           
   586     0070                     ?_I2C_Master_Start:	
   587                           ; 1 bytes @ 0x0
   588                           
   589     0070                     ?_I2C_Master_RepeatedStart:	
   590                           ; 1 bytes @ 0x0
   591                           
   592     0070                     ?_I2C_Master_Stop:	
   593                           ; 1 bytes @ 0x0
   594                           
   595     0070                     ?_Lcd_Clear:	
   596                           ; 1 bytes @ 0x0
   597                           
   598     0070                     ?_isr:	
   599                           ; 1 bytes @ 0x0
   600                           
   601     0070                     ??_isr:	
   602                           ; 1 bytes @ 0x0
   603                           
   604     0070                     ?_I2C_Master_Wait:	
   605                           ; 1 bytes @ 0x0
   606                           
   607     0070                     ?_Lcd_Port:	
   608                           ; 1 bytes @ 0x0
   609                           
   610     0070                     ?_Lcd_Cmd:	
   611                           ; 1 bytes @ 0x0
   612                           
   613     0070                     ?_Lcd_Write_Char:	
   614                           ; 1 bytes @ 0x0
   615                           
   616     0070                     ?_main:	
   617                           ; 1 bytes @ 0x0
   618                           
   619                           
   620                           ; 2 bytes @ 0x0
   621     0070                     	ds	2
   622     0072                     ??_I2C_Master_Start:
   623     0072                     ?_I2C_Master_Write:	
   624                           ; 1 bytes @ 0x2
   625                           
   626     0072                     ??_I2C_Master_RepeatedStart:	
   627                           ; 1 bytes @ 0x2
   628                           
   629     0072                     ??_I2C_Master_Stop:	
   630                           ; 1 bytes @ 0x2
   631                           
   632     0072                     ??_I2C_Master_Wait:	
   633                           ; 1 bytes @ 0x2
   634                           
   635     0072                     ??_Lcd_Port:	
   636                           ; 1 bytes @ 0x2
   637                           
   638     0072                     ?_I2C_Master_Read:	
   639                           ; 1 bytes @ 0x2
   640                           
   641     0072                     ?___lwdiv:	
   642                           ; 2 bytes @ 0x2
   643                           
   644     0072                     ?___lwmod:	
   645                           ; 2 bytes @ 0x2
   646                           
   647     0072                     ?___lmul:	
   648                           ; 2 bytes @ 0x2
   649                           
   650     0072                     ?___lldiv:	
   651                           ; 4 bytes @ 0x2
   652                           
   653     0072                     Lcd_Port@a:	
   654                           ; 4 bytes @ 0x2
   655                           
   656     0072                     I2C_Master_Write@d:	
   657                           ; 1 bytes @ 0x2
   658                           
   659     0072                     I2C_Master_Read@a:	
   660                           ; 2 bytes @ 0x2
   661                           
   662     0072                     ___lwdiv@divisor:	
   663                           ; 2 bytes @ 0x2
   664                           
   665     0072                     ___lwmod@divisor:	
   666                           ; 2 bytes @ 0x2
   667                           
   668     0072                     ___lmul@multiplier:	
   669                           ; 2 bytes @ 0x2
   670                           
   671     0072                     ___lldiv@divisor:	
   672                           ; 4 bytes @ 0x2
   673                           
   674                           
   675                           ; 4 bytes @ 0x2
   676     0072                     	ds	1
   677     0073                     ??_Lcd_Cmd:
   678     0073                     ??_Lcd_Write_Char:	
   679                           ; 1 bytes @ 0x3
   680                           
   681                           
   682                           ; 1 bytes @ 0x3
   683     0073                     	ds	1
   684     0074                     ??_writeMotors:
   685     0074                     ??_I2C_Master_Write:	
   686                           ; 1 bytes @ 0x4
   687                           
   688     0074                     ??_I2C_Master_Read:	
   689                           ; 1 bytes @ 0x4
   690                           
   691     0074                     Lcd_Write_Char@temp:	
   692                           ; 1 bytes @ 0x4
   693                           
   694     0074                     ___lwdiv@dividend:	
   695                           ; 1 bytes @ 0x4
   696                           
   697     0074                     ___lwmod@dividend:	
   698                           ; 2 bytes @ 0x4
   699                           
   700                           
   701                           ; 2 bytes @ 0x4
   702     0074                     	ds	1
   703     0075                     Lcd_Cmd@a:
   704     0075                     Lcd_Write_Char@y:	
   705                           ; 1 bytes @ 0x5
   706                           
   707                           
   708                           ; 1 bytes @ 0x5
   709     0075                     	ds	1
   710     0076                     ??_Lcd_Init:
   711     0076                     ??_Lcd_Clear:	
   712                           ; 1 bytes @ 0x6
   713                           
   714     0076                     ?_Lcd_Set_Cursor:	
   715                           ; 1 bytes @ 0x6
   716                           
   717     0076                     ??___lwdiv:	
   718                           ; 1 bytes @ 0x6
   719                           
   720     0076                     ??___lwmod:	
   721                           ; 1 bytes @ 0x6
   722                           
   723     0076                     Lcd_Set_Cursor@b:	
   724                           ; 1 bytes @ 0x6
   725                           
   726     0076                     Lcd_Write_Char@a:	
   727                           ; 1 bytes @ 0x6
   728                           
   729     0076                     ___lwmod@counter:	
   730                           ; 1 bytes @ 0x6
   731                           
   732     0076                     I2C_Master_Read@temp:	
   733                           ; 1 bytes @ 0x6
   734                           
   735     0076                     ___lwdiv@quotient:	
   736                           ; 2 bytes @ 0x6
   737                           
   738     0076                     ___lmul@multiplicand:	
   739                           ; 2 bytes @ 0x6
   740                           
   741     0076                     ___lldiv@dividend:	
   742                           ; 4 bytes @ 0x6
   743                           
   744                           
   745                           ; 4 bytes @ 0x6
   746     0076                     	ds	1
   747     0077                     ??_Lcd_Set_Cursor:
   748     0077                     ?_Lcd_Write_String:	
   749                           ; 1 bytes @ 0x7
   750                           
   751     0077                     Lcd_Write_String@a:	
   752                           ; 1 bytes @ 0x7
   753                           
   754                           
   755                           ; 2 bytes @ 0x7
   756     0077                     	ds	1
   757     0078                     ??_requestHum:
   758     0078                     ??_requestIR:	
   759                           ; 1 bytes @ 0x8
   760                           
   761     0078                     ___lwdiv@counter:	
   762                           ; 1 bytes @ 0x8
   763                           
   764                           
   765                           ; 1 bytes @ 0x8
   766     0078                     	ds	1
   767     0079                     ??_num_to_string:
   768                           
   769                           ; 1 bytes @ 0x9
   770     0079                     	ds	1
   771                           
   772                           	psect	cstackBANK0
   773     0020                     __pcstackBANK0:
   774     0020                     ?_num_to_string:
   775     0020                     ??_Lcd_Write_String:	
   776                           ; 1 bytes @ 0x0
   777                           
   778     0020                     ??___lmul:	
   779                           ; 1 bytes @ 0x0
   780                           
   781     0020                     ??___lldiv:	
   782                           ; 1 bytes @ 0x0
   783                           
   784     0020                     Lcd_Set_Cursor@a:	
   785                           ; 1 bytes @ 0x0
   786                           
   787     0020                     num_to_string@num:	
   788                           ; 1 bytes @ 0x0
   789                           
   790                           
   791                           ; 2 bytes @ 0x0
   792     0020                     	ds	1
   793     0021                     Lcd_Set_Cursor@z:
   794     0021                     ___lmul@product:	
   795                           ; 1 bytes @ 0x1
   796                           
   797     0021                     ___lldiv@quotient:	
   798                           ; 4 bytes @ 0x1
   799                           
   800                           
   801                           ; 4 bytes @ 0x1
   802     0021                     	ds	1
   803     0022                     num_to_string@dig8:
   804     0022                     Lcd_Set_Cursor@y:	
   805                           ; 1 bytes @ 0x2
   806                           
   807                           
   808                           ; 1 bytes @ 0x2
   809     0022                     	ds	1
   810     0023                     num_to_string@len:
   811     0023                     Lcd_Set_Cursor@temp:	
   812                           ; 1 bytes @ 0x3
   813                           
   814     0023                     Lcd_Write_String@i:	
   815                           ; 1 bytes @ 0x3
   816                           
   817                           
   818                           ; 2 bytes @ 0x3
   819     0023                     	ds	1
   820     0024                     num_to_string@div3:
   821                           
   822                           ; 2 bytes @ 0x4
   823     0024                     	ds	1
   824     0025                     ?___aldiv:
   825     0025                     ___lldiv@counter:	
   826                           ; 4 bytes @ 0x5
   827                           
   828     0025                     ___aldiv@divisor:	
   829                           ; 1 bytes @ 0x5
   830                           
   831                           
   832                           ; 4 bytes @ 0x5
   833     0025                     	ds	1
   834     0026                     ?_I2C_Master_Init:
   835     0026                     num_to_string@centenas:	
   836                           ; 1 bytes @ 0x6
   837                           
   838     0026                     I2C_Master_Init@c:	
   839                           ; 2 bytes @ 0x6
   840                           
   841                           
   842                           ; 4 bytes @ 0x6
   843     0026                     	ds	2
   844     0028                     num_to_string@div1:
   845                           
   846                           ; 2 bytes @ 0x8
   847     0028                     	ds	1
   848     0029                     ___aldiv@dividend:
   849                           
   850                           ; 4 bytes @ 0x9
   851     0029                     	ds	1
   852     002A                     ??_I2C_Master_Init:
   853     002A                     num_to_string@div2:	
   854                           ; 1 bytes @ 0xA
   855                           
   856                           
   857                           ; 2 bytes @ 0xA
   858     002A                     	ds	2
   859     002C                     num_to_string@decenas:
   860                           
   861                           ; 2 bytes @ 0xC
   862     002C                     	ds	1
   863     002D                     ??___aldiv:
   864                           
   865                           ; 1 bytes @ 0xD
   866     002D                     	ds	1
   867     002E                     ??_setup:
   868     002E                     ___aldiv@counter:	
   869                           ; 1 bytes @ 0xE
   870                           
   871     002E                     num_to_string@unidades:	
   872                           ; 1 bytes @ 0xE
   873                           
   874                           
   875                           ; 2 bytes @ 0xE
   876     002E                     	ds	1
   877     002F                     ___aldiv@sign:
   878                           
   879                           ; 1 bytes @ 0xF
   880     002F                     	ds	1
   881     0030                     ??_LDC_output:
   882     0030                     ___aldiv@quotient:	
   883                           ; 1 bytes @ 0x10
   884                           
   885                           
   886                           ; 4 bytes @ 0x10
   887     0030                     	ds	4
   888     0034                     ?_map:
   889     0034                     map@min1:	
   890                           ; 2 bytes @ 0x14
   891                           
   892                           
   893                           ; 1 bytes @ 0x14
   894     0034                     	ds	1
   895     0035                     map@max1:
   896                           
   897                           ; 1 bytes @ 0x15
   898     0035                     	ds	1
   899     0036                     map@min2:
   900                           
   901                           ; 1 bytes @ 0x16
   902     0036                     	ds	1
   903     0037                     map@max2:
   904                           
   905                           ; 4 bytes @ 0x17
   906     0037                     	ds	4
   907     003B                     ??_map:
   908                           
   909                           ; 1 bytes @ 0x1B
   910     003B                     	ds	8
   911     0043                     map@val:
   912                           
   913                           ; 1 bytes @ 0x23
   914     0043                     	ds	1
   915     0044                     ??_requestTemp:
   916     0044                     ??_requestGas:	
   917                           ; 1 bytes @ 0x24
   918                           
   919                           
   920                           ; 1 bytes @ 0x24
   921     0044                     	ds	2
   922     0046                     ??_main:
   923                           
   924                           ; 1 bytes @ 0x26
   925     0046                     	ds	3
   926                           
   927                           	psect	maintext
   928     05B7                     __pmaintext:	
   929 ;;
   930 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   931 ;;
   932 ;; *************** function _main *****************
   933 ;; Defined at:
   934 ;;		line 82 in file "master.c"
   935 ;; Parameters:    Size  Location     Type
   936 ;;		None
   937 ;; Auto vars:     Size  Location     Type
   938 ;;		None
   939 ;; Return value:  Size  Location     Type
   940 ;;                  2   91[None  ] int 
   941 ;; Registers used:
   942 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   943 ;; Tracked objects:
   944 ;;		On entry : B00/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   948 ;;      Params:         0       0       0       0       0
   949 ;;      Locals:         0       0       0       0       0
   950 ;;      Temps:          0       3       0       0       0
   951 ;;      Totals:         0       3       0       0       0
   952 ;;Total ram usage:        3 bytes
   953 ;; Hardware stack levels required when called: 5
   954 ;; This function calls:
   955 ;;		_LDC_output
   956 ;;		_requestGas
   957 ;;		_requestHum
   958 ;;		_requestIR
   959 ;;		_requestTemp
   960 ;;		_setup
   961 ;;		_writeMotors
   962 ;; This function is called by:
   963 ;;		Startup code after reset
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967     05B7                     _main:	
   968                           ;psect for function _main
   969                           
   970     05B7                     l1996:	
   971                           ;incstack = 0
   972                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   973                           
   974                           
   975                           ;master.c: 83:     setup();
   976     05B7  120A  118A  26FA  120A  118A  	fcall	_setup
   977     05BC                     l1998:
   978                           
   979                           ;master.c: 86:         if (counter >= 15){
   980     05BC  300F               	movlw	15
   981     05BD  1283               	bcf	3,5	;RP0=0, select bank0
   982     05BE  1303               	bcf	3,6	;RP1=0, select bank0
   983     05BF  024B               	subwf	_counter,w
   984     05C0  1C03               	skipc
   985     05C1  2DC3               	goto	u1531
   986     05C2  2DC4               	goto	u1530
   987     05C3                     u1531:
   988     05C3  2DCC               	goto	l2004
   989     05C4                     u1530:
   990     05C4                     l2000:
   991                           
   992                           ;master.c: 87:             requestHum();
   993     05C4  120A  118A  2526  120A  118A  	fcall	_requestHum
   994     05C9                     l2002:
   995                           
   996                           ;master.c: 88:             counter = 0;
   997     05C9  1283               	bcf	3,5	;RP0=0, select bank0
   998     05CA  1303               	bcf	3,6	;RP1=0, select bank0
   999     05CB  01CB               	clrf	_counter
  1000     05CC                     l2004:
  1001                           
  1002                           ;master.c: 90:         requestTemp();
  1003     05CC  120A  118A  2316  120A  118A  	fcall	_requestTemp
  1004     05D1                     l2006:
  1005                           
  1006                           ;master.c: 91:         requestGas();
  1007     05D1  120A  118A  22B0  120A  118A  	fcall	_requestGas
  1008     05D6                     l2008:
  1009                           
  1010                           ;master.c: 92:         requestIR();
  1011     05D6  120A  118A  24DD  120A  118A  	fcall	_requestIR
  1012     05DB                     l2010:
  1013                           
  1014                           ;master.c: 94:         writeMotors();
  1015     05DB  120A  118A  2437  120A  118A  	fcall	_writeMotors
  1016     05E0                     l2012:
  1017                           
  1018                           ;master.c: 96:         LDC_output();
  1019     05E0  120A  118A  2024  120A  118A  	fcall	_LDC_output
  1020     05E5                     l2014:
  1021                           
  1022                           ;master.c: 98:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1023     05E5  3003               	movlw	3
  1024     05E6  1283               	bcf	3,5	;RP0=0, select bank0
  1025     05E7  1303               	bcf	3,6	;RP1=0, select bank0
  1026     05E8  00C8               	movwf	??_main+2
  1027     05E9  3008               	movlw	8
  1028     05EA  00C7               	movwf	??_main+1
  1029     05EB  3076               	movlw	118
  1030     05EC  00C6               	movwf	??_main
  1031     05ED                     u1547:
  1032     05ED  0BC6               	decfsz	??_main,f
  1033     05EE  2DED               	goto	u1547
  1034     05EF  0BC7               	decfsz	??_main+1,f
  1035     05F0  2DED               	goto	u1547
  1036     05F1  0BC8               	decfsz	??_main+2,f
  1037     05F2  2DED               	goto	u1547
  1038     05F3  0000               	nop
  1039     05F4                     l2016:
  1040                           
  1041                           ;master.c: 99:         counter++;
  1042     05F4  3001               	movlw	1
  1043     05F5  00FF               	movwf	btemp+1
  1044     05F6  087F               	movf	btemp+1,w
  1045     05F7  1283               	bcf	3,5	;RP0=0, select bank0
  1046     05F8  1303               	bcf	3,6	;RP1=0, select bank0
  1047     05F9  07CB               	addwf	_counter,f
  1048     05FA  2DBC               	goto	l1998
  1049     05FB  120A  118A  280C   	ljmp	start
  1050     05FE                     __end_of_main:
  1051                           
  1052                           	psect	text1
  1053     0437                     __ptext1:	
  1054 ;; *************** function _writeMotors *****************
  1055 ;; Defined at:
  1056 ;;		line 177 in file "master.c"
  1057 ;; Parameters:    Size  Location     Type
  1058 ;;		None
  1059 ;; Auto vars:     Size  Location     Type
  1060 ;;		None
  1061 ;; Return value:  Size  Location     Type
  1062 ;;                  1    wreg      void 
  1063 ;; Registers used:
  1064 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1065 ;; Tracked objects:
  1066 ;;		On entry : 0/0
  1067 ;;		On exit  : 0/0
  1068 ;;		Unchanged: 0/0
  1069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1070 ;;      Params:         0       0       0       0       0
  1071 ;;      Locals:         0       0       0       0       0
  1072 ;;      Temps:          2       0       0       0       0
  1073 ;;      Totals:         2       0       0       0       0
  1074 ;;Total ram usage:        2 bytes
  1075 ;; Hardware stack levels used: 1
  1076 ;; Hardware stack levels required when called: 3
  1077 ;; This function calls:
  1078 ;;		_I2C_Master_Start
  1079 ;;		_I2C_Master_Stop
  1080 ;;		_I2C_Master_Write
  1081 ;; This function is called by:
  1082 ;;		_main
  1083 ;; This function uses a non-reentrant model
  1084 ;;
  1085                           
  1086     0437                     _writeMotors:	
  1087                           ;psect for function _writeMotors
  1088                           
  1089     0437                     l1646:	
  1090                           ;incstack = 0
  1091                           ; Regs used in _writeMotors: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1092                           
  1093                           
  1094                           ;master.c: 179:     if(tempC > 30 && gasPPM > 400)
  1095     0437  301F               	movlw	31
  1096     0438  027B               	subwf	_tempC,w
  1097     0439  1C03               	skipc
  1098     043A  2C3C               	goto	u1141
  1099     043B  2C3D               	goto	u1140
  1100     043C                     u1141:
  1101     043C  2C4A               	goto	l1652
  1102     043D                     u1140:
  1103     043D                     l1648:
  1104     043D  3001               	movlw	1
  1105     043E  1283               	bcf	3,5	;RP0=0, select bank0
  1106     043F  1303               	bcf	3,6	;RP1=0, select bank0
  1107     0440  024A               	subwf	_gasPPM+1,w
  1108     0441  3091               	movlw	145
  1109     0442  1903               	skipnz
  1110     0443  0249               	subwf	_gasPPM,w
  1111     0444  1C03               	skipc
  1112     0445  2C47               	goto	u1151
  1113     0446  2C48               	goto	u1150
  1114     0447                     u1151:
  1115     0447  2C4A               	goto	l1652
  1116     0448                     u1150:
  1117     0448                     l1650:
  1118                           
  1119                           ;master.c: 180:         motorCon |= 0x10;
  1120     0448  167A               	bsf	_motorCon,4
  1121     0449  2C58               	goto	l1658
  1122     044A                     l1652:
  1123                           
  1124                           ;master.c: 182:         motorCon &= 0x0F;
  1125     044A  300F               	movlw	15
  1126     044B  00FF               	movwf	btemp+1
  1127     044C  087F               	movf	btemp+1,w
  1128     044D  05FA               	andwf	_motorCon,f
  1129     044E  2C58               	goto	l1658
  1130     044F                     l117:	
  1131                           ;master.c: 187:         case 0:
  1132                           
  1133                           
  1134                           ;master.c: 188:             motorCon |= 0x02;
  1135     044F  14FA               	bsf	_motorCon,1
  1136                           
  1137                           ;master.c: 189:             break;
  1138     0450  2C68               	goto	l1660
  1139     0451                     l1654:
  1140                           
  1141                           ;master.c: 191:             motorCon |= 0x03;
  1142     0451  3003               	movlw	3
  1143     0452  00FF               	movwf	btemp+1
  1144     0453  087F               	movf	btemp+1,w
  1145     0454  04FA               	iorwf	_motorCon,f
  1146                           
  1147                           ;master.c: 192:             break;
  1148     0455  2C68               	goto	l1660
  1149     0456                     l120:	
  1150                           ;master.c: 193:         case 180:
  1151                           
  1152                           
  1153                           ;master.c: 194:             motorCon |= 0x04;
  1154     0456  157A               	bsf	_motorCon,2
  1155                           
  1156                           ;master.c: 195:             break;
  1157     0457  2C68               	goto	l1660
  1158     0458                     l1658:
  1159                           
  1160                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1161                           ; Switch size 1, requested type "simple"
  1162                           ; Number of cases is 1, Range of values is 0 to 0
  1163                           ; switch strategies available:
  1164                           ; Name         Instructions Cycles
  1165                           ; simple_byte            4     3 (average)
  1166                           ; direct_byte           11     8 (fixed)
  1167                           ; jumptable            260     6 (fixed)
  1168                           ;	Chosen strategy is simple_byte
  1169     0458  3000               	movlw	0
  1170     0459  3A00               	xorlw	0	; case 0
  1171     045A  1903               	skipnz
  1172     045B  2C5D               	goto	l2042
  1173     045C  2C4F               	goto	l117
  1174     045D                     l2042:
  1175                           
  1176                           ; Switch size 1, requested type "simple"
  1177                           ; Number of cases is 3, Range of values is 0 to 180
  1178                           ; switch strategies available:
  1179                           ; Name         Instructions Cycles
  1180                           ; simple_byte           10     6 (average)
  1181                           ; jumptable            260     6 (fixed)
  1182                           ;	Chosen strategy is simple_byte
  1183     045D  30B4               	movlw	180
  1184     045E  3A00               	xorlw	0	; case 0
  1185     045F  1903               	skipnz
  1186     0460  2C4F               	goto	l117
  1187     0461  3A5A               	xorlw	90	; case 90
  1188     0462  1903               	skipnz
  1189     0463  2C51               	goto	l1654
  1190     0464  3AEE               	xorlw	238	; case 180
  1191     0465  1903               	skipnz
  1192     0466  2C56               	goto	l120
  1193     0467  2C4F               	goto	l117
  1194     0468                     l1660:
  1195                           
  1196                           ;master.c: 202:     I2C_Master_Start();
  1197     0468  120A  158A  27D4  120A  118A  	fcall	_I2C_Master_Start
  1198                           
  1199                           ;master.c: 203:     I2C_Master_Write(0x30 +0);
  1200     046D  3030               	movlw	48
  1201     046E  00F2               	movwf	I2C_Master_Write@d
  1202     046F  3000               	movlw	0
  1203     0470  00F3               	movwf	I2C_Master_Write@d+1
  1204     0471  120A  118A  27F6  120A  118A  	fcall	_I2C_Master_Write
  1205                           
  1206                           ;master.c: 204:     I2C_Master_Write(motorCon);
  1207     0476  087A               	movf	_motorCon,w
  1208     0477  00F4               	movwf	??_writeMotors
  1209     0478  01F5               	clrf	??_writeMotors+1
  1210     0479  0874               	movf	??_writeMotors,w
  1211     047A  00F2               	movwf	I2C_Master_Write@d
  1212     047B  0875               	movf	??_writeMotors+1,w
  1213     047C  00F3               	movwf	I2C_Master_Write@d+1
  1214     047D  120A  118A  27F6  120A  118A  	fcall	_I2C_Master_Write
  1215                           
  1216                           ;master.c: 205:     I2C_Master_Stop();
  1217     0482  120A  158A  27DD  120A  118A  	fcall	_I2C_Master_Stop
  1218     0487                     l1662:
  1219                           
  1220                           ;master.c: 206:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1221     0487  3034               	movlw	52
  1222     0488  00F5               	movwf	??_writeMotors+1
  1223     0489  30F1               	movlw	241
  1224     048A  00F4               	movwf	??_writeMotors
  1225     048B                     u1557:
  1226     048B  0BF4               	decfsz	??_writeMotors,f
  1227     048C  2C8B               	goto	u1557
  1228     048D  0BF5               	decfsz	??_writeMotors+1,f
  1229     048E  2C8B               	goto	u1557
  1230     048F  2C90               	nop2
  1231     0490                     l122:
  1232     0490  0008               	return
  1233     0491                     __end_of_writeMotors:
  1234                           
  1235                           	psect	text2
  1236     06FA                     __ptext2:	
  1237 ;; *************** function _setup *****************
  1238 ;; Defined at:
  1239 ;;		line 103 in file "master.c"
  1240 ;; Parameters:    Size  Location     Type
  1241 ;;		None
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;		None
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  1    wreg      void 
  1246 ;; Registers used:
  1247 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1253 ;;      Params:         0       0       0       0       0
  1254 ;;      Locals:         0       0       0       0       0
  1255 ;;      Temps:          0       2       0       0       0
  1256 ;;      Totals:         0       2       0       0       0
  1257 ;;Total ram usage:        2 bytes
  1258 ;; Hardware stack levels used: 1
  1259 ;; Hardware stack levels required when called: 4
  1260 ;; This function calls:
  1261 ;;		_I2C_Master_Init
  1262 ;;		_Lcd_Init
  1263 ;; This function is called by:
  1264 ;;		_main
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268     06FA                     _setup:	
  1269                           ;psect for function _setup
  1270                           
  1271     06FA                     l1922:	
  1272                           ;incstack = 0
  1273                           ; Regs used in _setup: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1274                           
  1275                           
  1276                           ;master.c: 104:     ANSEL = 0;
  1277     06FA  1683               	bsf	3,5	;RP0=1, select bank3
  1278     06FB  1703               	bsf	3,6	;RP1=1, select bank3
  1279     06FC  0188               	clrf	8	;volatile
  1280                           
  1281                           ;master.c: 105:     ANSELH= 0;
  1282     06FD  0189               	clrf	9	;volatile
  1283                           
  1284                           ;master.c: 107:     TRISA = 0;
  1285     06FE  1683               	bsf	3,5	;RP0=1, select bank1
  1286     06FF  1303               	bcf	3,6	;RP1=0, select bank1
  1287     0700  0185               	clrf	5	;volatile
  1288                           
  1289                           ;master.c: 108:     PORTA = 0;
  1290     0701  1283               	bcf	3,5	;RP0=0, select bank0
  1291     0702  1303               	bcf	3,6	;RP1=0, select bank0
  1292     0703  0185               	clrf	5	;volatile
  1293                           
  1294                           ;master.c: 110:     TRISD = 0;
  1295     0704  1683               	bsf	3,5	;RP0=1, select bank1
  1296     0705  1303               	bcf	3,6	;RP1=0, select bank1
  1297     0706  0188               	clrf	8	;volatile
  1298                           
  1299                           ;master.c: 111:     PORTD = 0;
  1300     0707  1283               	bcf	3,5	;RP0=0, select bank0
  1301     0708  1303               	bcf	3,6	;RP1=0, select bank0
  1302     0709  0188               	clrf	8	;volatile
  1303     070A                     l1924:
  1304                           
  1305                           ;master.c: 114:     OSCCONbits.IRCF = 0b111;
  1306     070A  3070               	movlw	112
  1307     070B  1683               	bsf	3,5	;RP0=1, select bank1
  1308     070C  1303               	bcf	3,6	;RP1=0, select bank1
  1309     070D  048F               	iorwf	15,f	;volatile
  1310     070E                     l1926:
  1311                           
  1312                           ;master.c: 115:     SCS = 1;
  1313     070E  140F               	bsf	15,0	;volatile
  1314     070F                     l1928:
  1315                           
  1316                           ;master.c: 118:     Lcd_Init();
  1317     070F  120A  118A  23DA  120A  118A  	fcall	_Lcd_Init
  1318     0714                     l1930:
  1319                           
  1320                           ;master.c: 119:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1321     0714  301A               	movlw	26
  1322     0715  1283               	bcf	3,5	;RP0=0, select bank0
  1323     0716  1303               	bcf	3,6	;RP1=0, select bank0
  1324     0717  00AF               	movwf	??_setup+1
  1325     0718  30F7               	movlw	247
  1326     0719  00AE               	movwf	??_setup
  1327     071A                     u1567:
  1328     071A  0BAE               	decfsz	??_setup,f
  1329     071B  2F1A               	goto	u1567
  1330     071C  0BAF               	decfsz	??_setup+1,f
  1331     071D  2F1A               	goto	u1567
  1332     071E  2F1F               	nop2
  1333     071F                     l1932:
  1334                           
  1335                           ;master.c: 122:     I2C_Master_Init(100000);
  1336     071F  3000               	movlw	0
  1337     0720  1283               	bcf	3,5	;RP0=0, select bank0
  1338     0721  1303               	bcf	3,6	;RP1=0, select bank0
  1339     0722  00A9               	movwf	I2C_Master_Init@c+3
  1340     0723  3001               	movlw	1
  1341     0724  00A8               	movwf	I2C_Master_Init@c+2
  1342     0725  3086               	movlw	134
  1343     0726  00A7               	movwf	I2C_Master_Init@c+1
  1344     0727  30A0               	movlw	160
  1345     0728  00A6               	movwf	I2C_Master_Init@c
  1346     0729  120A  118A  26C2  120A  118A  	fcall	_I2C_Master_Init
  1347     072E                     l99:
  1348     072E  0008               	return
  1349     072F                     __end_of_setup:
  1350                           
  1351                           	psect	text3
  1352     03DA                     __ptext3:	
  1353 ;; *************** function _Lcd_Init *****************
  1354 ;; Defined at:
  1355 ;;		line 65 in file "LCD4b.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;		None
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;		None
  1360 ;; Return value:  Size  Location     Type
  1361 ;;                  1    wreg      void 
  1362 ;; Registers used:
  1363 ;;		wreg, status,2, status,0, pclath, cstack
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1369 ;;      Params:         0       0       0       0       0
  1370 ;;      Locals:         0       0       0       0       0
  1371 ;;      Temps:          2       0       0       0       0
  1372 ;;      Totals:         2       0       0       0       0
  1373 ;;Total ram usage:        2 bytes
  1374 ;; Hardware stack levels used: 1
  1375 ;; Hardware stack levels required when called: 3
  1376 ;; This function calls:
  1377 ;;		_Lcd_Cmd
  1378 ;;		_Lcd_Port
  1379 ;; This function is called by:
  1380 ;;		_setup
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384     03DA                     _Lcd_Init:	
  1385                           ;psect for function _Lcd_Init
  1386                           
  1387     03DA                     l1866:	
  1388                           ;incstack = 0
  1389                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1390                           
  1391                           
  1392                           ;LCD4b.c: 66:     Lcd_Port(0x00);
  1393     03DA  3000               	movlw	0
  1394     03DB  120A  118A  27BA  120A  118A  	fcall	_Lcd_Port
  1395     03E0                     l1868:
  1396                           
  1397                           ;LCD4b.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1398     03E0  3034               	movlw	52
  1399     03E1  00F7               	movwf	??_Lcd_Init+1
  1400     03E2  30F1               	movlw	241
  1401     03E3  00F6               	movwf	??_Lcd_Init
  1402     03E4                     u1577:
  1403     03E4  0BF6               	decfsz	??_Lcd_Init,f
  1404     03E5  2BE4               	goto	u1577
  1405     03E6  0BF7               	decfsz	??_Lcd_Init+1,f
  1406     03E7  2BE4               	goto	u1577
  1407     03E8  2BE9               	nop2
  1408     03E9                     l1870:
  1409                           
  1410                           ;LCD4b.c: 68:     Lcd_Cmd(0x03);
  1411     03E9  3003               	movlw	3
  1412     03EA  120A  118A  27DC  120A  118A  	fcall	_Lcd_Cmd
  1413                           
  1414                           ;LCD4b.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1415     03EF  300D               	movlw	13
  1416     03F0  00F7               	movwf	??_Lcd_Init+1
  1417     03F1  30FB               	movlw	251
  1418     03F2  00F6               	movwf	??_Lcd_Init
  1419     03F3                     u1587:
  1420     03F3  0BF6               	decfsz	??_Lcd_Init,f
  1421     03F4  2BF3               	goto	u1587
  1422     03F5  0BF7               	decfsz	??_Lcd_Init+1,f
  1423     03F6  2BF3               	goto	u1587
  1424     03F7  2BF8               	nop2
  1425     03F8                     l1872:
  1426                           
  1427                           ;LCD4b.c: 70:     Lcd_Cmd(0x03);
  1428     03F8  3003               	movlw	3
  1429     03F9  120A  118A  27DC  120A  118A  	fcall	_Lcd_Cmd
  1430     03FE                     l1874:
  1431                           
  1432                           ;LCD4b.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  1433     03FE  301D               	movlw	29
  1434     03FF  00F7               	movwf	??_Lcd_Init+1
  1435     0400  3091               	movlw	145
  1436     0401  00F6               	movwf	??_Lcd_Init
  1437     0402                     u1597:
  1438     0402  0BF6               	decfsz	??_Lcd_Init,f
  1439     0403  2C02               	goto	u1597
  1440     0404  0BF7               	decfsz	??_Lcd_Init+1,f
  1441     0405  2C02               	goto	u1597
  1442                           
  1443                           ;LCD4b.c: 72:     Lcd_Cmd(0x03);
  1444     0406  3003               	movlw	3
  1445     0407  120A  118A  27DC  120A  118A  	fcall	_Lcd_Cmd
  1446                           
  1447                           ;LCD4b.c: 74:     Lcd_Cmd(0x02);
  1448     040C  3002               	movlw	2
  1449     040D  120A  118A  27DC  120A  118A  	fcall	_Lcd_Cmd
  1450                           
  1451                           ;LCD4b.c: 75:     Lcd_Cmd(0x02);
  1452     0412  3002               	movlw	2
  1453     0413  120A  118A  27DC  120A  118A  	fcall	_Lcd_Cmd
  1454                           
  1455                           ;LCD4b.c: 76:     Lcd_Cmd(0x08);
  1456     0418  3008               	movlw	8
  1457     0419  120A  118A  27DC  120A  118A  	fcall	_Lcd_Cmd
  1458                           
  1459                           ;LCD4b.c: 77:     Lcd_Cmd(0x00);
  1460     041E  3000               	movlw	0
  1461     041F  120A  118A  27DC  120A  118A  	fcall	_Lcd_Cmd
  1462                           
  1463                           ;LCD4b.c: 78:     Lcd_Cmd(0x0C);
  1464     0424  300C               	movlw	12
  1465     0425  120A  118A  27DC  120A  118A  	fcall	_Lcd_Cmd
  1466                           
  1467                           ;LCD4b.c: 79:     Lcd_Cmd(0x00);
  1468     042A  3000               	movlw	0
  1469     042B  120A  118A  27DC  120A  118A  	fcall	_Lcd_Cmd
  1470                           
  1471                           ;LCD4b.c: 80:     Lcd_Cmd(0x06);
  1472     0430  3006               	movlw	6
  1473     0431  120A  118A  27DC  120A  118A  	fcall	_Lcd_Cmd
  1474     0436                     l231:
  1475     0436  0008               	return
  1476     0437                     __end_of_Lcd_Init:
  1477                           
  1478                           	psect	text4
  1479     06C2                     __ptext4:	
  1480 ;; *************** function _I2C_Master_Init *****************
  1481 ;; Defined at:
  1482 ;;		line 16 in file "I2C.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;  c               4    6[BANK0 ] const unsigned long 
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;		None
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  1    wreg      void 
  1489 ;; Registers used:
  1490 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1496 ;;      Params:         0       4       0       0       0
  1497 ;;      Locals:         0       0       0       0       0
  1498 ;;      Temps:          0       4       0       0       0
  1499 ;;      Totals:         0       8       0       0       0
  1500 ;;Total ram usage:        8 bytes
  1501 ;; Hardware stack levels used: 1
  1502 ;; Hardware stack levels required when called: 2
  1503 ;; This function calls:
  1504 ;;		___lldiv
  1505 ;; This function is called by:
  1506 ;;		_setup
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510     06C2                     _I2C_Master_Init:	
  1511                           ;psect for function _I2C_Master_Init
  1512                           
  1513     06C2                     l1876:	
  1514                           ;incstack = 0
  1515                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1516                           
  1517                           
  1518                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1519     06C2  3028               	movlw	40
  1520     06C3  1283               	bcf	3,5	;RP0=0, select bank0
  1521     06C4  1303               	bcf	3,6	;RP1=0, select bank0
  1522     06C5  0094               	movwf	20	;volatile
  1523     06C6                     l1878:
  1524                           
  1525                           ;I2C.c: 19:     SSPCON2 = 0;
  1526     06C6  1683               	bsf	3,5	;RP0=1, select bank1
  1527     06C7  1303               	bcf	3,6	;RP1=0, select bank1
  1528     06C8  0191               	clrf	17	;volatile
  1529     06C9                     l1880:
  1530                           
  1531                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1532     06C9  1283               	bcf	3,5	;RP0=0, select bank0
  1533     06CA  1303               	bcf	3,6	;RP1=0, select bank0
  1534     06CB  0826               	movf	I2C_Master_Init@c,w
  1535     06CC  00AA               	movwf	??_I2C_Master_Init
  1536     06CD  0827               	movf	I2C_Master_Init@c+1,w
  1537     06CE  00AB               	movwf	??_I2C_Master_Init+1
  1538     06CF  0828               	movf	I2C_Master_Init@c+2,w
  1539     06D0  00AC               	movwf	??_I2C_Master_Init+2
  1540     06D1  0829               	movf	I2C_Master_Init@c+3,w
  1541     06D2  00AD               	movwf	??_I2C_Master_Init+3
  1542     06D3  3002               	movlw	2
  1543     06D4                     u1445:
  1544     06D4  1003               	clrc
  1545     06D5  0DAA               	rlf	??_I2C_Master_Init,f
  1546     06D6  0DAB               	rlf	??_I2C_Master_Init+1,f
  1547     06D7  0DAC               	rlf	??_I2C_Master_Init+2,f
  1548     06D8  0DAD               	rlf	??_I2C_Master_Init+3,f
  1549     06D9                     u1440:
  1550     06D9  3EFF               	addlw	-1
  1551     06DA  1D03               	skipz
  1552     06DB  2ED4               	goto	u1445
  1553     06DC  082D               	movf	??_I2C_Master_Init+3,w
  1554     06DD  00F5               	movwf	___lldiv@divisor+3
  1555     06DE  082C               	movf	??_I2C_Master_Init+2,w
  1556     06DF  00F4               	movwf	___lldiv@divisor+2
  1557     06E0  082B               	movf	??_I2C_Master_Init+1,w
  1558     06E1  00F3               	movwf	___lldiv@divisor+1
  1559     06E2  082A               	movf	??_I2C_Master_Init,w
  1560     06E3  00F2               	movwf	___lldiv@divisor
  1561     06E4  3000               	movlw	0
  1562     06E5  00F9               	movwf	___lldiv@dividend+3
  1563     06E6  307A               	movlw	122
  1564     06E7  00F8               	movwf	___lldiv@dividend+2
  1565     06E8  3012               	movlw	18
  1566     06E9  00F7               	movwf	___lldiv@dividend+1
  1567     06EA  3000               	movlw	0
  1568     06EB  00F6               	movwf	___lldiv@dividend
  1569     06EC  120A  118A  2248  120A  118A  	fcall	___lldiv
  1570     06F1  0872               	movf	?___lldiv,w
  1571     06F2  3EFF               	addlw	255
  1572     06F3  1683               	bsf	3,5	;RP0=1, select bank1
  1573     06F4  1303               	bcf	3,6	;RP1=0, select bank1
  1574     06F5  0093               	movwf	19	;volatile
  1575     06F6                     l1882:
  1576                           
  1577                           ;I2C.c: 21:     SSPSTAT = 0;
  1578     06F6  0194               	clrf	20	;volatile
  1579     06F7                     l1884:
  1580                           
  1581                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1582     06F7  1587               	bsf	7,3	;volatile
  1583     06F8                     l1886:
  1584                           
  1585                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1586     06F8  1607               	bsf	7,4	;volatile
  1587     06F9                     l165:
  1588     06F9  0008               	return
  1589     06FA                     __end_of_I2C_Master_Init:
  1590                           
  1591                           	psect	text5
  1592     0248                     __ptext5:	
  1593 ;; *************** function ___lldiv *****************
  1594 ;; Defined at:
  1595 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
  1596 ;; Parameters:    Size  Location     Type
  1597 ;;  divisor         4    2[COMMON] unsigned long 
  1598 ;;  dividend        4    6[COMMON] unsigned long 
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;  quotient        4    1[BANK0 ] unsigned long 
  1601 ;;  counter         1    5[BANK0 ] unsigned char 
  1602 ;; Return value:  Size  Location     Type
  1603 ;;                  4    2[COMMON] unsigned long 
  1604 ;; Registers used:
  1605 ;;		wreg, status,2, status,0, btemp+1
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1611 ;;      Params:         8       0       0       0       0
  1612 ;;      Locals:         0       5       0       0       0
  1613 ;;      Temps:          0       1       0       0       0
  1614 ;;      Totals:         8       6       0       0       0
  1615 ;;Total ram usage:       14 bytes
  1616 ;; Hardware stack levels used: 1
  1617 ;; Hardware stack levels required when called: 1
  1618 ;; This function calls:
  1619 ;;		Nothing
  1620 ;; This function is called by:
  1621 ;;		_I2C_Master_Init
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           
  1625     0248                     ___lldiv:	
  1626                           ;psect for function ___lldiv
  1627                           
  1628     0248                     l1798:	
  1629                           ;incstack = 0
  1630                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  1631                           
  1632     0248  3000               	movlw	0
  1633     0249  1283               	bcf	3,5	;RP0=0, select bank0
  1634     024A  1303               	bcf	3,6	;RP1=0, select bank0
  1635     024B  00A4               	movwf	___lldiv@quotient+3
  1636     024C  3000               	movlw	0
  1637     024D  00A3               	movwf	___lldiv@quotient+2
  1638     024E  3000               	movlw	0
  1639     024F  00A2               	movwf	___lldiv@quotient+1
  1640     0250  3000               	movlw	0
  1641     0251  00A1               	movwf	___lldiv@quotient
  1642     0252  0875               	movf	___lldiv@divisor+3,w
  1643     0253  0474               	iorwf	___lldiv@divisor+2,w
  1644     0254  0473               	iorwf	___lldiv@divisor+1,w
  1645     0255  0472               	iorwf	___lldiv@divisor,w
  1646     0256  1903               	skipnz
  1647     0257  2A59               	goto	u1271
  1648     0258  2A5A               	goto	u1270
  1649     0259                     u1271:
  1650     0259  2AA7               	goto	l1820
  1651     025A                     u1270:
  1652     025A                     l1800:
  1653     025A  01A5               	clrf	___lldiv@counter
  1654     025B  0AA5               	incf	___lldiv@counter,f
  1655     025C  2A6A               	goto	l1806
  1656     025D                     l1802:
  1657     025D  3001               	movlw	1
  1658     025E  00A0               	movwf	??___lldiv
  1659     025F                     u1285:
  1660     025F  1003               	clrc
  1661     0260  0DF2               	rlf	___lldiv@divisor,f
  1662     0261  0DF3               	rlf	___lldiv@divisor+1,f
  1663     0262  0DF4               	rlf	___lldiv@divisor+2,f
  1664     0263  0DF5               	rlf	___lldiv@divisor+3,f
  1665     0264  0BA0               	decfsz	??___lldiv,f
  1666     0265  2A5F               	goto	u1285
  1667     0266                     l1804:
  1668     0266  3001               	movlw	1
  1669     0267  00FF               	movwf	btemp+1
  1670     0268  087F               	movf	btemp+1,w
  1671     0269  07A5               	addwf	___lldiv@counter,f
  1672     026A                     l1806:
  1673     026A  1FF5               	btfss	___lldiv@divisor+3,7
  1674     026B  2A6D               	goto	u1291
  1675     026C  2A6E               	goto	u1290
  1676     026D                     u1291:
  1677     026D  2A5D               	goto	l1802
  1678     026E                     u1290:
  1679     026E                     l1808:
  1680     026E  3001               	movlw	1
  1681     026F  00A0               	movwf	??___lldiv
  1682     0270                     u1305:
  1683     0270  1003               	clrc
  1684     0271  0DA1               	rlf	___lldiv@quotient,f
  1685     0272  0DA2               	rlf	___lldiv@quotient+1,f
  1686     0273  0DA3               	rlf	___lldiv@quotient+2,f
  1687     0274  0DA4               	rlf	___lldiv@quotient+3,f
  1688     0275  0BA0               	decfsz	??___lldiv,f
  1689     0276  2A70               	goto	u1305
  1690     0277                     l1810:
  1691     0277  0875               	movf	___lldiv@divisor+3,w
  1692     0278  0279               	subwf	___lldiv@dividend+3,w
  1693     0279  1D03               	skipz
  1694     027A  2A85               	goto	u1315
  1695     027B  0874               	movf	___lldiv@divisor+2,w
  1696     027C  0278               	subwf	___lldiv@dividend+2,w
  1697     027D  1D03               	skipz
  1698     027E  2A85               	goto	u1315
  1699     027F  0873               	movf	___lldiv@divisor+1,w
  1700     0280  0277               	subwf	___lldiv@dividend+1,w
  1701     0281  1D03               	skipz
  1702     0282  2A85               	goto	u1315
  1703     0283  0872               	movf	___lldiv@divisor,w
  1704     0284  0276               	subwf	___lldiv@dividend,w
  1705     0285                     u1315:
  1706     0285  1C03               	skipc
  1707     0286  2A88               	goto	u1311
  1708     0287  2A89               	goto	u1310
  1709     0288                     u1311:
  1710     0288  2A98               	goto	l1816
  1711     0289                     u1310:
  1712     0289                     l1812:
  1713     0289  0872               	movf	___lldiv@divisor,w
  1714     028A  02F6               	subwf	___lldiv@dividend,f
  1715     028B  0873               	movf	___lldiv@divisor+1,w
  1716     028C  1C03               	skipc
  1717     028D  0F73               	incfsz	___lldiv@divisor+1,w
  1718     028E  02F7               	subwf	___lldiv@dividend+1,f
  1719     028F  0874               	movf	___lldiv@divisor+2,w
  1720     0290  1C03               	skipc
  1721     0291  0F74               	incfsz	___lldiv@divisor+2,w
  1722     0292  02F8               	subwf	___lldiv@dividend+2,f
  1723     0293  0875               	movf	___lldiv@divisor+3,w
  1724     0294  1C03               	skipc
  1725     0295  0F75               	incfsz	___lldiv@divisor+3,w
  1726     0296  02F9               	subwf	___lldiv@dividend+3,f
  1727     0297                     l1814:
  1728     0297  1421               	bsf	___lldiv@quotient,0
  1729     0298                     l1816:
  1730     0298  3001               	movlw	1
  1731     0299                     u1325:
  1732     0299  1003               	clrc
  1733     029A  0CF5               	rrf	___lldiv@divisor+3,f
  1734     029B  0CF4               	rrf	___lldiv@divisor+2,f
  1735     029C  0CF3               	rrf	___lldiv@divisor+1,f
  1736     029D  0CF2               	rrf	___lldiv@divisor,f
  1737     029E  3EFF               	addlw	-1
  1738     029F  1D03               	skipz
  1739     02A0  2A99               	goto	u1325
  1740     02A1                     l1818:
  1741     02A1  3001               	movlw	1
  1742     02A2  02A5               	subwf	___lldiv@counter,f
  1743     02A3  1D03               	btfss	3,2
  1744     02A4  2AA6               	goto	u1331
  1745     02A5  2AA7               	goto	u1330
  1746     02A6                     u1331:
  1747     02A6  2A6E               	goto	l1808
  1748     02A7                     u1330:
  1749     02A7                     l1820:
  1750     02A7  0824               	movf	___lldiv@quotient+3,w
  1751     02A8  00F5               	movwf	?___lldiv+3
  1752     02A9  0823               	movf	___lldiv@quotient+2,w
  1753     02AA  00F4               	movwf	?___lldiv+2
  1754     02AB  0822               	movf	___lldiv@quotient+1,w
  1755     02AC  00F3               	movwf	?___lldiv+1
  1756     02AD  0821               	movf	___lldiv@quotient,w
  1757     02AE  00F2               	movwf	?___lldiv
  1758     02AF                     l368:
  1759     02AF  0008               	return
  1760     02B0                     __end_of___lldiv:
  1761                           
  1762                           	psect	text6
  1763     0316                     __ptext6:	
  1764 ;; *************** function _requestTemp *****************
  1765 ;; Defined at:
  1766 ;;		line 125 in file "master.c"
  1767 ;; Parameters:    Size  Location     Type
  1768 ;;		None
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;		None
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  1    wreg      void 
  1773 ;; Registers used:
  1774 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1780 ;;      Params:         0       0       0       0       0
  1781 ;;      Locals:         0       0       0       0       0
  1782 ;;      Temps:          0       2       0       0       0
  1783 ;;      Totals:         0       2       0       0       0
  1784 ;;Total ram usage:        2 bytes
  1785 ;; Hardware stack levels used: 1
  1786 ;; Hardware stack levels required when called: 3
  1787 ;; This function calls:
  1788 ;;		_I2C_Master_Read
  1789 ;;		_I2C_Master_RepeatedStart
  1790 ;;		_I2C_Master_Start
  1791 ;;		_I2C_Master_Stop
  1792 ;;		_I2C_Master_Write
  1793 ;;		_map
  1794 ;; This function is called by:
  1795 ;;		_main
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799     0316                     _requestTemp:	
  1800                           ;psect for function _requestTemp
  1801                           
  1802     0316                     l1934:	
  1803                           ;incstack = 0
  1804                           ; Regs used in _requestTemp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1805                           
  1806                           
  1807                           ;master.c: 126:     I2C_Master_Start();
  1808     0316  120A  158A  27D4  120A  118A  	fcall	_I2C_Master_Start
  1809                           
  1810                           ;master.c: 127:     I2C_Master_Write(0x20 +0);
  1811     031B  3020               	movlw	32
  1812     031C  00F2               	movwf	I2C_Master_Write@d
  1813     031D  3000               	movlw	0
  1814     031E  00F3               	movwf	I2C_Master_Write@d+1
  1815     031F  120A  118A  27F6  120A  118A  	fcall	_I2C_Master_Write
  1816                           
  1817                           ;master.c: 128:     I2C_Master_Write('T');
  1818     0324  3054               	movlw	84
  1819     0325  00F2               	movwf	I2C_Master_Write@d
  1820     0326  3000               	movlw	0
  1821     0327  00F3               	movwf	I2C_Master_Write@d+1
  1822     0328  120A  118A  27F6  120A  118A  	fcall	_I2C_Master_Write
  1823     032D                     l1936:
  1824                           
  1825                           ;master.c: 129:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1826     032D  3034               	movlw	52
  1827     032E  1283               	bcf	3,5	;RP0=0, select bank0
  1828     032F  1303               	bcf	3,6	;RP1=0, select bank0
  1829     0330  00C5               	movwf	??_requestTemp+1
  1830     0331  30F1               	movlw	241
  1831     0332  00C4               	movwf	??_requestTemp
  1832     0333                     u1607:
  1833     0333  0BC4               	decfsz	??_requestTemp,f
  1834     0334  2B33               	goto	u1607
  1835     0335  0BC5               	decfsz	??_requestTemp+1,f
  1836     0336  2B33               	goto	u1607
  1837     0337                     l1938:
  1838                           
  1839                           ;master.c: 130:     I2C_Master_RepeatedStart();
  1840     0337  120A  158A  27CB  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1841     033C                     l1940:
  1842                           
  1843                           ;master.c: 131:     I2C_Master_Write(0x20 +1);
  1844     033C  3021               	movlw	33
  1845     033D  00F2               	movwf	I2C_Master_Write@d
  1846     033E  3000               	movlw	0
  1847     033F  00F3               	movwf	I2C_Master_Write@d+1
  1848     0340  120A  118A  27F6  120A  118A  	fcall	_I2C_Master_Write
  1849     0345                     l1942:
  1850                           
  1851                           ;master.c: 132:     n_temp = I2C_Master_Read(0);
  1852     0345  3000               	movlw	0
  1853     0346  00F2               	movwf	I2C_Master_Read@a
  1854     0347  00F3               	movwf	I2C_Master_Read@a+1
  1855     0348  120A  118A  2764  120A  118A  	fcall	_I2C_Master_Read
  1856     034D  0872               	movf	?_I2C_Master_Read,w
  1857     034E  1283               	bcf	3,5	;RP0=0, select bank0
  1858     034F  1303               	bcf	3,6	;RP1=0, select bank0
  1859     0350  00CF               	movwf	_n_temp
  1860     0351                     l1944:
  1861                           
  1862                           ;master.c: 133:     I2C_Master_Stop();
  1863     0351  120A  158A  27DD  120A  118A  	fcall	_I2C_Master_Stop
  1864     0356                     l1946:
  1865                           
  1866                           ;master.c: 134:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1867     0356  3034               	movlw	52
  1868     0357  1283               	bcf	3,5	;RP0=0, select bank0
  1869     0358  1303               	bcf	3,6	;RP1=0, select bank0
  1870     0359  00C5               	movwf	??_requestTemp+1
  1871     035A  30F1               	movlw	241
  1872     035B  00C4               	movwf	??_requestTemp
  1873     035C                     u1617:
  1874     035C  0BC4               	decfsz	??_requestTemp,f
  1875     035D  2B5C               	goto	u1617
  1876     035E  0BC5               	decfsz	??_requestTemp+1,f
  1877     035F  2B5C               	goto	u1617
  1878     0360                     l1948:
  1879                           
  1880                           ;master.c: 136:     tempC = map(n_temp,0,77,0,150);
  1881     0360  1283               	bcf	3,5	;RP0=0, select bank0
  1882     0361  1303               	bcf	3,6	;RP1=0, select bank0
  1883     0362  01B4               	clrf	map@min1
  1884     0363  304D               	movlw	77
  1885     0364  00B5               	movwf	map@max1
  1886     0365  01B6               	clrf	map@min2
  1887     0366  3000               	movlw	0
  1888     0367  00BA               	movwf	map@max2+3
  1889     0368  3000               	movlw	0
  1890     0369  00B9               	movwf	map@max2+2
  1891     036A  3000               	movlw	0
  1892     036B  00B8               	movwf	map@max2+1
  1893     036C  3096               	movlw	150
  1894     036D  00B7               	movwf	map@max2
  1895     036E  084F               	movf	_n_temp,w
  1896     036F  120A  118A  2379  120A  118A  	fcall	_map
  1897     0374  1283               	bcf	3,5	;RP0=0, select bank0
  1898     0375  1303               	bcf	3,6	;RP1=0, select bank0
  1899     0376  0834               	movf	?_map,w
  1900     0377  00FB               	movwf	_tempC
  1901     0378                     l102:
  1902     0378  0008               	return
  1903     0379                     __end_of_requestTemp:
  1904                           
  1905                           	psect	text7
  1906     04DD                     __ptext7:	
  1907 ;; *************** function _requestIR *****************
  1908 ;; Defined at:
  1909 ;;		line 165 in file "master.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;		None
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;		None
  1914 ;; Return value:  Size  Location     Type
  1915 ;;                  1    wreg      void 
  1916 ;; Registers used:
  1917 ;;		wreg, status,2, status,0, pclath, cstack
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1923 ;;      Params:         0       0       0       0       0
  1924 ;;      Locals:         0       0       0       0       0
  1925 ;;      Temps:          2       0       0       0       0
  1926 ;;      Totals:         2       0       0       0       0
  1927 ;;Total ram usage:        2 bytes
  1928 ;; Hardware stack levels used: 1
  1929 ;; Hardware stack levels required when called: 3
  1930 ;; This function calls:
  1931 ;;		_I2C_Master_Read
  1932 ;;		_I2C_Master_RepeatedStart
  1933 ;;		_I2C_Master_Start
  1934 ;;		_I2C_Master_Stop
  1935 ;;		_I2C_Master_Write
  1936 ;; This function is called by:
  1937 ;;		_main
  1938 ;; This function uses a non-reentrant model
  1939 ;;
  1940                           
  1941     04DD                     _requestIR:	
  1942                           ;psect for function _requestIR
  1943                           
  1944     04DD                     l1632:	
  1945                           ;incstack = 0
  1946                           ; Regs used in _requestIR: [wreg+status,2+status,0+pclath+cstack]
  1947                           
  1948                           
  1949                           ;master.c: 166:     I2C_Master_Start();
  1950     04DD  120A  158A  27D4  120A  118A  	fcall	_I2C_Master_Start
  1951                           
  1952                           ;master.c: 167:     I2C_Master_Write(0x20 +0);
  1953     04E2  3020               	movlw	32
  1954     04E3  00F2               	movwf	I2C_Master_Write@d
  1955     04E4  3000               	movlw	0
  1956     04E5  00F3               	movwf	I2C_Master_Write@d+1
  1957     04E6  120A  118A  27F6  120A  118A  	fcall	_I2C_Master_Write
  1958                           
  1959                           ;master.c: 168:     I2C_Master_Write('I');
  1960     04EB  3049               	movlw	73
  1961     04EC  00F2               	movwf	I2C_Master_Write@d
  1962     04ED  3000               	movlw	0
  1963     04EE  00F3               	movwf	I2C_Master_Write@d+1
  1964     04EF  120A  118A  27F6  120A  118A  	fcall	_I2C_Master_Write
  1965     04F4                     l1634:
  1966                           
  1967                           ;master.c: 169:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1968     04F4  3034               	movlw	52
  1969     04F5  00F9               	movwf	??_requestIR+1
  1970     04F6  30F1               	movlw	241
  1971     04F7  00F8               	movwf	??_requestIR
  1972     04F8                     u1627:
  1973     04F8  0BF8               	decfsz	??_requestIR,f
  1974     04F9  2CF8               	goto	u1627
  1975     04FA  0BF9               	decfsz	??_requestIR+1,f
  1976     04FB  2CF8               	goto	u1627
  1977     04FC  2CFD               	nop2
  1978     04FD                     l1636:
  1979                           
  1980                           ;master.c: 170:     I2C_Master_RepeatedStart();
  1981     04FD  120A  158A  27CB  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1982     0502                     l1638:
  1983                           
  1984                           ;master.c: 171:     I2C_Master_Write(0x20 +1);
  1985     0502  3021               	movlw	33
  1986     0503  00F2               	movwf	I2C_Master_Write@d
  1987     0504  3000               	movlw	0
  1988     0505  00F3               	movwf	I2C_Master_Write@d+1
  1989     0506  120A  118A  27F6  120A  118A  	fcall	_I2C_Master_Write
  1990     050B                     l1640:
  1991                           
  1992                           ;master.c: 172:     n_ired = I2C_Master_Read(0);
  1993     050B  3000               	movlw	0
  1994     050C  00F2               	movwf	I2C_Master_Read@a
  1995     050D  00F3               	movwf	I2C_Master_Read@a+1
  1996     050E  120A  118A  2764  120A  118A  	fcall	_I2C_Master_Read
  1997     0513  0872               	movf	?_I2C_Master_Read,w
  1998     0514  1283               	bcf	3,5	;RP0=0, select bank0
  1999     0515  1303               	bcf	3,6	;RP1=0, select bank0
  2000     0516  00CC               	movwf	_n_ired
  2001     0517                     l1642:
  2002                           
  2003                           ;master.c: 173:     I2C_Master_Stop();
  2004     0517  120A  158A  27DD  120A  118A  	fcall	_I2C_Master_Stop
  2005     051C                     l1644:
  2006                           
  2007                           ;master.c: 174:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2008     051C  3034               	movlw	52
  2009     051D  00F9               	movwf	??_requestIR+1
  2010     051E  30F1               	movlw	241
  2011     051F  00F8               	movwf	??_requestIR
  2012     0520                     u1637:
  2013     0520  0BF8               	decfsz	??_requestIR,f
  2014     0521  2D20               	goto	u1637
  2015     0522  0BF9               	decfsz	??_requestIR+1,f
  2016     0523  2D20               	goto	u1637
  2017     0524  2D25               	nop2
  2018     0525                     l111:
  2019     0525  0008               	return
  2020     0526                     __end_of_requestIR:
  2021                           
  2022                           	psect	text8
  2023     0526                     __ptext8:	
  2024 ;; *************** function _requestHum *****************
  2025 ;; Defined at:
  2026 ;;		line 139 in file "master.c"
  2027 ;; Parameters:    Size  Location     Type
  2028 ;;		None
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;		None
  2031 ;; Return value:  Size  Location     Type
  2032 ;;                  1    wreg      void 
  2033 ;; Registers used:
  2034 ;;		wreg, status,2, status,0, pclath, cstack
  2035 ;; Tracked objects:
  2036 ;;		On entry : 0/0
  2037 ;;		On exit  : 0/0
  2038 ;;		Unchanged: 0/0
  2039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2040 ;;      Params:         0       0       0       0       0
  2041 ;;      Locals:         0       0       0       0       0
  2042 ;;      Temps:          2       0       0       0       0
  2043 ;;      Totals:         2       0       0       0       0
  2044 ;;Total ram usage:        2 bytes
  2045 ;; Hardware stack levels used: 1
  2046 ;; Hardware stack levels required when called: 3
  2047 ;; This function calls:
  2048 ;;		_I2C_Master_Read
  2049 ;;		_I2C_Master_RepeatedStart
  2050 ;;		_I2C_Master_Start
  2051 ;;		_I2C_Master_Stop
  2052 ;;		_I2C_Master_Write
  2053 ;; This function is called by:
  2054 ;;		_main
  2055 ;; This function uses a non-reentrant model
  2056 ;;
  2057                           
  2058     0526                     _requestHum:	
  2059                           ;psect for function _requestHum
  2060                           
  2061     0526                     l1586:	
  2062                           ;incstack = 0
  2063                           ; Regs used in _requestHum: [wreg+status,2+status,0+pclath+cstack]
  2064                           
  2065                           
  2066                           ;master.c: 140:     I2C_Master_Start();
  2067     0526  120A  158A  27D4  120A  118A  	fcall	_I2C_Master_Start
  2068                           
  2069                           ;master.c: 141:     I2C_Master_Write(0x10 +0);
  2070     052B  3010               	movlw	16
  2071     052C  00F2               	movwf	I2C_Master_Write@d
  2072     052D  3000               	movlw	0
  2073     052E  00F3               	movwf	I2C_Master_Write@d+1
  2074     052F  120A  118A  27F6  120A  118A  	fcall	_I2C_Master_Write
  2075                           
  2076                           ;master.c: 142:     I2C_Master_Write('H');
  2077     0534  3048               	movlw	72
  2078     0535  00F2               	movwf	I2C_Master_Write@d
  2079     0536  3000               	movlw	0
  2080     0537  00F3               	movwf	I2C_Master_Write@d+1
  2081     0538  120A  118A  27F6  120A  118A  	fcall	_I2C_Master_Write
  2082     053D                     l1588:
  2083                           
  2084                           ;master.c: 143:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2085     053D  3034               	movlw	52
  2086     053E  00F9               	movwf	??_requestHum+1
  2087     053F  30F1               	movlw	241
  2088     0540  00F8               	movwf	??_requestHum
  2089     0541                     u1647:
  2090     0541  0BF8               	decfsz	??_requestHum,f
  2091     0542  2D41               	goto	u1647
  2092     0543  0BF9               	decfsz	??_requestHum+1,f
  2093     0544  2D41               	goto	u1647
  2094     0545  2D46               	nop2
  2095     0546                     l1590:
  2096                           
  2097                           ;master.c: 144:     I2C_Master_RepeatedStart();
  2098     0546  120A  158A  27CB  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2099     054B                     l1592:
  2100                           
  2101                           ;master.c: 145:     I2C_Master_Write(0x10 +1);
  2102     054B  3011               	movlw	17
  2103     054C  00F2               	movwf	I2C_Master_Write@d
  2104     054D  3000               	movlw	0
  2105     054E  00F3               	movwf	I2C_Master_Write@d+1
  2106     054F  120A  118A  27F6  120A  118A  	fcall	_I2C_Master_Write
  2107     0554                     l1594:
  2108                           
  2109                           ;master.c: 146:     n_hum = I2C_Master_Read(0);
  2110     0554  3000               	movlw	0
  2111     0555  00F2               	movwf	I2C_Master_Read@a
  2112     0556  00F3               	movwf	I2C_Master_Read@a+1
  2113     0557  120A  118A  2764  120A  118A  	fcall	_I2C_Master_Read
  2114     055C  0872               	movf	?_I2C_Master_Read,w
  2115     055D  1283               	bcf	3,5	;RP0=0, select bank0
  2116     055E  1303               	bcf	3,6	;RP1=0, select bank0
  2117     055F  00CE               	movwf	_n_hum
  2118     0560                     l1596:
  2119                           
  2120                           ;master.c: 147:     I2C_Master_Stop();
  2121     0560  120A  158A  27DD  120A  118A  	fcall	_I2C_Master_Stop
  2122     0565                     l1598:
  2123                           
  2124                           ;master.c: 148:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2125     0565  3034               	movlw	52
  2126     0566  00F9               	movwf	??_requestHum+1
  2127     0567  30F1               	movlw	241
  2128     0568  00F8               	movwf	??_requestHum
  2129     0569                     u1657:
  2130     0569  0BF8               	decfsz	??_requestHum,f
  2131     056A  2D69               	goto	u1657
  2132     056B  0BF9               	decfsz	??_requestHum+1,f
  2133     056C  2D69               	goto	u1657
  2134     056D  2D6E               	nop2
  2135     056E                     l105:
  2136     056E  0008               	return
  2137     056F                     __end_of_requestHum:
  2138                           
  2139                           	psect	text9
  2140     02B0                     __ptext9:	
  2141 ;; *************** function _requestGas *****************
  2142 ;; Defined at:
  2143 ;;		line 151 in file "master.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;		None
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;		None
  2148 ;; Return value:  Size  Location     Type
  2149 ;;                  1    wreg      void 
  2150 ;; Registers used:
  2151 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2157 ;;      Params:         0       0       0       0       0
  2158 ;;      Locals:         0       0       0       0       0
  2159 ;;      Temps:          0       2       0       0       0
  2160 ;;      Totals:         0       2       0       0       0
  2161 ;;Total ram usage:        2 bytes
  2162 ;; Hardware stack levels used: 1
  2163 ;; Hardware stack levels required when called: 3
  2164 ;; This function calls:
  2165 ;;		_I2C_Master_Read
  2166 ;;		_I2C_Master_RepeatedStart
  2167 ;;		_I2C_Master_Start
  2168 ;;		_I2C_Master_Stop
  2169 ;;		_I2C_Master_Write
  2170 ;;		_map
  2171 ;; This function is called by:
  2172 ;;		_main
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176     02B0                     _requestGas:	
  2177                           ;psect for function _requestGas
  2178                           
  2179     02B0                     l1950:	
  2180                           ;incstack = 0
  2181                           ; Regs used in _requestGas: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2182                           
  2183                           
  2184                           ;master.c: 152:     I2C_Master_Start();
  2185     02B0  120A  158A  27D4  120A  118A  	fcall	_I2C_Master_Start
  2186                           
  2187                           ;master.c: 153:     I2C_Master_Write(0x20 +0);
  2188     02B5  3020               	movlw	32
  2189     02B6  00F2               	movwf	I2C_Master_Write@d
  2190     02B7  3000               	movlw	0
  2191     02B8  00F3               	movwf	I2C_Master_Write@d+1
  2192     02B9  120A  118A  27F6  120A  118A  	fcall	_I2C_Master_Write
  2193                           
  2194                           ;master.c: 154:     I2C_Master_Write('G');
  2195     02BE  3047               	movlw	71
  2196     02BF  00F2               	movwf	I2C_Master_Write@d
  2197     02C0  3000               	movlw	0
  2198     02C1  00F3               	movwf	I2C_Master_Write@d+1
  2199     02C2  120A  118A  27F6  120A  118A  	fcall	_I2C_Master_Write
  2200     02C7                     l1952:
  2201                           
  2202                           ;master.c: 155:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2203     02C7  3034               	movlw	52
  2204     02C8  1283               	bcf	3,5	;RP0=0, select bank0
  2205     02C9  1303               	bcf	3,6	;RP1=0, select bank0
  2206     02CA  00C5               	movwf	??_requestGas+1
  2207     02CB  30F1               	movlw	241
  2208     02CC  00C4               	movwf	??_requestGas
  2209     02CD                     u1667:
  2210     02CD  0BC4               	decfsz	??_requestGas,f
  2211     02CE  2ACD               	goto	u1667
  2212     02CF  0BC5               	decfsz	??_requestGas+1,f
  2213     02D0  2ACD               	goto	u1667
  2214     02D1                     l1954:
  2215                           
  2216                           ;master.c: 156:     I2C_Master_RepeatedStart();
  2217     02D1  120A  158A  27CB  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2218     02D6                     l1956:
  2219                           
  2220                           ;master.c: 157:     I2C_Master_Write(0x20 +1);
  2221     02D6  3021               	movlw	33
  2222     02D7  00F2               	movwf	I2C_Master_Write@d
  2223     02D8  3000               	movlw	0
  2224     02D9  00F3               	movwf	I2C_Master_Write@d+1
  2225     02DA  120A  118A  27F6  120A  118A  	fcall	_I2C_Master_Write
  2226     02DF                     l1958:
  2227                           
  2228                           ;master.c: 158:     n_gas = I2C_Master_Read(0);
  2229     02DF  3000               	movlw	0
  2230     02E0  00F2               	movwf	I2C_Master_Read@a
  2231     02E1  00F3               	movwf	I2C_Master_Read@a+1
  2232     02E2  120A  118A  2764  120A  118A  	fcall	_I2C_Master_Read
  2233     02E7  0872               	movf	?_I2C_Master_Read,w
  2234     02E8  1283               	bcf	3,5	;RP0=0, select bank0
  2235     02E9  1303               	bcf	3,6	;RP1=0, select bank0
  2236     02EA  00CD               	movwf	_n_gas
  2237     02EB                     l1960:
  2238                           
  2239                           ;master.c: 159:     I2C_Master_Stop();
  2240     02EB  120A  158A  27DD  120A  118A  	fcall	_I2C_Master_Stop
  2241     02F0                     l1962:
  2242                           
  2243                           ;master.c: 160:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2244     02F0  3034               	movlw	52
  2245     02F1  1283               	bcf	3,5	;RP0=0, select bank0
  2246     02F2  1303               	bcf	3,6	;RP1=0, select bank0
  2247     02F3  00C5               	movwf	??_requestGas+1
  2248     02F4  30F1               	movlw	241
  2249     02F5  00C4               	movwf	??_requestGas
  2250     02F6                     u1677:
  2251     02F6  0BC4               	decfsz	??_requestGas,f
  2252     02F7  2AF6               	goto	u1677
  2253     02F8  0BC5               	decfsz	??_requestGas+1,f
  2254     02F9  2AF6               	goto	u1677
  2255     02FA                     l1964:
  2256                           
  2257                           ;master.c: 162:     gasPPM = map(n_gas,0,255,100,800);
  2258     02FA  1283               	bcf	3,5	;RP0=0, select bank0
  2259     02FB  1303               	bcf	3,6	;RP1=0, select bank0
  2260     02FC  01B4               	clrf	map@min1
  2261     02FD  30FF               	movlw	255
  2262     02FE  00B5               	movwf	map@max1
  2263     02FF  3064               	movlw	100
  2264     0300  00B6               	movwf	map@min2
  2265     0301  3000               	movlw	0
  2266     0302  00BA               	movwf	map@max2+3
  2267     0303  3000               	movlw	0
  2268     0304  00B9               	movwf	map@max2+2
  2269     0305  3003               	movlw	3
  2270     0306  00B8               	movwf	map@max2+1
  2271     0307  3020               	movlw	32
  2272     0308  00B7               	movwf	map@max2
  2273     0309  084D               	movf	_n_gas,w
  2274     030A  120A  118A  2379  120A  118A  	fcall	_map
  2275     030F  1283               	bcf	3,5	;RP0=0, select bank0
  2276     0310  1303               	bcf	3,6	;RP1=0, select bank0
  2277     0311  0835               	movf	?_map+1,w
  2278     0312  00CA               	movwf	_gasPPM+1
  2279     0313  0834               	movf	?_map,w
  2280     0314  00C9               	movwf	_gasPPM
  2281     0315                     l108:
  2282     0315  0008               	return
  2283     0316                     __end_of_requestGas:
  2284                           
  2285                           	psect	text10
  2286     0379                     __ptext10:	
  2287 ;; *************** function _map *****************
  2288 ;; Defined at:
  2289 ;;		line 263 in file "master.c"
  2290 ;; Parameters:    Size  Location     Type
  2291 ;;  val             1    wreg     unsigned char 
  2292 ;;  min1            1   20[BANK0 ] unsigned char 
  2293 ;;  max1            1   21[BANK0 ] unsigned char 
  2294 ;;  min2            1   22[BANK0 ] unsigned char 
  2295 ;;  max2            4   23[BANK0 ] long 
  2296 ;; Auto vars:     Size  Location     Type
  2297 ;;  val             1   35[BANK0 ] unsigned char 
  2298 ;; Return value:  Size  Location     Type
  2299 ;;                  2   20[BANK0 ] unsigned int 
  2300 ;; Registers used:
  2301 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2302 ;; Tracked objects:
  2303 ;;		On entry : 0/0
  2304 ;;		On exit  : 0/0
  2305 ;;		Unchanged: 0/0
  2306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2307 ;;      Params:         0       7       0       0       0
  2308 ;;      Locals:         0       1       0       0       0
  2309 ;;      Temps:          0       8       0       0       0
  2310 ;;      Totals:         0      16       0       0       0
  2311 ;;Total ram usage:       16 bytes
  2312 ;; Hardware stack levels used: 1
  2313 ;; Hardware stack levels required when called: 2
  2314 ;; This function calls:
  2315 ;;		___aldiv
  2316 ;;		___lmul
  2317 ;; This function is called by:
  2318 ;;		_requestTemp
  2319 ;;		_requestGas
  2320 ;; This function uses a non-reentrant model
  2321 ;;
  2322                           
  2323     0379                     _map:	
  2324                           ;psect for function _map
  2325                           
  2326                           
  2327                           ;incstack = 0
  2328                           ; Regs used in _map: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2329                           ;map@val stored from wreg
  2330     0379  1283               	bcf	3,5	;RP0=0, select bank0
  2331     037A  1303               	bcf	3,6	;RP1=0, select bank0
  2332     037B  00C3               	movwf	map@val
  2333     037C                     l1888:
  2334                           
  2335                           ;master.c: 264:     return ((val-min1)*(max2-min2)/(max1-min1))+min2;
  2336     037C  0834               	movf	map@min1,w
  2337     037D  0235               	subwf	map@max1,w
  2338     037E  00A5               	movwf	___aldiv@divisor
  2339     037F  01A6               	clrf	___aldiv@divisor+1
  2340     0380  1C03               	skipc
  2341     0381  03A6               	decf	___aldiv@divisor+1,f
  2342     0382  01A7               	clrf	___aldiv@divisor+2
  2343     0383  1BA6               	btfsc	___aldiv@divisor+1,7
  2344     0384  03A7               	decf	___aldiv@divisor+2,f
  2345     0385  0827               	movf	___aldiv@divisor+2,w
  2346     0386  00A8               	movwf	___aldiv@divisor+3
  2347     0387  0834               	movf	map@min1,w
  2348     0388  0243               	subwf	map@val,w
  2349     0389  00F2               	movwf	___lmul@multiplier
  2350     038A  01F3               	clrf	___lmul@multiplier+1
  2351     038B  1C03               	skipc
  2352     038C  03F3               	decf	___lmul@multiplier+1,f
  2353     038D  01F4               	clrf	___lmul@multiplier+2
  2354     038E  1BF3               	btfsc	___lmul@multiplier+1,7
  2355     038F  03F4               	decf	___lmul@multiplier+2,f
  2356     0390  0874               	movf	___lmul@multiplier+2,w
  2357     0391  00F5               	movwf	___lmul@multiplier+3
  2358     0392  0836               	movf	map@min2,w
  2359     0393  00BB               	movwf	??_map
  2360     0394  01BC               	clrf	??_map+1
  2361     0395  01BD               	clrf	??_map+2
  2362     0396  01BE               	clrf	??_map+3
  2363     0397  0837               	movf	map@max2,w
  2364     0398  00BF               	movwf	??_map+4
  2365     0399  0838               	movf	map@max2+1,w
  2366     039A  00C0               	movwf	??_map+5
  2367     039B  0839               	movf	map@max2+2,w
  2368     039C  00C1               	movwf	??_map+6
  2369     039D  083A               	movf	map@max2+3,w
  2370     039E  00C2               	movwf	??_map+7
  2371     039F  083B               	movf	??_map,w
  2372     03A0  02BF               	subwf	??_map+4,f
  2373     03A1  083C               	movf	??_map+1,w
  2374     03A2  1C03               	skipc
  2375     03A3  0F3C               	incfsz	??_map+1,w
  2376     03A4  2BA6               	goto	u1451
  2377     03A5  2BA7               	goto	u1452
  2378     03A6                     u1451:
  2379     03A6  02C0               	subwf	??_map+5,f
  2380     03A7                     u1452:
  2381     03A7  083D               	movf	??_map+2,w
  2382     03A8  1C03               	skipc
  2383     03A9  0F3D               	incfsz	??_map+2,w
  2384     03AA  2BAC               	goto	u1453
  2385     03AB  2BAD               	goto	u1454
  2386     03AC                     u1453:
  2387     03AC  02C1               	subwf	??_map+6,f
  2388     03AD                     u1454:
  2389     03AD  083E               	movf	??_map+3,w
  2390     03AE  1C03               	skipc
  2391     03AF  0F3E               	incfsz	??_map+3,w
  2392     03B0  2BB2               	goto	u1455
  2393     03B1  2BB3               	goto	u1456
  2394     03B2                     u1455:
  2395     03B2  02C2               	subwf	??_map+7,f
  2396     03B3                     u1456:
  2397     03B3  0842               	movf	??_map+7,w
  2398     03B4  00F9               	movwf	___lmul@multiplicand+3
  2399     03B5  0841               	movf	??_map+6,w
  2400     03B6  00F8               	movwf	___lmul@multiplicand+2
  2401     03B7  0840               	movf	??_map+5,w
  2402     03B8  00F7               	movwf	___lmul@multiplicand+1
  2403     03B9  083F               	movf	??_map+4,w
  2404     03BA  00F6               	movwf	___lmul@multiplicand
  2405     03BB  120A  118A  256F  120A  118A  	fcall	___lmul
  2406     03C0  0875               	movf	?___lmul+3,w
  2407     03C1  1283               	bcf	3,5	;RP0=0, select bank0
  2408     03C2  1303               	bcf	3,6	;RP1=0, select bank0
  2409     03C3  00AC               	movwf	___aldiv@dividend+3
  2410     03C4  0874               	movf	?___lmul+2,w
  2411     03C5  00AB               	movwf	___aldiv@dividend+2
  2412     03C6  0873               	movf	?___lmul+1,w
  2413     03C7  00AA               	movwf	___aldiv@dividend+1
  2414     03C8  0872               	movf	?___lmul,w
  2415     03C9  00A9               	movwf	___aldiv@dividend
  2416     03CA  120A  118A  21AB  120A  118A  	fcall	___aldiv
  2417     03CF  1283               	bcf	3,5	;RP0=0, select bank0
  2418     03D0  1303               	bcf	3,6	;RP1=0, select bank0
  2419     03D1  0836               	movf	map@min2,w
  2420     03D2  0725               	addwf	?___aldiv,w
  2421     03D3  00B4               	movwf	?_map
  2422     03D4  3000               	movlw	0
  2423     03D5  1803               	skipnc
  2424     03D6  3001               	movlw	1
  2425     03D7  0726               	addwf	?___aldiv+1,w
  2426     03D8  00B5               	movwf	?_map+1
  2427     03D9                     l136:
  2428     03D9  0008               	return
  2429     03DA                     __end_of_map:
  2430                           
  2431                           	psect	text11
  2432     056F                     __ptext11:	
  2433 ;; *************** function ___lmul *****************
  2434 ;; Defined at:
  2435 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul32.c"
  2436 ;; Parameters:    Size  Location     Type
  2437 ;;  multiplier      4    2[COMMON] unsigned long 
  2438 ;;  multiplicand    4    6[COMMON] unsigned long 
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;  product         4    1[BANK0 ] unsigned long 
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  4    2[COMMON] unsigned long 
  2443 ;; Registers used:
  2444 ;;		wreg, status,2, status,0
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2450 ;;      Params:         8       0       0       0       0
  2451 ;;      Locals:         0       4       0       0       0
  2452 ;;      Temps:          0       1       0       0       0
  2453 ;;      Totals:         8       5       0       0       0
  2454 ;;Total ram usage:       13 bytes
  2455 ;; Hardware stack levels used: 1
  2456 ;; Hardware stack levels required when called: 1
  2457 ;; This function calls:
  2458 ;;		Nothing
  2459 ;; This function is called by:
  2460 ;;		_map
  2461 ;; This function uses a non-reentrant model
  2462 ;;
  2463                           
  2464     056F                     ___lmul:	
  2465                           ;psect for function ___lmul
  2466                           
  2467     056F                     l1784:	
  2468                           ;incstack = 0
  2469                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2470                           
  2471     056F  3000               	movlw	0
  2472     0570  1283               	bcf	3,5	;RP0=0, select bank0
  2473     0571  1303               	bcf	3,6	;RP1=0, select bank0
  2474     0572  00A4               	movwf	___lmul@product+3
  2475     0573  3000               	movlw	0
  2476     0574  00A3               	movwf	___lmul@product+2
  2477     0575  3000               	movlw	0
  2478     0576  00A2               	movwf	___lmul@product+1
  2479     0577  3000               	movlw	0
  2480     0578  00A1               	movwf	___lmul@product
  2481     0579                     l1786:
  2482     0579  1C72               	btfss	___lmul@multiplier,0
  2483     057A  2D7C               	goto	u1221
  2484     057B  2D7D               	goto	u1220
  2485     057C                     u1221:
  2486     057C  2D94               	goto	l1790
  2487     057D                     u1220:
  2488     057D                     l1788:
  2489     057D  0876               	movf	___lmul@multiplicand,w
  2490     057E  07A1               	addwf	___lmul@product,f
  2491     057F  0877               	movf	___lmul@multiplicand+1,w
  2492     0580  1103               	clrz
  2493     0581  1803               	skipnc
  2494     0582  3E01               	addlw	1
  2495     0583  1903               	skipnz
  2496     0584  2D86               	goto	u1231
  2497     0585  07A2               	addwf	___lmul@product+1,f
  2498     0586                     u1231:
  2499     0586  0878               	movf	___lmul@multiplicand+2,w
  2500     0587  1103               	clrz
  2501     0588  1803               	skipnc
  2502     0589  3E01               	addlw	1
  2503     058A  1903               	skipnz
  2504     058B  2D8D               	goto	u1232
  2505     058C  07A3               	addwf	___lmul@product+2,f
  2506     058D                     u1232:
  2507     058D  0879               	movf	___lmul@multiplicand+3,w
  2508     058E  1103               	clrz
  2509     058F  1803               	skipnc
  2510     0590  3E01               	addlw	1
  2511     0591  1903               	skipnz
  2512     0592  2D94               	goto	u1233
  2513     0593  07A4               	addwf	___lmul@product+3,f
  2514     0594                     u1233:
  2515     0594                     l1790:
  2516     0594  3001               	movlw	1
  2517     0595  00A0               	movwf	??___lmul
  2518     0596                     u1245:
  2519     0596  1003               	clrc
  2520     0597  0DF6               	rlf	___lmul@multiplicand,f
  2521     0598  0DF7               	rlf	___lmul@multiplicand+1,f
  2522     0599  0DF8               	rlf	___lmul@multiplicand+2,f
  2523     059A  0DF9               	rlf	___lmul@multiplicand+3,f
  2524     059B  0BA0               	decfsz	??___lmul,f
  2525     059C  2D96               	goto	u1245
  2526     059D                     l1792:
  2527     059D  3001               	movlw	1
  2528     059E                     u1255:
  2529     059E  1003               	clrc
  2530     059F  0CF5               	rrf	___lmul@multiplier+3,f
  2531     05A0  0CF4               	rrf	___lmul@multiplier+2,f
  2532     05A1  0CF3               	rrf	___lmul@multiplier+1,f
  2533     05A2  0CF2               	rrf	___lmul@multiplier,f
  2534     05A3  3EFF               	addlw	-1
  2535     05A4  1D03               	skipz
  2536     05A5  2D9E               	goto	u1255
  2537     05A6  0875               	movf	___lmul@multiplier+3,w
  2538     05A7  0474               	iorwf	___lmul@multiplier+2,w
  2539     05A8  0473               	iorwf	___lmul@multiplier+1,w
  2540     05A9  0472               	iorwf	___lmul@multiplier,w
  2541     05AA  1D03               	skipz
  2542     05AB  2DAD               	goto	u1261
  2543     05AC  2DAE               	goto	u1260
  2544     05AD                     u1261:
  2545     05AD  2D79               	goto	l1786
  2546     05AE                     u1260:
  2547     05AE                     l1794:
  2548     05AE  0824               	movf	___lmul@product+3,w
  2549     05AF  00F5               	movwf	?___lmul+3
  2550     05B0  0823               	movf	___lmul@product+2,w
  2551     05B1  00F4               	movwf	?___lmul+2
  2552     05B2  0822               	movf	___lmul@product+1,w
  2553     05B3  00F3               	movwf	?___lmul+1
  2554     05B4  0821               	movf	___lmul@product,w
  2555     05B5  00F2               	movwf	?___lmul
  2556     05B6                     l346:
  2557     05B6  0008               	return
  2558     05B7                     __end_of___lmul:
  2559                           
  2560                           	psect	text12
  2561     01AB                     __ptext12:	
  2562 ;; *************** function ___aldiv *****************
  2563 ;; Defined at:
  2564 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\aldiv.c"
  2565 ;; Parameters:    Size  Location     Type
  2566 ;;  divisor         4    5[BANK0 ] long 
  2567 ;;  dividend        4    9[BANK0 ] long 
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;  quotient        4   16[BANK0 ] long 
  2570 ;;  sign            1   15[BANK0 ] unsigned char 
  2571 ;;  counter         1   14[BANK0 ] unsigned char 
  2572 ;; Return value:  Size  Location     Type
  2573 ;;                  4    5[BANK0 ] long 
  2574 ;; Registers used:
  2575 ;;		wreg, status,2, status,0, btemp+1
  2576 ;; Tracked objects:
  2577 ;;		On entry : 0/0
  2578 ;;		On exit  : 0/0
  2579 ;;		Unchanged: 0/0
  2580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2581 ;;      Params:         0       8       0       0       0
  2582 ;;      Locals:         0       6       0       0       0
  2583 ;;      Temps:          0       1       0       0       0
  2584 ;;      Totals:         0      15       0       0       0
  2585 ;;Total ram usage:       15 bytes
  2586 ;; Hardware stack levels used: 1
  2587 ;; Hardware stack levels required when called: 1
  2588 ;; This function calls:
  2589 ;;		Nothing
  2590 ;; This function is called by:
  2591 ;;		_map
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595     01AB                     ___aldiv:	
  2596                           ;psect for function ___aldiv
  2597                           
  2598     01AB                     l1824:	
  2599                           ;incstack = 0
  2600                           ; Regs used in ___aldiv: [wreg+status,2+status,0+btemp+1]
  2601                           
  2602     01AB  1283               	bcf	3,5	;RP0=0, select bank0
  2603     01AC  1303               	bcf	3,6	;RP1=0, select bank0
  2604     01AD  01AF               	clrf	___aldiv@sign
  2605     01AE                     l1826:
  2606     01AE  1FA8               	btfss	___aldiv@divisor+3,7
  2607     01AF  29B1               	goto	u1341
  2608     01B0  29B2               	goto	u1340
  2609     01B1                     u1341:
  2610     01B1  29BF               	goto	l397
  2611     01B2                     u1340:
  2612     01B2                     l1828:
  2613     01B2  09A5               	comf	___aldiv@divisor,f
  2614     01B3  09A6               	comf	___aldiv@divisor+1,f
  2615     01B4  09A7               	comf	___aldiv@divisor+2,f
  2616     01B5  09A8               	comf	___aldiv@divisor+3,f
  2617     01B6  0AA5               	incf	___aldiv@divisor,f
  2618     01B7  1903               	skipnz
  2619     01B8  0AA6               	incf	___aldiv@divisor+1,f
  2620     01B9  1903               	skipnz
  2621     01BA  0AA7               	incf	___aldiv@divisor+2,f
  2622     01BB  1903               	skipnz
  2623     01BC  0AA8               	incf	___aldiv@divisor+3,f
  2624     01BD  01AF               	clrf	___aldiv@sign
  2625     01BE  0AAF               	incf	___aldiv@sign,f
  2626     01BF                     l397:
  2627     01BF  1FAC               	btfss	___aldiv@dividend+3,7
  2628     01C0  29C2               	goto	u1351
  2629     01C1  29C3               	goto	u1350
  2630     01C2                     u1351:
  2631     01C2  29D2               	goto	l1834
  2632     01C3                     u1350:
  2633     01C3                     l1830:
  2634     01C3  09A9               	comf	___aldiv@dividend,f
  2635     01C4  09AA               	comf	___aldiv@dividend+1,f
  2636     01C5  09AB               	comf	___aldiv@dividend+2,f
  2637     01C6  09AC               	comf	___aldiv@dividend+3,f
  2638     01C7  0AA9               	incf	___aldiv@dividend,f
  2639     01C8  1903               	skipnz
  2640     01C9  0AAA               	incf	___aldiv@dividend+1,f
  2641     01CA  1903               	skipnz
  2642     01CB  0AAB               	incf	___aldiv@dividend+2,f
  2643     01CC  1903               	skipnz
  2644     01CD  0AAC               	incf	___aldiv@dividend+3,f
  2645     01CE                     l1832:
  2646     01CE  3001               	movlw	1
  2647     01CF  00FF               	movwf	btemp+1
  2648     01D0  087F               	movf	btemp+1,w
  2649     01D1  06AF               	xorwf	___aldiv@sign,f
  2650     01D2                     l1834:
  2651     01D2  3000               	movlw	0
  2652     01D3  00B3               	movwf	___aldiv@quotient+3
  2653     01D4  3000               	movlw	0
  2654     01D5  00B2               	movwf	___aldiv@quotient+2
  2655     01D6  3000               	movlw	0
  2656     01D7  00B1               	movwf	___aldiv@quotient+1
  2657     01D8  3000               	movlw	0
  2658     01D9  00B0               	movwf	___aldiv@quotient
  2659     01DA                     l1836:
  2660     01DA  0828               	movf	___aldiv@divisor+3,w
  2661     01DB  0427               	iorwf	___aldiv@divisor+2,w
  2662     01DC  0426               	iorwf	___aldiv@divisor+1,w
  2663     01DD  0425               	iorwf	___aldiv@divisor,w
  2664     01DE  1903               	skipnz
  2665     01DF  29E1               	goto	u1361
  2666     01E0  29E2               	goto	u1360
  2667     01E1                     u1361:
  2668     01E1  2A2F               	goto	l1858
  2669     01E2                     u1360:
  2670     01E2                     l1838:
  2671     01E2  01AE               	clrf	___aldiv@counter
  2672     01E3  0AAE               	incf	___aldiv@counter,f
  2673     01E4  29F2               	goto	l1844
  2674     01E5                     l1840:
  2675     01E5  3001               	movlw	1
  2676     01E6  00AD               	movwf	??___aldiv
  2677     01E7                     u1375:
  2678     01E7  1003               	clrc
  2679     01E8  0DA5               	rlf	___aldiv@divisor,f
  2680     01E9  0DA6               	rlf	___aldiv@divisor+1,f
  2681     01EA  0DA7               	rlf	___aldiv@divisor+2,f
  2682     01EB  0DA8               	rlf	___aldiv@divisor+3,f
  2683     01EC  0BAD               	decfsz	??___aldiv,f
  2684     01ED  29E7               	goto	u1375
  2685     01EE                     l1842:
  2686     01EE  3001               	movlw	1
  2687     01EF  00FF               	movwf	btemp+1
  2688     01F0  087F               	movf	btemp+1,w
  2689     01F1  07AE               	addwf	___aldiv@counter,f
  2690     01F2                     l1844:
  2691     01F2  1FA8               	btfss	___aldiv@divisor+3,7
  2692     01F3  29F5               	goto	u1381
  2693     01F4  29F6               	goto	u1380
  2694     01F5                     u1381:
  2695     01F5  29E5               	goto	l1840
  2696     01F6                     u1380:
  2697     01F6                     l1846:
  2698     01F6  3001               	movlw	1
  2699     01F7  00AD               	movwf	??___aldiv
  2700     01F8                     u1395:
  2701     01F8  1003               	clrc
  2702     01F9  0DB0               	rlf	___aldiv@quotient,f
  2703     01FA  0DB1               	rlf	___aldiv@quotient+1,f
  2704     01FB  0DB2               	rlf	___aldiv@quotient+2,f
  2705     01FC  0DB3               	rlf	___aldiv@quotient+3,f
  2706     01FD  0BAD               	decfsz	??___aldiv,f
  2707     01FE  29F8               	goto	u1395
  2708     01FF                     l1848:
  2709     01FF  0828               	movf	___aldiv@divisor+3,w
  2710     0200  022C               	subwf	___aldiv@dividend+3,w
  2711     0201  1D03               	skipz
  2712     0202  2A0D               	goto	u1405
  2713     0203  0827               	movf	___aldiv@divisor+2,w
  2714     0204  022B               	subwf	___aldiv@dividend+2,w
  2715     0205  1D03               	skipz
  2716     0206  2A0D               	goto	u1405
  2717     0207  0826               	movf	___aldiv@divisor+1,w
  2718     0208  022A               	subwf	___aldiv@dividend+1,w
  2719     0209  1D03               	skipz
  2720     020A  2A0D               	goto	u1405
  2721     020B  0825               	movf	___aldiv@divisor,w
  2722     020C  0229               	subwf	___aldiv@dividend,w
  2723     020D                     u1405:
  2724     020D  1C03               	skipc
  2725     020E  2A10               	goto	u1401
  2726     020F  2A11               	goto	u1400
  2727     0210                     u1401:
  2728     0210  2A20               	goto	l1854
  2729     0211                     u1400:
  2730     0211                     l1850:
  2731     0211  0825               	movf	___aldiv@divisor,w
  2732     0212  02A9               	subwf	___aldiv@dividend,f
  2733     0213  0826               	movf	___aldiv@divisor+1,w
  2734     0214  1C03               	skipc
  2735     0215  0F26               	incfsz	___aldiv@divisor+1,w
  2736     0216  02AA               	subwf	___aldiv@dividend+1,f
  2737     0217  0827               	movf	___aldiv@divisor+2,w
  2738     0218  1C03               	skipc
  2739     0219  0F27               	incfsz	___aldiv@divisor+2,w
  2740     021A  02AB               	subwf	___aldiv@dividend+2,f
  2741     021B  0828               	movf	___aldiv@divisor+3,w
  2742     021C  1C03               	skipc
  2743     021D  0F28               	incfsz	___aldiv@divisor+3,w
  2744     021E  02AC               	subwf	___aldiv@dividend+3,f
  2745     021F                     l1852:
  2746     021F  1430               	bsf	___aldiv@quotient,0
  2747     0220                     l1854:
  2748     0220  3001               	movlw	1
  2749     0221                     u1415:
  2750     0221  1003               	clrc
  2751     0222  0CA8               	rrf	___aldiv@divisor+3,f
  2752     0223  0CA7               	rrf	___aldiv@divisor+2,f
  2753     0224  0CA6               	rrf	___aldiv@divisor+1,f
  2754     0225  0CA5               	rrf	___aldiv@divisor,f
  2755     0226  3EFF               	addlw	-1
  2756     0227  1D03               	skipz
  2757     0228  2A21               	goto	u1415
  2758     0229                     l1856:
  2759     0229  3001               	movlw	1
  2760     022A  02AE               	subwf	___aldiv@counter,f
  2761     022B  1D03               	btfss	3,2
  2762     022C  2A2E               	goto	u1421
  2763     022D  2A2F               	goto	u1420
  2764     022E                     u1421:
  2765     022E  29F6               	goto	l1846
  2766     022F                     u1420:
  2767     022F                     l1858:
  2768     022F  082F               	movf	___aldiv@sign,w
  2769     0230  1903               	btfsc	3,2
  2770     0231  2A33               	goto	u1431
  2771     0232  2A34               	goto	u1430
  2772     0233                     u1431:
  2773     0233  2A3F               	goto	l1862
  2774     0234                     u1430:
  2775     0234                     l1860:
  2776     0234  09B0               	comf	___aldiv@quotient,f
  2777     0235  09B1               	comf	___aldiv@quotient+1,f
  2778     0236  09B2               	comf	___aldiv@quotient+2,f
  2779     0237  09B3               	comf	___aldiv@quotient+3,f
  2780     0238  0AB0               	incf	___aldiv@quotient,f
  2781     0239  1903               	skipnz
  2782     023A  0AB1               	incf	___aldiv@quotient+1,f
  2783     023B  1903               	skipnz
  2784     023C  0AB2               	incf	___aldiv@quotient+2,f
  2785     023D  1903               	skipnz
  2786     023E  0AB3               	incf	___aldiv@quotient+3,f
  2787     023F                     l1862:
  2788     023F  0833               	movf	___aldiv@quotient+3,w
  2789     0240  00A8               	movwf	?___aldiv+3
  2790     0241  0832               	movf	___aldiv@quotient+2,w
  2791     0242  00A7               	movwf	?___aldiv+2
  2792     0243  0831               	movf	___aldiv@quotient+1,w
  2793     0244  00A6               	movwf	?___aldiv+1
  2794     0245  0830               	movf	___aldiv@quotient,w
  2795     0246  00A5               	movwf	?___aldiv
  2796     0247                     l407:
  2797     0247  0008               	return
  2798     0248                     __end_of___aldiv:
  2799                           
  2800                           	psect	text13
  2801     07F6                     __ptext13:	
  2802 ;; *************** function _I2C_Master_Write *****************
  2803 ;; Defined at:
  2804 ;;		line 65 in file "I2C.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;  d               2    2[COMMON] unsigned int 
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;		None
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  1    wreg      void 
  2811 ;; Registers used:
  2812 ;;		wreg, status,2, status,0, pclath, cstack
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2818 ;;      Params:         2       0       0       0       0
  2819 ;;      Locals:         0       0       0       0       0
  2820 ;;      Temps:          0       0       0       0       0
  2821 ;;      Totals:         2       0       0       0       0
  2822 ;;Total ram usage:        2 bytes
  2823 ;; Hardware stack levels used: 1
  2824 ;; Hardware stack levels required when called: 2
  2825 ;; This function calls:
  2826 ;;		_I2C_Master_Wait
  2827 ;; This function is called by:
  2828 ;;		_requestTemp
  2829 ;;		_requestHum
  2830 ;;		_requestGas
  2831 ;;		_requestIR
  2832 ;;		_writeMotors
  2833 ;; This function uses a non-reentrant model
  2834 ;;
  2835                           
  2836     07F6                     _I2C_Master_Write:	
  2837                           ;psect for function _I2C_Master_Write
  2838                           
  2839     07F6                     l1498:	
  2840                           ;incstack = 0
  2841                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2842                           
  2843                           
  2844                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  2845     07F6  120A  158A  27F3  120A  118A  	fcall	_I2C_Master_Wait
  2846     07FB                     l1500:
  2847                           
  2848                           ;I2C.c: 68:     SSPBUF = d;
  2849     07FB  0872               	movf	I2C_Master_Write@d,w
  2850     07FC  1283               	bcf	3,5	;RP0=0, select bank0
  2851     07FD  1303               	bcf	3,6	;RP1=0, select bank0
  2852     07FE  0093               	movwf	19	;volatile
  2853     07FF                     l183:
  2854     07FF  0008               	return
  2855     0800                     __end_of_I2C_Master_Write:
  2856                           
  2857                           	psect	text14
  2858     0FDD                     __ptext14:	
  2859 ;; *************** function _I2C_Master_Stop *****************
  2860 ;; Defined at:
  2861 ;;		line 55 in file "I2C.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;		None
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;		None
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  1    wreg      void 
  2868 ;; Registers used:
  2869 ;;		wreg, status,2, status,0, pclath, cstack
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2875 ;;      Params:         0       0       0       0       0
  2876 ;;      Locals:         0       0       0       0       0
  2877 ;;      Temps:          0       0       0       0       0
  2878 ;;      Totals:         0       0       0       0       0
  2879 ;;Total ram usage:        0 bytes
  2880 ;; Hardware stack levels used: 1
  2881 ;; Hardware stack levels required when called: 2
  2882 ;; This function calls:
  2883 ;;		_I2C_Master_Wait
  2884 ;; This function is called by:
  2885 ;;		_requestTemp
  2886 ;;		_requestHum
  2887 ;;		_requestGas
  2888 ;;		_requestIR
  2889 ;;		_writeMotors
  2890 ;; This function uses a non-reentrant model
  2891 ;;
  2892                           
  2893     0FDD                     _I2C_Master_Stop:	
  2894                           ;psect for function _I2C_Master_Stop
  2895                           
  2896     0FDD                     l1522:	
  2897                           ;incstack = 0
  2898                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2899                           
  2900                           
  2901                           ;I2C.c: 57:     I2C_Master_Wait();
  2902     0FDD  120A  158A  27F3  120A  158A  	fcall	_I2C_Master_Wait
  2903     0FE2                     l1524:
  2904                           
  2905                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2906     0FE2  1683               	bsf	3,5	;RP0=1, select bank1
  2907     0FE3  1303               	bcf	3,6	;RP1=0, select bank1
  2908     0FE4  1511               	bsf	17,2	;volatile
  2909     0FE5                     l180:
  2910     0FE5  0008               	return
  2911     0FE6                     __end_of_I2C_Master_Stop:
  2912                           
  2913                           	psect	text15
  2914     0FD4                     __ptext15:	
  2915 ;; *************** function _I2C_Master_Start *****************
  2916 ;; Defined at:
  2917 ;;		line 39 in file "I2C.c"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;		None
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;		None
  2922 ;; Return value:  Size  Location     Type
  2923 ;;                  1    wreg      void 
  2924 ;; Registers used:
  2925 ;;		wreg, status,2, status,0, pclath, cstack
  2926 ;; Tracked objects:
  2927 ;;		On entry : 0/0
  2928 ;;		On exit  : 0/0
  2929 ;;		Unchanged: 0/0
  2930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2931 ;;      Params:         0       0       0       0       0
  2932 ;;      Locals:         0       0       0       0       0
  2933 ;;      Temps:          0       0       0       0       0
  2934 ;;      Totals:         0       0       0       0       0
  2935 ;;Total ram usage:        0 bytes
  2936 ;; Hardware stack levels used: 1
  2937 ;; Hardware stack levels required when called: 2
  2938 ;; This function calls:
  2939 ;;		_I2C_Master_Wait
  2940 ;; This function is called by:
  2941 ;;		_requestTemp
  2942 ;;		_requestHum
  2943 ;;		_requestGas
  2944 ;;		_requestIR
  2945 ;;		_writeMotors
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949     0FD4                     _I2C_Master_Start:	
  2950                           ;psect for function _I2C_Master_Start
  2951                           
  2952     0FD4                     l1494:	
  2953                           ;incstack = 0
  2954                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2955                           
  2956                           
  2957                           ;I2C.c: 41:     I2C_Master_Wait();
  2958     0FD4  120A  158A  27F3  120A  158A  	fcall	_I2C_Master_Wait
  2959     0FD9                     l1496:
  2960                           
  2961                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2962     0FD9  1683               	bsf	3,5	;RP0=1, select bank1
  2963     0FDA  1303               	bcf	3,6	;RP1=0, select bank1
  2964     0FDB  1411               	bsf	17,0	;volatile
  2965     0FDC                     l174:
  2966     0FDC  0008               	return
  2967     0FDD                     __end_of_I2C_Master_Start:
  2968                           
  2969                           	psect	text16
  2970     0FCB                     __ptext16:	
  2971 ;; *************** function _I2C_Master_RepeatedStart *****************
  2972 ;; Defined at:
  2973 ;;		line 47 in file "I2C.c"
  2974 ;; Parameters:    Size  Location     Type
  2975 ;;		None
  2976 ;; Auto vars:     Size  Location     Type
  2977 ;;		None
  2978 ;; Return value:  Size  Location     Type
  2979 ;;                  1    wreg      void 
  2980 ;; Registers used:
  2981 ;;		wreg, status,2, status,0, pclath, cstack
  2982 ;; Tracked objects:
  2983 ;;		On entry : 0/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2987 ;;      Params:         0       0       0       0       0
  2988 ;;      Locals:         0       0       0       0       0
  2989 ;;      Temps:          0       0       0       0       0
  2990 ;;      Totals:         0       0       0       0       0
  2991 ;;Total ram usage:        0 bytes
  2992 ;; Hardware stack levels used: 1
  2993 ;; Hardware stack levels required when called: 2
  2994 ;; This function calls:
  2995 ;;		_I2C_Master_Wait
  2996 ;; This function is called by:
  2997 ;;		_requestTemp
  2998 ;;		_requestHum
  2999 ;;		_requestGas
  3000 ;;		_requestIR
  3001 ;; This function uses a non-reentrant model
  3002 ;;
  3003                           
  3004     0FCB                     _I2C_Master_RepeatedStart:	
  3005                           ;psect for function _I2C_Master_RepeatedStart
  3006                           
  3007     0FCB                     l1502:	
  3008                           ;incstack = 0
  3009                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3010                           
  3011                           
  3012                           ;I2C.c: 49:     I2C_Master_Wait();
  3013     0FCB  120A  158A  27F3  120A  158A  	fcall	_I2C_Master_Wait
  3014     0FD0                     l1504:
  3015                           
  3016                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  3017     0FD0  1683               	bsf	3,5	;RP0=1, select bank1
  3018     0FD1  1303               	bcf	3,6	;RP1=0, select bank1
  3019     0FD2  1491               	bsf	17,1	;volatile
  3020     0FD3                     l177:
  3021     0FD3  0008               	return
  3022     0FD4                     __end_of_I2C_Master_RepeatedStart:
  3023                           
  3024                           	psect	text17
  3025     0764                     __ptext17:	
  3026 ;; *************** function _I2C_Master_Read *****************
  3027 ;; Defined at:
  3028 ;;		line 74 in file "I2C.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;  a               2    2[COMMON] unsigned short 
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;  temp            2    6[COMMON] unsigned short 
  3033 ;; Return value:  Size  Location     Type
  3034 ;;                  2    2[COMMON] unsigned short 
  3035 ;; Registers used:
  3036 ;;		wreg, status,2, status,0, pclath, cstack
  3037 ;; Tracked objects:
  3038 ;;		On entry : 0/0
  3039 ;;		On exit  : 0/0
  3040 ;;		Unchanged: 0/0
  3041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3042 ;;      Params:         2       0       0       0       0
  3043 ;;      Locals:         2       0       0       0       0
  3044 ;;      Temps:          2       0       0       0       0
  3045 ;;      Totals:         6       0       0       0       0
  3046 ;;Total ram usage:        6 bytes
  3047 ;; Hardware stack levels used: 1
  3048 ;; Hardware stack levels required when called: 2
  3049 ;; This function calls:
  3050 ;;		_I2C_Master_Wait
  3051 ;; This function is called by:
  3052 ;;		_requestTemp
  3053 ;;		_requestHum
  3054 ;;		_requestGas
  3055 ;;		_requestIR
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059     0764                     _I2C_Master_Read:	
  3060                           ;psect for function _I2C_Master_Read
  3061                           
  3062     0764                     l1506:	
  3063                           ;incstack = 0
  3064                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3065                           
  3066                           
  3067                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3068     0764  120A  158A  27F3  120A  118A  	fcall	_I2C_Master_Wait
  3069     0769                     l1508:
  3070                           
  3071                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3072     0769  1683               	bsf	3,5	;RP0=1, select bank1
  3073     076A  1303               	bcf	3,6	;RP1=0, select bank1
  3074     076B  1591               	bsf	17,3	;volatile
  3075                           
  3076                           ;I2C.c: 79:     I2C_Master_Wait();
  3077     076C  120A  158A  27F3  120A  118A  	fcall	_I2C_Master_Wait
  3078     0771                     l1510:
  3079                           
  3080                           ;I2C.c: 80:     temp = SSPBUF;
  3081     0771  1283               	bcf	3,5	;RP0=0, select bank0
  3082     0772  1303               	bcf	3,6	;RP1=0, select bank0
  3083     0773  0813               	movf	19,w	;volatile
  3084     0774  00F4               	movwf	??_I2C_Master_Read
  3085     0775  01F5               	clrf	??_I2C_Master_Read+1
  3086     0776  0874               	movf	??_I2C_Master_Read,w
  3087     0777  00F6               	movwf	I2C_Master_Read@temp
  3088     0778  0875               	movf	??_I2C_Master_Read+1,w
  3089     0779  00F7               	movwf	I2C_Master_Read@temp+1
  3090     077A                     l1512:
  3091                           
  3092                           ;I2C.c: 81:     I2C_Master_Wait();
  3093     077A  120A  158A  27F3  120A  118A  	fcall	_I2C_Master_Wait
  3094     077F                     l1514:
  3095                           
  3096                           ;I2C.c: 82:     if(a == 1){
  3097     077F  0372               	decf	I2C_Master_Read@a,w
  3098     0780  0473               	iorwf	I2C_Master_Read@a+1,w
  3099     0781  1D03               	btfss	3,2
  3100     0782  2F84               	goto	u1021
  3101     0783  2F85               	goto	u1020
  3102     0784                     u1021:
  3103     0784  2F89               	goto	l186
  3104     0785                     u1020:
  3105     0785                     l1516:
  3106                           
  3107                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3108     0785  1683               	bsf	3,5	;RP0=1, select bank1
  3109     0786  1303               	bcf	3,6	;RP1=0, select bank1
  3110     0787  1291               	bcf	17,5	;volatile
  3111                           
  3112                           ;I2C.c: 84:     }else{
  3113     0788  2F8C               	goto	l187
  3114     0789                     l186:
  3115                           
  3116                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3117     0789  1683               	bsf	3,5	;RP0=1, select bank1
  3118     078A  1303               	bcf	3,6	;RP1=0, select bank1
  3119     078B  1691               	bsf	17,5	;volatile
  3120     078C                     l187:	
  3121                           ;I2C.c: 86:     }
  3122                           
  3123                           
  3124                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3125     078C  1611               	bsf	17,4	;volatile
  3126     078D                     l1518:
  3127                           
  3128                           ;I2C.c: 88:     return temp;
  3129     078D  0877               	movf	I2C_Master_Read@temp+1,w
  3130     078E  00F3               	movwf	?_I2C_Master_Read+1
  3131     078F  0876               	movf	I2C_Master_Read@temp,w
  3132     0790  00F2               	movwf	?_I2C_Master_Read
  3133     0791                     l188:
  3134     0791  0008               	return
  3135     0792                     __end_of_I2C_Master_Read:
  3136                           
  3137                           	psect	text18
  3138     0FF3                     __ptext18:	
  3139 ;; *************** function _I2C_Master_Wait *****************
  3140 ;; Defined at:
  3141 ;;		line 32 in file "I2C.c"
  3142 ;; Parameters:    Size  Location     Type
  3143 ;;		None
  3144 ;; Auto vars:     Size  Location     Type
  3145 ;;		None
  3146 ;; Return value:  Size  Location     Type
  3147 ;;                  1    wreg      void 
  3148 ;; Registers used:
  3149 ;;		wreg, status,2
  3150 ;; Tracked objects:
  3151 ;;		On entry : 0/0
  3152 ;;		On exit  : 0/0
  3153 ;;		Unchanged: 0/0
  3154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3155 ;;      Params:         0       0       0       0       0
  3156 ;;      Locals:         0       0       0       0       0
  3157 ;;      Temps:          0       0       0       0       0
  3158 ;;      Totals:         0       0       0       0       0
  3159 ;;Total ram usage:        0 bytes
  3160 ;; Hardware stack levels used: 1
  3161 ;; Hardware stack levels required when called: 1
  3162 ;; This function calls:
  3163 ;;		Nothing
  3164 ;; This function is called by:
  3165 ;;		_I2C_Master_Start
  3166 ;;		_I2C_Master_RepeatedStart
  3167 ;;		_I2C_Master_Stop
  3168 ;;		_I2C_Master_Write
  3169 ;;		_I2C_Master_Read
  3170 ;; This function uses a non-reentrant model
  3171 ;;
  3172                           
  3173     0FF3                     _I2C_Master_Wait:	
  3174                           ;psect for function _I2C_Master_Wait
  3175                           
  3176     0FF3                     l1308:	
  3177                           ;incstack = 0
  3178                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3179                           
  3180     0FF3                     l168:	
  3181                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3182                           
  3183     0FF3  1683               	bsf	3,5	;RP0=1, select bank1
  3184     0FF4  1303               	bcf	3,6	;RP1=0, select bank1
  3185     0FF5  1914               	btfsc	20,2	;volatile
  3186     0FF6  2FF8               	goto	u631
  3187     0FF7  2FF9               	goto	u630
  3188     0FF8                     u631:
  3189     0FF8  2FF3               	goto	l168
  3190     0FF9                     u630:
  3191     0FF9                     l1310:
  3192     0FF9  0811               	movf	17,w	;volatile
  3193     0FFA  391F               	andlw	31
  3194     0FFB  1D03               	btfss	3,2
  3195     0FFC  2FFE               	goto	u641
  3196     0FFD  2FFF               	goto	u640
  3197     0FFE                     u641:
  3198     0FFE  2FF3               	goto	l168
  3199     0FFF                     u640:
  3200     0FFF                     l171:
  3201     0FFF  0008               	return
  3202     1000                     __end_of_I2C_Master_Wait:
  3203                           
  3204                           	psect	text19
  3205     0024                     __ptext19:	
  3206 ;; *************** function _LDC_output *****************
  3207 ;; Defined at:
  3208 ;;		line 209 in file "master.c"
  3209 ;; Parameters:    Size  Location     Type
  3210 ;;		None
  3211 ;; Auto vars:     Size  Location     Type
  3212 ;;		None
  3213 ;; Return value:  Size  Location     Type
  3214 ;;                  1    wreg      void 
  3215 ;; Registers used:
  3216 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3217 ;; Tracked objects:
  3218 ;;		On entry : 0/0
  3219 ;;		On exit  : 0/0
  3220 ;;		Unchanged: 0/0
  3221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3222 ;;      Params:         0       0       0       0       0
  3223 ;;      Locals:         0       0       0       0       0
  3224 ;;      Temps:          0       2       0       0       0
  3225 ;;      Totals:         0       2       0       0       0
  3226 ;;Total ram usage:        2 bytes
  3227 ;; Hardware stack levels used: 1
  3228 ;; Hardware stack levels required when called: 4
  3229 ;; This function calls:
  3230 ;;		_Lcd_Clear
  3231 ;;		_Lcd_Set_Cursor
  3232 ;;		_Lcd_Write_String
  3233 ;;		_num_to_string
  3234 ;; This function is called by:
  3235 ;;		_main
  3236 ;; This function uses a non-reentrant model
  3237 ;;
  3238                           
  3239     0024                     _LDC_output:	
  3240                           ;psect for function _LDC_output
  3241                           
  3242     0024                     l1966:	
  3243                           ;incstack = 0
  3244                           ; Regs used in _LDC_output: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3245                           
  3246                           
  3247                           ;master.c: 210:     Lcd_Clear();
  3248     0024  120A  158A  27E6  120A  118A  	fcall	_Lcd_Clear
  3249     0029                     l1968:
  3250                           
  3251                           ;master.c: 212:     num_to_string(tempC,S_temp,3);
  3252     0029  087B               	movf	_tempC,w
  3253     002A  1283               	bcf	3,5	;RP0=0, select bank0
  3254     002B  1303               	bcf	3,6	;RP1=0, select bank0
  3255     002C  00B0               	movwf	??_LDC_output
  3256     002D  01B1               	clrf	??_LDC_output+1
  3257     002E  0830               	movf	??_LDC_output,w
  3258     002F  00A0               	movwf	num_to_string@num
  3259     0030  0831               	movf	??_LDC_output+1,w
  3260     0031  00A1               	movwf	num_to_string@num+1
  3261     0032  3054               	movlw	(low (_S_temp| 0))& (0+255)
  3262     0033  00A2               	movwf	num_to_string@dig8
  3263     0034  3003               	movlw	3
  3264     0035  00A3               	movwf	num_to_string@len
  3265     0036  120A  118A  20F2  120A  118A  	fcall	_num_to_string
  3266     003B                     l1970:
  3267                           
  3268                           ;master.c: 213:     num_to_string(n_hum,S_hum,2);
  3269     003B  1283               	bcf	3,5	;RP0=0, select bank0
  3270     003C  1303               	bcf	3,6	;RP1=0, select bank0
  3271     003D  084E               	movf	_n_hum,w
  3272     003E  00B0               	movwf	??_LDC_output
  3273     003F  01B1               	clrf	??_LDC_output+1
  3274     0040  0830               	movf	??_LDC_output,w
  3275     0041  00A0               	movwf	num_to_string@num
  3276     0042  0831               	movf	??_LDC_output+1,w
  3277     0043  00A1               	movwf	num_to_string@num+1
  3278     0044  3058               	movlw	(low (_S_hum| 0))& (0+255)
  3279     0045  00A2               	movwf	num_to_string@dig8
  3280     0046  3002               	movlw	2
  3281     0047  00A3               	movwf	num_to_string@len
  3282     0048  120A  118A  20F2  120A  118A  	fcall	_num_to_string
  3283     004D                     l1972:
  3284                           
  3285                           ;master.c: 214:     num_to_string(gasPPM,S_gas,3);
  3286     004D  1283               	bcf	3,5	;RP0=0, select bank0
  3287     004E  1303               	bcf	3,6	;RP1=0, select bank0
  3288     004F  084A               	movf	_gasPPM+1,w
  3289     0050  00A1               	movwf	num_to_string@num+1
  3290     0051  0849               	movf	_gasPPM,w
  3291     0052  00A0               	movwf	num_to_string@num
  3292     0053  3050               	movlw	(low (_S_gas| 0))& (0+255)
  3293     0054  00A2               	movwf	num_to_string@dig8
  3294     0055  3003               	movlw	3
  3295     0056  00A3               	movwf	num_to_string@len
  3296     0057  120A  118A  20F2  120A  118A  	fcall	_num_to_string
  3297     005C                     l1974:
  3298                           
  3299                           ;master.c: 215:     num_to_string(n_ired,S_ired,1);
  3300     005C  1283               	bcf	3,5	;RP0=0, select bank0
  3301     005D  1303               	bcf	3,6	;RP1=0, select bank0
  3302     005E  084C               	movf	_n_ired,w
  3303     005F  00B0               	movwf	??_LDC_output
  3304     0060  01B1               	clrf	??_LDC_output+1
  3305     0061  0830               	movf	??_LDC_output,w
  3306     0062  00A0               	movwf	num_to_string@num
  3307     0063  0831               	movf	??_LDC_output+1,w
  3308     0064  00A1               	movwf	num_to_string@num+1
  3309     0065  305B               	movlw	(low (_S_ired| 0))& (0+255)
  3310     0066  00A2               	movwf	num_to_string@dig8
  3311     0067  01A3               	clrf	num_to_string@len
  3312     0068  0AA3               	incf	num_to_string@len,f
  3313     0069  120A  118A  20F2  120A  118A  	fcall	_num_to_string
  3314                           
  3315                           ;master.c: 219:     Lcd_Set_Cursor(1,1);
  3316     006E  01F6               	clrf	Lcd_Set_Cursor@b
  3317     006F  0AF6               	incf	Lcd_Set_Cursor@b,f
  3318     0070  3001               	movlw	1
  3319     0071  120A  118A  2491  120A  118A  	fcall	_Lcd_Set_Cursor
  3320     0076                     l1976:
  3321                           
  3322                           ;master.c: 220:     Lcd_Write_String("T:");
  3323     0076  3013               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3324     0077  00F7               	movwf	Lcd_Write_String@a
  3325     0078  3080               	movlw	128
  3326     0079  00F8               	movwf	Lcd_Write_String@a+1
  3327     007A  120A  118A  25FE  120A  118A  	fcall	_Lcd_Write_String
  3328     007F                     l1978:
  3329                           
  3330                           ;master.c: 221:     Lcd_Write_String(S_temp);
  3331     007F  3054               	movlw	(low (_S_temp| 0))& (0+255)
  3332     0080  00F7               	movwf	Lcd_Write_String@a
  3333     0081  3000               	movlw	0
  3334     0082  00F8               	movwf	Lcd_Write_String@a+1
  3335     0083  120A  118A  25FE  120A  118A  	fcall	_Lcd_Write_String
  3336     0088                     l1980:
  3337                           
  3338                           ;master.c: 222:     Lcd_Write_String("^C");
  3339     0088  3016               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3340     0089  00F7               	movwf	Lcd_Write_String@a
  3341     008A  3080               	movlw	128
  3342     008B  00F8               	movwf	Lcd_Write_String@a+1
  3343     008C  120A  118A  25FE  120A  118A  	fcall	_Lcd_Write_String
  3344     0091                     l1982:
  3345                           
  3346                           ;master.c: 224:     Lcd_Set_Cursor(2,1);
  3347     0091  01F6               	clrf	Lcd_Set_Cursor@b
  3348     0092  0AF6               	incf	Lcd_Set_Cursor@b,f
  3349     0093  3002               	movlw	2
  3350     0094  120A  118A  2491  120A  118A  	fcall	_Lcd_Set_Cursor
  3351                           
  3352                           ;master.c: 225:     Lcd_Write_String("H:");
  3353     0099  3010               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  3354     009A  00F7               	movwf	Lcd_Write_String@a
  3355     009B  3080               	movlw	128
  3356     009C  00F8               	movwf	Lcd_Write_String@a+1
  3357     009D  120A  118A  25FE  120A  118A  	fcall	_Lcd_Write_String
  3358                           
  3359                           ;master.c: 226:     Lcd_Write_String(S_hum);
  3360     00A2  3058               	movlw	(low (_S_hum| 0))& (0+255)
  3361     00A3  00F7               	movwf	Lcd_Write_String@a
  3362     00A4  3000               	movlw	0
  3363     00A5  00F8               	movwf	Lcd_Write_String@a+1
  3364     00A6  120A  118A  25FE  120A  118A  	fcall	_Lcd_Write_String
  3365                           
  3366                           ;master.c: 227:     Lcd_Write_String("%RH");
  3367     00AB  3005               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  3368     00AC  00F7               	movwf	Lcd_Write_String@a
  3369     00AD  3080               	movlw	128
  3370     00AE  00F8               	movwf	Lcd_Write_String@a+1
  3371     00AF  120A  118A  25FE  120A  118A  	fcall	_Lcd_Write_String
  3372     00B4                     l1984:
  3373                           
  3374                           ;master.c: 229:     Lcd_Set_Cursor(1,9);
  3375     00B4  3009               	movlw	9
  3376     00B5  00F6               	movwf	Lcd_Set_Cursor@b
  3377     00B6  3001               	movlw	1
  3378     00B7  120A  118A  2491  120A  118A  	fcall	_Lcd_Set_Cursor
  3379     00BC                     l1986:
  3380                           
  3381                           ;master.c: 230:     Lcd_Write_String("G:");
  3382     00BC  300D               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  3383     00BD  00F7               	movwf	Lcd_Write_String@a
  3384     00BE  3080               	movlw	128
  3385     00BF  00F8               	movwf	Lcd_Write_String@a+1
  3386     00C0  120A  118A  25FE  120A  118A  	fcall	_Lcd_Write_String
  3387     00C5                     l1988:
  3388                           
  3389                           ;master.c: 231:     Lcd_Write_String(S_gas);
  3390     00C5  3050               	movlw	(low (_S_gas| 0))& (0+255)
  3391     00C6  00F7               	movwf	Lcd_Write_String@a
  3392     00C7  3000               	movlw	0
  3393     00C8  00F8               	movwf	Lcd_Write_String@a+1
  3394     00C9  120A  118A  25FE  120A  118A  	fcall	_Lcd_Write_String
  3395     00CE                     l1990:
  3396                           
  3397                           ;master.c: 232:     Lcd_Write_String("ppm");
  3398     00CE  3009               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  3399     00CF  00F7               	movwf	Lcd_Write_String@a
  3400     00D0  3080               	movlw	128
  3401     00D1  00F8               	movwf	Lcd_Write_String@a+1
  3402     00D2  120A  118A  25FE  120A  118A  	fcall	_Lcd_Write_String
  3403                           
  3404                           ;master.c: 234:     Lcd_Set_Cursor(2,9);
  3405     00D7  3009               	movlw	9
  3406     00D8  00F6               	movwf	Lcd_Set_Cursor@b
  3407     00D9  3002               	movlw	2
  3408     00DA  120A  118A  2491  120A  118A  	fcall	_Lcd_Set_Cursor
  3409     00DF                     l1992:
  3410                           
  3411                           ;master.c: 235:     Lcd_Write_String("IR:");
  3412     00DF  3001               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  3413     00E0  00F7               	movwf	Lcd_Write_String@a
  3414     00E1  3080               	movlw	128
  3415     00E2  00F8               	movwf	Lcd_Write_String@a+1
  3416     00E3  120A  118A  25FE  120A  118A  	fcall	_Lcd_Write_String
  3417     00E8                     l1994:
  3418                           
  3419                           ;master.c: 236:     Lcd_Write_String(S_ired);
  3420     00E8  305B               	movlw	(low (_S_ired| 0))& (0+255)
  3421     00E9  00F7               	movwf	Lcd_Write_String@a
  3422     00EA  3000               	movlw	0
  3423     00EB  00F8               	movwf	Lcd_Write_String@a+1
  3424     00EC  120A  118A  25FE  120A  118A  	fcall	_Lcd_Write_String
  3425     00F1                     l125:
  3426     00F1  0008               	return
  3427     00F2                     __end_of_LDC_output:
  3428                           
  3429                           	psect	text20
  3430     00F2                     __ptext20:	
  3431 ;; *************** function _num_to_string *****************
  3432 ;; Defined at:
  3433 ;;		line 239 in file "master.c"
  3434 ;; Parameters:    Size  Location     Type
  3435 ;;  num             2    0[BANK0 ] unsigned int 
  3436 ;;  dig8            1    2[BANK0 ] PTR unsigned char 
  3437 ;;		 -> S_ired(2), S_gas(4), S_hum(3), S_temp(4), 
  3438 ;;  len             1    3[BANK0 ] unsigned char 
  3439 ;; Auto vars:     Size  Location     Type
  3440 ;;  unidades        2   14[BANK0 ] unsigned int 
  3441 ;;  decenas         2   12[BANK0 ] unsigned int 
  3442 ;;  div2            2   10[BANK0 ] unsigned int 
  3443 ;;  div1            2    8[BANK0 ] unsigned int 
  3444 ;;  centenas        2    6[BANK0 ] unsigned int 
  3445 ;;  div3            2    4[BANK0 ] unsigned int 
  3446 ;;  miles           2    0        unsigned int 
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  1    wreg      void 
  3449 ;; Registers used:
  3450 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3456 ;;      Params:         0       4       0       0       0
  3457 ;;      Locals:         0      12       0       0       0
  3458 ;;      Temps:          0       0       0       0       0
  3459 ;;      Totals:         0      16       0       0       0
  3460 ;;Total ram usage:       16 bytes
  3461 ;; Hardware stack levels used: 1
  3462 ;; Hardware stack levels required when called: 2
  3463 ;; This function calls:
  3464 ;;		___lwdiv
  3465 ;;		___lwmod
  3466 ;; This function is called by:
  3467 ;;		_LDC_output
  3468 ;; This function uses a non-reentrant model
  3469 ;;
  3470                           
  3471     00F2                     _num_to_string:	
  3472                           ;psect for function _num_to_string
  3473                           
  3474     00F2                     l1532:	
  3475                           ;incstack = 0
  3476                           ; Regs used in _num_to_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3477                           
  3478                           
  3479                           ;master.c: 240:     uint16_t div1,div2,div3,miles,centenas,decenas,unidades;;master.c: 2
      +                          41:     div1 = num / 10;
  3480     00F2  300A               	movlw	10
  3481     00F3  00F2               	movwf	___lwdiv@divisor
  3482     00F4  3000               	movlw	0
  3483     00F5  00F3               	movwf	___lwdiv@divisor+1
  3484     00F6  1283               	bcf	3,5	;RP0=0, select bank0
  3485     00F7  1303               	bcf	3,6	;RP1=0, select bank0
  3486     00F8  0821               	movf	num_to_string@num+1,w
  3487     00F9  00F5               	movwf	___lwdiv@dividend+1
  3488     00FA  0820               	movf	num_to_string@num,w
  3489     00FB  00F4               	movwf	___lwdiv@dividend
  3490     00FC  120A  118A  2644  120A  118A  	fcall	___lwdiv
  3491     0101  0873               	movf	?___lwdiv+1,w
  3492     0102  1283               	bcf	3,5	;RP0=0, select bank0
  3493     0103  1303               	bcf	3,6	;RP1=0, select bank0
  3494     0104  00A9               	movwf	num_to_string@div1+1
  3495     0105  0872               	movf	?___lwdiv,w
  3496     0106  00A8               	movwf	num_to_string@div1
  3497                           
  3498                           ;master.c: 242:     unidades = num % 10;
  3499     0107  300A               	movlw	10
  3500     0108  00F2               	movwf	___lwmod@divisor
  3501     0109  3000               	movlw	0
  3502     010A  00F3               	movwf	___lwmod@divisor+1
  3503     010B  0821               	movf	num_to_string@num+1,w
  3504     010C  00F5               	movwf	___lwmod@dividend+1
  3505     010D  0820               	movf	num_to_string@num,w
  3506     010E  00F4               	movwf	___lwmod@dividend
  3507     010F  120A  118A  2688  120A  118A  	fcall	___lwmod
  3508     0114  0873               	movf	?___lwmod+1,w
  3509     0115  1283               	bcf	3,5	;RP0=0, select bank0
  3510     0116  1303               	bcf	3,6	;RP1=0, select bank0
  3511     0117  00AF               	movwf	num_to_string@unidades+1
  3512     0118  0872               	movf	?___lwmod,w
  3513     0119  00AE               	movwf	num_to_string@unidades
  3514                           
  3515                           ;master.c: 243:     div2 = div1 / 10;
  3516     011A  300A               	movlw	10
  3517     011B  00F2               	movwf	___lwdiv@divisor
  3518     011C  3000               	movlw	0
  3519     011D  00F3               	movwf	___lwdiv@divisor+1
  3520     011E  0829               	movf	num_to_string@div1+1,w
  3521     011F  00F5               	movwf	___lwdiv@dividend+1
  3522     0120  0828               	movf	num_to_string@div1,w
  3523     0121  00F4               	movwf	___lwdiv@dividend
  3524     0122  120A  118A  2644  120A  118A  	fcall	___lwdiv
  3525     0127  0873               	movf	?___lwdiv+1,w
  3526     0128  1283               	bcf	3,5	;RP0=0, select bank0
  3527     0129  1303               	bcf	3,6	;RP1=0, select bank0
  3528     012A  00AB               	movwf	num_to_string@div2+1
  3529     012B  0872               	movf	?___lwdiv,w
  3530     012C  00AA               	movwf	num_to_string@div2
  3531                           
  3532                           ;master.c: 244:     decenas = div1 % 10;
  3533     012D  300A               	movlw	10
  3534     012E  00F2               	movwf	___lwmod@divisor
  3535     012F  3000               	movlw	0
  3536     0130  00F3               	movwf	___lwmod@divisor+1
  3537     0131  0829               	movf	num_to_string@div1+1,w
  3538     0132  00F5               	movwf	___lwmod@dividend+1
  3539     0133  0828               	movf	num_to_string@div1,w
  3540     0134  00F4               	movwf	___lwmod@dividend
  3541     0135  120A  118A  2688  120A  118A  	fcall	___lwmod
  3542     013A  0873               	movf	?___lwmod+1,w
  3543     013B  1283               	bcf	3,5	;RP0=0, select bank0
  3544     013C  1303               	bcf	3,6	;RP1=0, select bank0
  3545     013D  00AD               	movwf	num_to_string@decenas+1
  3546     013E  0872               	movf	?___lwmod,w
  3547     013F  00AC               	movwf	num_to_string@decenas
  3548                           
  3549                           ;master.c: 245:     div3 = div2 / 10;
  3550     0140  300A               	movlw	10
  3551     0141  00F2               	movwf	___lwdiv@divisor
  3552     0142  3000               	movlw	0
  3553     0143  00F3               	movwf	___lwdiv@divisor+1
  3554     0144  082B               	movf	num_to_string@div2+1,w
  3555     0145  00F5               	movwf	___lwdiv@dividend+1
  3556     0146  082A               	movf	num_to_string@div2,w
  3557     0147  00F4               	movwf	___lwdiv@dividend
  3558     0148  120A  118A  2644  120A  118A  	fcall	___lwdiv
  3559     014D  0873               	movf	?___lwdiv+1,w
  3560     014E  1283               	bcf	3,5	;RP0=0, select bank0
  3561     014F  1303               	bcf	3,6	;RP1=0, select bank0
  3562     0150  00A5               	movwf	num_to_string@div3+1
  3563     0151  0872               	movf	?___lwdiv,w
  3564     0152  00A4               	movwf	num_to_string@div3
  3565                           
  3566                           ;master.c: 246:     centenas = div2 % 10;
  3567     0153  300A               	movlw	10
  3568     0154  00F2               	movwf	___lwmod@divisor
  3569     0155  3000               	movlw	0
  3570     0156  00F3               	movwf	___lwmod@divisor+1
  3571     0157  082B               	movf	num_to_string@div2+1,w
  3572     0158  00F5               	movwf	___lwmod@dividend+1
  3573     0159  082A               	movf	num_to_string@div2,w
  3574     015A  00F4               	movwf	___lwmod@dividend
  3575     015B  120A  118A  2688  120A  118A  	fcall	___lwmod
  3576     0160  0873               	movf	?___lwmod+1,w
  3577     0161  1283               	bcf	3,5	;RP0=0, select bank0
  3578     0162  1303               	bcf	3,6	;RP1=0, select bank0
  3579     0163  00A7               	movwf	num_to_string@centenas+1
  3580     0164  0872               	movf	?___lwmod,w
  3581     0165  00A6               	movwf	num_to_string@centenas
  3582     0166  300A               	movlw	10
  3583     0167  00F2               	movwf	___lwmod@divisor
  3584     0168  3000               	movlw	0
  3585     0169  00F3               	movwf	___lwmod@divisor+1
  3586     016A  0825               	movf	num_to_string@div3+1,w
  3587     016B  00F5               	movwf	___lwmod@dividend+1
  3588     016C  0824               	movf	num_to_string@div3,w
  3589     016D  00F4               	movwf	___lwmod@dividend
  3590     016E  120A  118A  2688  120A  118A  	fcall	___lwmod
  3591     0173                     l1534:
  3592                           
  3593                           ;master.c: 249:     if(len == 1){
  3594     0173  1283               	bcf	3,5	;RP0=0, select bank0
  3595     0174  1303               	bcf	3,6	;RP1=0, select bank0
  3596     0175  0323               	decf	num_to_string@len,w
  3597     0176  1D03               	btfss	3,2
  3598     0177  2979               	goto	u1041
  3599     0178  297A               	goto	u1040
  3600     0179                     u1041:
  3601     0179  2981               	goto	l1538
  3602     017A                     u1040:
  3603     017A                     l1536:
  3604                           
  3605                           ;master.c: 250:         dig8[0] = unidades + '0';
  3606     017A  0822               	movf	num_to_string@dig8,w
  3607     017B  0084               	movwf	4
  3608     017C  082E               	movf	num_to_string@unidades,w
  3609     017D  3E30               	addlw	48
  3610     017E  1383               	bcf	3,7	;select IRP bank0
  3611     017F  0080               	movwf	0
  3612                           
  3613                           ;master.c: 251:     }
  3614     0180  29AA               	goto	l133
  3615     0181                     l1538:
  3616     0181  3002               	movlw	2
  3617     0182  0623               	xorwf	num_to_string@len,w
  3618     0183  1D03               	btfss	3,2
  3619     0184  2986               	goto	u1051
  3620     0185  2987               	goto	u1050
  3621     0186                     u1051:
  3622     0186  2993               	goto	l1542
  3623     0187                     u1050:
  3624     0187                     l1540:
  3625                           
  3626                           ;master.c: 253:         dig8[1] = unidades + '0';
  3627     0187  0A22               	incf	num_to_string@dig8,w
  3628     0188  0084               	movwf	4
  3629     0189  082E               	movf	num_to_string@unidades,w
  3630     018A  3E30               	addlw	48
  3631     018B  1383               	bcf	3,7	;select IRP bank0
  3632     018C  0080               	movwf	0
  3633                           
  3634                           ;master.c: 254:         dig8[0] = decenas + '0';
  3635     018D  0822               	movf	num_to_string@dig8,w
  3636     018E  0084               	movwf	4
  3637     018F  082C               	movf	num_to_string@decenas,w
  3638     0190  3E30               	addlw	48
  3639     0191  0080               	movwf	0
  3640                           
  3641                           ;master.c: 255:     }
  3642     0192  29AA               	goto	l133
  3643     0193                     l1542:
  3644     0193  3003               	movlw	3
  3645     0194  0623               	xorwf	num_to_string@len,w
  3646     0195  1D03               	btfss	3,2
  3647     0196  2998               	goto	u1061
  3648     0197  2999               	goto	u1060
  3649     0198                     u1061:
  3650     0198  29AA               	goto	l133
  3651     0199                     u1060:
  3652     0199                     l1544:
  3653                           
  3654                           ;master.c: 257:         dig8[2] = unidades + '0';
  3655     0199  0822               	movf	num_to_string@dig8,w
  3656     019A  3E02               	addlw	2
  3657     019B  0084               	movwf	4
  3658     019C  082E               	movf	num_to_string@unidades,w
  3659     019D  3E30               	addlw	48
  3660     019E  1383               	bcf	3,7	;select IRP bank0
  3661     019F  0080               	movwf	0
  3662                           
  3663                           ;master.c: 258:         dig8[1] = decenas + '0';
  3664     01A0  0A22               	incf	num_to_string@dig8,w
  3665     01A1  0084               	movwf	4
  3666     01A2  082C               	movf	num_to_string@decenas,w
  3667     01A3  3E30               	addlw	48
  3668     01A4  0080               	movwf	0
  3669                           
  3670                           ;master.c: 259:         dig8[0] = centenas + '0';
  3671     01A5  0822               	movf	num_to_string@dig8,w
  3672     01A6  0084               	movwf	4
  3673     01A7  0826               	movf	num_to_string@centenas,w
  3674     01A8  3E30               	addlw	48
  3675     01A9  0080               	movwf	0
  3676     01AA                     l133:
  3677     01AA  0008               	return
  3678     01AB                     __end_of_num_to_string:
  3679                           
  3680                           	psect	text21
  3681     0688                     __ptext21:	
  3682 ;; *************** function ___lwmod *****************
  3683 ;; Defined at:
  3684 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  3685 ;; Parameters:    Size  Location     Type
  3686 ;;  divisor         2    2[COMMON] unsigned int 
  3687 ;;  dividend        2    4[COMMON] unsigned int 
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;  counter         1    6[COMMON] unsigned char 
  3690 ;; Return value:  Size  Location     Type
  3691 ;;                  2    2[COMMON] unsigned int 
  3692 ;; Registers used:
  3693 ;;		wreg, status,2, status,0, btemp+1
  3694 ;; Tracked objects:
  3695 ;;		On entry : 0/0
  3696 ;;		On exit  : 0/0
  3697 ;;		Unchanged: 0/0
  3698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3699 ;;      Params:         4       0       0       0       0
  3700 ;;      Locals:         1       0       0       0       0
  3701 ;;      Temps:          0       0       0       0       0
  3702 ;;      Totals:         5       0       0       0       0
  3703 ;;Total ram usage:        5 bytes
  3704 ;; Hardware stack levels used: 1
  3705 ;; Hardware stack levels required when called: 1
  3706 ;; This function calls:
  3707 ;;		Nothing
  3708 ;; This function is called by:
  3709 ;;		_num_to_string
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713     0688                     ___lwmod:	
  3714                           ;psect for function ___lwmod
  3715                           
  3716     0688                     l1450:	
  3717                           ;incstack = 0
  3718                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  3719                           
  3720     0688  0872               	movf	___lwmod@divisor,w
  3721     0689  0473               	iorwf	___lwmod@divisor+1,w
  3722     068A  1903               	btfsc	3,2
  3723     068B  2E8D               	goto	u951
  3724     068C  2E8E               	goto	u950
  3725     068D                     u951:
  3726     068D  2EBD               	goto	l1468
  3727     068E                     u950:
  3728     068E                     l1452:
  3729     068E  01F6               	clrf	___lwmod@counter
  3730     068F  0AF6               	incf	___lwmod@counter,f
  3731     0690  2E9C               	goto	l1458
  3732     0691                     l1454:
  3733     0691  3001               	movlw	1
  3734     0692                     u965:
  3735     0692  1003               	clrc
  3736     0693  0DF2               	rlf	___lwmod@divisor,f
  3737     0694  0DF3               	rlf	___lwmod@divisor+1,f
  3738     0695  3EFF               	addlw	-1
  3739     0696  1D03               	skipz
  3740     0697  2E92               	goto	u965
  3741     0698                     l1456:
  3742     0698  3001               	movlw	1
  3743     0699  00FF               	movwf	btemp+1
  3744     069A  087F               	movf	btemp+1,w
  3745     069B  07F6               	addwf	___lwmod@counter,f
  3746     069C                     l1458:
  3747     069C  1FF3               	btfss	___lwmod@divisor+1,7
  3748     069D  2E9F               	goto	u971
  3749     069E  2EA0               	goto	u970
  3750     069F                     u971:
  3751     069F  2E91               	goto	l1454
  3752     06A0                     u970:
  3753     06A0                     l1460:
  3754     06A0  0873               	movf	___lwmod@divisor+1,w
  3755     06A1  0275               	subwf	___lwmod@dividend+1,w
  3756     06A2  1D03               	skipz
  3757     06A3  2EA6               	goto	u985
  3758     06A4  0872               	movf	___lwmod@divisor,w
  3759     06A5  0274               	subwf	___lwmod@dividend,w
  3760     06A6                     u985:
  3761     06A6  1C03               	skipc
  3762     06A7  2EA9               	goto	u981
  3763     06A8  2EAA               	goto	u980
  3764     06A9                     u981:
  3765     06A9  2EB0               	goto	l1464
  3766     06AA                     u980:
  3767     06AA                     l1462:
  3768     06AA  0872               	movf	___lwmod@divisor,w
  3769     06AB  02F4               	subwf	___lwmod@dividend,f
  3770     06AC  0873               	movf	___lwmod@divisor+1,w
  3771     06AD  1C03               	skipc
  3772     06AE  03F5               	decf	___lwmod@dividend+1,f
  3773     06AF  02F5               	subwf	___lwmod@dividend+1,f
  3774     06B0                     l1464:
  3775     06B0  3001               	movlw	1
  3776     06B1                     u995:
  3777     06B1  1003               	clrc
  3778     06B2  0CF3               	rrf	___lwmod@divisor+1,f
  3779     06B3  0CF2               	rrf	___lwmod@divisor,f
  3780     06B4  3EFF               	addlw	-1
  3781     06B5  1D03               	skipz
  3782     06B6  2EB1               	goto	u995
  3783     06B7                     l1466:
  3784     06B7  3001               	movlw	1
  3785     06B8  02F6               	subwf	___lwmod@counter,f
  3786     06B9  1D03               	btfss	3,2
  3787     06BA  2EBC               	goto	u1001
  3788     06BB  2EBD               	goto	u1000
  3789     06BC                     u1001:
  3790     06BC  2EA0               	goto	l1460
  3791     06BD                     u1000:
  3792     06BD                     l1468:
  3793     06BD  0875               	movf	___lwmod@dividend+1,w
  3794     06BE  00F3               	movwf	?___lwmod+1
  3795     06BF  0874               	movf	___lwmod@dividend,w
  3796     06C0  00F2               	movwf	?___lwmod
  3797     06C1                     l614:
  3798     06C1  0008               	return
  3799     06C2                     __end_of___lwmod:
  3800                           
  3801                           	psect	text22
  3802     0644                     __ptext22:	
  3803 ;; *************** function ___lwdiv *****************
  3804 ;; Defined at:
  3805 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  3806 ;; Parameters:    Size  Location     Type
  3807 ;;  divisor         2    2[COMMON] unsigned int 
  3808 ;;  dividend        2    4[COMMON] unsigned int 
  3809 ;; Auto vars:     Size  Location     Type
  3810 ;;  quotient        2    6[COMMON] unsigned int 
  3811 ;;  counter         1    8[COMMON] unsigned char 
  3812 ;; Return value:  Size  Location     Type
  3813 ;;                  2    2[COMMON] unsigned int 
  3814 ;; Registers used:
  3815 ;;		wreg, status,2, status,0, btemp+1
  3816 ;; Tracked objects:
  3817 ;;		On entry : 0/0
  3818 ;;		On exit  : 0/0
  3819 ;;		Unchanged: 0/0
  3820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3821 ;;      Params:         4       0       0       0       0
  3822 ;;      Locals:         3       0       0       0       0
  3823 ;;      Temps:          0       0       0       0       0
  3824 ;;      Totals:         7       0       0       0       0
  3825 ;;Total ram usage:        7 bytes
  3826 ;; Hardware stack levels used: 1
  3827 ;; Hardware stack levels required when called: 1
  3828 ;; This function calls:
  3829 ;;		Nothing
  3830 ;; This function is called by:
  3831 ;;		_num_to_string
  3832 ;; This function uses a non-reentrant model
  3833 ;;
  3834                           
  3835     0644                     ___lwdiv:	
  3836                           ;psect for function ___lwdiv
  3837                           
  3838     0644                     l1424:	
  3839                           ;incstack = 0
  3840                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  3841                           
  3842     0644  01F6               	clrf	___lwdiv@quotient
  3843     0645  01F7               	clrf	___lwdiv@quotient+1
  3844     0646                     l1426:
  3845     0646  0872               	movf	___lwdiv@divisor,w
  3846     0647  0473               	iorwf	___lwdiv@divisor+1,w
  3847     0648  1903               	btfsc	3,2
  3848     0649  2E4B               	goto	u881
  3849     064A  2E4C               	goto	u880
  3850     064B                     u881:
  3851     064B  2E83               	goto	l1446
  3852     064C                     u880:
  3853     064C                     l1428:
  3854     064C  01F8               	clrf	___lwdiv@counter
  3855     064D  0AF8               	incf	___lwdiv@counter,f
  3856     064E  2E5A               	goto	l1434
  3857     064F                     l1430:
  3858     064F  3001               	movlw	1
  3859     0650                     u895:
  3860     0650  1003               	clrc
  3861     0651  0DF2               	rlf	___lwdiv@divisor,f
  3862     0652  0DF3               	rlf	___lwdiv@divisor+1,f
  3863     0653  3EFF               	addlw	-1
  3864     0654  1D03               	skipz
  3865     0655  2E50               	goto	u895
  3866     0656                     l1432:
  3867     0656  3001               	movlw	1
  3868     0657  00FF               	movwf	btemp+1
  3869     0658  087F               	movf	btemp+1,w
  3870     0659  07F8               	addwf	___lwdiv@counter,f
  3871     065A                     l1434:
  3872     065A  1FF3               	btfss	___lwdiv@divisor+1,7
  3873     065B  2E5D               	goto	u901
  3874     065C  2E5E               	goto	u900
  3875     065D                     u901:
  3876     065D  2E4F               	goto	l1430
  3877     065E                     u900:
  3878     065E                     l1436:
  3879     065E  3001               	movlw	1
  3880     065F                     u915:
  3881     065F  1003               	clrc
  3882     0660  0DF6               	rlf	___lwdiv@quotient,f
  3883     0661  0DF7               	rlf	___lwdiv@quotient+1,f
  3884     0662  3EFF               	addlw	-1
  3885     0663  1D03               	skipz
  3886     0664  2E5F               	goto	u915
  3887     0665  0873               	movf	___lwdiv@divisor+1,w
  3888     0666  0275               	subwf	___lwdiv@dividend+1,w
  3889     0667  1D03               	skipz
  3890     0668  2E6B               	goto	u925
  3891     0669  0872               	movf	___lwdiv@divisor,w
  3892     066A  0274               	subwf	___lwdiv@dividend,w
  3893     066B                     u925:
  3894     066B  1C03               	skipc
  3895     066C  2E6E               	goto	u921
  3896     066D  2E6F               	goto	u920
  3897     066E                     u921:
  3898     066E  2E76               	goto	l1442
  3899     066F                     u920:
  3900     066F                     l1438:
  3901     066F  0872               	movf	___lwdiv@divisor,w
  3902     0670  02F4               	subwf	___lwdiv@dividend,f
  3903     0671  0873               	movf	___lwdiv@divisor+1,w
  3904     0672  1C03               	skipc
  3905     0673  03F5               	decf	___lwdiv@dividend+1,f
  3906     0674  02F5               	subwf	___lwdiv@dividend+1,f
  3907     0675                     l1440:
  3908     0675  1476               	bsf	___lwdiv@quotient,0
  3909     0676                     l1442:
  3910     0676  3001               	movlw	1
  3911     0677                     u935:
  3912     0677  1003               	clrc
  3913     0678  0CF3               	rrf	___lwdiv@divisor+1,f
  3914     0679  0CF2               	rrf	___lwdiv@divisor,f
  3915     067A  3EFF               	addlw	-1
  3916     067B  1D03               	skipz
  3917     067C  2E77               	goto	u935
  3918     067D                     l1444:
  3919     067D  3001               	movlw	1
  3920     067E  02F8               	subwf	___lwdiv@counter,f
  3921     067F  1D03               	btfss	3,2
  3922     0680  2E82               	goto	u941
  3923     0681  2E83               	goto	u940
  3924     0682                     u941:
  3925     0682  2E5E               	goto	l1436
  3926     0683                     u940:
  3927     0683                     l1446:
  3928     0683  0877               	movf	___lwdiv@quotient+1,w
  3929     0684  00F3               	movwf	?___lwdiv+1
  3930     0685  0876               	movf	___lwdiv@quotient,w
  3931     0686  00F2               	movwf	?___lwdiv
  3932     0687                     l604:
  3933     0687  0008               	return
  3934     0688                     __end_of___lwdiv:
  3935                           
  3936                           	psect	text23
  3937     05FE                     __ptext23:	
  3938 ;; *************** function _Lcd_Write_String *****************
  3939 ;; Defined at:
  3940 ;;		line 98 in file "LCD4b.c"
  3941 ;; Parameters:    Size  Location     Type
  3942 ;;  a               2    7[COMMON] PTR unsigned char 
  3943 ;;		 -> STR_7(4), STR_6(4), STR_5(3), STR_4(4), 
  3944 ;;		 -> STR_3(3), STR_2(3), STR_1(3), S_ired(2), 
  3945 ;;		 -> S_gas(4), S_hum(3), S_temp(4), 
  3946 ;; Auto vars:     Size  Location     Type
  3947 ;;  i               2    3[BANK0 ] int 
  3948 ;; Return value:  Size  Location     Type
  3949 ;;                  1    wreg      void 
  3950 ;; Registers used:
  3951 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3952 ;; Tracked objects:
  3953 ;;		On entry : 0/0
  3954 ;;		On exit  : 0/0
  3955 ;;		Unchanged: 0/0
  3956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3957 ;;      Params:         2       0       0       0       0
  3958 ;;      Locals:         0       2       0       0       0
  3959 ;;      Temps:          0       3       0       0       0
  3960 ;;      Totals:         2       5       0       0       0
  3961 ;;Total ram usage:        7 bytes
  3962 ;; Hardware stack levels used: 1
  3963 ;; Hardware stack levels required when called: 3
  3964 ;; This function calls:
  3965 ;;		_Lcd_Write_Char
  3966 ;; This function is called by:
  3967 ;;		_LDC_output
  3968 ;; This function uses a non-reentrant model
  3969 ;;
  3970                           
  3971     05FE                     _Lcd_Write_String:	
  3972                           ;psect for function _Lcd_Write_String
  3973                           
  3974     05FE                     l1914:	
  3975                           ;incstack = 0
  3976                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3977                           
  3978                           
  3979                           ;LCD4b.c: 99:     int i;;LCD4b.c: 100:     for (i = 0; a[i] != '\0'; i++)
  3980     05FE  1283               	bcf	3,5	;RP0=0, select bank0
  3981     05FF  1303               	bcf	3,6	;RP1=0, select bank0
  3982     0600  01A3               	clrf	Lcd_Write_String@i
  3983     0601  01A4               	clrf	Lcd_Write_String@i+1
  3984     0602  2E27               	goto	l1920
  3985     0603                     l1916:
  3986                           
  3987                           ;LCD4b.c: 101:         Lcd_Write_Char(a[i]);
  3988     0603  0823               	movf	Lcd_Write_String@i,w
  3989     0604  0777               	addwf	Lcd_Write_String@a,w
  3990     0605  00A1               	movwf	??_Lcd_Write_String+1
  3991     0606  0878               	movf	Lcd_Write_String@a+1,w
  3992     0607  00A0               	movwf	??_Lcd_Write_String
  3993     0608  1803               	skipnc
  3994     0609  0AA0               	incf	??_Lcd_Write_String,f
  3995     060A  1FA3               	btfss	Lcd_Write_String@i,7
  3996     060B  2E0D               	goto	u1500
  3997     060C  03A0               	decf	??_Lcd_Write_String,f
  3998     060D                     u1500:
  3999     060D  1283               	bcf	3,5	;RP0=0, select bank0
  4000     060E  1303               	bcf	3,6	;RP1=0, select bank0
  4001     060F  0820               	movf	??_Lcd_Write_String,w
  4002     0610  00A2               	movwf	??_Lcd_Write_String+2
  4003     0611  0822               	movf	??_Lcd_Write_String+2,w
  4004     0612  00FF               	movwf	btemp+1
  4005     0613  0821               	movf	??_Lcd_Write_String+1,w
  4006     0614  0084               	movwf	4
  4007     0615  120A  118A  2792  120A  118A  	fcall	stringtab
  4008     061A  120A  118A  272F  120A  118A  	fcall	_Lcd_Write_Char
  4009     061F                     l1918:
  4010     061F  3001               	movlw	1
  4011     0620  1283               	bcf	3,5	;RP0=0, select bank0
  4012     0621  1303               	bcf	3,6	;RP1=0, select bank0
  4013     0622  07A3               	addwf	Lcd_Write_String@i,f
  4014     0623  1803               	skipnc
  4015     0624  0AA4               	incf	Lcd_Write_String@i+1,f
  4016     0625  3000               	movlw	0
  4017     0626  07A4               	addwf	Lcd_Write_String@i+1,f
  4018     0627                     l1920:
  4019     0627  0823               	movf	Lcd_Write_String@i,w
  4020     0628  0777               	addwf	Lcd_Write_String@a,w
  4021     0629  00A1               	movwf	??_Lcd_Write_String+1
  4022     062A  0878               	movf	Lcd_Write_String@a+1,w
  4023     062B  00A0               	movwf	??_Lcd_Write_String
  4024     062C  1803               	skipnc
  4025     062D  0AA0               	incf	??_Lcd_Write_String,f
  4026     062E  1FA3               	btfss	Lcd_Write_String@i,7
  4027     062F  2E31               	goto	u1510
  4028     0630  03A0               	decf	??_Lcd_Write_String,f
  4029     0631                     u1510:
  4030     0631  1283               	bcf	3,5	;RP0=0, select bank0
  4031     0632  1303               	bcf	3,6	;RP1=0, select bank0
  4032     0633  0820               	movf	??_Lcd_Write_String,w
  4033     0634  00A2               	movwf	??_Lcd_Write_String+2
  4034     0635  0822               	movf	??_Lcd_Write_String+2,w
  4035     0636  00FF               	movwf	btemp+1
  4036     0637  0821               	movf	??_Lcd_Write_String+1,w
  4037     0638  0084               	movwf	4
  4038     0639  120A  118A  2792  120A  118A  	fcall	stringtab
  4039     063E  3A00               	xorlw	0
  4040     063F  1D03               	skipz
  4041     0640  2E42               	goto	u1521
  4042     0641  2E43               	goto	u1520
  4043     0642                     u1521:
  4044     0642  2E03               	goto	l1916
  4045     0643                     u1520:
  4046     0643                     l240:
  4047     0643  0008               	return
  4048     0644                     __end_of_Lcd_Write_String:
  4049                           
  4050                           	psect	text24
  4051     072F                     __ptext24:	
  4052 ;; *************** function _Lcd_Write_Char *****************
  4053 ;; Defined at:
  4054 ;;		line 83 in file "LCD4b.c"
  4055 ;; Parameters:    Size  Location     Type
  4056 ;;  a               1    wreg     unsigned char 
  4057 ;; Auto vars:     Size  Location     Type
  4058 ;;  a               1    6[COMMON] unsigned char 
  4059 ;;  y               1    5[COMMON] unsigned char 
  4060 ;;  temp            1    4[COMMON] unsigned char 
  4061 ;; Return value:  Size  Location     Type
  4062 ;;                  1    wreg      void 
  4063 ;; Registers used:
  4064 ;;		wreg, status,2, status,0, pclath, cstack
  4065 ;; Tracked objects:
  4066 ;;		On entry : 0/0
  4067 ;;		On exit  : 0/0
  4068 ;;		Unchanged: 0/0
  4069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4070 ;;      Params:         0       0       0       0       0
  4071 ;;      Locals:         3       0       0       0       0
  4072 ;;      Temps:          1       0       0       0       0
  4073 ;;      Totals:         4       0       0       0       0
  4074 ;;Total ram usage:        4 bytes
  4075 ;; Hardware stack levels used: 1
  4076 ;; Hardware stack levels required when called: 2
  4077 ;; This function calls:
  4078 ;;		_Lcd_Port
  4079 ;; This function is called by:
  4080 ;;		_Lcd_Write_String
  4081 ;; This function uses a non-reentrant model
  4082 ;;
  4083                           
  4084     072F                     _Lcd_Write_Char:	
  4085                           ;psect for function _Lcd_Write_Char
  4086                           
  4087                           
  4088                           ;incstack = 0
  4089                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4090                           ;Lcd_Write_Char@a stored from wreg
  4091     072F  00F6               	movwf	Lcd_Write_Char@a
  4092     0730                     l1764:
  4093                           
  4094                           ;LCD4b.c: 84:     char temp, y;;LCD4b.c: 85:     temp = a & 0x0F;
  4095     0730  0876               	movf	Lcd_Write_Char@a,w
  4096     0731  390F               	andlw	15
  4097     0732  00F4               	movwf	Lcd_Write_Char@temp
  4098                           
  4099                           ;LCD4b.c: 86:     y = a & 0xF0;
  4100     0733  0876               	movf	Lcd_Write_Char@a,w
  4101     0734  39F0               	andlw	240
  4102     0735  00F5               	movwf	Lcd_Write_Char@y
  4103     0736                     l1766:
  4104                           
  4105                           ;LCD4b.c: 87:     PORTDbits.RD2 = 1;
  4106     0736  1283               	bcf	3,5	;RP0=0, select bank0
  4107     0737  1303               	bcf	3,6	;RP1=0, select bank0
  4108     0738  1508               	bsf	8,2	;volatile
  4109     0739                     l1768:
  4110                           
  4111                           ;LCD4b.c: 88:     Lcd_Port(y >> 4);
  4112     0739  0875               	movf	Lcd_Write_Char@y,w
  4113     073A  00F3               	movwf	??_Lcd_Write_Char
  4114     073B  3004               	movlw	4
  4115     073C                     u1215:
  4116     073C  1003               	clrc
  4117     073D  0CF3               	rrf	??_Lcd_Write_Char,f
  4118     073E  3EFF               	addlw	-1
  4119     073F  1D03               	skipz
  4120     0740  2F3C               	goto	u1215
  4121     0741  0873               	movf	??_Lcd_Write_Char,w
  4122     0742  120A  118A  27BA  120A  118A  	fcall	_Lcd_Port
  4123     0747                     l1770:
  4124                           
  4125                           ;LCD4b.c: 89:     RD3 = 1;
  4126     0747  1283               	bcf	3,5	;RP0=0, select bank0
  4127     0748  1303               	bcf	3,6	;RP1=0, select bank0
  4128     0749  1588               	bsf	8,3	;volatile
  4129     074A                     l1772:
  4130                           
  4131                           ;LCD4b.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4132     074A  301A               	movlw	26
  4133     074B  00F3               	movwf	??_Lcd_Write_Char
  4134     074C                     u1687:
  4135     074C  0BF3               	decfsz	??_Lcd_Write_Char,f
  4136     074D  2F4C               	goto	u1687
  4137     074E  0000               	nop
  4138     074F                     l1774:
  4139                           
  4140                           ;LCD4b.c: 91:     RD3 = 0;
  4141     074F  1283               	bcf	3,5	;RP0=0, select bank0
  4142     0750  1303               	bcf	3,6	;RP1=0, select bank0
  4143     0751  1188               	bcf	8,3	;volatile
  4144     0752                     l1776:
  4145                           
  4146                           ;LCD4b.c: 92:     Lcd_Port(temp);
  4147     0752  0874               	movf	Lcd_Write_Char@temp,w
  4148     0753  120A  118A  27BA  120A  118A  	fcall	_Lcd_Port
  4149     0758                     l1778:
  4150                           
  4151                           ;LCD4b.c: 93:     RD3 = 1;
  4152     0758  1283               	bcf	3,5	;RP0=0, select bank0
  4153     0759  1303               	bcf	3,6	;RP1=0, select bank0
  4154     075A  1588               	bsf	8,3	;volatile
  4155     075B                     l1780:
  4156                           
  4157                           ;LCD4b.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4158     075B  301A               	movlw	26
  4159     075C  00F3               	movwf	??_Lcd_Write_Char
  4160     075D                     u1697:
  4161     075D  0BF3               	decfsz	??_Lcd_Write_Char,f
  4162     075E  2F5D               	goto	u1697
  4163     075F  0000               	nop
  4164     0760                     l1782:
  4165                           
  4166                           ;LCD4b.c: 95:     RD3 = 0;
  4167     0760  1283               	bcf	3,5	;RP0=0, select bank0
  4168     0761  1303               	bcf	3,6	;RP1=0, select bank0
  4169     0762  1188               	bcf	8,3	;volatile
  4170     0763                     l234:
  4171     0763  0008               	return
  4172     0764                     __end_of_Lcd_Write_Char:
  4173                           
  4174                           	psect	text25
  4175     0491                     __ptext25:	
  4176 ;; *************** function _Lcd_Set_Cursor *****************
  4177 ;; Defined at:
  4178 ;;		line 48 in file "LCD4b.c"
  4179 ;; Parameters:    Size  Location     Type
  4180 ;;  a               1    wreg     unsigned char 
  4181 ;;  b               1    6[COMMON] unsigned char 
  4182 ;; Auto vars:     Size  Location     Type
  4183 ;;  a               1    0[BANK0 ] unsigned char 
  4184 ;;  temp            1    3[BANK0 ] unsigned char 
  4185 ;;  y               1    2[BANK0 ] unsigned char 
  4186 ;;  z               1    1[BANK0 ] unsigned char 
  4187 ;; Return value:  Size  Location     Type
  4188 ;;                  1    wreg      void 
  4189 ;; Registers used:
  4190 ;;		wreg, status,2, status,0, pclath, cstack
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4196 ;;      Params:         1       0       0       0       0
  4197 ;;      Locals:         0       4       0       0       0
  4198 ;;      Temps:          1       0       0       0       0
  4199 ;;      Totals:         2       4       0       0       0
  4200 ;;Total ram usage:        6 bytes
  4201 ;; Hardware stack levels used: 1
  4202 ;; Hardware stack levels required when called: 3
  4203 ;; This function calls:
  4204 ;;		_Lcd_Cmd
  4205 ;; This function is called by:
  4206 ;;		_LDC_output
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209                           
  4210     0491                     _Lcd_Set_Cursor:	
  4211                           ;psect for function _Lcd_Set_Cursor
  4212                           
  4213                           
  4214                           ;incstack = 0
  4215                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4216                           ;Lcd_Set_Cursor@a stored from wreg
  4217     0491  1283               	bcf	3,5	;RP0=0, select bank0
  4218     0492  1303               	bcf	3,6	;RP1=0, select bank0
  4219     0493  00A0               	movwf	Lcd_Set_Cursor@a
  4220     0494                     l1894:
  4221                           
  4222                           ;LCD4b.c: 49:     char temp, z, y;;LCD4b.c: 50:     if (a == 1) {
  4223     0494  0320               	decf	Lcd_Set_Cursor@a,w
  4224     0495  1D03               	btfss	3,2
  4225     0496  2C98               	goto	u1461
  4226     0497  2C99               	goto	u1460
  4227     0498                     u1461:
  4228     0498  2CB8               	goto	l1904
  4229     0499                     u1460:
  4230     0499                     l1896:
  4231                           
  4232                           ;LCD4b.c: 51:         temp = 0x80 + b - 1;
  4233     0499  0876               	movf	Lcd_Set_Cursor@b,w
  4234     049A  3E7F               	addlw	127
  4235     049B  00A3               	movwf	Lcd_Set_Cursor@temp
  4236                           
  4237                           ;LCD4b.c: 52:         z = temp >> 4;
  4238     049C  0823               	movf	Lcd_Set_Cursor@temp,w
  4239     049D  00F7               	movwf	??_Lcd_Set_Cursor
  4240     049E  3004               	movlw	4
  4241     049F                     u1475:
  4242     049F  1003               	clrc
  4243     04A0  0CF7               	rrf	??_Lcd_Set_Cursor,f
  4244     04A1  3EFF               	addlw	-1
  4245     04A2  1D03               	skipz
  4246     04A3  2C9F               	goto	u1475
  4247     04A4  0877               	movf	??_Lcd_Set_Cursor,w
  4248     04A5  00A1               	movwf	Lcd_Set_Cursor@z
  4249     04A6                     l1898:
  4250                           
  4251                           ;LCD4b.c: 53:         y = temp & 0x0F;
  4252     04A6  0823               	movf	Lcd_Set_Cursor@temp,w
  4253     04A7  390F               	andlw	15
  4254     04A8  00A2               	movwf	Lcd_Set_Cursor@y
  4255     04A9                     l1900:
  4256                           
  4257                           ;LCD4b.c: 54:         Lcd_Cmd(z);
  4258     04A9  0821               	movf	Lcd_Set_Cursor@z,w
  4259     04AA  120A  118A  27DC  120A  118A  	fcall	_Lcd_Cmd
  4260     04AF                     l1902:
  4261                           
  4262                           ;LCD4b.c: 55:         Lcd_Cmd(y);
  4263     04AF  1283               	bcf	3,5	;RP0=0, select bank0
  4264     04B0  1303               	bcf	3,6	;RP1=0, select bank0
  4265     04B1  0822               	movf	Lcd_Set_Cursor@y,w
  4266     04B2  120A  118A  27DC  120A  118A  	fcall	_Lcd_Cmd
  4267                           
  4268                           ;LCD4b.c: 56:     } else if (a == 2) {
  4269     04B7  2CDC               	goto	l228
  4270     04B8                     l1904:
  4271     04B8  3002               	movlw	2
  4272     04B9  0620               	xorwf	Lcd_Set_Cursor@a,w
  4273     04BA  1D03               	btfss	3,2
  4274     04BB  2CBD               	goto	u1481
  4275     04BC  2CBE               	goto	u1480
  4276     04BD                     u1481:
  4277     04BD  2CDC               	goto	l228
  4278     04BE                     u1480:
  4279     04BE                     l1906:
  4280                           
  4281                           ;LCD4b.c: 57:         temp = 0xC0 + b - 1;
  4282     04BE  0876               	movf	Lcd_Set_Cursor@b,w
  4283     04BF  3EBF               	addlw	191
  4284     04C0  00A3               	movwf	Lcd_Set_Cursor@temp
  4285                           
  4286                           ;LCD4b.c: 58:         z = temp >> 4;
  4287     04C1  0823               	movf	Lcd_Set_Cursor@temp,w
  4288     04C2  00F7               	movwf	??_Lcd_Set_Cursor
  4289     04C3  3004               	movlw	4
  4290     04C4                     u1495:
  4291     04C4  1003               	clrc
  4292     04C5  0CF7               	rrf	??_Lcd_Set_Cursor,f
  4293     04C6  3EFF               	addlw	-1
  4294     04C7  1D03               	skipz
  4295     04C8  2CC4               	goto	u1495
  4296     04C9  0877               	movf	??_Lcd_Set_Cursor,w
  4297     04CA  00A1               	movwf	Lcd_Set_Cursor@z
  4298     04CB                     l1908:
  4299                           
  4300                           ;LCD4b.c: 59:         y = temp & 0x0F;
  4301     04CB  0823               	movf	Lcd_Set_Cursor@temp,w
  4302     04CC  390F               	andlw	15
  4303     04CD  00A2               	movwf	Lcd_Set_Cursor@y
  4304     04CE                     l1910:
  4305                           
  4306                           ;LCD4b.c: 60:         Lcd_Cmd(z);
  4307     04CE  0821               	movf	Lcd_Set_Cursor@z,w
  4308     04CF  120A  118A  27DC  120A  118A  	fcall	_Lcd_Cmd
  4309     04D4                     l1912:
  4310                           
  4311                           ;LCD4b.c: 61:         Lcd_Cmd(y);
  4312     04D4  1283               	bcf	3,5	;RP0=0, select bank0
  4313     04D5  1303               	bcf	3,6	;RP1=0, select bank0
  4314     04D6  0822               	movf	Lcd_Set_Cursor@y,w
  4315     04D7  120A  118A  27DC  120A  118A  	fcall	_Lcd_Cmd
  4316     04DC                     l228:
  4317     04DC  0008               	return
  4318     04DD                     __end_of_Lcd_Set_Cursor:
  4319                           
  4320                           	psect	text26
  4321     0FE6                     __ptext26:	
  4322 ;; *************** function _Lcd_Clear *****************
  4323 ;; Defined at:
  4324 ;;		line 43 in file "LCD4b.c"
  4325 ;; Parameters:    Size  Location     Type
  4326 ;;		None
  4327 ;; Auto vars:     Size  Location     Type
  4328 ;;		None
  4329 ;; Return value:  Size  Location     Type
  4330 ;;                  1    wreg      void 
  4331 ;; Registers used:
  4332 ;;		wreg, status,2, status,0, pclath, cstack
  4333 ;; Tracked objects:
  4334 ;;		On entry : 0/0
  4335 ;;		On exit  : 0/0
  4336 ;;		Unchanged: 0/0
  4337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4338 ;;      Params:         0       0       0       0       0
  4339 ;;      Locals:         0       0       0       0       0
  4340 ;;      Temps:          0       0       0       0       0
  4341 ;;      Totals:         0       0       0       0       0
  4342 ;;Total ram usage:        0 bytes
  4343 ;; Hardware stack levels used: 1
  4344 ;; Hardware stack levels required when called: 3
  4345 ;; This function calls:
  4346 ;;		_Lcd_Cmd
  4347 ;; This function is called by:
  4348 ;;		_LDC_output
  4349 ;; This function uses a non-reentrant model
  4350 ;;
  4351                           
  4352     0FE6                     _Lcd_Clear:	
  4353                           ;psect for function _Lcd_Clear
  4354                           
  4355     0FE6                     l1892:	
  4356                           ;incstack = 0
  4357                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4358                           
  4359                           
  4360                           ;LCD4b.c: 44:     Lcd_Cmd(0);
  4361     0FE6  3000               	movlw	0
  4362     0FE7  120A  118A  27DC  120A  158A  	fcall	_Lcd_Cmd
  4363                           
  4364                           ;LCD4b.c: 45:     Lcd_Cmd(1);
  4365     0FEC  3001               	movlw	1
  4366     0FED  120A  118A  27DC  120A  158A  	fcall	_Lcd_Cmd
  4367     0FF2                     l222:
  4368     0FF2  0008               	return
  4369     0FF3                     __end_of_Lcd_Clear:
  4370                           
  4371                           	psect	text27
  4372     07DC                     __ptext27:	
  4373 ;; *************** function _Lcd_Cmd *****************
  4374 ;; Defined at:
  4375 ;;		line 35 in file "LCD4b.c"
  4376 ;; Parameters:    Size  Location     Type
  4377 ;;  a               1    wreg     unsigned char 
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;  a               1    5[COMMON] unsigned char 
  4380 ;; Return value:  Size  Location     Type
  4381 ;;                  1    wreg      void 
  4382 ;; Registers used:
  4383 ;;		wreg, status,2, status,0, pclath, cstack
  4384 ;; Tracked objects:
  4385 ;;		On entry : 0/0
  4386 ;;		On exit  : 0/0
  4387 ;;		Unchanged: 0/0
  4388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4389 ;;      Params:         0       0       0       0       0
  4390 ;;      Locals:         1       0       0       0       0
  4391 ;;      Temps:          2       0       0       0       0
  4392 ;;      Totals:         3       0       0       0       0
  4393 ;;Total ram usage:        3 bytes
  4394 ;; Hardware stack levels used: 1
  4395 ;; Hardware stack levels required when called: 2
  4396 ;; This function calls:
  4397 ;;		_Lcd_Port
  4398 ;; This function is called by:
  4399 ;;		_Lcd_Clear
  4400 ;;		_Lcd_Set_Cursor
  4401 ;;		_Lcd_Init
  4402 ;;		_Lcd_Shift_Right
  4403 ;;		_Lcd_Shift_Left
  4404 ;; This function uses a non-reentrant model
  4405 ;;
  4406                           
  4407     07DC                     _Lcd_Cmd:	
  4408                           ;psect for function _Lcd_Cmd
  4409                           
  4410                           
  4411                           ;incstack = 0
  4412                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4413                           ;Lcd_Cmd@a stored from wreg
  4414     07DC  00F5               	movwf	Lcd_Cmd@a
  4415     07DD                     l1754:
  4416                           
  4417                           ;LCD4b.c: 36:     PORTDbits.RD2 = 0;
  4418     07DD  1283               	bcf	3,5	;RP0=0, select bank0
  4419     07DE  1303               	bcf	3,6	;RP1=0, select bank0
  4420     07DF  1108               	bcf	8,2	;volatile
  4421     07E0                     l1756:
  4422                           
  4423                           ;LCD4b.c: 37:     Lcd_Port(a);
  4424     07E0  0875               	movf	Lcd_Cmd@a,w
  4425     07E1  120A  118A  27BA  120A  118A  	fcall	_Lcd_Port
  4426     07E6                     l1758:
  4427                           
  4428                           ;LCD4b.c: 38:     RD3 = 1;
  4429     07E6  1283               	bcf	3,5	;RP0=0, select bank0
  4430     07E7  1303               	bcf	3,6	;RP1=0, select bank0
  4431     07E8  1588               	bsf	8,3	;volatile
  4432     07E9                     l1760:
  4433                           
  4434                           ;LCD4b.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4435     07E9  300B               	movlw	11
  4436     07EA  00F4               	movwf	??_Lcd_Cmd+1
  4437     07EB  3062               	movlw	98
  4438     07EC  00F3               	movwf	??_Lcd_Cmd
  4439     07ED                     u1707:
  4440     07ED  0BF3               	decfsz	??_Lcd_Cmd,f
  4441     07EE  2FED               	goto	u1707
  4442     07EF  0BF4               	decfsz	??_Lcd_Cmd+1,f
  4443     07F0  2FED               	goto	u1707
  4444     07F1  0000               	nop
  4445     07F2                     l1762:
  4446                           
  4447                           ;LCD4b.c: 40:     RD3 = 0;
  4448     07F2  1283               	bcf	3,5	;RP0=0, select bank0
  4449     07F3  1303               	bcf	3,6	;RP1=0, select bank0
  4450     07F4  1188               	bcf	8,3	;volatile
  4451     07F5                     l219:
  4452     07F5  0008               	return
  4453     07F6                     __end_of_Lcd_Cmd:
  4454                           
  4455                           	psect	text28
  4456     07BA                     __ptext28:	
  4457 ;; *************** function _Lcd_Port *****************
  4458 ;; Defined at:
  4459 ;;		line 13 in file "LCD4b.c"
  4460 ;; Parameters:    Size  Location     Type
  4461 ;;  a               1    wreg     unsigned char 
  4462 ;; Auto vars:     Size  Location     Type
  4463 ;;  a               1    2[COMMON] unsigned char 
  4464 ;; Return value:  Size  Location     Type
  4465 ;;                  1    wreg      void 
  4466 ;; Registers used:
  4467 ;;		wreg
  4468 ;; Tracked objects:
  4469 ;;		On entry : 0/0
  4470 ;;		On exit  : 0/0
  4471 ;;		Unchanged: 0/0
  4472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4473 ;;      Params:         0       0       0       0       0
  4474 ;;      Locals:         1       0       0       0       0
  4475 ;;      Temps:          0       0       0       0       0
  4476 ;;      Totals:         1       0       0       0       0
  4477 ;;Total ram usage:        1 bytes
  4478 ;; Hardware stack levels used: 1
  4479 ;; Hardware stack levels required when called: 1
  4480 ;; This function calls:
  4481 ;;		Nothing
  4482 ;; This function is called by:
  4483 ;;		_Lcd_Cmd
  4484 ;;		_Lcd_Init
  4485 ;;		_Lcd_Write_Char
  4486 ;; This function uses a non-reentrant model
  4487 ;;
  4488                           
  4489     07BA                     _Lcd_Port:	
  4490                           ;psect for function _Lcd_Port
  4491                           
  4492                           
  4493                           ;incstack = 0
  4494                           ; Regs used in _Lcd_Port: [wreg]
  4495                           ;Lcd_Port@a stored from wreg
  4496     07BA  00F2               	movwf	Lcd_Port@a
  4497     07BB                     l1744:
  4498                           
  4499                           ;LCD4b.c: 14:     if (a & 1)
  4500     07BB  1C72               	btfss	Lcd_Port@a,0
  4501     07BC  2FBE               	goto	u1171
  4502     07BD  2FBF               	goto	u1170
  4503     07BE                     u1171:
  4504     07BE  2FC3               	goto	l208
  4505     07BF                     u1170:
  4506     07BF                     l1746:
  4507                           
  4508                           ;LCD4b.c: 15:         RD4 = 1;
  4509     07BF  1283               	bcf	3,5	;RP0=0, select bank0
  4510     07C0  1303               	bcf	3,6	;RP1=0, select bank0
  4511     07C1  1608               	bsf	8,4	;volatile
  4512     07C2  2FC6               	goto	l209
  4513     07C3                     l208:	
  4514                           ;LCD4b.c: 16:     else
  4515                           
  4516                           
  4517                           ;LCD4b.c: 17:         RD4 = 0;
  4518     07C3  1283               	bcf	3,5	;RP0=0, select bank0
  4519     07C4  1303               	bcf	3,6	;RP1=0, select bank0
  4520     07C5  1208               	bcf	8,4	;volatile
  4521     07C6                     l209:
  4522                           
  4523                           ;LCD4b.c: 19:     if (a & 2)
  4524     07C6  1CF2               	btfss	Lcd_Port@a,1
  4525     07C7  2FC9               	goto	u1181
  4526     07C8  2FCA               	goto	u1180
  4527     07C9                     u1181:
  4528     07C9  2FCC               	goto	l210
  4529     07CA                     u1180:
  4530     07CA                     l1748:
  4531                           
  4532                           ;LCD4b.c: 20:         RD5 = 1;
  4533     07CA  1688               	bsf	8,5	;volatile
  4534     07CB  2FCD               	goto	l211
  4535     07CC                     l210:	
  4536                           ;LCD4b.c: 21:     else
  4537                           
  4538                           
  4539                           ;LCD4b.c: 22:         RD5 = 0;
  4540     07CC  1288               	bcf	8,5	;volatile
  4541     07CD                     l211:
  4542                           
  4543                           ;LCD4b.c: 24:     if (a & 4)
  4544     07CD  1D72               	btfss	Lcd_Port@a,2
  4545     07CE  2FD0               	goto	u1191
  4546     07CF  2FD1               	goto	u1190
  4547     07D0                     u1191:
  4548     07D0  2FD3               	goto	l212
  4549     07D1                     u1190:
  4550     07D1                     l1750:
  4551                           
  4552                           ;LCD4b.c: 25:         RD6 = 1;
  4553     07D1  1708               	bsf	8,6	;volatile
  4554     07D2  2FD4               	goto	l213
  4555     07D3                     l212:	
  4556                           ;LCD4b.c: 26:     else
  4557                           
  4558                           
  4559                           ;LCD4b.c: 27:         RD6 = 0;
  4560     07D3  1308               	bcf	8,6	;volatile
  4561     07D4                     l213:
  4562                           
  4563                           ;LCD4b.c: 29:     if (a & 8)
  4564     07D4  1DF2               	btfss	Lcd_Port@a,3
  4565     07D5  2FD7               	goto	u1201
  4566     07D6  2FD8               	goto	u1200
  4567     07D7                     u1201:
  4568     07D7  2FDA               	goto	l214
  4569     07D8                     u1200:
  4570     07D8                     l1752:
  4571                           
  4572                           ;LCD4b.c: 30:         RD7 = 1;
  4573     07D8  1788               	bsf	8,7	;volatile
  4574     07D9  2FDB               	goto	l216
  4575     07DA                     l214:	
  4576                           ;LCD4b.c: 31:     else
  4577                           
  4578                           
  4579                           ;LCD4b.c: 32:         RD7 = 0;
  4580     07DA  1388               	bcf	8,7	;volatile
  4581     07DB                     l216:
  4582     07DB  0008               	return
  4583     07DC                     __end_of_Lcd_Port:
  4584                           
  4585                           	psect	text29
  4586     0FBC                     __ptext29:	
  4587 ;; *************** function _isr *****************
  4588 ;; Defined at:
  4589 ;;		line 73 in file "master.c"
  4590 ;; Parameters:    Size  Location     Type
  4591 ;;		None
  4592 ;; Auto vars:     Size  Location     Type
  4593 ;;		None
  4594 ;; Return value:  Size  Location     Type
  4595 ;;                  1    wreg      void 
  4596 ;; Registers used:
  4597 ;;		None
  4598 ;; Tracked objects:
  4599 ;;		On entry : 0/0
  4600 ;;		On exit  : 0/0
  4601 ;;		Unchanged: 0/0
  4602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4603 ;;      Params:         0       0       0       0       0
  4604 ;;      Locals:         0       0       0       0       0
  4605 ;;      Temps:          2       0       0       0       0
  4606 ;;      Totals:         2       0       0       0       0
  4607 ;;Total ram usage:        2 bytes
  4608 ;; Hardware stack levels used: 1
  4609 ;; This function calls:
  4610 ;;		Nothing
  4611 ;; This function is called by:
  4612 ;;		Interrupt level 1
  4613 ;; This function uses a non-reentrant model
  4614 ;;
  4615                           
  4616     0FBC                     _isr:	
  4617                           ;psect for function _isr
  4618                           
  4619     0FBC                     i1l87:
  4620     0FBC  0871               	movf	??_isr+1,w
  4621     0FBD  008A               	movwf	10
  4622     0FBE  0E70               	swapf	??_isr,w
  4623     0FBF  0083               	movwf	3
  4624     0FC0  0EFE               	swapf	btemp,f
  4625     0FC1  0E7E               	swapf	btemp,w
  4626     0FC2  0009               	retfie
  4627     0FC3                     __end_of_isr:
  4628     007E                     btemp	set	126	;btemp
  4629     007E                     wtemp0	set	126
  4630                           
  4631                           	psect	intentry
  4632     0004                     __pintentry:	
  4633                           ;incstack = 0
  4634                           ; Regs used in _isr: []
  4635                           
  4636     0004                     interrupt_function:
  4637     007E                     saved_w	set	btemp
  4638     0004  00FE               	movwf	btemp
  4639     0005  0E03               	swapf	3,w
  4640     0006  00F0               	movwf	??_isr
  4641     0007  080A               	movf	10,w
  4642     0008  00F1               	movwf	??_isr+1
  4643     0009  120A  158A  2FBC   	ljmp	_isr
  4644                           
  4645                           	psect	config
  4646                           
  4647                           ;Config register CONFIG1 @ 0x2007
  4648                           ;	Oscillator Selection bits
  4649                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4650                           ;	Watchdog Timer Enable bit
  4651                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4652                           ;	Power-up Timer Enable bit
  4653                           ;	PWRTE = OFF, PWRT disabled
  4654                           ;	RE3/MCLR pin function select bit
  4655                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4656                           ;	Code Protection bit
  4657                           ;	CP = OFF, Program memory code protection is disabled
  4658                           ;	Data Code Protection bit
  4659                           ;	CPD = OFF, Data memory code protection is disabled
  4660                           ;	Brown Out Reset Selection bits
  4661                           ;	BOREN = OFF, BOR disabled
  4662                           ;	Internal External Switchover bit
  4663                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4664                           ;	Fail-Safe Clock Monitor Enabled bit
  4665                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4666                           ;	Low Voltage Programming Enable bit
  4667                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4668                           ;	In-Circuit Debugger Mode bit
  4669                           ;	DEBUG = 0x1, unprogrammed default
  4670     2007                     	org	8199
  4671     2007  20D4               	dw	8404
  4672                           
  4673                           ;Config register CONFIG2 @ 0x2008
  4674                           ;	Brown-out Reset Selection bit
  4675                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4676                           ;	Flash Program Memory Self Write Enable bits
  4677                           ;	WRT = OFF, Write protection off
  4678     2008                     	org	8200
  4679     2008  3FFF               	dw	16383

Data Sizes:
    Strings     24
    Constant    0
    Data        1
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     41      62
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 4
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[3]), STR_4(CODE[4]), 
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), S_ired(BANK0[2]), 
		 -> S_gas(BANK0[4]), S_hum(BANK0[3]), S_temp(BANK0[4]), 

    num_to_string@dig8	PTR unsigned char  size(1) Largest target is 4
		 -> S_ired(BANK0[2]), S_gas(BANK0[4]), S_hum(BANK0[3]), S_temp(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_requestHum
    _main->_requestIR
    _writeMotors->_I2C_Master_Write
    _Lcd_Init->_Lcd_Cmd
    _I2C_Master_Init->___lldiv
    _requestIR->_I2C_Master_Read
    _requestHum->_I2C_Master_Read
    _map->___lmul
    ___aldiv->___lmul
    _LDC_output->_Lcd_Write_String
    _num_to_string->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_requestGas
    _main->_requestTemp
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _requestTemp->_map
    _requestGas->_map
    _map->___aldiv
    ___aldiv->___lmul
    _LDC_output->_num_to_string

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   16625
                                             38 BANK0      3     3      0
                         _LDC_output
                         _requestGas
                         _requestHum
                          _requestIR
                        _requestTemp
                              _setup
                        _writeMotors
 ---------------------------------------------------------------------------------
 (1) _writeMotors                                          2     2      0    1086
                                              4 COMMON     2     2      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _setup                                                2     2      0     821
                                             14 BANK0      2     2      0
                    _I2C_Master_Init
                           _Lcd_Init
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     279
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _requestTemp                                          2     2      0    3313
                                             36 BANK0      2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                                _map
 ---------------------------------------------------------------------------------
 (1) _requestIR                                            2     2      0    1435
                                              8 COMMON     2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _requestHum                                           2     2      0    1435
                                              8 COMMON     2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _requestGas                                           2     2      0    3313
                                             36 BANK0      2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                                _map
 ---------------------------------------------------------------------------------
 (2) _map                                                 16     9      7    1878
                                             20 BANK0     16     9      7
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     316
                                              2 COMMON     8     0      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     625
                                              5 BANK0     15     7      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1086
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     349
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LDC_output                                           2     2      0    5222
                                             16 BANK0      2     2      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                      _num_to_string
 ---------------------------------------------------------------------------------
 (2) _num_to_string                                       18    14      4    2788
                                              0 BANK0     16    12      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     767
                                              2 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2    1374
                                              7 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     254
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1     905
                                              6 COMMON     2     1      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     155
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LDC_output
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _num_to_string
       ___lwdiv
       ___lwmod
   _requestGas
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _map
       ___aldiv
         ___lmul (ARG)
       ___lmul
   _requestHum
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
   _requestIR
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
   _requestTemp
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _map
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Init
       _Lcd_Cmd
       _Lcd_Port
   _writeMotors
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     29      3E       5       77.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4A      12        0.0%
ABS                  0      0      4A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Aug 23 14:56:08 2023

                               pc 0002                                l99 072E                                fsr 0004  
                             l102 0378                               l111 0525                               l120 0456  
                             l105 056E                               l210 07CC                               l122 0490  
                             l211 07CD                               l212 07D3                               l108 0315  
                             l213 07D4                               l133 01AA                               l125 00F1  
                             l117 044F                               l214 07DA                               l222 0FF2  
                             l231 0436                               l216 07DB                               l208 07C3  
                             l240 0643                               l136 03D9                               l209 07C6  
                             l234 0763                               l219 07F5                               l171 0FFF  
                             l228 04DC                               l180 0FE5                               l165 06F9  
                             l174 0FDC                               l183 07FF                               l407 0247  
                             l168 0FF3                               l177 0FD3                               l186 0789  
                             l346 05B6                               l187 078C                               l604 0687  
                             l188 0791                               l614 06C1                               l368 02AF  
                             l397 01BF                               _GIE 005F                               _RD3 0043  
                             _RD4 0044                               _RD5 0045                               _RD6 0046  
                             _RD7 0047                               u630 0FF9                               u631 0FF8  
                             u640 0FFF                               u641 0FFE                               u900 065E  
                             u901 065D                               _SCS 0478                               u920 066F  
                             u921 066E                               u915 065F                               u940 0683  
                             u941 0682                               u925 066B                               u950 068E  
                             u935 0677                               u951 068D                               u880 064C  
                             u881 064B                               u970 06A0                               u971 069F  
                             u980 06AA                               u981 06A9                               u965 0692  
                             u895 0650                               u985 06A6                               u995 06B1  
                             _map 0379                               _isr 0FBC                               fsr0 0004  
                             indf 0000                       ?_LDC_output 0070                              l2000 05C4  
                            l2010 05DB                              l2002 05C9                              l2012 05E0  
                            l2004 05CC                              l1310 0FF9                              l2014 05E5  
                            l2006 05D1                              l2016 05F4                              l2008 05D6  
                            l2042 045D                              l1308 0FF3                              l1500 07FB  
                            l1430 064F                              l1510 0771                              l1502 0FCB  
                            l1440 0675                              l1432 0656                              l1424 0644  
                            l1512 077A                              l1504 0FD0                              l1442 0676  
                            l1434 065A                              l1426 0646                              l1450 0688  
                            l1514 077F                              l1506 0764                              l1522 0FDD  
                            l1444 067D                              l1436 065E                              l1428 064C  
                            l1460 06A0                              l1452 068E                              l1540 0187  
                            l1532 00F2                              l1516 0785                              l1508 0769  
                            l1524 0FE2                              l1438 066F                              l1446 0683  
                            l1462 06AA                              l1454 0691                              l1542 0193  
                            l1534 0173                              l1518 078D                              l1464 06B0  
                            l1456 0698                              l1544 0199                              l1536 017A  
                            l1640 050B                              l1632 04DD                              l1800 025A  
                            l1466 06B7                              l1458 069C                              l1538 0181  
                            l1642 0517                              l1634 04F4                              l1810 0277  
                            l1802 025D                              l1650 0448                              l1900 04A9  
                            l1468 06BD                              l1644 051C                              l1636 04FD  
                            l1812 0289                              l1804 0266                              l1820 02A7  
                            l1660 0468                              l1652 044A                              l1750 07D1  
                            l1910 04CE                              l1902 04AF                              l1494 0FD4  
                            l1830 01C3                              l1590 0546                              l1638 0502  
                            l1814 0297                              l1806 026A                              l1662 0487  
                            l1654 0451                              l1646 0437                              l1752 07D8  
                            l1744 07BB                              l1760 07E9                              l1912 04D4  
                            l1904 04B8                              l1920 0627                              l1496 0FD9  
                            l1840 01E5                              l1832 01CE                              l1824 01AB  
                            l1592 054B                              l1816 0298                              l1808 026E  
                            l1648 043D                              l1746 07BF                              l1762 07F2  
                            l1754 07DD                              l1906 04BE                              l1770 0747  
                            l1914 05FE                              l1498 07F6                              l1850 0211  
                            l1842 01EE                              l1834 01D2                              l1826 01AE  
                            l1594 0554                              l1586 0526                              l1818 02A1  
                            l1930 0714                              l1922 06FA                              l1658 0458  
                            l1748 07CA                              l1756 07E0                              l1908 04CB  
                            l1780 075B                              l1772 074A                              l1764 0730  
                            l1916 0603                              l1860 0234                              l1852 021F  
                            l1844 01F2                              l1836 01DA                              l1828 01B2  
                            l1596 0560                              l1588 053D                              l1940 033C  
                            l1932 071F                              l1924 070A                              l1758 07E6  
                            l1782 0760                              l1774 074F                              l1766 0736  
                            l1918 061F                              l1862 023F                              l1854 0220  
                            l1846 01F6                              l1838 01E2                              l1790 0594  
                            l1950 02B0                              l1598 0565                              l1942 0345  
                            l1934 0316                              l1870 03E9                              l1926 070E  
                            l1776 0752                              l1768 0739                              l1856 0229  
                            l1848 01FF                              l1792 059D                              l1784 056F  
                            l1960 02EB                              l1952 02C7                              l1944 0351  
                            l1936 032D                              l1880 06C9                              l1872 03F8  
                            l1928 070F                              l1778 0758                              l1970 003B  
                            l1858 022F                              l1794 05AE                              l1786 0579  
                            l1962 02F0                              l1954 02D1                              l1946 0356  
                            l1938 0337                              l1882 06F6                              l1874 03FE  
                            l1866 03DA                              l1892 0FE6                              l1980 0088  
                            l1972 004D                              l1788 057D                              l1964 02FA  
                            l1956 02D6                              l1948 0360                              l1884 06F7  
                            l1876 06C2                              l1868 03E0                              l1894 0494  
                            l1990 00CE                              l1982 0091                              l1974 005C  
                            l1966 0024                              l1958 02DF                              l1798 0248  
                            l1886 06F8                              l1878 06C6                              ?_map 0034  
                            l1896 0499                              l1992 00DF                              l1984 00B4  
                            l1976 0076                              l1968 0029                              l1888 037C  
                            l1898 04A6                              l1994 00E8                              l1986 00BC  
                            l1978 007F                              l1988 00C5                              l1996 05B7  
                            l1998 05BC                              ?_isr 0070                              STR_1 07B4  
                            STR_2 07B7                              STR_3 07B1                              STR_4 07A6  
                            STR_5 07AE                              STR_6 07AA                              STR_7 07A2  
                            u1000 06BD                              u1001 06BC                              u1020 0785  
                            u1021 0784                              u1200 07D8                              u1040 017A  
                            u1201 07D7                              u1041 0179                              u1050 0187  
                            u1051 0186                              u1060 0199                              u1220 057D  
                            u1140 043D                              u1061 0198                              u1221 057C  
                            u1141 043C                              u1310 0289                              u1150 0448  
                            u1215 073C                              u1231 0586                              u1311 0288  
                            u1151 0447                              u1400 0211                              u1232 058D  
                            u1401 0210                              u1233 0594                              u1305 0270  
                            u1170 07BF                              u1330 02A7                              u1171 07BE  
                            u1331 02A6                              u1315 0285                              u1180 07CA  
                            u1500 060D                              u1420 022F                              u1340 01B2  
                            u1260 05AE                              u1181 07C9                              u1421 022E  
                            u1405 020D                              u1341 01B1                              u1261 05AD  
                            u1245 0596                              u1325 0299                              u1190 07D1  
                            u1510 0631                              u1430 0234                              u1350 01C3  
                            u1270 025A                              u1191 07D0                              u1431 0233  
                            u1415 0221                              u1351 01C2                              u1255 059E  
                            u1271 0259                              u1520 0643                              u1360 01E2  
                            u1440 06D9                              u1521 0642                              u1361 01E1  
                            u1290 026E                              u1530 05C4                              u1451 03A6  
                            u1291 026D                              u1531 05C3                              u1460 0499  
                            u1380 01F6                              u1452 03A7                              u1461 0498  
                            u1381 01F5                              u1453 03AC                              u1285 025F  
                            u1445 06D4                              u1454 03AD                              u1375 01E7  
                            u1455 03B2                              u1607 0333                              u1480 04BE  
                            u1456 03B3                              u1481 04BD                              u1617 035C  
                            u1707 07ED                              u1475 049F                              u1395 01F8  
                            u1627 04F8                              u1547 05ED                              u1637 0520  
                            u1557 048B                              u1495 04C4                              u1647 0541  
                            u1567 071A                              u1657 0569                              u1577 03E4  
                            u1667 02CD                              u1587 03F3                              u1677 02F6  
                            u1597 0402                              u1687 074C                              u1697 075D  
                            _PEIE 005E                              i1l87 0FBC                 ?_Lcd_Write_String 0077  
__end_of_I2C_Master_RepeatedStart 0FD4                              _main 05B7                              btemp 007E  
                 ??_num_to_string 0079                              start 000C                ??_Lcd_Write_String 0020  
                 __end_of_Lcd_Cmd 07F6                             ??_map 003B                             ??_isr 0070  
                num_to_string@len 0023                  num_to_string@num 0020                  ?_I2C_Master_Init 0026  
                ?_I2C_Master_Read 0072                  ?_I2C_Master_Wait 0070                  ?_I2C_Master_Stop 0070  
                 __end_of___aldiv 0248                             ?_main 0070                             _ANSEL 0188  
                 __end_of___lldiv 02B0                   __end_of___lwdiv 0688                   __end_of___lwmod 06C2  
                     _writeMotors 0437                             _PORTA 0005                             _PORTD 0008  
                           _TRISA 0085                             _TRISD 0088                             _SSPIE 0463  
                           _SSPIF 0063               ___lmul@multiplicand 0076                             _S_gas 0050  
                           _S_hum 0058                             _n_gas 004D                             _n_hum 004E  
                           _tempC 007B                             _setup 06FA                             pclath 000A  
                           status 0003                             wtemp0 007E                  __end_of_Lcd_Init 0437  
                __end_of_Lcd_Port 07DC                   __initialization 000F                      __end_of_main 05FE  
                          ??_main 0046                 num_to_string@dig8 0022                 num_to_string@div1 0028  
               num_to_string@div2 002A                 num_to_string@div3 0024                 ?_I2C_Master_Start 0070  
               ?_I2C_Master_Write 0072                ??_I2C_Master_Start 0072                ??_I2C_Master_Write 0074  
                          ?_setup 0070                            _ANSELH 0189                         ??_Lcd_Cmd 0073  
                          _SSPADD 0093                            _TRISC3 043B                            _TRISC4 043C  
                          _SSPCON 0014                            _SSPBUF 0013                            _S_ired 005B  
                          _S_temp 0054          _I2C_Master_RepeatedStart 0FCB                            ___lmul 056F  
                       ??___aldiv 002D                            _gasPPM 0049                         ??___lldiv 0020  
                       ??___lwdiv 0076                         ??___lwmod 0076                            _n_ired 004C  
                          _n_temp 004F                      ?_requestTemp 0070                            map@val 0043  
                          saved_w 007E                   Lcd_Set_Cursor@a 0020                   Lcd_Set_Cursor@b 0076  
                 Lcd_Set_Cursor@y 0022                   Lcd_Set_Cursor@z 0021              num_to_string@decenas 002C  
         __end_of__initialization 0020                 __end_of_Lcd_Clear 0FF3                    __pcstackCOMMON 0070  
                    __pidataBANK0 0003                     __end_of_setup 072F                    _Lcd_Set_Cursor 0491  
                    ??_LDC_output 0030                         ?_Lcd_Init 0070                         ?_Lcd_Port 0070  
                         ??_setup 002E                        __pbssBANK0 0049                        __pmaintext 05B7  
                         ?___lmul 0072                        __pintentry 0004                __end_of_LDC_output 00F2  
                  ___lmul@product 0021            __end_of_Lcd_Set_Cursor 04DD                      ?_writeMotors 0070  
                      ??_Lcd_Init 0076                        ??_Lcd_Port 0072                           _SSPCON2 0091  
                         _SSPSTAT 0094                        __stringtab 0792                    _Lcd_Write_Char 072F  
                         _Lcd_Cmd 07DC             __end_of_num_to_string 01AB                           ___aldiv 01AB  
                         ___lldiv 0248                           ___lwdiv 0644                           ___lwmod 0688  
                 ?_Lcd_Set_Cursor 0076                           __ptext1 0437                           __ptext2 06FA  
                         __ptext3 03DA                           __ptext4 06C2                           __ptext5 0248  
                         __ptext6 0316                           __ptext7 04DD                           __ptext8 0526  
                         __ptext9 02B0                           _counter 004B                  ___aldiv@dividend 0029  
                         map@max1 0035                           map@max2 0037                           map@min1 0034  
                         map@min2 0036                           clrloop0 0FC4            __end_of_Lcd_Write_Char 0764  
            end_of_initialization 0020        ??_I2C_Master_RepeatedStart 0072                 __end_of_requestIR 0526  
                 ___lldiv@divisor 0072                   ___lldiv@counter 0025                  ___aldiv@quotient 0030  
                I2C_Master_Init@c 0026                  I2C_Master_Read@a 0072                        _requestGas 02B0  
                       Lcd_Port@a 0072                        _requestHum 0526                         _PORTDbits 0008  
           num_to_string@centenas 0026                         _TRISCbits 0087                   ?_Lcd_Write_Char 0070  
               Lcd_Write_String@a 0077                 Lcd_Write_String@i 0023                         _Lcd_Clear 0FE6  
           num_to_string@unidades 002E                    __end_of___lmul 05B7                  _Lcd_Write_String 05FE  
             start_initialization 000F                       __end_of_map 03DA                       __end_of_isr 0FC3  
               ??_I2C_Master_Init 002A                 ??_I2C_Master_Read 0074                 ??_I2C_Master_Wait 0072  
               ??_I2C_Master_Stop 0072                        ?_Lcd_Clear 0070                          ??___lmul 0020  
                     ?_requestGas 0070                       ?_requestHum 0070                       __pdataBANK0 005D  
                 Lcd_Write_Char@a 0076                   Lcd_Write_Char@y 0075                       __pbssCOMMON 007A  
                       ___latbits 0002                     __pcstackBANK0 0020                          ?_Lcd_Cmd 0070  
                _I2C_Master_Start 0FD4                  _I2C_Master_Write 07F6                  ___lwdiv@dividend 0074  
                ??_Lcd_Set_Cursor 0077                          ?___aldiv 0025                          ?___lldiv 0072  
                        ?___lwdiv 0072                          ?___lwmod 0072                         __pstrings 0792  
                ___lwdiv@quotient 0076                   ___aldiv@divisor 0025                 interrupt_function 0004  
                 ___aldiv@counter 002E                         clear_ram0 0FC3                          Lcd_Cmd@a 0075  
                     ??_Lcd_Clear 0076                         _requestIR 04DD                     ??_requestTemp 0044  
                     __stringbase 07A1                  ??_Lcd_Write_Char 0073                          _Lcd_Init 03DA  
                        _Lcd_Port 07BA               I2C_Master_Read@temp 0076                 ___lmul@multiplier 0072  
        __end_of_Lcd_Write_String 0644                        ?_requestIR 0070         ?_I2C_Master_RepeatedStart 0070  
              __end_of__stringtab 07A2                   _I2C_Master_Init 06C2                   _I2C_Master_Read 0764  
                 _I2C_Master_Wait 0FF3                   _I2C_Master_Stop 0FDD               __end_of_requestTemp 0379  
                 ___lwdiv@divisor 0072                   ___lwdiv@counter 0078                          __ptext10 0379  
                        __ptext11 056F                          __ptext20 00F2                          __ptext12 01AB  
                        __ptext21 0688                          __ptext13 07F6                          __ptext22 0644  
                        __ptext14 0FDD                          __ptext23 05FE                          __ptext15 0FD4  
                        __ptext24 072F                          __ptext16 0FCB                          __ptext25 0491  
                        __ptext17 0764                          __ptext26 0FE6                          __ptext18 0FF3  
                        __ptext27 07DC                          __ptext19 0024                          __ptext28 07BA  
                        __ptext29 0FBC                          _motorCon 007A                     _num_to_string 00F2  
                        _servoPos 005D                      ??_requestGas 0044                      ??_requestHum 0078  
                   ??_writeMotors 0074          __end_of_I2C_Master_Start 0FDD          __end_of_I2C_Master_Write 0800  
                      _LDC_output 0024                Lcd_Write_Char@temp 0074                          intlevel1 0000  
              __end_of_requestGas 0316                __end_of_requestHum 056F                  ___lwmod@dividend 0074  
                ___lldiv@dividend 0076                         stringcode 079C                        _OSCCONbits 008F  
                  ?_num_to_string 0020                       ??_requestIR 0078           __end_of_I2C_Master_Init 06FA  
         __end_of_I2C_Master_Read 0792           __end_of_I2C_Master_Wait 1000           __end_of_I2C_Master_Stop 0FE6  
              Lcd_Set_Cursor@temp 0023                       _requestTemp 0316                  ___lldiv@quotient 0021  
               I2C_Master_Write@d 0072                   ___lwmod@divisor 0072                   ___lwmod@counter 0076  
                        stringdir 079C                          stringtab 0792                      ___aldiv@sign 002F  
                     _SSPCON2bits 0091               __end_of_writeMotors 0491  
