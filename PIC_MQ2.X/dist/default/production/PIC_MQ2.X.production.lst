

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Aug 22 19:52:56 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20     0000                     
    21                           ; Generated 22/03/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0000                     	;# 
    56     0001                     	;# 
    57     0002                     	;# 
    58     0003                     	;# 
    59     0004                     	;# 
    60     0005                     	;# 
    61     0006                     	;# 
    62     0007                     	;# 
    63     0008                     	;# 
    64     0009                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000D                     	;# 
    69     000E                     	;# 
    70     000E                     	;# 
    71     000F                     	;# 
    72     0010                     	;# 
    73     0011                     	;# 
    74     0012                     	;# 
    75     0013                     	;# 
    76     0014                     	;# 
    77     0015                     	;# 
    78     0015                     	;# 
    79     0016                     	;# 
    80     0017                     	;# 
    81     0018                     	;# 
    82     0019                     	;# 
    83     001A                     	;# 
    84     001B                     	;# 
    85     001B                     	;# 
    86     001C                     	;# 
    87     001D                     	;# 
    88     001E                     	;# 
    89     001F                     	;# 
    90     0081                     	;# 
    91     0085                     	;# 
    92     0086                     	;# 
    93     0087                     	;# 
    94     0088                     	;# 
    95     0089                     	;# 
    96     008C                     	;# 
    97     008D                     	;# 
    98     008E                     	;# 
    99     008F                     	;# 
   100     0090                     	;# 
   101     0091                     	;# 
   102     0092                     	;# 
   103     0093                     	;# 
   104     0093                     	;# 
   105     0093                     	;# 
   106     0094                     	;# 
   107     0095                     	;# 
   108     0096                     	;# 
   109     0097                     	;# 
   110     0098                     	;# 
   111     0099                     	;# 
   112     009A                     	;# 
   113     009B                     	;# 
   114     009C                     	;# 
   115     009D                     	;# 
   116     009E                     	;# 
   117     009F                     	;# 
   118     0105                     	;# 
   119     0107                     	;# 
   120     0108                     	;# 
   121     0109                     	;# 
   122     010C                     	;# 
   123     010C                     	;# 
   124     010D                     	;# 
   125     010E                     	;# 
   126     010F                     	;# 
   127     0185                     	;# 
   128     0187                     	;# 
   129     0188                     	;# 
   130     0189                     	;# 
   131     018C                     	;# 
   132     018D                     	;# 
   133     0000                     	;# 
   134     0001                     	;# 
   135     0002                     	;# 
   136     0003                     	;# 
   137     0004                     	;# 
   138     0005                     	;# 
   139     0006                     	;# 
   140     0007                     	;# 
   141     0008                     	;# 
   142     0009                     	;# 
   143     000A                     	;# 
   144     000B                     	;# 
   145     000C                     	;# 
   146     000D                     	;# 
   147     000E                     	;# 
   148     000E                     	;# 
   149     000F                     	;# 
   150     0010                     	;# 
   151     0011                     	;# 
   152     0012                     	;# 
   153     0013                     	;# 
   154     0014                     	;# 
   155     0015                     	;# 
   156     0015                     	;# 
   157     0016                     	;# 
   158     0017                     	;# 
   159     0018                     	;# 
   160     0019                     	;# 
   161     001A                     	;# 
   162     001B                     	;# 
   163     001B                     	;# 
   164     001C                     	;# 
   165     001D                     	;# 
   166     001E                     	;# 
   167     001F                     	;# 
   168     0081                     	;# 
   169     0085                     	;# 
   170     0086                     	;# 
   171     0087                     	;# 
   172     0088                     	;# 
   173     0089                     	;# 
   174     008C                     	;# 
   175     008D                     	;# 
   176     008E                     	;# 
   177     008F                     	;# 
   178     0090                     	;# 
   179     0091                     	;# 
   180     0092                     	;# 
   181     0093                     	;# 
   182     0093                     	;# 
   183     0093                     	;# 
   184     0094                     	;# 
   185     0095                     	;# 
   186     0096                     	;# 
   187     0097                     	;# 
   188     0098                     	;# 
   189     0099                     	;# 
   190     009A                     	;# 
   191     009B                     	;# 
   192     009C                     	;# 
   193     009D                     	;# 
   194     009E                     	;# 
   195     009F                     	;# 
   196     0105                     	;# 
   197     0107                     	;# 
   198     0108                     	;# 
   199     0109                     	;# 
   200     010C                     	;# 
   201     010C                     	;# 
   202     010D                     	;# 
   203     010E                     	;# 
   204     010F                     	;# 
   205     0185                     	;# 
   206     0187                     	;# 
   207     0188                     	;# 
   208     0189                     	;# 
   209     018C                     	;# 
   210     018D                     	;# 
   211     0000                     	;# 
   212     0001                     	;# 
   213     0002                     	;# 
   214     0003                     	;# 
   215     0004                     	;# 
   216     0005                     	;# 
   217     0006                     	;# 
   218     0007                     	;# 
   219     0008                     	;# 
   220     0009                     	;# 
   221     000A                     	;# 
   222     000B                     	;# 
   223     000C                     	;# 
   224     000D                     	;# 
   225     000E                     	;# 
   226     000E                     	;# 
   227     000F                     	;# 
   228     0010                     	;# 
   229     0011                     	;# 
   230     0012                     	;# 
   231     0013                     	;# 
   232     0014                     	;# 
   233     0015                     	;# 
   234     0015                     	;# 
   235     0016                     	;# 
   236     0017                     	;# 
   237     0018                     	;# 
   238     0019                     	;# 
   239     001A                     	;# 
   240     001B                     	;# 
   241     001B                     	;# 
   242     001C                     	;# 
   243     001D                     	;# 
   244     001E                     	;# 
   245     001F                     	;# 
   246     0081                     	;# 
   247     0085                     	;# 
   248     0086                     	;# 
   249     0087                     	;# 
   250     0088                     	;# 
   251     0089                     	;# 
   252     008C                     	;# 
   253     008D                     	;# 
   254     008E                     	;# 
   255     008F                     	;# 
   256     0090                     	;# 
   257     0091                     	;# 
   258     0092                     	;# 
   259     0093                     	;# 
   260     0093                     	;# 
   261     0093                     	;# 
   262     0094                     	;# 
   263     0095                     	;# 
   264     0096                     	;# 
   265     0097                     	;# 
   266     0098                     	;# 
   267     0099                     	;# 
   268     009A                     	;# 
   269     009B                     	;# 
   270     009C                     	;# 
   271     009D                     	;# 
   272     009E                     	;# 
   273     009F                     	;# 
   274     0105                     	;# 
   275     0107                     	;# 
   276     0108                     	;# 
   277     0109                     	;# 
   278     010C                     	;# 
   279     010C                     	;# 
   280     010D                     	;# 
   281     010E                     	;# 
   282     010F                     	;# 
   283     0185                     	;# 
   284     0187                     	;# 
   285     0188                     	;# 
   286     0189                     	;# 
   287     018C                     	;# 
   288     018D                     	;# 
   289     0000                     	;# 
   290     0001                     	;# 
   291     0002                     	;# 
   292     0003                     	;# 
   293     0004                     	;# 
   294     0005                     	;# 
   295     0006                     	;# 
   296     0007                     	;# 
   297     0008                     	;# 
   298     0009                     	;# 
   299     000A                     	;# 
   300     000B                     	;# 
   301     000C                     	;# 
   302     000D                     	;# 
   303     000E                     	;# 
   304     000E                     	;# 
   305     000F                     	;# 
   306     0010                     	;# 
   307     0011                     	;# 
   308     0012                     	;# 
   309     0013                     	;# 
   310     0014                     	;# 
   311     0015                     	;# 
   312     0015                     	;# 
   313     0016                     	;# 
   314     0017                     	;# 
   315     0018                     	;# 
   316     0019                     	;# 
   317     001A                     	;# 
   318     001B                     	;# 
   319     001B                     	;# 
   320     001C                     	;# 
   321     001D                     	;# 
   322     001E                     	;# 
   323     001F                     	;# 
   324     0081                     	;# 
   325     0085                     	;# 
   326     0086                     	;# 
   327     0087                     	;# 
   328     0088                     	;# 
   329     0089                     	;# 
   330     008C                     	;# 
   331     008D                     	;# 
   332     008E                     	;# 
   333     008F                     	;# 
   334     0090                     	;# 
   335     0091                     	;# 
   336     0092                     	;# 
   337     0093                     	;# 
   338     0093                     	;# 
   339     0093                     	;# 
   340     0094                     	;# 
   341     0095                     	;# 
   342     0096                     	;# 
   343     0097                     	;# 
   344     0098                     	;# 
   345     0099                     	;# 
   346     009A                     	;# 
   347     009B                     	;# 
   348     009C                     	;# 
   349     009D                     	;# 
   350     009E                     	;# 
   351     009F                     	;# 
   352     0105                     	;# 
   353     0107                     	;# 
   354     0108                     	;# 
   355     0109                     	;# 
   356     010C                     	;# 
   357     010C                     	;# 
   358     010D                     	;# 
   359     010E                     	;# 
   360     010F                     	;# 
   361     0185                     	;# 
   362     0187                     	;# 
   363     0188                     	;# 
   364     0189                     	;# 
   365     018C                     	;# 
   366     018D                     	;# 
   367     0000                     	;# 
   368     0001                     	;# 
   369     0002                     	;# 
   370     0003                     	;# 
   371     0004                     	;# 
   372     0005                     	;# 
   373     0006                     	;# 
   374     0007                     	;# 
   375     0008                     	;# 
   376     0009                     	;# 
   377     000A                     	;# 
   378     000B                     	;# 
   379     000C                     	;# 
   380     000D                     	;# 
   381     000E                     	;# 
   382     000E                     	;# 
   383     000F                     	;# 
   384     0010                     	;# 
   385     0011                     	;# 
   386     0012                     	;# 
   387     0013                     	;# 
   388     0014                     	;# 
   389     0015                     	;# 
   390     0015                     	;# 
   391     0016                     	;# 
   392     0017                     	;# 
   393     0018                     	;# 
   394     0019                     	;# 
   395     001A                     	;# 
   396     001B                     	;# 
   397     001B                     	;# 
   398     001C                     	;# 
   399     001D                     	;# 
   400     001E                     	;# 
   401     001F                     	;# 
   402     0081                     	;# 
   403     0085                     	;# 
   404     0086                     	;# 
   405     0087                     	;# 
   406     0088                     	;# 
   407     0089                     	;# 
   408     008C                     	;# 
   409     008D                     	;# 
   410     008E                     	;# 
   411     008F                     	;# 
   412     0090                     	;# 
   413     0091                     	;# 
   414     0092                     	;# 
   415     0093                     	;# 
   416     0093                     	;# 
   417     0093                     	;# 
   418     0094                     	;# 
   419     0095                     	;# 
   420     0096                     	;# 
   421     0097                     	;# 
   422     0098                     	;# 
   423     0099                     	;# 
   424     009A                     	;# 
   425     009B                     	;# 
   426     009C                     	;# 
   427     009D                     	;# 
   428     009E                     	;# 
   429     009F                     	;# 
   430     0105                     	;# 
   431     0107                     	;# 
   432     0108                     	;# 
   433     0109                     	;# 
   434     010C                     	;# 
   435     010C                     	;# 
   436     010D                     	;# 
   437     010E                     	;# 
   438     010F                     	;# 
   439     0185                     	;# 
   440     0187                     	;# 
   441     0188                     	;# 
   442     0189                     	;# 
   443     018C                     	;# 
   444     018D                     	;# 
   445     0014                     _SSPCON	set	20
   446     0006                     _PORTB	set	6
   447     0013                     _SSPBUF	set	19
   448     0008                     _PORTDbits	set	8
   449     001E                     _ADRESH	set	30
   450     001F                     _ADCON0bits	set	31
   451     005E                     _PEIE	set	94
   452     005F                     _GIE	set	95
   453     002A                     _RA2	set	42
   454     00A7                     _WCOL	set	167
   455     00A6                     _SSPOV	set	166
   456     00A4                     _CKP	set	164
   457     0063                     _SSPIF	set	99
   458     0043                     _RD3	set	67
   459     0047                     _RD7	set	71
   460     0046                     _RD6	set	70
   461     0045                     _RD5	set	69
   462     0044                     _RD4	set	68
   463     00F8                     _ADON	set	248
   464     0091                     _SSPCON2bits	set	145
   465     0087                     _TRISCbits	set	135
   466     0094                     _SSPSTAT	set	148
   467     0093                     _SSPADD	set	147
   468     0091                     _SSPCON2	set	145
   469     008F                     _OSCCONbits	set	143
   470     0086                     _TRISB	set	134
   471     0085                     _TRISA	set	133
   472     009E                     _ADRESL	set	158
   473     0463                     _SSPIE	set	1123
   474     043C                     _TRISC4	set	1084
   475     043B                     _TRISC3	set	1083
   476     0478                     _SCS	set	1144
   477     04A0                     _BF	set	1184
   478     04A2                     _R_nW	set	1186
   479     04A5                     _D_nA	set	1189
   480     04FD                     _VCFG1	set	1277
   481     04FC                     _VCFG0	set	1276
   482     04FF                     _ADFM	set	1279
   483     0189                     _ANSELH	set	393
   484     0188                     _ANSEL	set	392
   485                           
   486                           	psect	cinit
   487     000F                     start_initialization:	
   488                           ; #config settings
   489                           
   490     000F                     __initialization:
   491                           
   492                           ; Clear objects allocated to COMMON
   493     000F  01F8               	clrf	__pbssCOMMON& (0+127)
   494     0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   495     0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   496                           
   497                           ; Clear objects allocated to BANK0
   498     0012  1283               	bcf	3,5	;RP0=0, select bank0
   499     0013  1303               	bcf	3,6	;RP1=0, select bank0
   500     0014  01A0               	clrf	__pbssBANK0& (0+127)
   501     0015  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   502     0016  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   503     0017                     end_of_initialization:	
   504                           ;End of C runtime variable initialization code
   505                           
   506     0017                     __end_of__initialization:
   507     0017  0183               	clrf	3
   508     0018  120A  118A  281B   	ljmp	_main	;jump to C main() function
   509                           
   510                           	psect	bssCOMMON
   511     0078                     __pbssCOMMON:
   512     0078                     _LM35_val:
   513     0078                     	ds	1
   514     0079                     _request:
   515     0079                     	ds	1
   516     007A                     _send_data:
   517     007A                     	ds	1
   518                           
   519                           	psect	bssBANK0
   520     0020                     __pbssBANK0:
   521     0020                     _IR_sens:
   522     0020                     	ds	1
   523     0021                     _MQ2_val:
   524     0021                     	ds	1
   525     0022                     _discard:
   526     0022                     	ds	1
   527                           
   528                           	psect	cstackCOMMON
   529     0070                     __pcstackCOMMON:
   530     0070                     ?_setup:
   531     0070                     ?_I2C_Slave_Init:	
   532                           ; 1 bytes @ 0x0
   533                           
   534     0070                     ?_adc_sel_channel:	
   535                           ; 1 bytes @ 0x0
   536                           
   537     0070                     ?_adc_get_channel:	
   538                           ; 1 bytes @ 0x0
   539                           
   540     0070                     ?_isr:	
   541                           ; 1 bytes @ 0x0
   542                           
   543     0070                     ??_isr:	
   544                           ; 1 bytes @ 0x0
   545                           
   546     0070                     ?_main:	
   547                           ; 1 bytes @ 0x0
   548                           
   549                           
   550                           ; 2 bytes @ 0x0
   551     0070                     	ds	3
   552     0073                     ??_I2C_Slave_Init:
   553     0073                     ?_adc_init:	
   554                           ; 1 bytes @ 0x3
   555                           
   556     0073                     ??_adc_sel_channel:	
   557                           ; 1 bytes @ 0x3
   558                           
   559     0073                     ??_adc_get_channel:	
   560                           ; 1 bytes @ 0x3
   561                           
   562     0073                     ?_adc_read:	
   563                           ; 1 bytes @ 0x3
   564                           
   565     0073                     adc_init@R:	
   566                           ; 2 bytes @ 0x3
   567                           
   568     0073                     I2C_Slave_Init@address:	
   569                           ; 1 bytes @ 0x3
   570                           
   571                           
   572                           ; 1 bytes @ 0x3
   573     0073                     	ds	1
   574     0074                     adc_init@clock:
   575     0074                     adc_sel_channel@channel:	
   576                           ; 1 bytes @ 0x4
   577                           
   578                           
   579                           ; 1 bytes @ 0x4
   580     0074                     	ds	1
   581     0075                     ??_adc_read:
   582     0075                     adc_init@channel:	
   583                           ; 1 bytes @ 0x5
   584                           
   585                           
   586                           ; 1 bytes @ 0x5
   587     0075                     	ds	1
   588     0076                     ??_adc_init:
   589                           
   590                           ; 1 bytes @ 0x6
   591     0076                     	ds	2
   592     0078                     ??_setup:
   593                           
   594                           	psect	cstackBANK0
   595     0023                     __pcstackBANK0:	
   596                           ; 1 bytes @ 0x8
   597                           
   598     0023                     adc_init@J:
   599                           
   600                           ; 1 bytes @ 0x0
   601     0023                     	ds	1
   602     0024                     ??_main:
   603                           
   604                           ; 1 bytes @ 0x1
   605     0024                     	ds	2
   606                           
   607                           	psect	maintext
   608     001B                     __pmaintext:	
   609 ;;
   610 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   611 ;;
   612 ;; *************** function _main *****************
   613 ;; Defined at:
   614 ;;		line 99 in file "slave_MQ2_IR.c"
   615 ;; Parameters:    Size  Location     Type
   616 ;;		None
   617 ;; Auto vars:     Size  Location     Type
   618 ;;		None
   619 ;; Return value:  Size  Location     Type
   620 ;;                  2  170[None  ] int 
   621 ;; Registers used:
   622 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   623 ;; Tracked objects:
   624 ;;		On entry : B00/0
   625 ;;		On exit  : 0/0
   626 ;;		Unchanged: 0/0
   627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   628 ;;      Params:         0       0       0       0       0
   629 ;;      Locals:         0       0       0       0       0
   630 ;;      Temps:          0       2       0       0       0
   631 ;;      Totals:         0       2       0       0       0
   632 ;;Total ram usage:        2 bytes
   633 ;; Hardware stack levels required when called: 3
   634 ;; This function calls:
   635 ;;		_adc_get_channel
   636 ;;		_adc_read
   637 ;;		_adc_sel_channel
   638 ;;		_setup
   639 ;; This function is called by:
   640 ;;		Startup code after reset
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644     001B                     _main:	
   645                           ;psect for function _main
   646                           
   647     001B                     l1372:	
   648                           ;incstack = 0
   649                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   650                           
   651                           
   652                           ;slave_MQ2_IR.c: 100: void setup(void){
   653     001B  120A  118A  2141  120A  118A  	fcall	_setup
   654     0020                     l1374:
   655                           
   656                           ;slave_MQ2_IR.c: 104: 
   657     0020  120A  118A  2199  120A  118A  	fcall	_adc_get_channel
   658     0025  3A00               	xorlw	0
   659     0026  1D03               	skipz
   660     0027  2829               	goto	u571
   661     0028  282A               	goto	u570
   662     0029                     u571:
   663     0029  283A               	goto	l1380
   664     002A                     u570:
   665     002A                     l1376:
   666                           
   667                           ;slave_MQ2_IR.c: 105:     TRISB = 0;
   668     002A  120A  118A  217E  120A  118A  	fcall	_adc_read
   669     002F  0874               	movf	?_adc_read+1,w
   670     0030  1283               	bcf	3,5	;RP0=0, select bank0
   671     0031  1303               	bcf	3,6	;RP1=0, select bank0
   672     0032  00A1               	movwf	_MQ2_val
   673     0033                     l1378:
   674                           
   675                           ;slave_MQ2_IR.c: 106:     PORTB = 0;
   676     0033  3001               	movlw	1
   677     0034  120A  118A  218C  120A  118A  	fcall	_adc_sel_channel
   678                           
   679                           ;slave_MQ2_IR.c: 107: 
   680     0039  2851               	goto	l1386
   681     003A                     l1380:
   682     003A  120A  118A  2199  120A  118A  	fcall	_adc_get_channel
   683     003F  3A01               	xorlw	1
   684     0040  1D03               	skipz
   685     0041  2843               	goto	u581
   686     0042  2844               	goto	u580
   687     0043                     u581:
   688     0043  2851               	goto	l1386
   689     0044                     u580:
   690     0044                     l1382:
   691                           
   692                           ;slave_MQ2_IR.c: 109:     OSCCONbits.IRCF = 0b111;
   693     0044  120A  118A  217E  120A  118A  	fcall	_adc_read
   694     0049  0874               	movf	?_adc_read+1,w
   695     004A  00F8               	movwf	_LM35_val
   696     004B                     l1384:
   697                           
   698                           ;slave_MQ2_IR.c: 110:     SCS = 1;
   699     004B  3000               	movlw	0
   700     004C  120A  118A  218C  120A  118A  	fcall	_adc_sel_channel
   701     0051                     l1386:
   702                           
   703                           ;slave_MQ2_IR.c: 112: 
   704     0051  0878               	movf	_LM35_val,w
   705     0052  1283               	bcf	3,5	;RP0=0, select bank0
   706     0053  1303               	bcf	3,6	;RP1=0, select bank0
   707     0054  0086               	movwf	6	;volatile
   708     0055                     l1388:
   709                           
   710                           ;slave_MQ2_IR.c: 114: 
   711     0055  3000               	movlw	0
   712     0056  1905               	btfsc	5,2	;volatile
   713     0057  3001               	movlw	1
   714     0058  00A0               	movwf	_IR_sens
   715                           
   716                           ;slave_MQ2_IR.c: 116:     I2C_Slave_Init(0x20);
   717     0059  2866               	goto	l1400
   718     005A                     l1390:
   719                           
   720                           ;slave_MQ2_IR.c: 118: 
   721     005A  0821               	movf	_MQ2_val,w
   722     005B  00FA               	movwf	_send_data
   723                           
   724                           ;slave_MQ2_IR.c: 119: 
   725     005C  2879               	goto	l1402
   726     005D                     l1392:
   727                           
   728                           ;slave_MQ2_IR.c: 121: }
   729     005D  0878               	movf	_LM35_val,w
   730     005E  00FA               	movwf	_send_data
   731     005F  2879               	goto	l1402
   732     0060                     l1394:
   733     0060  0820               	movf	_IR_sens,w
   734     0061  00FA               	movwf	_send_data
   735     0062  2879               	goto	l1402
   736     0063                     l1396:
   737     0063  30FF               	movlw	255
   738     0064  00FA               	movwf	_send_data
   739     0065  2879               	goto	l1402
   740     0066                     l1400:
   741     0066  0879               	movf	_request,w
   742     0067  00A4               	movwf	??_main
   743     0068  01A5               	clrf	??_main+1
   744                           
   745                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   746                           ; Switch size 1, requested type "simple"
   747                           ; Number of cases is 1, Range of values is 0 to 0
   748                           ; switch strategies available:
   749                           ; Name         Instructions Cycles
   750                           ; simple_byte            4     3 (average)
   751                           ; direct_byte           11     8 (fixed)
   752                           ; jumptable            260     6 (fixed)
   753                           ;	Chosen strategy is simple_byte
   754     0069  0825               	movf	??_main+1,w
   755     006A  3A00               	xorlw	0	; case 0
   756     006B  1903               	skipnz
   757     006C  286E               	goto	l1460
   758     006D  2863               	goto	l1396
   759     006E                     l1460:
   760                           
   761                           ; Switch size 1, requested type "simple"
   762                           ; Number of cases is 3, Range of values is 71 to 84
   763                           ; switch strategies available:
   764                           ; Name         Instructions Cycles
   765                           ; simple_byte           10     6 (average)
   766                           ; direct_byte           53    11 (fixed)
   767                           ; jumptable            263     9 (fixed)
   768                           ;	Chosen strategy is simple_byte
   769     006E  0824               	movf	??_main,w
   770     006F  3A47               	xorlw	71	; case 71
   771     0070  1903               	skipnz
   772     0071  285A               	goto	l1390
   773     0072  3A0E               	xorlw	14	; case 73
   774     0073  1903               	skipnz
   775     0074  2860               	goto	l1394
   776     0075  3A1D               	xorlw	29	; case 84
   777     0076  1903               	skipnz
   778     0077  285D               	goto	l1392
   779     0078  2863               	goto	l1396
   780     0079                     l1402:
   781     0079  301A               	movlw	26
   782     007A  1283               	bcf	3,5	;RP0=0, select bank0
   783     007B  1303               	bcf	3,6	;RP1=0, select bank0
   784     007C  00A5               	movwf	??_main+1
   785     007D  30F7               	movlw	247
   786     007E  00A4               	movwf	??_main
   787     007F                     u597:
   788     007F  0BA4               	decfsz	??_main,f
   789     0080  287F               	goto	u597
   790     0081  0BA5               	decfsz	??_main+1,f
   791     0082  287F               	goto	u597
   792     0083  2884               	nop2
   793     0084  2820               	goto	l1374
   794     0085  120A  118A  280C   	ljmp	start
   795     0088                     __end_of_main:
   796                           
   797                           	psect	text1
   798     0141                     __ptext1:	
   799 ;; *************** function _setup *****************
   800 ;; Defined at:
   801 ;;		line 137 in file "slave_MQ2_IR.c"
   802 ;; Parameters:    Size  Location     Type
   803 ;;		None
   804 ;; Auto vars:     Size  Location     Type
   805 ;;		None
   806 ;; Return value:  Size  Location     Type
   807 ;;                  1    wreg      void 
   808 ;; Registers used:
   809 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   810 ;; Tracked objects:
   811 ;;		On entry : 0/0
   812 ;;		On exit  : 0/0
   813 ;;		Unchanged: 0/0
   814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   815 ;;      Params:         0       0       0       0       0
   816 ;;      Locals:         0       0       0       0       0
   817 ;;      Temps:          0       0       0       0       0
   818 ;;      Totals:         0       0       0       0       0
   819 ;;Total ram usage:        0 bytes
   820 ;; Hardware stack levels used: 1
   821 ;; Hardware stack levels required when called: 2
   822 ;; This function calls:
   823 ;;		_I2C_Slave_Init
   824 ;;		_adc_init
   825 ;; This function is called by:
   826 ;;		_main
   827 ;; This function uses a non-reentrant model
   828 ;;
   829                           
   830     0141                     _setup:	
   831                           ;psect for function _setup
   832                           
   833     0141                     l1358:	
   834                           ;incstack = 0
   835                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   836                           
   837     0141  3003               	movlw	3
   838     0142  1683               	bsf	3,5	;RP0=1, select bank3
   839     0143  1703               	bsf	3,6	;RP1=1, select bank3
   840     0144  0088               	movwf	8	;volatile
   841     0145                     l1360:
   842     0145  0189               	clrf	9	;volatile
   843     0146                     l1362:
   844     0146  30FF               	movlw	255
   845     0147  1683               	bsf	3,5	;RP0=1, select bank1
   846     0148  1303               	bcf	3,6	;RP1=0, select bank1
   847     0149  0085               	movwf	5	;volatile
   848     014A  0186               	clrf	6	;volatile
   849     014B  1283               	bcf	3,5	;RP0=0, select bank0
   850     014C  1303               	bcf	3,6	;RP1=0, select bank0
   851     014D  0186               	clrf	6	;volatile
   852     014E                     l1364:
   853     014E  3070               	movlw	112
   854     014F  1683               	bsf	3,5	;RP0=1, select bank1
   855     0150  1303               	bcf	3,6	;RP1=0, select bank1
   856     0151  048F               	iorwf	15,f	;volatile
   857     0152                     l1366:
   858     0152  140F               	bsf	15,0	;volatile
   859     0153                     l1368:
   860     0153  01F3               	clrf	adc_init@R
   861     0154  3008               	movlw	8
   862     0155  00F4               	movwf	adc_init@clock
   863     0156  01F5               	clrf	adc_init@channel
   864     0157  3000               	movlw	0
   865     0158  120A  118A  20E5  120A  118A  	fcall	_adc_init
   866     015D                     l1370:
   867     015D  3020               	movlw	32
   868     015E  120A  118A  2164  120A  118A  	fcall	_I2C_Slave_Init
   869     0163                     l186:
   870     0163  0008               	return
   871     0164                     __end_of_setup:
   872                           
   873                           	psect	text2
   874     00E5                     __ptext2:	
   875 ;; *************** function _adc_init *****************
   876 ;; Defined at:
   877 ;;		line 4 in file "ADC_lib.c"
   878 ;; Parameters:    Size  Location     Type
   879 ;;  J               1    wreg     unsigned char 
   880 ;;  R               1    3[COMMON] unsigned char 
   881 ;;  clock           1    4[COMMON] unsigned char 
   882 ;;  channel         1    5[COMMON] unsigned char 
   883 ;; Auto vars:     Size  Location     Type
   884 ;;  J               1    0[BANK0 ] unsigned char 
   885 ;; Return value:  Size  Location     Type
   886 ;;                  1    wreg      void 
   887 ;; Registers used:
   888 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   889 ;; Tracked objects:
   890 ;;		On entry : 0/0
   891 ;;		On exit  : 0/0
   892 ;;		Unchanged: 0/0
   893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   894 ;;      Params:         3       0       0       0       0
   895 ;;      Locals:         0       1       0       0       0
   896 ;;      Temps:          2       0       0       0       0
   897 ;;      Totals:         5       1       0       0       0
   898 ;;Total ram usage:        6 bytes
   899 ;; Hardware stack levels used: 1
   900 ;; Hardware stack levels required when called: 1
   901 ;; This function calls:
   902 ;;		Nothing
   903 ;; This function is called by:
   904 ;;		_setup
   905 ;; This function uses a non-reentrant model
   906 ;;
   907                           
   908     00E5                     _adc_init:	
   909                           ;psect for function _adc_init
   910                           
   911                           
   912                           ;incstack = 0
   913                           ; Regs used in _adc_init: [wreg-fsr0h+status,2+status,0]
   914                           ;adc_init@J stored from wreg
   915     00E5  1283               	bcf	3,5	;RP0=0, select bank0
   916     00E6  1303               	bcf	3,6	;RP1=0, select bank0
   917     00E7  00A3               	movwf	adc_init@J
   918     00E8                     l1336:
   919                           
   920                           ;ADC_lib.c: 13:     ADFM = J;
   921     00E8  1823               	btfsc	adc_init@J,0
   922     00E9  28EB               	goto	u511
   923     00EA  28EF               	goto	u510
   924     00EB                     u511:
   925     00EB  1683               	bsf	3,5	;RP0=1, select bank1
   926     00EC  1303               	bcf	3,6	;RP1=0, select bank1
   927     00ED  179F               	bsf	31,7	;volatile
   928     00EE  28F2               	goto	u524
   929     00EF                     u510:
   930     00EF  1683               	bsf	3,5	;RP0=1, select bank1
   931     00F0  1303               	bcf	3,6	;RP1=0, select bank1
   932     00F1  139F               	bcf	31,7	;volatile
   933     00F2                     u524:
   934                           
   935                           ;ADC_lib.c: 14:     VCFG0 = R;
   936     00F2  1873               	btfsc	adc_init@R,0
   937     00F3  28F5               	goto	u531
   938     00F4  28F9               	goto	u530
   939     00F5                     u531:
   940     00F5  1683               	bsf	3,5	;RP0=1, select bank1
   941     00F6  1303               	bcf	3,6	;RP1=0, select bank1
   942     00F7  161F               	bsf	31,4	;volatile
   943     00F8  28FC               	goto	u544
   944     00F9                     u530:
   945     00F9  1683               	bsf	3,5	;RP0=1, select bank1
   946     00FA  1303               	bcf	3,6	;RP1=0, select bank1
   947     00FB  121F               	bcf	31,4	;volatile
   948     00FC                     u544:
   949                           
   950                           ;ADC_lib.c: 15:     VCFG1 = R;
   951     00FC  1873               	btfsc	adc_init@R,0
   952     00FD  28FF               	goto	u551
   953     00FE  2903               	goto	u550
   954     00FF                     u551:
   955     00FF  1683               	bsf	3,5	;RP0=1, select bank1
   956     0100  1303               	bcf	3,6	;RP1=0, select bank1
   957     0101  169F               	bsf	31,5	;volatile
   958     0102  2906               	goto	u564
   959     0103                     u550:
   960     0103  1683               	bsf	3,5	;RP0=1, select bank1
   961     0104  1303               	bcf	3,6	;RP1=0, select bank1
   962     0105  129F               	bcf	31,5	;volatile
   963     0106                     u564:
   964                           
   965                           ;ADC_lib.c: 17:     switch(clock){
   966     0106  291F               	goto	l1348
   967     0107                     l1338:
   968                           
   969                           ;ADC_lib.c: 19:             ADCON0bits.ADCS = 0b00;
   970     0107  303F               	movlw	-193
   971     0108  1283               	bcf	3,5	;RP0=0, select bank0
   972     0109  1303               	bcf	3,6	;RP1=0, select bank0
   973     010A  059F               	andwf	31,f	;volatile
   974                           
   975                           ;ADC_lib.c: 21:             break;
   976     010B  2935               	goto	l1350
   977     010C                     l1340:
   978                           
   979                           ;ADC_lib.c: 23:             ADCON0bits.ADCS = 0b01;
   980     010C  1283               	bcf	3,5	;RP0=0, select bank0
   981     010D  1303               	bcf	3,6	;RP1=0, select bank0
   982     010E  081F               	movf	31,w	;volatile
   983     010F  393F               	andlw	-193
   984     0110  3840               	iorlw	64
   985     0111  009F               	movwf	31	;volatile
   986                           
   987                           ;ADC_lib.c: 25:             break;
   988     0112  2935               	goto	l1350
   989     0113                     l1342:
   990                           
   991                           ;ADC_lib.c: 27:             ADCON0bits.ADCS = 0b10;
   992     0113  1283               	bcf	3,5	;RP0=0, select bank0
   993     0114  1303               	bcf	3,6	;RP1=0, select bank0
   994     0115  081F               	movf	31,w	;volatile
   995     0116  393F               	andlw	-193
   996     0117  3880               	iorlw	128
   997     0118  009F               	movwf	31	;volatile
   998                           
   999                           ;ADC_lib.c: 29:             break;
  1000     0119  2935               	goto	l1350
  1001     011A                     l1344:
  1002                           
  1003                           ;ADC_lib.c: 31:             ADCON0bits.ADCS = 0b11;
  1004     011A  30C0               	movlw	192
  1005     011B  1283               	bcf	3,5	;RP0=0, select bank0
  1006     011C  1303               	bcf	3,6	;RP1=0, select bank0
  1007     011D  049F               	iorwf	31,f	;volatile
  1008                           
  1009                           ;ADC_lib.c: 33:             break;
  1010     011E  2935               	goto	l1350
  1011     011F                     l1348:
  1012     011F  0874               	movf	adc_init@clock,w
  1013     0120  00F6               	movwf	??_adc_init
  1014     0121  01F7               	clrf	??_adc_init+1
  1015                           
  1016                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1017                           ; Switch size 1, requested type "simple"
  1018                           ; Number of cases is 1, Range of values is 0 to 0
  1019                           ; switch strategies available:
  1020                           ; Name         Instructions Cycles
  1021                           ; simple_byte            4     3 (average)
  1022                           ; direct_byte           11     8 (fixed)
  1023                           ; jumptable            260     6 (fixed)
  1024                           ;	Chosen strategy is simple_byte
  1025     0122  0877               	movf	??_adc_init+1,w
  1026     0123  3A00               	xorlw	0	; case 0
  1027     0124  1903               	skipnz
  1028     0125  2927               	goto	l1462
  1029     0126  2935               	goto	l1350
  1030     0127                     l1462:
  1031                           
  1032                           ; Switch size 1, requested type "simple"
  1033                           ; Number of cases is 4, Range of values is 1 to 20
  1034                           ; switch strategies available:
  1035                           ; Name         Instructions Cycles
  1036                           ; simple_byte           13     7 (average)
  1037                           ; direct_byte           71    11 (fixed)
  1038                           ; jumptable            263     9 (fixed)
  1039                           ;	Chosen strategy is simple_byte
  1040     0127  0876               	movf	??_adc_init,w
  1041     0128  3A01               	xorlw	1	; case 1
  1042     0129  1903               	skipnz
  1043     012A  2907               	goto	l1338
  1044     012B  3A05               	xorlw	5	; case 4
  1045     012C  1903               	skipnz
  1046     012D  290C               	goto	l1340
  1047     012E  3A0C               	xorlw	12	; case 8
  1048     012F  1903               	skipnz
  1049     0130  2913               	goto	l1342
  1050     0131  3A1C               	xorlw	28	; case 20
  1051     0132  1903               	skipnz
  1052     0133  291A               	goto	l1344
  1053     0134  2935               	goto	l1350
  1054     0135                     l1350:
  1055                           
  1056                           ;ADC_lib.c: 35:     ADCON0bits.CHS = channel;
  1057     0135  0875               	movf	adc_init@channel,w
  1058     0136  00F6               	movwf	??_adc_init
  1059     0137  0DF6               	rlf	??_adc_init,f
  1060     0138  0DF6               	rlf	??_adc_init,f
  1061     0139  1283               	bcf	3,5	;RP0=0, select bank0
  1062     013A  081F               	movf	31,w	;volatile
  1063     013B  0676               	xorwf	??_adc_init,w
  1064     013C  39C3               	andlw	-61
  1065     013D  0676               	xorwf	??_adc_init,w
  1066     013E  009F               	movwf	31	;volatile
  1067     013F                     l1352:
  1068                           
  1069                           ;ADC_lib.c: 38:     ADON = 1;
  1070     013F  141F               	bsf	31,0	;volatile
  1071     0140                     l23:
  1072     0140  0008               	return
  1073     0141                     __end_of_adc_init:
  1074                           
  1075                           	psect	text3
  1076     0164                     __ptext3:	
  1077 ;; *************** function _I2C_Slave_Init *****************
  1078 ;; Defined at:
  1079 ;;		line 93 in file "../PIC_MASTER.X/I2C.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;  address         1    wreg     unsigned char 
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;  address         1    3[COMMON] unsigned char 
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  1    wreg      void 
  1086 ;; Registers used:
  1087 ;;		wreg
  1088 ;; Tracked objects:
  1089 ;;		On entry : 0/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1093 ;;      Params:         0       0       0       0       0
  1094 ;;      Locals:         1       0       0       0       0
  1095 ;;      Temps:          0       0       0       0       0
  1096 ;;      Totals:         1       0       0       0       0
  1097 ;;Total ram usage:        1 bytes
  1098 ;; Hardware stack levels used: 1
  1099 ;; Hardware stack levels required when called: 1
  1100 ;; This function calls:
  1101 ;;		Nothing
  1102 ;; This function is called by:
  1103 ;;		_setup
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107     0164                     _I2C_Slave_Init:	
  1108                           ;psect for function _I2C_Slave_Init
  1109                           
  1110                           
  1111                           ;incstack = 0
  1112                           ; Regs used in _I2C_Slave_Init: [wreg]
  1113                           ;I2C_Slave_Init@address stored from wreg
  1114     0164  00F3               	movwf	I2C_Slave_Init@address
  1115     0165                     l1174:
  1116                           
  1117                           ;../PIC_MASTER.X/I2C.c: 93: void I2C_Slave_Init(uint8_t address);../PIC_MASTER.X/I2C.c: 
      +                          94: {;../PIC_MASTER.X/I2C.c: 95:     SSPADD = address;
  1118     0165  0873               	movf	I2C_Slave_Init@address,w
  1119     0166  1683               	bsf	3,5	;RP0=1, select bank1
  1120     0167  1303               	bcf	3,6	;RP1=0, select bank1
  1121     0168  0093               	movwf	19	;volatile
  1122                           
  1123                           ;../PIC_MASTER.X/I2C.c: 96:     SSPCON = 0x36;
  1124     0169  3036               	movlw	54
  1125     016A  1283               	bcf	3,5	;RP0=0, select bank0
  1126     016B  1303               	bcf	3,6	;RP1=0, select bank0
  1127     016C  0094               	movwf	20	;volatile
  1128                           
  1129                           ;../PIC_MASTER.X/I2C.c: 97:     SSPSTAT = 0x80;
  1130     016D  3080               	movlw	128
  1131     016E  1683               	bsf	3,5	;RP0=1, select bank1
  1132     016F  1303               	bcf	3,6	;RP1=0, select bank1
  1133     0170  0094               	movwf	20	;volatile
  1134                           
  1135                           ;../PIC_MASTER.X/I2C.c: 98:     SSPCON2 = 0x01;
  1136     0171  3001               	movlw	1
  1137     0172  0091               	movwf	17	;volatile
  1138     0173                     l1176:
  1139                           
  1140                           ;../PIC_MASTER.X/I2C.c: 99:     TRISC3 = 1;
  1141     0173  1587               	bsf	7,3	;volatile
  1142     0174                     l1178:
  1143                           
  1144                           ;../PIC_MASTER.X/I2C.c: 100:     TRISC4 = 1;
  1145     0174  1607               	bsf	7,4	;volatile
  1146     0175                     l1180:
  1147                           
  1148                           ;../PIC_MASTER.X/I2C.c: 101:     GIE = 1;
  1149     0175  178B               	bsf	11,7	;volatile
  1150     0176                     l1182:
  1151                           
  1152                           ;../PIC_MASTER.X/I2C.c: 102:     PEIE = 1;
  1153     0176  170B               	bsf	11,6	;volatile
  1154     0177                     l1184:
  1155                           
  1156                           ;../PIC_MASTER.X/I2C.c: 103:     SSPIF = 0;
  1157     0177  1283               	bcf	3,5	;RP0=0, select bank0
  1158     0178  1303               	bcf	3,6	;RP1=0, select bank0
  1159     0179  118C               	bcf	12,3	;volatile
  1160     017A                     l1186:
  1161                           
  1162                           ;../PIC_MASTER.X/I2C.c: 104:     SSPIE = 1;
  1163     017A  1683               	bsf	3,5	;RP0=1, select bank1
  1164     017B  1303               	bcf	3,6	;RP1=0, select bank1
  1165     017C  158C               	bsf	12,3	;volatile
  1166     017D                     l244:
  1167     017D  0008               	return
  1168     017E                     __end_of_I2C_Slave_Init:
  1169                           
  1170                           	psect	text4
  1171     018C                     __ptext4:	
  1172 ;; *************** function _adc_sel_channel *****************
  1173 ;; Defined at:
  1174 ;;		line 49 in file "ADC_lib.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;  channel         1    wreg     unsigned char 
  1177 ;; Auto vars:     Size  Location     Type
  1178 ;;  channel         1    4[COMMON] unsigned char 
  1179 ;; Return value:  Size  Location     Type
  1180 ;;                  1    wreg      void 
  1181 ;; Registers used:
  1182 ;;		wreg, status,2, status,0
  1183 ;; Tracked objects:
  1184 ;;		On entry : 0/0
  1185 ;;		On exit  : 0/0
  1186 ;;		Unchanged: 0/0
  1187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1188 ;;      Params:         0       0       0       0       0
  1189 ;;      Locals:         1       0       0       0       0
  1190 ;;      Temps:          1       0       0       0       0
  1191 ;;      Totals:         2       0       0       0       0
  1192 ;;Total ram usage:        2 bytes
  1193 ;; Hardware stack levels used: 1
  1194 ;; Hardware stack levels required when called: 1
  1195 ;; This function calls:
  1196 ;;		Nothing
  1197 ;; This function is called by:
  1198 ;;		_main
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           
  1202     018C                     _adc_sel_channel:	
  1203                           ;psect for function _adc_sel_channel
  1204                           
  1205                           
  1206                           ;incstack = 0
  1207                           ; Regs used in _adc_sel_channel: [wreg+status,2+status,0]
  1208                           ;adc_sel_channel@channel stored from wreg
  1209     018C  00F4               	movwf	adc_sel_channel@channel
  1210     018D                     l1194:
  1211                           
  1212                           ;ADC_lib.c: 50:     ADCON0bits.CHS = channel;
  1213     018D  0874               	movf	adc_sel_channel@channel,w
  1214     018E  00F3               	movwf	??_adc_sel_channel
  1215     018F  0DF3               	rlf	??_adc_sel_channel,f
  1216     0190  0DF3               	rlf	??_adc_sel_channel,f
  1217     0191  1283               	bcf	3,5	;RP0=0, select bank0
  1218     0192  1303               	bcf	3,6	;RP1=0, select bank0
  1219     0193  081F               	movf	31,w	;volatile
  1220     0194  0673               	xorwf	??_adc_sel_channel,w
  1221     0195  39C3               	andlw	-61
  1222     0196  0673               	xorwf	??_adc_sel_channel,w
  1223     0197  009F               	movwf	31	;volatile
  1224     0198                     l32:
  1225     0198  0008               	return
  1226     0199                     __end_of_adc_sel_channel:
  1227                           
  1228                           	psect	text5
  1229     017E                     __ptext5:	
  1230 ;; *************** function _adc_read *****************
  1231 ;; Defined at:
  1232 ;;		line 42 in file "ADC_lib.c"
  1233 ;; Parameters:    Size  Location     Type
  1234 ;;		None
  1235 ;; Auto vars:     Size  Location     Type
  1236 ;;		None
  1237 ;; Return value:  Size  Location     Type
  1238 ;;                  2    3[COMMON] unsigned int 
  1239 ;; Registers used:
  1240 ;;		wreg
  1241 ;; Tracked objects:
  1242 ;;		On entry : 0/0
  1243 ;;		On exit  : 0/0
  1244 ;;		Unchanged: 0/0
  1245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1246 ;;      Params:         2       0       0       0       0
  1247 ;;      Locals:         0       0       0       0       0
  1248 ;;      Temps:          0       0       0       0       0
  1249 ;;      Totals:         2       0       0       0       0
  1250 ;;Total ram usage:        2 bytes
  1251 ;; Hardware stack levels used: 1
  1252 ;; Hardware stack levels required when called: 1
  1253 ;; This function calls:
  1254 ;;		Nothing
  1255 ;; This function is called by:
  1256 ;;		_main
  1257 ;; This function uses a non-reentrant model
  1258 ;;
  1259                           
  1260     017E                     _adc_read:	
  1261                           ;psect for function _adc_read
  1262                           
  1263     017E                     l1188:	
  1264                           ;incstack = 0
  1265                           ; Regs used in _adc_read: [wreg]
  1266                           
  1267                           
  1268                           ;ADC_lib.c: 43:     ADCON0bits.GO = 1;
  1269     017E  1283               	bcf	3,5	;RP0=0, select bank0
  1270     017F  1303               	bcf	3,6	;RP1=0, select bank0
  1271     0180  149F               	bsf	31,1	;volatile
  1272     0181                     l26:	
  1273                           ;ADC_lib.c: 44:     while(ADCON0bits.GO);
  1274                           
  1275     0181  189F               	btfsc	31,1	;volatile
  1276     0182  2984               	goto	u391
  1277     0183  2985               	goto	u390
  1278     0184                     u391:
  1279     0184  2981               	goto	l26
  1280     0185                     u390:
  1281     0185                     l1190:
  1282                           
  1283                           ;ADC_lib.c: 45:     return (ADRESH<<8) | ADRESL;
  1284     0185  081E               	movf	30,w	;volatile
  1285     0186  00F4               	movwf	?_adc_read+1
  1286     0187  1683               	bsf	3,5	;RP0=1, select bank1
  1287     0188  1303               	bcf	3,6	;RP1=0, select bank1
  1288     0189  081E               	movf	30,w	;volatile
  1289     018A  00F3               	movwf	?_adc_read
  1290     018B                     l29:
  1291     018B  0008               	return
  1292     018C                     __end_of_adc_read:
  1293                           
  1294                           	psect	text6
  1295     0199                     __ptext6:	
  1296 ;; *************** function _adc_get_channel *****************
  1297 ;; Defined at:
  1298 ;;		line 54 in file "ADC_lib.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;		None
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;		None
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  1    wreg      unsigned char 
  1305 ;; Registers used:
  1306 ;;		wreg, status,2, status,0
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1312 ;;      Params:         0       0       0       0       0
  1313 ;;      Locals:         0       0       0       0       0
  1314 ;;      Temps:          1       0       0       0       0
  1315 ;;      Totals:         1       0       0       0       0
  1316 ;;Total ram usage:        1 bytes
  1317 ;; Hardware stack levels used: 1
  1318 ;; Hardware stack levels required when called: 1
  1319 ;; This function calls:
  1320 ;;		Nothing
  1321 ;; This function is called by:
  1322 ;;		_main
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326     0199                     _adc_get_channel:	
  1327                           ;psect for function _adc_get_channel
  1328                           
  1329     0199                     l1196:	
  1330                           ;incstack = 0
  1331                           ; Regs used in _adc_get_channel: [wreg+status,2+status,0]
  1332                           
  1333                           
  1334                           ;ADC_lib.c: 55:     return ADCON0bits.CHS;
  1335     0199  1283               	bcf	3,5	;RP0=0, select bank0
  1336     019A  1303               	bcf	3,6	;RP1=0, select bank0
  1337     019B  0C1F               	rrf	31,w	;volatile
  1338     019C  00F3               	movwf	??_adc_get_channel
  1339     019D  0C73               	rrf	??_adc_get_channel,w
  1340     019E  390F               	andlw	15
  1341     019F                     l35:
  1342     019F  0008               	return
  1343     01A0                     __end_of_adc_get_channel:
  1344                           
  1345                           	psect	text7
  1346     0088                     __ptext7:	
  1347 ;; *************** function _isr *****************
  1348 ;; Defined at:
  1349 ;;		line 59 in file "slave_MQ2_IR.c"
  1350 ;; Parameters:    Size  Location     Type
  1351 ;;		None
  1352 ;; Auto vars:     Size  Location     Type
  1353 ;;		None
  1354 ;; Return value:  Size  Location     Type
  1355 ;;                  1    wreg      void 
  1356 ;; Registers used:
  1357 ;;		wreg
  1358 ;; Tracked objects:
  1359 ;;		On entry : 0/0
  1360 ;;		On exit  : 0/0
  1361 ;;		Unchanged: 0/0
  1362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1363 ;;      Params:         0       0       0       0       0
  1364 ;;      Locals:         0       0       0       0       0
  1365 ;;      Temps:          3       0       0       0       0
  1366 ;;      Totals:         3       0       0       0       0
  1367 ;;Total ram usage:        3 bytes
  1368 ;; Hardware stack levels used: 1
  1369 ;; This function calls:
  1370 ;;		Nothing
  1371 ;; This function is called by:
  1372 ;;		Interrupt level 1
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376     0088                     _isr:	
  1377                           ;psect for function _isr
  1378                           
  1379     0088                     i1l1214:
  1380                           
  1381                           ;slave_MQ2_IR.c: 60: 
  1382     0088  1283               	bcf	3,5	;RP0=0, select bank0
  1383     0089  1303               	bcf	3,6	;RP1=0, select bank0
  1384     008A  1D8C               	btfss	12,3	;volatile
  1385     008B  288D               	goto	u40_21
  1386     008C  288E               	goto	u40_20
  1387     008D                     u40_21:
  1388     008D  28DE               	goto	i1l166
  1389     008E                     u40_20:
  1390     008E                     i1l1216:
  1391                           
  1392                           ;slave_MQ2_IR.c: 62: int main(void) {
  1393     008E  1214               	bcf	20,4	;volatile
  1394                           
  1395                           ;slave_MQ2_IR.c: 64:     while(1){
  1396     008F  1B14               	btfsc	20,6	;volatile
  1397     0090  2892               	goto	u41_21
  1398     0091  2893               	goto	u41_20
  1399     0092                     u41_21:
  1400     0092  2897               	goto	i1l1220
  1401     0093                     u41_20:
  1402     0093                     i1l1218:
  1403     0093  1F94               	btfss	20,7	;volatile
  1404     0094  2896               	goto	u42_21
  1405     0095  2897               	goto	u42_20
  1406     0096                     u42_21:
  1407     0096  289C               	goto	i1l1228
  1408     0097                     u42_20:
  1409     0097                     i1l1220:
  1410                           
  1411                           ;slave_MQ2_IR.c: 65: 
  1412     0097  0813               	movf	19,w	;volatile
  1413     0098  00A2               	movwf	_discard
  1414     0099                     i1l1222:
  1415                           
  1416                           ;slave_MQ2_IR.c: 66: 
  1417     0099  1314               	bcf	20,6	;volatile
  1418     009A                     i1l1224:
  1419                           
  1420                           ;slave_MQ2_IR.c: 67:         if(adc_get_channel() == 0){
  1421     009A  1394               	bcf	20,7	;volatile
  1422     009B                     i1l1226:
  1423                           
  1424                           ;slave_MQ2_IR.c: 68:             MQ2_val = (adc_read()>>8) & 0x00FF;
  1425     009B  1614               	bsf	20,4	;volatile
  1426     009C                     i1l1228:
  1427                           
  1428                           ;slave_MQ2_IR.c: 71:         else if (adc_get_channel() == 1){
  1429     009C  1683               	bsf	3,5	;RP0=1, select bank1
  1430     009D  1303               	bcf	3,6	;RP1=0, select bank1
  1431     009E  1A94               	btfsc	20,5	;volatile
  1432     009F  28A1               	goto	u43_21
  1433     00A0  28A2               	goto	u43_20
  1434     00A1                     u43_21:
  1435     00A1  28BC               	goto	i1l157
  1436     00A2                     u43_20:
  1437     00A2                     i1l1230:
  1438     00A2  1914               	btfsc	20,2	;volatile
  1439     00A3  28A5               	goto	u44_21
  1440     00A4  28A6               	goto	u44_20
  1441     00A5                     u44_21:
  1442     00A5  28BC               	goto	i1l157
  1443     00A6                     u44_20:
  1444     00A6                     i1l1232:
  1445                           
  1446                           ;slave_MQ2_IR.c: 73:             adc_sel_channel(0);
  1447     00A6  1283               	bcf	3,5	;RP0=0, select bank0
  1448     00A7  1303               	bcf	3,6	;RP1=0, select bank0
  1449     00A8  0813               	movf	19,w	;volatile
  1450     00A9  00A2               	movwf	_discard
  1451     00AA                     i1l1234:
  1452                           
  1453                           ;slave_MQ2_IR.c: 75:         PORTB = LM35_val;
  1454     00AA  118C               	bcf	12,3	;volatile
  1455     00AB                     i1l1236:
  1456                           
  1457                           ;slave_MQ2_IR.c: 76: 
  1458     00AB  1614               	bsf	20,4	;volatile
  1459     00AC                     i1l158:	
  1460                           ;slave_MQ2_IR.c: 77:         IR_sens = RA2;
  1461                           
  1462     00AC  1683               	bsf	3,5	;RP0=1, select bank1
  1463     00AD  1303               	bcf	3,6	;RP1=0, select bank1
  1464     00AE  1C14               	btfss	20,0	;volatile
  1465     00AF  28B1               	goto	u45_21
  1466     00B0  28B2               	goto	u45_20
  1467     00B1                     u45_21:
  1468     00B1  28AC               	goto	i1l158
  1469     00B2                     u45_20:
  1470     00B2                     i1l1238:
  1471                           
  1472                           ;slave_MQ2_IR.c: 78: 
  1473     00B2  1283               	bcf	3,5	;RP0=0, select bank0
  1474     00B3  1303               	bcf	3,6	;RP1=0, select bank0
  1475     00B4  0813               	movf	19,w	;volatile
  1476     00B5  00F9               	movwf	_request
  1477                           
  1478                           ;slave_MQ2_IR.c: 79:         switch(request){
  1479     00B6  30A6               	movlw	166
  1480     00B7  00F0               	movwf	??_isr
  1481     00B8                     u60_27:
  1482     00B8  0BF0               	decfsz	??_isr,f
  1483     00B9  28B8               	goto	u60_27
  1484     00BA  0000               	nop
  1485                           
  1486                           ;slave_MQ2_IR.c: 80:             case 'G':
  1487     00BB  28DB               	goto	i1l161
  1488     00BC                     i1l157:	
  1489                           ;slave_MQ2_IR.c: 81:                 send_data = MQ2_val;
  1490                           
  1491     00BC  1A94               	btfsc	20,5	;volatile
  1492     00BD  28BF               	goto	u46_21
  1493     00BE  28C0               	goto	u46_20
  1494     00BF                     u46_21:
  1495     00BF  28DB               	goto	i1l161
  1496     00C0                     u46_20:
  1497     00C0                     i1l1240:
  1498     00C0  1D14               	btfss	20,2	;volatile
  1499     00C1  28C3               	goto	u47_21
  1500     00C2  28C4               	goto	u47_20
  1501     00C3                     u47_21:
  1502     00C3  28DB               	goto	i1l161
  1503     00C4                     u47_20:
  1504     00C4                     i1l1242:
  1505                           
  1506                           ;slave_MQ2_IR.c: 82:                 break;
  1507     00C4  1283               	bcf	3,5	;RP0=0, select bank0
  1508     00C5  1303               	bcf	3,6	;RP1=0, select bank0
  1509     00C6  0813               	movf	19,w	;volatile
  1510     00C7  00A2               	movwf	_discard
  1511     00C8                     i1l1244:
  1512                           
  1513                           ;slave_MQ2_IR.c: 83:             case 'T':
  1514     00C8  1683               	bsf	3,5	;RP0=1, select bank1
  1515     00C9  1303               	bcf	3,6	;RP1=0, select bank1
  1516     00CA  1014               	bcf	20,0	;volatile
  1517                           
  1518                           ;slave_MQ2_IR.c: 84:                 send_data = LM35_val;
  1519     00CB  087A               	movf	_send_data,w
  1520     00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1521     00CD  1303               	bcf	3,6	;RP1=0, select bank0
  1522     00CE  0093               	movwf	19	;volatile
  1523     00CF                     i1l1246:
  1524                           
  1525                           ;slave_MQ2_IR.c: 85:                 break;
  1526     00CF  1614               	bsf	20,4	;volatile
  1527                           
  1528                           ;slave_MQ2_IR.c: 86:             case 'I':
  1529     00D0  30A6               	movlw	166
  1530     00D1  00F0               	movwf	??_isr
  1531     00D2                     u61_27:
  1532     00D2  0BF0               	decfsz	??_isr,f
  1533     00D3  28D2               	goto	u61_27
  1534     00D4  0000               	nop
  1535     00D5                     i1l163:	
  1536                           ;slave_MQ2_IR.c: 87:                 send_data = IR_sens;
  1537                           
  1538     00D5  1683               	bsf	3,5	;RP0=1, select bank1
  1539     00D6  1303               	bcf	3,6	;RP1=0, select bank1
  1540     00D7  1814               	btfsc	20,0	;volatile
  1541     00D8  28DA               	goto	u48_21
  1542     00D9  28DB               	goto	u48_20
  1543     00DA                     u48_21:
  1544     00DA  28D5               	goto	i1l163
  1545     00DB                     u48_20:
  1546     00DB                     i1l161:
  1547                           
  1548                           ;slave_MQ2_IR.c: 90:                 send_data = 0xFF;
  1549     00DB  1283               	bcf	3,5	;RP0=0, select bank0
  1550     00DC  1303               	bcf	3,6	;RP1=0, select bank0
  1551     00DD  118C               	bcf	12,3	;volatile
  1552     00DE                     i1l166:
  1553     00DE  0872               	movf	??_isr+2,w
  1554     00DF  008A               	movwf	10
  1555     00E0  0E71               	swapf	??_isr+1,w
  1556     00E1  0083               	movwf	3
  1557     00E2  0EFE               	swapf	btemp,f
  1558     00E3  0E7E               	swapf	btemp,w
  1559     00E4  0009               	retfie
  1560     00E5                     __end_of_isr:
  1561     007E                     btemp	set	126	;btemp
  1562     007E                     wtemp0	set	126
  1563                           
  1564                           	psect	intentry
  1565     0004                     __pintentry:	
  1566                           ;incstack = 0
  1567                           ; Regs used in _isr: [wreg]
  1568                           
  1569     0004                     interrupt_function:
  1570     007E                     saved_w	set	btemp
  1571     0004  00FE               	movwf	btemp
  1572     0005  0E03               	swapf	3,w
  1573     0006  00F1               	movwf	??_isr+1
  1574     0007  080A               	movf	10,w
  1575     0008  00F2               	movwf	??_isr+2
  1576     0009  120A  118A  2888   	ljmp	_isr
  1577                           
  1578                           	psect	config
  1579                           
  1580                           ;Config register CONFIG1 @ 0x2007
  1581                           ;	Oscillator Selection bits
  1582                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1583                           ;	Watchdog Timer Enable bit
  1584                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1585                           ;	Power-up Timer Enable bit
  1586                           ;	PWRTE = OFF, PWRT disabled
  1587                           ;	RE3/MCLR pin function select bit
  1588                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1589                           ;	Code Protection bit
  1590                           ;	CP = OFF, Program memory code protection is disabled
  1591                           ;	Data Code Protection bit
  1592                           ;	CPD = OFF, Data memory code protection is disabled
  1593                           ;	Brown Out Reset Selection bits
  1594                           ;	BOREN = OFF, BOR disabled
  1595                           ;	Internal External Switchover bit
  1596                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1597                           ;	Fail-Safe Clock Monitor Enabled bit
  1598                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1599                           ;	Low Voltage Programming Enable bit
  1600                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1601                           ;	In-Circuit Debugger Mode bit
  1602                           ;	DEBUG = 0x1, unprogrammed default
  1603     2007                     	org	8199
  1604     2007  20D4               	dw	8404
  1605                           
  1606                           ;Config register CONFIG2 @ 0x2008
  1607                           ;	Brown-out Reset Selection bit
  1608                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1609                           ;	Flash Program Memory Self Write Enable bits
  1610                           ;	WRT = OFF, Write protection off
  1611     2008                     	org	8200
  1612     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80      3       6
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_adc_init

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _setup->_adc_init

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     469
                                              1 BANK0      2     2      0
                    _adc_get_channel
                           _adc_read
                    _adc_sel_channel
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     447
                     _I2C_Slave_Init
                           _adc_init
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             6     3      3     425
                                              3 COMMON     5     2      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _adc_sel_channel                                      2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _adc_read                                             2     0      2       0
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _adc_get_channel                                      1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_get_channel
   _adc_read
   _adc_sel_channel
   _setup
     _I2C_Slave_Init
     _adc_init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      11       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       6       5        7.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      11      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Aug 22 19:52:56 2023

                     _BF 04A0                       l23 0140                       l32 0198  
                     l26 0181                       l35 019F                       l29 018B  
                    l244 017D                      l186 0163                      _CKP 00A4  
                    _GIE 005F                      _RA2 002A                      _RD3 0043  
                    _RD4 0044                      _RD5 0045                      _RD6 0046  
                    _RD7 0047                      u510 00EF                      u511 00EB  
                    u530 00F9                      u531 00F5                      u524 00F2  
                    u390 0185                      u550 0103                      u391 0184  
                    u551 00FF                      u544 00FC                      u570 002A  
                    u571 0029                      u564 0106                      u580 0044  
                    u581 0043                      _SCS 0478                      u597 007F  
                    _isr 0088                     l1400 0066                     l1402 0079  
                   l1180 0175                     l1340 010C                     l1190 0185  
                   l1182 0176                     l1174 0165                     l1342 0113  
                   l1350 0135                     l1184 0177                     l1176 0173  
                   l1352 013F                     l1344 011A                     l1336 00E8  
                   l1360 0145                     l1194 018D                     l1186 017A  
                   l1178 0174                     l1338 0107                     l1370 015D  
                   l1362 0146                     l1196 0199                     l1188 017E  
                   l1348 011F                     l1364 014E                     l1460 006E  
                   l1380 003A                     l1372 001B                     l1462 0127  
                   l1366 0152                     l1358 0141                     l1390 005A  
                   l1382 0044                     l1374 0020                     l1368 0153  
                   l1392 005D                     l1384 004B                     l1376 002A  
                   l1394 0060                     l1386 0051                     l1378 0033  
                   l1396 0063                     l1388 0055                     _ADFM 04FF  
                   ?_isr 0070                     _ADON 00F8                     _PEIE 005E  
                   _WCOL 00A7                     _D_nA 04A5                     _R_nW 04A2  
                   _main 001B                     btemp 007E                     start 000C  
 adc_sel_channel@channel 0074                    ??_isr 0070                    ?_main 0070  
                  _ANSEL 0188                    i1l161 00DB                    i1l163 00D5  
                  i1l157 00BC                    i1l158 00AC                    i1l166 00DE  
                  _VCFG0 04FC                    _VCFG1 04FD                    u40_20 008E  
                  u40_21 008D                    u41_20 0093                    u41_21 0092  
                  u42_20 0097                    u42_21 0096                    u43_20 00A2  
                  u43_21 00A1                    _PORTB 0006                    u44_20 00A6  
                  u44_21 00A5                    u60_27 00B8                    u45_20 00B2  
                  u45_21 00B1                    u61_27 00D2                    u46_20 00C0  
                  u46_21 00BF                    u47_20 00C4                    u47_21 00C3  
                  u48_20 00DB                    u48_21 00DA                    _TRISA 0085  
                  _TRISB 0086                    _SSPIE 0463                    _SSPIF 0063  
                  _SSPOV 00A6                    _setup 0141                    pclath 000A  
       ?_adc_sel_channel 0070                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0088                   ??_main 0024  
                 _ADRESH 001E                   _ADRESL 009E                   ?_setup 0070  
                 _ANSELH 0189         __end_of_adc_init 0141         __end_of_adc_read 018C  
                 i1l1220 0097                   i1l1230 00A2                   i1l1222 0099  
                 i1l1214 0088                   i1l1240 00C0                   i1l1232 00A6  
                 i1l1224 009A                   i1l1216 008E                   i1l1242 00C4  
                 i1l1234 00AA                   i1l1226 009B                   i1l1218 0093  
                 i1l1244 00C8                   i1l1236 00AB                   i1l1228 009C  
                 i1l1246 00CF                   i1l1238 00B2                   _SSPADD 0093  
                 _TRISC3 043B                   _TRISC4 043C                   _SSPBUF 0013  
                 _SSPCON 0014                   saved_w 007E  __end_of__initialization 0017  
         __pcstackCOMMON 0070            __end_of_setup 0164                  ??_setup 0078  
  I2C_Slave_Init@address 0073               __pbssBANK0 0020               __pmaintext 001B  
             __pintentry 0004                ?_adc_init 0073                ?_adc_read 0073  
                _MQ2_val 0021                  _SSPCON2 0091                  _SSPSTAT 0094  
                _IR_sens 0020               ??_adc_init 0076               ??_adc_read 0075  
                __ptext1 0141                  __ptext2 00E5                  __ptext3 0164  
                __ptext4 018C                  __ptext5 017E                  __ptext6 0199  
                __ptext7 0088                  _discard 0022                  _request 0079  
   end_of_initialization 0017        ??_adc_get_channel 0073           _I2C_Slave_Init 0164  
              _PORTDbits 0008                _TRISCbits 0087   __end_of_I2C_Slave_Init 017E  
    start_initialization 000F              __end_of_isr 00E5          ?_I2C_Slave_Init 0070  
        adc_init@channel 0075        ??_adc_sel_channel 0073              __pbssCOMMON 0078  
              ___latbits 0002            __pcstackBANK0 0023            adc_init@clock 0074  
              adc_init@J 0023                adc_init@R 0073          _adc_get_channel 0199  
               _LM35_val 0078        interrupt_function 0004                _send_data 007A  
             _ADCON0bits 001F  __end_of_adc_get_channel 01A0                 _adc_init 00E5  
               _adc_read 017E         ??_I2C_Slave_Init 0073          _adc_sel_channel 018C  
               intlevel1 0000               _OSCCONbits 008F         ?_adc_get_channel 0070  
            _SSPCON2bits 0091  __end_of_adc_sel_channel 0199  
