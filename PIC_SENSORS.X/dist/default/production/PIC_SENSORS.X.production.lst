

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Aug 24 17:26:47 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20     0000                     
    21                           ; Generated 22/03/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0000                     	;# 
    56     0001                     	;# 
    57     0002                     	;# 
    58     0003                     	;# 
    59     0004                     	;# 
    60     0005                     	;# 
    61     0006                     	;# 
    62     0007                     	;# 
    63     0008                     	;# 
    64     0009                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000D                     	;# 
    69     000E                     	;# 
    70     000E                     	;# 
    71     000F                     	;# 
    72     0010                     	;# 
    73     0011                     	;# 
    74     0012                     	;# 
    75     0013                     	;# 
    76     0014                     	;# 
    77     0015                     	;# 
    78     0015                     	;# 
    79     0016                     	;# 
    80     0017                     	;# 
    81     0018                     	;# 
    82     0019                     	;# 
    83     001A                     	;# 
    84     001B                     	;# 
    85     001B                     	;# 
    86     001C                     	;# 
    87     001D                     	;# 
    88     001E                     	;# 
    89     001F                     	;# 
    90     0081                     	;# 
    91     0085                     	;# 
    92     0086                     	;# 
    93     0087                     	;# 
    94     0088                     	;# 
    95     0089                     	;# 
    96     008C                     	;# 
    97     008D                     	;# 
    98     008E                     	;# 
    99     008F                     	;# 
   100     0090                     	;# 
   101     0091                     	;# 
   102     0092                     	;# 
   103     0093                     	;# 
   104     0093                     	;# 
   105     0093                     	;# 
   106     0094                     	;# 
   107     0095                     	;# 
   108     0096                     	;# 
   109     0097                     	;# 
   110     0098                     	;# 
   111     0099                     	;# 
   112     009A                     	;# 
   113     009B                     	;# 
   114     009C                     	;# 
   115     009D                     	;# 
   116     009E                     	;# 
   117     009F                     	;# 
   118     0105                     	;# 
   119     0107                     	;# 
   120     0108                     	;# 
   121     0109                     	;# 
   122     010C                     	;# 
   123     010C                     	;# 
   124     010D                     	;# 
   125     010E                     	;# 
   126     010F                     	;# 
   127     0185                     	;# 
   128     0187                     	;# 
   129     0188                     	;# 
   130     0189                     	;# 
   131     018C                     	;# 
   132     018D                     	;# 
   133     0000                     	;# 
   134     0001                     	;# 
   135     0002                     	;# 
   136     0003                     	;# 
   137     0004                     	;# 
   138     0005                     	;# 
   139     0006                     	;# 
   140     0007                     	;# 
   141     0008                     	;# 
   142     0009                     	;# 
   143     000A                     	;# 
   144     000B                     	;# 
   145     000C                     	;# 
   146     000D                     	;# 
   147     000E                     	;# 
   148     000E                     	;# 
   149     000F                     	;# 
   150     0010                     	;# 
   151     0011                     	;# 
   152     0012                     	;# 
   153     0013                     	;# 
   154     0014                     	;# 
   155     0015                     	;# 
   156     0015                     	;# 
   157     0016                     	;# 
   158     0017                     	;# 
   159     0018                     	;# 
   160     0019                     	;# 
   161     001A                     	;# 
   162     001B                     	;# 
   163     001B                     	;# 
   164     001C                     	;# 
   165     001D                     	;# 
   166     001E                     	;# 
   167     001F                     	;# 
   168     0081                     	;# 
   169     0085                     	;# 
   170     0086                     	;# 
   171     0087                     	;# 
   172     0088                     	;# 
   173     0089                     	;# 
   174     008C                     	;# 
   175     008D                     	;# 
   176     008E                     	;# 
   177     008F                     	;# 
   178     0090                     	;# 
   179     0091                     	;# 
   180     0092                     	;# 
   181     0093                     	;# 
   182     0093                     	;# 
   183     0093                     	;# 
   184     0094                     	;# 
   185     0095                     	;# 
   186     0096                     	;# 
   187     0097                     	;# 
   188     0098                     	;# 
   189     0099                     	;# 
   190     009A                     	;# 
   191     009B                     	;# 
   192     009C                     	;# 
   193     009D                     	;# 
   194     009E                     	;# 
   195     009F                     	;# 
   196     0105                     	;# 
   197     0107                     	;# 
   198     0108                     	;# 
   199     0109                     	;# 
   200     010C                     	;# 
   201     010C                     	;# 
   202     010D                     	;# 
   203     010E                     	;# 
   204     010F                     	;# 
   205     0185                     	;# 
   206     0187                     	;# 
   207     0188                     	;# 
   208     0189                     	;# 
   209     018C                     	;# 
   210     018D                     	;# 
   211     0000                     	;# 
   212     0001                     	;# 
   213     0002                     	;# 
   214     0003                     	;# 
   215     0004                     	;# 
   216     0005                     	;# 
   217     0006                     	;# 
   218     0007                     	;# 
   219     0008                     	;# 
   220     0009                     	;# 
   221     000A                     	;# 
   222     000B                     	;# 
   223     000C                     	;# 
   224     000D                     	;# 
   225     000E                     	;# 
   226     000E                     	;# 
   227     000F                     	;# 
   228     0010                     	;# 
   229     0011                     	;# 
   230     0012                     	;# 
   231     0013                     	;# 
   232     0014                     	;# 
   233     0015                     	;# 
   234     0015                     	;# 
   235     0016                     	;# 
   236     0017                     	;# 
   237     0018                     	;# 
   238     0019                     	;# 
   239     001A                     	;# 
   240     001B                     	;# 
   241     001B                     	;# 
   242     001C                     	;# 
   243     001D                     	;# 
   244     001E                     	;# 
   245     001F                     	;# 
   246     0081                     	;# 
   247     0085                     	;# 
   248     0086                     	;# 
   249     0087                     	;# 
   250     0088                     	;# 
   251     0089                     	;# 
   252     008C                     	;# 
   253     008D                     	;# 
   254     008E                     	;# 
   255     008F                     	;# 
   256     0090                     	;# 
   257     0091                     	;# 
   258     0092                     	;# 
   259     0093                     	;# 
   260     0093                     	;# 
   261     0093                     	;# 
   262     0094                     	;# 
   263     0095                     	;# 
   264     0096                     	;# 
   265     0097                     	;# 
   266     0098                     	;# 
   267     0099                     	;# 
   268     009A                     	;# 
   269     009B                     	;# 
   270     009C                     	;# 
   271     009D                     	;# 
   272     009E                     	;# 
   273     009F                     	;# 
   274     0105                     	;# 
   275     0107                     	;# 
   276     0108                     	;# 
   277     0109                     	;# 
   278     010C                     	;# 
   279     010C                     	;# 
   280     010D                     	;# 
   281     010E                     	;# 
   282     010F                     	;# 
   283     0185                     	;# 
   284     0187                     	;# 
   285     0188                     	;# 
   286     0189                     	;# 
   287     018C                     	;# 
   288     018D                     	;# 
   289     0000                     	;# 
   290     0001                     	;# 
   291     0002                     	;# 
   292     0003                     	;# 
   293     0004                     	;# 
   294     0005                     	;# 
   295     0006                     	;# 
   296     0007                     	;# 
   297     0008                     	;# 
   298     0009                     	;# 
   299     000A                     	;# 
   300     000B                     	;# 
   301     000C                     	;# 
   302     000D                     	;# 
   303     000E                     	;# 
   304     000E                     	;# 
   305     000F                     	;# 
   306     0010                     	;# 
   307     0011                     	;# 
   308     0012                     	;# 
   309     0013                     	;# 
   310     0014                     	;# 
   311     0015                     	;# 
   312     0015                     	;# 
   313     0016                     	;# 
   314     0017                     	;# 
   315     0018                     	;# 
   316     0019                     	;# 
   317     001A                     	;# 
   318     001B                     	;# 
   319     001B                     	;# 
   320     001C                     	;# 
   321     001D                     	;# 
   322     001E                     	;# 
   323     001F                     	;# 
   324     0081                     	;# 
   325     0085                     	;# 
   326     0086                     	;# 
   327     0087                     	;# 
   328     0088                     	;# 
   329     0089                     	;# 
   330     008C                     	;# 
   331     008D                     	;# 
   332     008E                     	;# 
   333     008F                     	;# 
   334     0090                     	;# 
   335     0091                     	;# 
   336     0092                     	;# 
   337     0093                     	;# 
   338     0093                     	;# 
   339     0093                     	;# 
   340     0094                     	;# 
   341     0095                     	;# 
   342     0096                     	;# 
   343     0097                     	;# 
   344     0098                     	;# 
   345     0099                     	;# 
   346     009A                     	;# 
   347     009B                     	;# 
   348     009C                     	;# 
   349     009D                     	;# 
   350     009E                     	;# 
   351     009F                     	;# 
   352     0105                     	;# 
   353     0107                     	;# 
   354     0108                     	;# 
   355     0109                     	;# 
   356     010C                     	;# 
   357     010C                     	;# 
   358     010D                     	;# 
   359     010E                     	;# 
   360     010F                     	;# 
   361     0185                     	;# 
   362     0187                     	;# 
   363     0188                     	;# 
   364     0189                     	;# 
   365     018C                     	;# 
   366     018D                     	;# 
   367     0000                     	;# 
   368     0001                     	;# 
   369     0002                     	;# 
   370     0003                     	;# 
   371     0004                     	;# 
   372     0005                     	;# 
   373     0006                     	;# 
   374     0007                     	;# 
   375     0008                     	;# 
   376     0009                     	;# 
   377     000A                     	;# 
   378     000B                     	;# 
   379     000C                     	;# 
   380     000D                     	;# 
   381     000E                     	;# 
   382     000E                     	;# 
   383     000F                     	;# 
   384     0010                     	;# 
   385     0011                     	;# 
   386     0012                     	;# 
   387     0013                     	;# 
   388     0014                     	;# 
   389     0015                     	;# 
   390     0015                     	;# 
   391     0016                     	;# 
   392     0017                     	;# 
   393     0018                     	;# 
   394     0019                     	;# 
   395     001A                     	;# 
   396     001B                     	;# 
   397     001B                     	;# 
   398     001C                     	;# 
   399     001D                     	;# 
   400     001E                     	;# 
   401     001F                     	;# 
   402     0081                     	;# 
   403     0085                     	;# 
   404     0086                     	;# 
   405     0087                     	;# 
   406     0088                     	;# 
   407     0089                     	;# 
   408     008C                     	;# 
   409     008D                     	;# 
   410     008E                     	;# 
   411     008F                     	;# 
   412     0090                     	;# 
   413     0091                     	;# 
   414     0092                     	;# 
   415     0093                     	;# 
   416     0093                     	;# 
   417     0093                     	;# 
   418     0094                     	;# 
   419     0095                     	;# 
   420     0096                     	;# 
   421     0097                     	;# 
   422     0098                     	;# 
   423     0099                     	;# 
   424     009A                     	;# 
   425     009B                     	;# 
   426     009C                     	;# 
   427     009D                     	;# 
   428     009E                     	;# 
   429     009F                     	;# 
   430     0105                     	;# 
   431     0107                     	;# 
   432     0108                     	;# 
   433     0109                     	;# 
   434     010C                     	;# 
   435     010C                     	;# 
   436     010D                     	;# 
   437     010E                     	;# 
   438     010F                     	;# 
   439     0185                     	;# 
   440     0187                     	;# 
   441     0188                     	;# 
   442     0189                     	;# 
   443     018C                     	;# 
   444     018D                     	;# 
   445     0013                     _SSPBUF	set	19
   446     0014                     _SSPCON	set	20
   447     0008                     _PORTDbits	set	8
   448     001E                     _ADRESH	set	30
   449     001F                     _ADCON0bits	set	31
   450     002A                     _RA2	set	42
   451     00A7                     _WCOL	set	167
   452     00A6                     _SSPOV	set	166
   453     00A4                     _CKP	set	164
   454     0063                     _SSPIF	set	99
   455     005E                     _PEIE	set	94
   456     005F                     _GIE	set	95
   457     0043                     _RD3	set	67
   458     0047                     _RD7	set	71
   459     0046                     _RD6	set	70
   460     0045                     _RD5	set	69
   461     0044                     _RD4	set	68
   462     00F8                     _ADON	set	248
   463     008F                     _OSCCONbits	set	143
   464     0085                     _TRISA	set	133
   465     0091                     _SSPCON2bits	set	145
   466     0087                     _TRISCbits	set	135
   467     0094                     _SSPSTAT	set	148
   468     0093                     _SSPADD	set	147
   469     0091                     _SSPCON2	set	145
   470     009E                     _ADRESL	set	158
   471     0478                     _SCS	set	1144
   472     04A0                     _BF	set	1184
   473     04A2                     _R_nW	set	1186
   474     04A5                     _D_nA	set	1189
   475     0463                     _SSPIE	set	1123
   476     043C                     _TRISC4	set	1084
   477     043B                     _TRISC3	set	1083
   478     04FD                     _VCFG1	set	1277
   479     04FC                     _VCFG0	set	1276
   480     04FF                     _ADFM	set	1279
   481     0189                     _ANSELH	set	393
   482     0188                     _ANSEL	set	392
   483                           
   484                           	psect	cinit
   485     000F                     start_initialization:	
   486                           ; #config settings
   487                           
   488     000F                     __initialization:
   489                           
   490                           ; Clear objects allocated to COMMON
   491     000F  01F8               	clrf	__pbssCOMMON& (0+127)
   492     0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   493     0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   494                           
   495                           ; Clear objects allocated to BANK0
   496     0012  1283               	bcf	3,5	;RP0=0, select bank0
   497     0013  1303               	bcf	3,6	;RP1=0, select bank0
   498     0014  01A0               	clrf	__pbssBANK0& (0+127)
   499     0015  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   500     0016  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   501     0017                     end_of_initialization:	
   502                           ;End of C runtime variable initialization code
   503                           
   504     0017                     __end_of__initialization:
   505     0017  0183               	clrf	3
   506     0018  120A  118A  281B   	ljmp	_main	;jump to C main() function
   507                           
   508                           	psect	bssCOMMON
   509     0078                     __pbssCOMMON:
   510     0078                     _MQ2_val:
   511     0078                     	ds	1
   512     0079                     _request:
   513     0079                     	ds	1
   514     007A                     _send_data:
   515     007A                     	ds	1
   516                           
   517                           	psect	bssBANK0
   518     0020                     __pbssBANK0:
   519     0020                     _IR_sens:
   520     0020                     	ds	1
   521     0021                     _LM35_val:
   522     0021                     	ds	1
   523     0022                     _discard:
   524     0022                     	ds	1
   525                           
   526                           	psect	cstackCOMMON
   527     0070                     __pcstackCOMMON:
   528     0070                     ?_setup:
   529     0070                     ?_adc_sel_channel:	
   530                           ; 1 bytes @ 0x0
   531                           
   532     0070                     ?_adc_get_channel:	
   533                           ; 1 bytes @ 0x0
   534                           
   535     0070                     ?_I2C_Slave_Init:	
   536                           ; 1 bytes @ 0x0
   537                           
   538     0070                     ?_isr:	
   539                           ; 1 bytes @ 0x0
   540                           
   541     0070                     ??_isr:	
   542                           ; 1 bytes @ 0x0
   543                           
   544     0070                     ?_main:	
   545                           ; 1 bytes @ 0x0
   546                           
   547                           
   548                           ; 2 bytes @ 0x0
   549     0070                     	ds	3
   550     0073                     ?_adc_init:
   551     0073                     ??_adc_sel_channel:	
   552                           ; 1 bytes @ 0x3
   553                           
   554     0073                     ??_adc_get_channel:	
   555                           ; 1 bytes @ 0x3
   556                           
   557     0073                     ??_I2C_Slave_Init:	
   558                           ; 1 bytes @ 0x3
   559                           
   560     0073                     ?_adc_read:	
   561                           ; 1 bytes @ 0x3
   562                           
   563     0073                     adc_init@R:	
   564                           ; 2 bytes @ 0x3
   565                           
   566     0073                     I2C_Slave_Init@address:	
   567                           ; 1 bytes @ 0x3
   568                           
   569                           
   570                           ; 1 bytes @ 0x3
   571     0073                     	ds	1
   572     0074                     adc_init@clock:
   573     0074                     adc_sel_channel@channel:	
   574                           ; 1 bytes @ 0x4
   575                           
   576                           
   577                           ; 1 bytes @ 0x4
   578     0074                     	ds	1
   579     0075                     ??_adc_read:
   580     0075                     adc_init@channel:	
   581                           ; 1 bytes @ 0x5
   582                           
   583                           
   584                           ; 1 bytes @ 0x5
   585     0075                     	ds	1
   586     0076                     ??_adc_init:
   587                           
   588                           ; 1 bytes @ 0x6
   589     0076                     	ds	2
   590     0078                     ??_setup:
   591                           
   592                           	psect	cstackBANK0
   593     0023                     __pcstackBANK0:	
   594                           ; 1 bytes @ 0x8
   595                           
   596     0023                     adc_init@J:
   597                           
   598                           ; 1 bytes @ 0x0
   599     0023                     	ds	1
   600     0024                     ??_main:
   601                           
   602                           ; 1 bytes @ 0x1
   603     0024                     	ds	2
   604                           
   605                           	psect	maintext
   606     001B                     __pmaintext:	
   607 ;;
   608 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   609 ;;
   610 ;; *************** function _main *****************
   611 ;; Defined at:
   612 ;;		line 101 in file "slave_sensors.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;		None
   615 ;; Auto vars:     Size  Location     Type
   616 ;;		None
   617 ;; Return value:  Size  Location     Type
   618 ;;                  2  221[None  ] int 
   619 ;; Registers used:
   620 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   621 ;; Tracked objects:
   622 ;;		On entry : B00/0
   623 ;;		On exit  : 0/0
   624 ;;		Unchanged: 0/0
   625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   626 ;;      Params:         0       0       0       0       0
   627 ;;      Locals:         0       0       0       0       0
   628 ;;      Temps:          0       2       0       0       0
   629 ;;      Totals:         0       2       0       0       0
   630 ;;Total ram usage:        2 bytes
   631 ;; Hardware stack levels required when called: 3
   632 ;; This function calls:
   633 ;;		_adc_get_channel
   634 ;;		_adc_read
   635 ;;		_adc_sel_channel
   636 ;;		_setup
   637 ;; This function is called by:
   638 ;;		Startup code after reset
   639 ;; This function uses a non-reentrant model
   640 ;;
   641                           
   642     001B                     _main:	
   643                           ;psect for function _main
   644                           
   645     001B                     l1357:	
   646                           ;incstack = 0
   647                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   648                           
   649                           
   650                           ;slave_sensors.c: 102:     OSCCONbits.IRCF = 0b111;
   651     001B  120A  118A  213F  120A  118A  	fcall	_setup
   652     0020                     l1359:
   653                           
   654                           ;slave_sensors.c: 106:     adc_init(0, 0, 8, 0);
   655     0020  120A  118A  2191  120A  118A  	fcall	_adc_get_channel
   656     0025  3A00               	xorlw	0
   657     0026  1D03               	skipz
   658     0027  2829               	goto	u571
   659     0028  282A               	goto	u570
   660     0029                     u571:
   661     0029  2838               	goto	l1365
   662     002A                     u570:
   663     002A                     l1361:
   664                           
   665                           ;slave_sensors.c: 107: 
   666     002A  120A  118A  2176  120A  118A  	fcall	_adc_read
   667     002F  0874               	movf	?_adc_read+1,w
   668     0030  00F8               	movwf	_MQ2_val
   669     0031                     l1363:
   670                           
   671                           ;slave_sensors.c: 108: 
   672     0031  3001               	movlw	1
   673     0032  120A  118A  2184  120A  118A  	fcall	_adc_sel_channel
   674                           
   675                           ;slave_sensors.c: 109:     I2C_Slave_Init(0x20);
   676     0037  2851               	goto	l1371
   677     0038                     l1365:
   678     0038  120A  118A  2191  120A  118A  	fcall	_adc_get_channel
   679     003D  3A01               	xorlw	1
   680     003E  1D03               	skipz
   681     003F  2841               	goto	u581
   682     0040  2842               	goto	u580
   683     0041                     u581:
   684     0041  2851               	goto	l1371
   685     0042                     u580:
   686     0042                     l1367:
   687     0042  120A  118A  2176  120A  118A  	fcall	_adc_read
   688     0047  0874               	movf	?_adc_read+1,w
   689     0048  1283               	bcf	3,5	;RP0=0, select bank0
   690     0049  1303               	bcf	3,6	;RP1=0, select bank0
   691     004A  00A1               	movwf	_LM35_val
   692     004B                     l1369:
   693     004B  3000               	movlw	0
   694     004C  120A  118A  2184  120A  118A  	fcall	_adc_sel_channel
   695     0051                     l1371:
   696     0051  3000               	movlw	0
   697     0052  1283               	bcf	3,5	;RP0=0, select bank0
   698     0053  1303               	bcf	3,6	;RP1=0, select bank0
   699     0054  1905               	btfsc	5,2	;volatile
   700     0055  3001               	movlw	1
   701     0056  00A0               	movwf	_IR_sens
   702     0057  2864               	goto	l1383
   703     0058                     l1373:
   704     0058  0878               	movf	_MQ2_val,w
   705     0059  00FA               	movwf	_send_data
   706     005A  2877               	goto	l1385
   707     005B                     l1375:
   708     005B  0821               	movf	_LM35_val,w
   709     005C  00FA               	movwf	_send_data
   710     005D  2877               	goto	l1385
   711     005E                     l1377:
   712     005E  0820               	movf	_IR_sens,w
   713     005F  00FA               	movwf	_send_data
   714     0060  2877               	goto	l1385
   715     0061                     l1379:
   716     0061  30FF               	movlw	255
   717     0062  00FA               	movwf	_send_data
   718     0063  2877               	goto	l1385
   719     0064                     l1383:
   720     0064  0879               	movf	_request,w
   721     0065  00A4               	movwf	??_main
   722     0066  01A5               	clrf	??_main+1
   723                           
   724                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   725                           ; Switch size 1, requested type "simple"
   726                           ; Number of cases is 1, Range of values is 0 to 0
   727                           ; switch strategies available:
   728                           ; Name         Instructions Cycles
   729                           ; simple_byte            4     3 (average)
   730                           ; direct_byte           11     8 (fixed)
   731                           ; jumptable            260     6 (fixed)
   732                           ;	Chosen strategy is simple_byte
   733     0067  0825               	movf	??_main+1,w
   734     0068  3A00               	xorlw	0	; case 0
   735     0069  1903               	skipnz
   736     006A  286C               	goto	l1443
   737     006B  2861               	goto	l1379
   738     006C                     l1443:
   739                           
   740                           ; Switch size 1, requested type "simple"
   741                           ; Number of cases is 3, Range of values is 71 to 84
   742                           ; switch strategies available:
   743                           ; Name         Instructions Cycles
   744                           ; simple_byte           10     6 (average)
   745                           ; direct_byte           53    11 (fixed)
   746                           ; jumptable            263     9 (fixed)
   747                           ;	Chosen strategy is simple_byte
   748     006C  0824               	movf	??_main,w
   749     006D  3A47               	xorlw	71	; case 71
   750     006E  1903               	skipnz
   751     006F  2858               	goto	l1373
   752     0070  3A0E               	xorlw	14	; case 73
   753     0071  1903               	skipnz
   754     0072  285E               	goto	l1377
   755     0073  3A1D               	xorlw	29	; case 84
   756     0074  1903               	skipnz
   757     0075  285B               	goto	l1375
   758     0076  2861               	goto	l1379
   759     0077                     l1385:
   760     0077  301A               	movlw	26
   761     0078  1283               	bcf	3,5	;RP0=0, select bank0
   762     0079  1303               	bcf	3,6	;RP1=0, select bank0
   763     007A  00A5               	movwf	??_main+1
   764     007B  30F7               	movlw	247
   765     007C  00A4               	movwf	??_main
   766     007D                     u597:
   767     007D  0BA4               	decfsz	??_main,f
   768     007E  287D               	goto	u597
   769     007F  0BA5               	decfsz	??_main+1,f
   770     0080  287D               	goto	u597
   771     0081  2882               	nop2
   772     0082  2820               	goto	l1359
   773     0083  120A  118A  280C   	ljmp	start
   774     0086                     __end_of_main:
   775                           
   776                           	psect	text1
   777     013F                     __ptext1:	
   778 ;; *************** function _setup *****************
   779 ;; Defined at:
   780 ;;		line 136 in file "slave_sensors.c"
   781 ;; Parameters:    Size  Location     Type
   782 ;;		None
   783 ;; Auto vars:     Size  Location     Type
   784 ;;		None
   785 ;; Return value:  Size  Location     Type
   786 ;;                  1    wreg      void 
   787 ;; Registers used:
   788 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   789 ;; Tracked objects:
   790 ;;		On entry : 0/0
   791 ;;		On exit  : 0/0
   792 ;;		Unchanged: 0/0
   793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   794 ;;      Params:         0       0       0       0       0
   795 ;;      Locals:         0       0       0       0       0
   796 ;;      Temps:          0       0       0       0       0
   797 ;;      Totals:         0       0       0       0       0
   798 ;;Total ram usage:        0 bytes
   799 ;; Hardware stack levels used: 1
   800 ;; Hardware stack levels required when called: 2
   801 ;; This function calls:
   802 ;;		_I2C_Slave_Init
   803 ;;		_adc_init
   804 ;; This function is called by:
   805 ;;		_main
   806 ;; This function uses a non-reentrant model
   807 ;;
   808                           
   809     013F                     _setup:	
   810                           ;psect for function _setup
   811                           
   812     013F                     l1343:	
   813                           ;incstack = 0
   814                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   815                           
   816     013F  3003               	movlw	3
   817     0140  1683               	bsf	3,5	;RP0=1, select bank3
   818     0141  1703               	bsf	3,6	;RP1=1, select bank3
   819     0142  0088               	movwf	8	;volatile
   820     0143                     l1345:
   821     0143  0189               	clrf	9	;volatile
   822     0144                     l1347:
   823     0144  30FF               	movlw	255
   824     0145  1683               	bsf	3,5	;RP0=1, select bank1
   825     0146  1303               	bcf	3,6	;RP1=0, select bank1
   826     0147  0085               	movwf	5	;volatile
   827     0148                     l1349:
   828     0148  3070               	movlw	112
   829     0149  048F               	iorwf	15,f	;volatile
   830     014A                     l1351:
   831     014A  140F               	bsf	15,0	;volatile
   832     014B                     l1353:
   833     014B  01F3               	clrf	adc_init@R
   834     014C  3008               	movlw	8
   835     014D  00F4               	movwf	adc_init@clock
   836     014E  01F5               	clrf	adc_init@channel
   837     014F  3000               	movlw	0
   838     0150  120A  118A  20E3  120A  118A  	fcall	_adc_init
   839     0155                     l1355:
   840     0155  3020               	movlw	32
   841     0156  120A  118A  215C  120A  118A  	fcall	_I2C_Slave_Init
   842     015B                     l237:
   843     015B  0008               	return
   844     015C                     __end_of_setup:
   845                           
   846                           	psect	text2
   847     00E3                     __ptext2:	
   848 ;; *************** function _adc_init *****************
   849 ;; Defined at:
   850 ;;		line 4 in file "ADC_lib.c"
   851 ;; Parameters:    Size  Location     Type
   852 ;;  J               1    wreg     unsigned char 
   853 ;;  R               1    3[COMMON] unsigned char 
   854 ;;  clock           1    4[COMMON] unsigned char 
   855 ;;  channel         1    5[COMMON] unsigned char 
   856 ;; Auto vars:     Size  Location     Type
   857 ;;  J               1    0[BANK0 ] unsigned char 
   858 ;; Return value:  Size  Location     Type
   859 ;;                  1    wreg      void 
   860 ;; Registers used:
   861 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   862 ;; Tracked objects:
   863 ;;		On entry : 0/0
   864 ;;		On exit  : 0/0
   865 ;;		Unchanged: 0/0
   866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   867 ;;      Params:         3       0       0       0       0
   868 ;;      Locals:         0       1       0       0       0
   869 ;;      Temps:          2       0       0       0       0
   870 ;;      Totals:         5       1       0       0       0
   871 ;;Total ram usage:        6 bytes
   872 ;; Hardware stack levels used: 1
   873 ;; Hardware stack levels required when called: 1
   874 ;; This function calls:
   875 ;;		Nothing
   876 ;; This function is called by:
   877 ;;		_setup
   878 ;; This function uses a non-reentrant model
   879 ;;
   880                           
   881     00E3                     _adc_init:	
   882                           ;psect for function _adc_init
   883                           
   884                           
   885                           ;incstack = 0
   886                           ; Regs used in _adc_init: [wreg-fsr0h+status,2+status,0]
   887                           ;adc_init@J stored from wreg
   888     00E3  1283               	bcf	3,5	;RP0=0, select bank0
   889     00E4  1303               	bcf	3,6	;RP1=0, select bank0
   890     00E5  00A3               	movwf	adc_init@J
   891     00E6                     l1321:
   892                           
   893                           ;ADC_lib.c: 13:     ADFM = J;
   894     00E6  1823               	btfsc	adc_init@J,0
   895     00E7  28E9               	goto	u511
   896     00E8  28ED               	goto	u510
   897     00E9                     u511:
   898     00E9  1683               	bsf	3,5	;RP0=1, select bank1
   899     00EA  1303               	bcf	3,6	;RP1=0, select bank1
   900     00EB  179F               	bsf	31,7	;volatile
   901     00EC  28F0               	goto	u524
   902     00ED                     u510:
   903     00ED  1683               	bsf	3,5	;RP0=1, select bank1
   904     00EE  1303               	bcf	3,6	;RP1=0, select bank1
   905     00EF  139F               	bcf	31,7	;volatile
   906     00F0                     u524:
   907                           
   908                           ;ADC_lib.c: 14:     VCFG0 = R;
   909     00F0  1873               	btfsc	adc_init@R,0
   910     00F1  28F3               	goto	u531
   911     00F2  28F7               	goto	u530
   912     00F3                     u531:
   913     00F3  1683               	bsf	3,5	;RP0=1, select bank1
   914     00F4  1303               	bcf	3,6	;RP1=0, select bank1
   915     00F5  161F               	bsf	31,4	;volatile
   916     00F6  28FA               	goto	u544
   917     00F7                     u530:
   918     00F7  1683               	bsf	3,5	;RP0=1, select bank1
   919     00F8  1303               	bcf	3,6	;RP1=0, select bank1
   920     00F9  121F               	bcf	31,4	;volatile
   921     00FA                     u544:
   922                           
   923                           ;ADC_lib.c: 15:     VCFG1 = R;
   924     00FA  1873               	btfsc	adc_init@R,0
   925     00FB  28FD               	goto	u551
   926     00FC  2901               	goto	u550
   927     00FD                     u551:
   928     00FD  1683               	bsf	3,5	;RP0=1, select bank1
   929     00FE  1303               	bcf	3,6	;RP1=0, select bank1
   930     00FF  169F               	bsf	31,5	;volatile
   931     0100  2904               	goto	u564
   932     0101                     u550:
   933     0101  1683               	bsf	3,5	;RP0=1, select bank1
   934     0102  1303               	bcf	3,6	;RP1=0, select bank1
   935     0103  129F               	bcf	31,5	;volatile
   936     0104                     u564:
   937                           
   938                           ;ADC_lib.c: 17:     switch(clock){
   939     0104  291D               	goto	l1333
   940     0105                     l1323:
   941                           
   942                           ;ADC_lib.c: 19:             ADCON0bits.ADCS = 0b00;
   943     0105  303F               	movlw	-193
   944     0106  1283               	bcf	3,5	;RP0=0, select bank0
   945     0107  1303               	bcf	3,6	;RP1=0, select bank0
   946     0108  059F               	andwf	31,f	;volatile
   947                           
   948                           ;ADC_lib.c: 21:             break;
   949     0109  2933               	goto	l1335
   950     010A                     l1325:
   951                           
   952                           ;ADC_lib.c: 23:             ADCON0bits.ADCS = 0b01;
   953     010A  1283               	bcf	3,5	;RP0=0, select bank0
   954     010B  1303               	bcf	3,6	;RP1=0, select bank0
   955     010C  081F               	movf	31,w	;volatile
   956     010D  393F               	andlw	-193
   957     010E  3840               	iorlw	64
   958     010F  009F               	movwf	31	;volatile
   959                           
   960                           ;ADC_lib.c: 25:             break;
   961     0110  2933               	goto	l1335
   962     0111                     l1327:
   963                           
   964                           ;ADC_lib.c: 27:             ADCON0bits.ADCS = 0b10;
   965     0111  1283               	bcf	3,5	;RP0=0, select bank0
   966     0112  1303               	bcf	3,6	;RP1=0, select bank0
   967     0113  081F               	movf	31,w	;volatile
   968     0114  393F               	andlw	-193
   969     0115  3880               	iorlw	128
   970     0116  009F               	movwf	31	;volatile
   971                           
   972                           ;ADC_lib.c: 29:             break;
   973     0117  2933               	goto	l1335
   974     0118                     l1329:
   975                           
   976                           ;ADC_lib.c: 31:             ADCON0bits.ADCS = 0b11;
   977     0118  30C0               	movlw	192
   978     0119  1283               	bcf	3,5	;RP0=0, select bank0
   979     011A  1303               	bcf	3,6	;RP1=0, select bank0
   980     011B  049F               	iorwf	31,f	;volatile
   981                           
   982                           ;ADC_lib.c: 33:             break;
   983     011C  2933               	goto	l1335
   984     011D                     l1333:
   985     011D  0874               	movf	adc_init@clock,w
   986     011E  00F6               	movwf	??_adc_init
   987     011F  01F7               	clrf	??_adc_init+1
   988                           
   989                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   990                           ; Switch size 1, requested type "simple"
   991                           ; Number of cases is 1, Range of values is 0 to 0
   992                           ; switch strategies available:
   993                           ; Name         Instructions Cycles
   994                           ; simple_byte            4     3 (average)
   995                           ; direct_byte           11     8 (fixed)
   996                           ; jumptable            260     6 (fixed)
   997                           ;	Chosen strategy is simple_byte
   998     0120  0877               	movf	??_adc_init+1,w
   999     0121  3A00               	xorlw	0	; case 0
  1000     0122  1903               	skipnz
  1001     0123  2925               	goto	l1445
  1002     0124  2933               	goto	l1335
  1003     0125                     l1445:
  1004                           
  1005                           ; Switch size 1, requested type "simple"
  1006                           ; Number of cases is 4, Range of values is 1 to 20
  1007                           ; switch strategies available:
  1008                           ; Name         Instructions Cycles
  1009                           ; simple_byte           13     7 (average)
  1010                           ; direct_byte           71    11 (fixed)
  1011                           ; jumptable            263     9 (fixed)
  1012                           ;	Chosen strategy is simple_byte
  1013     0125  0876               	movf	??_adc_init,w
  1014     0126  3A01               	xorlw	1	; case 1
  1015     0127  1903               	skipnz
  1016     0128  2905               	goto	l1323
  1017     0129  3A05               	xorlw	5	; case 4
  1018     012A  1903               	skipnz
  1019     012B  290A               	goto	l1325
  1020     012C  3A0C               	xorlw	12	; case 8
  1021     012D  1903               	skipnz
  1022     012E  2911               	goto	l1327
  1023     012F  3A1C               	xorlw	28	; case 20
  1024     0130  1903               	skipnz
  1025     0131  2918               	goto	l1329
  1026     0132  2933               	goto	l1335
  1027     0133                     l1335:
  1028                           
  1029                           ;ADC_lib.c: 35:     ADCON0bits.CHS = channel;
  1030     0133  0875               	movf	adc_init@channel,w
  1031     0134  00F6               	movwf	??_adc_init
  1032     0135  0DF6               	rlf	??_adc_init,f
  1033     0136  0DF6               	rlf	??_adc_init,f
  1034     0137  1283               	bcf	3,5	;RP0=0, select bank0
  1035     0138  081F               	movf	31,w	;volatile
  1036     0139  0676               	xorwf	??_adc_init,w
  1037     013A  39C3               	andlw	-61
  1038     013B  0676               	xorwf	??_adc_init,w
  1039     013C  009F               	movwf	31	;volatile
  1040     013D                     l1337:
  1041                           
  1042                           ;ADC_lib.c: 38:     ADON = 1;
  1043     013D  141F               	bsf	31,0	;volatile
  1044     013E                     l23:
  1045     013E  0008               	return
  1046     013F                     __end_of_adc_init:
  1047                           
  1048                           	psect	text3
  1049     015C                     __ptext3:	
  1050 ;; *************** function _I2C_Slave_Init *****************
  1051 ;; Defined at:
  1052 ;;		line 93 in file "../PIC_MASTER.X/I2C.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;  address         1    wreg     unsigned char 
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;  address         1    3[COMMON] unsigned char 
  1057 ;; Return value:  Size  Location     Type
  1058 ;;                  1    wreg      void 
  1059 ;; Registers used:
  1060 ;;		wreg
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1066 ;;      Params:         0       0       0       0       0
  1067 ;;      Locals:         1       0       0       0       0
  1068 ;;      Temps:          0       0       0       0       0
  1069 ;;      Totals:         1       0       0       0       0
  1070 ;;Total ram usage:        1 bytes
  1071 ;; Hardware stack levels used: 1
  1072 ;; Hardware stack levels required when called: 1
  1073 ;; This function calls:
  1074 ;;		Nothing
  1075 ;; This function is called by:
  1076 ;;		_setup
  1077 ;; This function uses a non-reentrant model
  1078 ;;
  1079                           
  1080     015C                     _I2C_Slave_Init:	
  1081                           ;psect for function _I2C_Slave_Init
  1082                           
  1083                           
  1084                           ;incstack = 0
  1085                           ; Regs used in _I2C_Slave_Init: [wreg]
  1086                           ;I2C_Slave_Init@address stored from wreg
  1087     015C  00F3               	movwf	I2C_Slave_Init@address
  1088     015D                     l1161:
  1089                           
  1090                           ;../PIC_MASTER.X/I2C.c: 93: void I2C_Slave_Init(uint8_t address);../PIC_MASTER.X/I2C.c: 
      +                          94: {;../PIC_MASTER.X/I2C.c: 95:     SSPADD = address;
  1091     015D  0873               	movf	I2C_Slave_Init@address,w
  1092     015E  1683               	bsf	3,5	;RP0=1, select bank1
  1093     015F  1303               	bcf	3,6	;RP1=0, select bank1
  1094     0160  0093               	movwf	19	;volatile
  1095                           
  1096                           ;../PIC_MASTER.X/I2C.c: 96:     SSPCON = 0x36;
  1097     0161  3036               	movlw	54
  1098     0162  1283               	bcf	3,5	;RP0=0, select bank0
  1099     0163  1303               	bcf	3,6	;RP1=0, select bank0
  1100     0164  0094               	movwf	20	;volatile
  1101                           
  1102                           ;../PIC_MASTER.X/I2C.c: 97:     SSPSTAT = 0x80;
  1103     0165  3080               	movlw	128
  1104     0166  1683               	bsf	3,5	;RP0=1, select bank1
  1105     0167  1303               	bcf	3,6	;RP1=0, select bank1
  1106     0168  0094               	movwf	20	;volatile
  1107                           
  1108                           ;../PIC_MASTER.X/I2C.c: 98:     SSPCON2 = 0x01;
  1109     0169  3001               	movlw	1
  1110     016A  0091               	movwf	17	;volatile
  1111     016B                     l1163:
  1112                           
  1113                           ;../PIC_MASTER.X/I2C.c: 99:     TRISC3 = 1;
  1114     016B  1587               	bsf	7,3	;volatile
  1115     016C                     l1165:
  1116                           
  1117                           ;../PIC_MASTER.X/I2C.c: 100:     TRISC4 = 1;
  1118     016C  1607               	bsf	7,4	;volatile
  1119     016D                     l1167:
  1120                           
  1121                           ;../PIC_MASTER.X/I2C.c: 101:     GIE = 1;
  1122     016D  178B               	bsf	11,7	;volatile
  1123     016E                     l1169:
  1124                           
  1125                           ;../PIC_MASTER.X/I2C.c: 102:     PEIE = 1;
  1126     016E  170B               	bsf	11,6	;volatile
  1127     016F                     l1171:
  1128                           
  1129                           ;../PIC_MASTER.X/I2C.c: 103:     SSPIF = 0;
  1130     016F  1283               	bcf	3,5	;RP0=0, select bank0
  1131     0170  1303               	bcf	3,6	;RP1=0, select bank0
  1132     0171  118C               	bcf	12,3	;volatile
  1133     0172                     l1173:
  1134                           
  1135                           ;../PIC_MASTER.X/I2C.c: 104:     SSPIE = 1;
  1136     0172  1683               	bsf	3,5	;RP0=1, select bank1
  1137     0173  1303               	bcf	3,6	;RP1=0, select bank1
  1138     0174  158C               	bsf	12,3	;volatile
  1139     0175                     l145:
  1140     0175  0008               	return
  1141     0176                     __end_of_I2C_Slave_Init:
  1142                           
  1143                           	psect	text4
  1144     0184                     __ptext4:	
  1145 ;; *************** function _adc_sel_channel *****************
  1146 ;; Defined at:
  1147 ;;		line 49 in file "ADC_lib.c"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;  channel         1    wreg     unsigned char 
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;  channel         1    4[COMMON] unsigned char 
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  1    wreg      void 
  1154 ;; Registers used:
  1155 ;;		wreg, status,2, status,0
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1161 ;;      Params:         0       0       0       0       0
  1162 ;;      Locals:         1       0       0       0       0
  1163 ;;      Temps:          1       0       0       0       0
  1164 ;;      Totals:         2       0       0       0       0
  1165 ;;Total ram usage:        2 bytes
  1166 ;; Hardware stack levels used: 1
  1167 ;; Hardware stack levels required when called: 1
  1168 ;; This function calls:
  1169 ;;		Nothing
  1170 ;; This function is called by:
  1171 ;;		_main
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175     0184                     _adc_sel_channel:	
  1176                           ;psect for function _adc_sel_channel
  1177                           
  1178                           
  1179                           ;incstack = 0
  1180                           ; Regs used in _adc_sel_channel: [wreg+status,2+status,0]
  1181                           ;adc_sel_channel@channel stored from wreg
  1182     0184  00F4               	movwf	adc_sel_channel@channel
  1183     0185                     l1181:
  1184                           
  1185                           ;ADC_lib.c: 50:     ADCON0bits.CHS = channel;
  1186     0185  0874               	movf	adc_sel_channel@channel,w
  1187     0186  00F3               	movwf	??_adc_sel_channel
  1188     0187  0DF3               	rlf	??_adc_sel_channel,f
  1189     0188  0DF3               	rlf	??_adc_sel_channel,f
  1190     0189  1283               	bcf	3,5	;RP0=0, select bank0
  1191     018A  1303               	bcf	3,6	;RP1=0, select bank0
  1192     018B  081F               	movf	31,w	;volatile
  1193     018C  0673               	xorwf	??_adc_sel_channel,w
  1194     018D  39C3               	andlw	-61
  1195     018E  0673               	xorwf	??_adc_sel_channel,w
  1196     018F  009F               	movwf	31	;volatile
  1197     0190                     l32:
  1198     0190  0008               	return
  1199     0191                     __end_of_adc_sel_channel:
  1200                           
  1201                           	psect	text5
  1202     0176                     __ptext5:	
  1203 ;; *************** function _adc_read *****************
  1204 ;; Defined at:
  1205 ;;		line 42 in file "ADC_lib.c"
  1206 ;; Parameters:    Size  Location     Type
  1207 ;;		None
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;		None
  1210 ;; Return value:  Size  Location     Type
  1211 ;;                  2    3[COMMON] unsigned int 
  1212 ;; Registers used:
  1213 ;;		wreg
  1214 ;; Tracked objects:
  1215 ;;		On entry : 0/0
  1216 ;;		On exit  : 0/0
  1217 ;;		Unchanged: 0/0
  1218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1219 ;;      Params:         2       0       0       0       0
  1220 ;;      Locals:         0       0       0       0       0
  1221 ;;      Temps:          0       0       0       0       0
  1222 ;;      Totals:         2       0       0       0       0
  1223 ;;Total ram usage:        2 bytes
  1224 ;; Hardware stack levels used: 1
  1225 ;; Hardware stack levels required when called: 1
  1226 ;; This function calls:
  1227 ;;		Nothing
  1228 ;; This function is called by:
  1229 ;;		_main
  1230 ;; This function uses a non-reentrant model
  1231 ;;
  1232                           
  1233     0176                     _adc_read:	
  1234                           ;psect for function _adc_read
  1235                           
  1236     0176                     l1175:	
  1237                           ;incstack = 0
  1238                           ; Regs used in _adc_read: [wreg]
  1239                           
  1240                           
  1241                           ;ADC_lib.c: 43:     ADCON0bits.GO = 1;
  1242     0176  1283               	bcf	3,5	;RP0=0, select bank0
  1243     0177  1303               	bcf	3,6	;RP1=0, select bank0
  1244     0178  149F               	bsf	31,1	;volatile
  1245     0179                     l26:	
  1246                           ;ADC_lib.c: 44:     while(ADCON0bits.GO);
  1247                           
  1248     0179  189F               	btfsc	31,1	;volatile
  1249     017A  297C               	goto	u391
  1250     017B  297D               	goto	u390
  1251     017C                     u391:
  1252     017C  2979               	goto	l26
  1253     017D                     u390:
  1254     017D                     l1177:
  1255                           
  1256                           ;ADC_lib.c: 45:     return (ADRESH<<8) | ADRESL;
  1257     017D  081E               	movf	30,w	;volatile
  1258     017E  00F4               	movwf	?_adc_read+1
  1259     017F  1683               	bsf	3,5	;RP0=1, select bank1
  1260     0180  1303               	bcf	3,6	;RP1=0, select bank1
  1261     0181  081E               	movf	30,w	;volatile
  1262     0182  00F3               	movwf	?_adc_read
  1263     0183                     l29:
  1264     0183  0008               	return
  1265     0184                     __end_of_adc_read:
  1266                           
  1267                           	psect	text6
  1268     0191                     __ptext6:	
  1269 ;; *************** function _adc_get_channel *****************
  1270 ;; Defined at:
  1271 ;;		line 54 in file "ADC_lib.c"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;		None
  1274 ;; Auto vars:     Size  Location     Type
  1275 ;;		None
  1276 ;; Return value:  Size  Location     Type
  1277 ;;                  1    wreg      unsigned char 
  1278 ;; Registers used:
  1279 ;;		wreg, status,2, status,0
  1280 ;; Tracked objects:
  1281 ;;		On entry : 0/0
  1282 ;;		On exit  : 0/0
  1283 ;;		Unchanged: 0/0
  1284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1285 ;;      Params:         0       0       0       0       0
  1286 ;;      Locals:         0       0       0       0       0
  1287 ;;      Temps:          1       0       0       0       0
  1288 ;;      Totals:         1       0       0       0       0
  1289 ;;Total ram usage:        1 bytes
  1290 ;; Hardware stack levels used: 1
  1291 ;; Hardware stack levels required when called: 1
  1292 ;; This function calls:
  1293 ;;		Nothing
  1294 ;; This function is called by:
  1295 ;;		_main
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           
  1299     0191                     _adc_get_channel:	
  1300                           ;psect for function _adc_get_channel
  1301                           
  1302     0191                     l1183:	
  1303                           ;incstack = 0
  1304                           ; Regs used in _adc_get_channel: [wreg+status,2+status,0]
  1305                           
  1306                           
  1307                           ;ADC_lib.c: 55:     return ADCON0bits.CHS;
  1308     0191  1283               	bcf	3,5	;RP0=0, select bank0
  1309     0192  1303               	bcf	3,6	;RP1=0, select bank0
  1310     0193  0C1F               	rrf	31,w	;volatile
  1311     0194  00F3               	movwf	??_adc_get_channel
  1312     0195  0C73               	rrf	??_adc_get_channel,w
  1313     0196  390F               	andlw	15
  1314     0197                     l35:
  1315     0197  0008               	return
  1316     0198                     __end_of_adc_get_channel:
  1317                           
  1318                           	psect	text7
  1319     0086                     __ptext7:	
  1320 ;; *************** function _isr *****************
  1321 ;; Defined at:
  1322 ;;		line 61 in file "slave_sensors.c"
  1323 ;; Parameters:    Size  Location     Type
  1324 ;;		None
  1325 ;; Auto vars:     Size  Location     Type
  1326 ;;		None
  1327 ;; Return value:  Size  Location     Type
  1328 ;;                  1    wreg      void 
  1329 ;; Registers used:
  1330 ;;		wreg
  1331 ;; Tracked objects:
  1332 ;;		On entry : 0/0
  1333 ;;		On exit  : 0/0
  1334 ;;		Unchanged: 0/0
  1335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1336 ;;      Params:         0       0       0       0       0
  1337 ;;      Locals:         0       0       0       0       0
  1338 ;;      Temps:          3       0       0       0       0
  1339 ;;      Totals:         3       0       0       0       0
  1340 ;;Total ram usage:        3 bytes
  1341 ;; Hardware stack levels used: 1
  1342 ;; This function calls:
  1343 ;;		Nothing
  1344 ;; This function is called by:
  1345 ;;		Interrupt level 1
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349     0086                     _isr:	
  1350                           ;psect for function _isr
  1351                           
  1352     0086                     i1l1201:
  1353                           
  1354                           ;slave_sensors.c: 62:     setup();
  1355     0086  1283               	bcf	3,5	;RP0=0, select bank0
  1356     0087  1303               	bcf	3,6	;RP1=0, select bank0
  1357     0088  1D8C               	btfss	12,3	;volatile
  1358     0089  288B               	goto	u40_21
  1359     008A  288C               	goto	u40_20
  1360     008B                     u40_21:
  1361     008B  28DC               	goto	i1l217
  1362     008C                     u40_20:
  1363     008C                     i1l1203:
  1364                           
  1365                           ;slave_sensors.c: 64: 
  1366     008C  1214               	bcf	20,4	;volatile
  1367                           
  1368                           ;slave_sensors.c: 66:         if(adc_get_channel() == 0){
  1369     008D  1B14               	btfsc	20,6	;volatile
  1370     008E  2890               	goto	u41_21
  1371     008F  2891               	goto	u41_20
  1372     0090                     u41_21:
  1373     0090  2895               	goto	i1l1207
  1374     0091                     u41_20:
  1375     0091                     i1l1205:
  1376     0091  1F94               	btfss	20,7	;volatile
  1377     0092  2894               	goto	u42_21
  1378     0093  2895               	goto	u42_20
  1379     0094                     u42_21:
  1380     0094  289A               	goto	i1l1215
  1381     0095                     u42_20:
  1382     0095                     i1l1207:
  1383                           
  1384                           ;slave_sensors.c: 67:             MQ2_val = (adc_read()>>8) & 0x00FF;
  1385     0095  0813               	movf	19,w	;volatile
  1386     0096  00A2               	movwf	_discard
  1387     0097                     i1l1209:
  1388                           
  1389                           ;slave_sensors.c: 68:             adc_sel_channel(1);
  1390     0097  1314               	bcf	20,6	;volatile
  1391     0098                     i1l1211:
  1392                           
  1393                           ;slave_sensors.c: 69:         }
  1394     0098  1394               	bcf	20,7	;volatile
  1395     0099                     i1l1213:
  1396                           
  1397                           ;slave_sensors.c: 70:         else if (adc_get_channel() == 1){
  1398     0099  1614               	bsf	20,4	;volatile
  1399     009A                     i1l1215:
  1400                           
  1401                           ;slave_sensors.c: 73:         }
  1402     009A  1683               	bsf	3,5	;RP0=1, select bank1
  1403     009B  1303               	bcf	3,6	;RP1=0, select bank1
  1404     009C  1A94               	btfsc	20,5	;volatile
  1405     009D  289F               	goto	u43_21
  1406     009E  28A0               	goto	u43_20
  1407     009F                     u43_21:
  1408     009F  28BA               	goto	i1l208
  1409     00A0                     u43_20:
  1410     00A0                     i1l1217:
  1411     00A0  1914               	btfsc	20,2	;volatile
  1412     00A1  28A3               	goto	u44_21
  1413     00A2  28A4               	goto	u44_20
  1414     00A3                     u44_21:
  1415     00A3  28BA               	goto	i1l208
  1416     00A4                     u44_20:
  1417     00A4                     i1l1219:
  1418                           
  1419                           ;slave_sensors.c: 75:         IR_sens = RA2;
  1420     00A4  1283               	bcf	3,5	;RP0=0, select bank0
  1421     00A5  1303               	bcf	3,6	;RP1=0, select bank0
  1422     00A6  0813               	movf	19,w	;volatile
  1423     00A7  00A2               	movwf	_discard
  1424     00A8                     i1l1221:
  1425                           
  1426                           ;slave_sensors.c: 77:         switch(request){
  1427     00A8  118C               	bcf	12,3	;volatile
  1428     00A9                     i1l1223:
  1429                           
  1430                           ;slave_sensors.c: 78:             case 'G':
  1431     00A9  1614               	bsf	20,4	;volatile
  1432     00AA                     i1l209:	
  1433                           ;slave_sensors.c: 79:                 send_data = MQ2_val;
  1434                           
  1435     00AA  1683               	bsf	3,5	;RP0=1, select bank1
  1436     00AB  1303               	bcf	3,6	;RP1=0, select bank1
  1437     00AC  1C14               	btfss	20,0	;volatile
  1438     00AD  28AF               	goto	u45_21
  1439     00AE  28B0               	goto	u45_20
  1440     00AF                     u45_21:
  1441     00AF  28AA               	goto	i1l209
  1442     00B0                     u45_20:
  1443     00B0                     i1l1225:
  1444                           
  1445                           ;slave_sensors.c: 80:                 break;
  1446     00B0  1283               	bcf	3,5	;RP0=0, select bank0
  1447     00B1  1303               	bcf	3,6	;RP1=0, select bank0
  1448     00B2  0813               	movf	19,w	;volatile
  1449     00B3  00F9               	movwf	_request
  1450                           
  1451                           ;slave_sensors.c: 81:             case 'T':
  1452     00B4  30A6               	movlw	166
  1453     00B5  00F0               	movwf	??_isr
  1454     00B6                     u60_27:
  1455     00B6  0BF0               	decfsz	??_isr,f
  1456     00B7  28B6               	goto	u60_27
  1457     00B8  0000               	nop
  1458                           
  1459                           ;slave_sensors.c: 82:                 send_data = LM35_val;
  1460     00B9  28D9               	goto	i1l212
  1461     00BA                     i1l208:	
  1462                           ;slave_sensors.c: 83:                 break;
  1463                           
  1464     00BA  1A94               	btfsc	20,5	;volatile
  1465     00BB  28BD               	goto	u46_21
  1466     00BC  28BE               	goto	u46_20
  1467     00BD                     u46_21:
  1468     00BD  28D9               	goto	i1l212
  1469     00BE                     u46_20:
  1470     00BE                     i1l1227:
  1471     00BE  1D14               	btfss	20,2	;volatile
  1472     00BF  28C1               	goto	u47_21
  1473     00C0  28C2               	goto	u47_20
  1474     00C1                     u47_21:
  1475     00C1  28D9               	goto	i1l212
  1476     00C2                     u47_20:
  1477     00C2                     i1l1229:
  1478                           
  1479                           ;slave_sensors.c: 84:             case 'I':
  1480     00C2  1283               	bcf	3,5	;RP0=0, select bank0
  1481     00C3  1303               	bcf	3,6	;RP1=0, select bank0
  1482     00C4  0813               	movf	19,w	;volatile
  1483     00C5  00A2               	movwf	_discard
  1484     00C6                     i1l1231:
  1485                           
  1486                           ;slave_sensors.c: 85:                 send_data = IR_sens;
  1487     00C6  1683               	bsf	3,5	;RP0=1, select bank1
  1488     00C7  1303               	bcf	3,6	;RP1=0, select bank1
  1489     00C8  1014               	bcf	20,0	;volatile
  1490                           
  1491                           ;slave_sensors.c: 86:                 break;
  1492     00C9  087A               	movf	_send_data,w
  1493     00CA  1283               	bcf	3,5	;RP0=0, select bank0
  1494     00CB  1303               	bcf	3,6	;RP1=0, select bank0
  1495     00CC  0093               	movwf	19	;volatile
  1496     00CD                     i1l1233:
  1497                           
  1498                           ;slave_sensors.c: 87:             default:
  1499     00CD  1614               	bsf	20,4	;volatile
  1500                           
  1501                           ;slave_sensors.c: 88:                 send_data = 0xFF;
  1502     00CE  30A6               	movlw	166
  1503     00CF  00F0               	movwf	??_isr
  1504     00D0                     u61_27:
  1505     00D0  0BF0               	decfsz	??_isr,f
  1506     00D1  28D0               	goto	u61_27
  1507     00D2  0000               	nop
  1508     00D3                     i1l214:	
  1509                           ;slave_sensors.c: 89:                 break;
  1510                           
  1511     00D3  1683               	bsf	3,5	;RP0=1, select bank1
  1512     00D4  1303               	bcf	3,6	;RP1=0, select bank1
  1513     00D5  1814               	btfsc	20,0	;volatile
  1514     00D6  28D8               	goto	u48_21
  1515     00D7  28D9               	goto	u48_20
  1516     00D8                     u48_21:
  1517     00D8  28D3               	goto	i1l214
  1518     00D9                     u48_20:
  1519     00D9                     i1l212:
  1520                           
  1521                           ;slave_sensors.c: 92:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1522     00D9  1283               	bcf	3,5	;RP0=0, select bank0
  1523     00DA  1303               	bcf	3,6	;RP1=0, select bank0
  1524     00DB  118C               	bcf	12,3	;volatile
  1525     00DC                     i1l217:
  1526     00DC  0872               	movf	??_isr+2,w
  1527     00DD  008A               	movwf	10
  1528     00DE  0E71               	swapf	??_isr+1,w
  1529     00DF  0083               	movwf	3
  1530     00E0  0EFE               	swapf	btemp,f
  1531     00E1  0E7E               	swapf	btemp,w
  1532     00E2  0009               	retfie
  1533     00E3                     __end_of_isr:
  1534     007E                     btemp	set	126	;btemp
  1535     007E                     wtemp0	set	126
  1536                           
  1537                           	psect	intentry
  1538     0004                     __pintentry:	
  1539                           ;incstack = 0
  1540                           ; Regs used in _isr: [wreg]
  1541                           
  1542     0004                     interrupt_function:
  1543     007E                     saved_w	set	btemp
  1544     0004  00FE               	movwf	btemp
  1545     0005  0E03               	swapf	3,w
  1546     0006  00F1               	movwf	??_isr+1
  1547     0007  080A               	movf	10,w
  1548     0008  00F2               	movwf	??_isr+2
  1549     0009  120A  118A  2886   	ljmp	_isr
  1550                           
  1551                           	psect	config
  1552                           
  1553                           ;Config register CONFIG1 @ 0x2007
  1554                           ;	Oscillator Selection bits
  1555                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1556                           ;	Watchdog Timer Enable bit
  1557                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1558                           ;	Power-up Timer Enable bit
  1559                           ;	PWRTE = OFF, PWRT disabled
  1560                           ;	RE3/MCLR pin function select bit
  1561                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1562                           ;	Code Protection bit
  1563                           ;	CP = OFF, Program memory code protection is disabled
  1564                           ;	Data Code Protection bit
  1565                           ;	CPD = OFF, Data memory code protection is disabled
  1566                           ;	Brown Out Reset Selection bits
  1567                           ;	BOREN = OFF, BOR disabled
  1568                           ;	Internal External Switchover bit
  1569                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1570                           ;	Fail-Safe Clock Monitor Enabled bit
  1571                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1572                           ;	Low Voltage Programming Enable bit
  1573                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1574                           ;	In-Circuit Debugger Mode bit
  1575                           ;	DEBUG = 0x1, unprogrammed default
  1576     2007                     	org	8199
  1577     2007  20D4               	dw	8404
  1578                           
  1579                           ;Config register CONFIG2 @ 0x2008
  1580                           ;	Brown-out Reset Selection bit
  1581                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1582                           ;	Flash Program Memory Self Write Enable bits
  1583                           ;	WRT = OFF, Write protection off
  1584     2008                     	org	8200
  1585     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80      3       6
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_adc_init

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _setup->_adc_init

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     469
                                              1 BANK0      2     2      0
                    _adc_get_channel
                           _adc_read
                    _adc_sel_channel
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     447
                     _I2C_Slave_Init
                           _adc_init
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             6     3      3     425
                                              3 COMMON     5     2      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _adc_sel_channel                                      2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _adc_read                                             2     0      2       0
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _adc_get_channel                                      1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_get_channel
   _adc_read
   _adc_sel_channel
   _setup
     _I2C_Slave_Init
     _adc_init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      11       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       6       5        7.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      11      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Aug 24 17:26:47 2023

                     _BF 04A0                       l23 013E                       l32 0190  
                     l26 0179                       l35 0197                       l29 0183  
                    l145 0175                      l237 015B                      _CKP 00A4  
                    _GIE 005F                      _RA2 002A                      _RD3 0043  
                    _RD4 0044                      _RD5 0045                      _RD6 0046  
                    _RD7 0047                      u510 00ED                      u511 00E9  
                    u530 00F7                      u531 00F3                      u524 00F0  
                    u390 017D                      u550 0101                      u391 017C  
                    u551 00FD                      u544 00FA                      u570 002A  
                    u571 0029                      u564 0104                      u580 0042  
                    u581 0041                      _SCS 0478                      u597 007D  
                    _isr 0086                     l1161 015D                     l1321 00E6  
                   l1171 016F                     l1163 016B                     l1323 0105  
                   l1181 0185                     l1173 0172                     l1165 016C  
                   l1325 010A                     l1333 011D                     l1183 0191  
                   l1175 0176                     l1167 016D                     l1327 0111  
                   l1335 0133                     l1351 014A                     l1343 013F  
                   l1177 017D                     l1169 016E                     l1337 013D  
                   l1329 0118                     l1353 014B                     l1345 0143  
                   l1361 002A                     l1355 0155                     l1347 0144  
                   l1443 006C                     l1371 0051                     l1363 0031  
                   l1445 0125                     l1349 0148                     l1373 0058  
                   l1365 0038                     l1357 001B                     l1375 005B  
                   l1383 0064                     l1367 0042                     l1359 0020  
                   l1377 005E                     l1385 0077                     l1369 004B  
                   l1379 0061                     _ADFM 04FF                     ?_isr 0070  
                   _ADON 00F8                     _PEIE 005E                     _WCOL 00A7  
                   _D_nA 04A5                     _R_nW 04A2                     _main 001B  
                   btemp 007E                     start 000C   adc_sel_channel@channel 0074  
                  ??_isr 0070                    ?_main 0070                    _ANSEL 0188  
                  i1l212 00D9                    i1l214 00D3                    i1l208 00BA  
                  i1l209 00AA                    i1l217 00DC                    _VCFG0 04FC  
                  _VCFG1 04FD                    u40_20 008C                    u40_21 008B  
                  u41_20 0091                    u41_21 0090                    u42_20 0095  
                  u42_21 0094                    u43_20 00A0                    u43_21 009F  
                  u44_20 00A4                    u44_21 00A3                    u60_27 00B6  
                  u45_20 00B0                    u45_21 00AF                    u61_27 00D0  
                  u46_20 00BE                    u46_21 00BD                    u47_20 00C2  
                  u47_21 00C1                    u48_20 00D9                    u48_21 00D8  
                  _TRISA 0085                    _SSPIE 0463                    _SSPIF 0063  
                  _SSPOV 00A6                    _setup 013F                    pclath 000A  
       ?_adc_sel_channel 0070                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0086                   ??_main 0024  
                 _ADRESH 001E                   _ADRESL 009E                   ?_setup 0070  
                 _ANSELH 0189         __end_of_adc_init 013F         __end_of_adc_read 0184  
                 i1l1201 0086                   i1l1211 0098                   i1l1203 008C  
                 i1l1221 00A8                   i1l1213 0099                   i1l1205 0091  
                 i1l1231 00C6                   i1l1223 00A9                   i1l1215 009A  
                 i1l1207 0095                   i1l1233 00CD                   i1l1225 00B0  
                 i1l1217 00A0                   i1l1209 0097                   i1l1227 00BE  
                 i1l1219 00A4                   i1l1229 00C2                   _SSPADD 0093  
                 _TRISC3 043B                   _TRISC4 043C                   _SSPCON 0014  
                 _SSPBUF 0013                   saved_w 007E  __end_of__initialization 0017  
         __pcstackCOMMON 0070            __end_of_setup 015C                  ??_setup 0078  
  I2C_Slave_Init@address 0073               __pbssBANK0 0020               __pmaintext 001B  
             __pintentry 0004                ?_adc_init 0073                ?_adc_read 0073  
                _MQ2_val 0078                  _SSPCON2 0091                  _SSPSTAT 0094  
                _IR_sens 0020               ??_adc_init 0076               ??_adc_read 0075  
                __ptext1 013F                  __ptext2 00E3                  __ptext3 015C  
                __ptext4 0184                  __ptext5 0176                  __ptext6 0191  
                __ptext7 0086                  _discard 0022                  _request 0079  
   end_of_initialization 0017        ??_adc_get_channel 0073           _I2C_Slave_Init 015C  
              _PORTDbits 0008                _TRISCbits 0087   __end_of_I2C_Slave_Init 0176  
    start_initialization 000F              __end_of_isr 00E3          ?_I2C_Slave_Init 0070  
        adc_init@channel 0075        ??_adc_sel_channel 0073              __pbssCOMMON 0078  
              ___latbits 0002            __pcstackBANK0 0023            adc_init@clock 0074  
              adc_init@J 0023                adc_init@R 0073          _adc_get_channel 0191  
               _LM35_val 0021        interrupt_function 0004                _send_data 007A  
             _ADCON0bits 001F  __end_of_adc_get_channel 0198                 _adc_init 00E3  
               _adc_read 0176         ??_I2C_Slave_Init 0073          _adc_sel_channel 0184  
               intlevel1 0000               _OSCCONbits 008F         ?_adc_get_channel 0070  
            _SSPCON2bits 0091  __end_of_adc_sel_channel 0191  
