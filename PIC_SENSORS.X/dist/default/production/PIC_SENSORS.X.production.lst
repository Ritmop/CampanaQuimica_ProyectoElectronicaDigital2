

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Sep 01 16:07:04 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20     0000                     
    21                           ; Generated 22/03/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0000                     	;# 
    56     0001                     	;# 
    57     0002                     	;# 
    58     0003                     	;# 
    59     0004                     	;# 
    60     0005                     	;# 
    61     0006                     	;# 
    62     0007                     	;# 
    63     0008                     	;# 
    64     0009                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000D                     	;# 
    69     000E                     	;# 
    70     000E                     	;# 
    71     000F                     	;# 
    72     0010                     	;# 
    73     0011                     	;# 
    74     0012                     	;# 
    75     0013                     	;# 
    76     0014                     	;# 
    77     0015                     	;# 
    78     0015                     	;# 
    79     0016                     	;# 
    80     0017                     	;# 
    81     0018                     	;# 
    82     0019                     	;# 
    83     001A                     	;# 
    84     001B                     	;# 
    85     001B                     	;# 
    86     001C                     	;# 
    87     001D                     	;# 
    88     001E                     	;# 
    89     001F                     	;# 
    90     0081                     	;# 
    91     0085                     	;# 
    92     0086                     	;# 
    93     0087                     	;# 
    94     0088                     	;# 
    95     0089                     	;# 
    96     008C                     	;# 
    97     008D                     	;# 
    98     008E                     	;# 
    99     008F                     	;# 
   100     0090                     	;# 
   101     0091                     	;# 
   102     0092                     	;# 
   103     0093                     	;# 
   104     0093                     	;# 
   105     0093                     	;# 
   106     0094                     	;# 
   107     0095                     	;# 
   108     0096                     	;# 
   109     0097                     	;# 
   110     0098                     	;# 
   111     0099                     	;# 
   112     009A                     	;# 
   113     009B                     	;# 
   114     009C                     	;# 
   115     009D                     	;# 
   116     009E                     	;# 
   117     009F                     	;# 
   118     0105                     	;# 
   119     0107                     	;# 
   120     0108                     	;# 
   121     0109                     	;# 
   122     010C                     	;# 
   123     010C                     	;# 
   124     010D                     	;# 
   125     010E                     	;# 
   126     010F                     	;# 
   127     0185                     	;# 
   128     0187                     	;# 
   129     0188                     	;# 
   130     0189                     	;# 
   131     018C                     	;# 
   132     018D                     	;# 
   133     0000                     	;# 
   134     0001                     	;# 
   135     0002                     	;# 
   136     0003                     	;# 
   137     0004                     	;# 
   138     0005                     	;# 
   139     0006                     	;# 
   140     0007                     	;# 
   141     0008                     	;# 
   142     0009                     	;# 
   143     000A                     	;# 
   144     000B                     	;# 
   145     000C                     	;# 
   146     000D                     	;# 
   147     000E                     	;# 
   148     000E                     	;# 
   149     000F                     	;# 
   150     0010                     	;# 
   151     0011                     	;# 
   152     0012                     	;# 
   153     0013                     	;# 
   154     0014                     	;# 
   155     0015                     	;# 
   156     0015                     	;# 
   157     0016                     	;# 
   158     0017                     	;# 
   159     0018                     	;# 
   160     0019                     	;# 
   161     001A                     	;# 
   162     001B                     	;# 
   163     001B                     	;# 
   164     001C                     	;# 
   165     001D                     	;# 
   166     001E                     	;# 
   167     001F                     	;# 
   168     0081                     	;# 
   169     0085                     	;# 
   170     0086                     	;# 
   171     0087                     	;# 
   172     0088                     	;# 
   173     0089                     	;# 
   174     008C                     	;# 
   175     008D                     	;# 
   176     008E                     	;# 
   177     008F                     	;# 
   178     0090                     	;# 
   179     0091                     	;# 
   180     0092                     	;# 
   181     0093                     	;# 
   182     0093                     	;# 
   183     0093                     	;# 
   184     0094                     	;# 
   185     0095                     	;# 
   186     0096                     	;# 
   187     0097                     	;# 
   188     0098                     	;# 
   189     0099                     	;# 
   190     009A                     	;# 
   191     009B                     	;# 
   192     009C                     	;# 
   193     009D                     	;# 
   194     009E                     	;# 
   195     009F                     	;# 
   196     0105                     	;# 
   197     0107                     	;# 
   198     0108                     	;# 
   199     0109                     	;# 
   200     010C                     	;# 
   201     010C                     	;# 
   202     010D                     	;# 
   203     010E                     	;# 
   204     010F                     	;# 
   205     0185                     	;# 
   206     0187                     	;# 
   207     0188                     	;# 
   208     0189                     	;# 
   209     018C                     	;# 
   210     018D                     	;# 
   211     0000                     	;# 
   212     0001                     	;# 
   213     0002                     	;# 
   214     0003                     	;# 
   215     0004                     	;# 
   216     0005                     	;# 
   217     0006                     	;# 
   218     0007                     	;# 
   219     0008                     	;# 
   220     0009                     	;# 
   221     000A                     	;# 
   222     000B                     	;# 
   223     000C                     	;# 
   224     000D                     	;# 
   225     000E                     	;# 
   226     000E                     	;# 
   227     000F                     	;# 
   228     0010                     	;# 
   229     0011                     	;# 
   230     0012                     	;# 
   231     0013                     	;# 
   232     0014                     	;# 
   233     0015                     	;# 
   234     0015                     	;# 
   235     0016                     	;# 
   236     0017                     	;# 
   237     0018                     	;# 
   238     0019                     	;# 
   239     001A                     	;# 
   240     001B                     	;# 
   241     001B                     	;# 
   242     001C                     	;# 
   243     001D                     	;# 
   244     001E                     	;# 
   245     001F                     	;# 
   246     0081                     	;# 
   247     0085                     	;# 
   248     0086                     	;# 
   249     0087                     	;# 
   250     0088                     	;# 
   251     0089                     	;# 
   252     008C                     	;# 
   253     008D                     	;# 
   254     008E                     	;# 
   255     008F                     	;# 
   256     0090                     	;# 
   257     0091                     	;# 
   258     0092                     	;# 
   259     0093                     	;# 
   260     0093                     	;# 
   261     0093                     	;# 
   262     0094                     	;# 
   263     0095                     	;# 
   264     0096                     	;# 
   265     0097                     	;# 
   266     0098                     	;# 
   267     0099                     	;# 
   268     009A                     	;# 
   269     009B                     	;# 
   270     009C                     	;# 
   271     009D                     	;# 
   272     009E                     	;# 
   273     009F                     	;# 
   274     0105                     	;# 
   275     0107                     	;# 
   276     0108                     	;# 
   277     0109                     	;# 
   278     010C                     	;# 
   279     010C                     	;# 
   280     010D                     	;# 
   281     010E                     	;# 
   282     010F                     	;# 
   283     0185                     	;# 
   284     0187                     	;# 
   285     0188                     	;# 
   286     0189                     	;# 
   287     018C                     	;# 
   288     018D                     	;# 
   289     0000                     	;# 
   290     0001                     	;# 
   291     0002                     	;# 
   292     0003                     	;# 
   293     0004                     	;# 
   294     0005                     	;# 
   295     0006                     	;# 
   296     0007                     	;# 
   297     0008                     	;# 
   298     0009                     	;# 
   299     000A                     	;# 
   300     000B                     	;# 
   301     000C                     	;# 
   302     000D                     	;# 
   303     000E                     	;# 
   304     000E                     	;# 
   305     000F                     	;# 
   306     0010                     	;# 
   307     0011                     	;# 
   308     0012                     	;# 
   309     0013                     	;# 
   310     0014                     	;# 
   311     0015                     	;# 
   312     0015                     	;# 
   313     0016                     	;# 
   314     0017                     	;# 
   315     0018                     	;# 
   316     0019                     	;# 
   317     001A                     	;# 
   318     001B                     	;# 
   319     001B                     	;# 
   320     001C                     	;# 
   321     001D                     	;# 
   322     001E                     	;# 
   323     001F                     	;# 
   324     0081                     	;# 
   325     0085                     	;# 
   326     0086                     	;# 
   327     0087                     	;# 
   328     0088                     	;# 
   329     0089                     	;# 
   330     008C                     	;# 
   331     008D                     	;# 
   332     008E                     	;# 
   333     008F                     	;# 
   334     0090                     	;# 
   335     0091                     	;# 
   336     0092                     	;# 
   337     0093                     	;# 
   338     0093                     	;# 
   339     0093                     	;# 
   340     0094                     	;# 
   341     0095                     	;# 
   342     0096                     	;# 
   343     0097                     	;# 
   344     0098                     	;# 
   345     0099                     	;# 
   346     009A                     	;# 
   347     009B                     	;# 
   348     009C                     	;# 
   349     009D                     	;# 
   350     009E                     	;# 
   351     009F                     	;# 
   352     0105                     	;# 
   353     0107                     	;# 
   354     0108                     	;# 
   355     0109                     	;# 
   356     010C                     	;# 
   357     010C                     	;# 
   358     010D                     	;# 
   359     010E                     	;# 
   360     010F                     	;# 
   361     0185                     	;# 
   362     0187                     	;# 
   363     0188                     	;# 
   364     0189                     	;# 
   365     018C                     	;# 
   366     018D                     	;# 
   367     0000                     	;# 
   368     0001                     	;# 
   369     0002                     	;# 
   370     0003                     	;# 
   371     0004                     	;# 
   372     0005                     	;# 
   373     0006                     	;# 
   374     0007                     	;# 
   375     0008                     	;# 
   376     0009                     	;# 
   377     000A                     	;# 
   378     000B                     	;# 
   379     000C                     	;# 
   380     000D                     	;# 
   381     000E                     	;# 
   382     000E                     	;# 
   383     000F                     	;# 
   384     0010                     	;# 
   385     0011                     	;# 
   386     0012                     	;# 
   387     0013                     	;# 
   388     0014                     	;# 
   389     0015                     	;# 
   390     0015                     	;# 
   391     0016                     	;# 
   392     0017                     	;# 
   393     0018                     	;# 
   394     0019                     	;# 
   395     001A                     	;# 
   396     001B                     	;# 
   397     001B                     	;# 
   398     001C                     	;# 
   399     001D                     	;# 
   400     001E                     	;# 
   401     001F                     	;# 
   402     0081                     	;# 
   403     0085                     	;# 
   404     0086                     	;# 
   405     0087                     	;# 
   406     0088                     	;# 
   407     0089                     	;# 
   408     008C                     	;# 
   409     008D                     	;# 
   410     008E                     	;# 
   411     008F                     	;# 
   412     0090                     	;# 
   413     0091                     	;# 
   414     0092                     	;# 
   415     0093                     	;# 
   416     0093                     	;# 
   417     0093                     	;# 
   418     0094                     	;# 
   419     0095                     	;# 
   420     0096                     	;# 
   421     0097                     	;# 
   422     0098                     	;# 
   423     0099                     	;# 
   424     009A                     	;# 
   425     009B                     	;# 
   426     009C                     	;# 
   427     009D                     	;# 
   428     009E                     	;# 
   429     009F                     	;# 
   430     0105                     	;# 
   431     0107                     	;# 
   432     0108                     	;# 
   433     0109                     	;# 
   434     010C                     	;# 
   435     010C                     	;# 
   436     010D                     	;# 
   437     010E                     	;# 
   438     010F                     	;# 
   439     0185                     	;# 
   440     0187                     	;# 
   441     0188                     	;# 
   442     0189                     	;# 
   443     018C                     	;# 
   444     018D                     	;# 
   445     0013                     _SSPBUF	set	19
   446     0014                     _SSPCON	set	20
   447     0008                     _PORTDbits	set	8
   448     001E                     _ADRESH	set	30
   449     001F                     _ADCON0bits	set	31
   450     00A7                     _WCOL	set	167
   451     00A6                     _SSPOV	set	166
   452     00A4                     _CKP	set	164
   453     0063                     _SSPIF	set	99
   454     005E                     _PEIE	set	94
   455     005F                     _GIE	set	95
   456     0043                     _RD3	set	67
   457     0047                     _RD7	set	71
   458     0046                     _RD6	set	70
   459     0045                     _RD5	set	69
   460     0044                     _RD4	set	68
   461     00F8                     _ADON	set	248
   462     008F                     _OSCCONbits	set	143
   463     0085                     _TRISA	set	133
   464     0091                     _SSPCON2bits	set	145
   465     0087                     _TRISCbits	set	135
   466     0094                     _SSPSTAT	set	148
   467     0093                     _SSPADD	set	147
   468     0091                     _SSPCON2	set	145
   469     009E                     _ADRESL	set	158
   470     0478                     _SCS	set	1144
   471     04A0                     _BF	set	1184
   472     04A2                     _R_nW	set	1186
   473     04A5                     _D_nA	set	1189
   474     0463                     _SSPIE	set	1123
   475     043C                     _TRISC4	set	1084
   476     043B                     _TRISC3	set	1083
   477     04FD                     _VCFG1	set	1277
   478     04FC                     _VCFG0	set	1276
   479     04FF                     _ADFM	set	1279
   480     0189                     _ANSELH	set	393
   481     0188                     _ANSEL	set	392
   482                           
   483                           	psect	cinit
   484     000F                     start_initialization:	
   485                           ; #config settings
   486                           
   487     000F                     __initialization:
   488                           
   489                           ; Clear objects allocated to COMMON
   490     000F  01F8               	clrf	__pbssCOMMON& (0+127)
   491     0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   492     0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   493                           
   494                           ; Clear objects allocated to BANK0
   495     0012  1283               	bcf	3,5	;RP0=0, select bank0
   496     0013  1303               	bcf	3,6	;RP1=0, select bank0
   497     0014  01A3               	clrf	__pbssBANK0& (0+127)
   498     0015  01A4               	clrf	(__pbssBANK0+1)& (0+127)
   499     0016                     end_of_initialization:	
   500                           ;End of C runtime variable initialization code
   501                           
   502     0016                     __end_of__initialization:
   503     0016  0183               	clrf	3
   504     0017  120A  118A  281A   	ljmp	_main	;jump to C main() function
   505                           
   506                           	psect	bssCOMMON
   507     0078                     __pbssCOMMON:
   508     0078                     _MQ2_val:
   509     0078                     	ds	1
   510     0079                     _request:
   511     0079                     	ds	1
   512     007A                     _send_data:
   513     007A                     	ds	1
   514                           
   515                           	psect	bssBANK0
   516     0023                     __pbssBANK0:
   517     0023                     _LM35_val:
   518     0023                     	ds	1
   519     0024                     _discard:
   520     0024                     	ds	1
   521                           
   522                           	psect	cstackCOMMON
   523     0070                     __pcstackCOMMON:
   524     0070                     ?_setup:
   525     0070                     ?_adc_sel_channel:	
   526                           ; 1 bytes @ 0x0
   527                           
   528     0070                     ?_adc_get_channel:	
   529                           ; 1 bytes @ 0x0
   530                           
   531     0070                     ?_I2C_Slave_Init:	
   532                           ; 1 bytes @ 0x0
   533                           
   534     0070                     ?_isr:	
   535                           ; 1 bytes @ 0x0
   536                           
   537     0070                     ??_isr:	
   538                           ; 1 bytes @ 0x0
   539                           
   540     0070                     ?_main:	
   541                           ; 1 bytes @ 0x0
   542                           
   543                           
   544                           ; 2 bytes @ 0x0
   545     0070                     	ds	3
   546     0073                     ?_adc_init:
   547     0073                     ??_adc_sel_channel:	
   548                           ; 1 bytes @ 0x3
   549                           
   550     0073                     ??_adc_get_channel:	
   551                           ; 1 bytes @ 0x3
   552                           
   553     0073                     ??_I2C_Slave_Init:	
   554                           ; 1 bytes @ 0x3
   555                           
   556     0073                     ?_adc_read:	
   557                           ; 1 bytes @ 0x3
   558                           
   559     0073                     adc_init@R:	
   560                           ; 2 bytes @ 0x3
   561                           
   562     0073                     I2C_Slave_Init@address:	
   563                           ; 1 bytes @ 0x3
   564                           
   565                           
   566                           ; 1 bytes @ 0x3
   567     0073                     	ds	1
   568     0074                     adc_init@clock:
   569     0074                     adc_sel_channel@channel:	
   570                           ; 1 bytes @ 0x4
   571                           
   572                           
   573                           ; 1 bytes @ 0x4
   574     0074                     	ds	1
   575     0075                     ??_adc_read:
   576     0075                     adc_init@channel:	
   577                           ; 1 bytes @ 0x5
   578                           
   579                           
   580                           ; 1 bytes @ 0x5
   581     0075                     	ds	1
   582     0076                     ??_adc_init:
   583                           
   584                           ; 1 bytes @ 0x6
   585     0076                     	ds	2
   586     0078                     ??_setup:
   587                           
   588                           	psect	cstackBANK0
   589     0020                     __pcstackBANK0:	
   590                           ; 1 bytes @ 0x8
   591                           
   592     0020                     adc_init@J:
   593                           
   594                           ; 1 bytes @ 0x0
   595     0020                     	ds	1
   596     0021                     ??_main:
   597                           
   598                           ; 1 bytes @ 0x1
   599     0021                     	ds	2
   600                           
   601                           	psect	maintext
   602     001A                     __pmaintext:	
   603 ;;
   604 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   605 ;;
   606 ;; *************** function _main *****************
   607 ;; Defined at:
   608 ;;		line 100 in file "slave_sensors.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;		None
   611 ;; Auto vars:     Size  Location     Type
   612 ;;		None
   613 ;; Return value:  Size  Location     Type
   614 ;;                  2  217[None  ] int 
   615 ;; Registers used:
   616 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   617 ;; Tracked objects:
   618 ;;		On entry : B00/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   622 ;;      Params:         0       0       0       0       0
   623 ;;      Locals:         0       0       0       0       0
   624 ;;      Temps:          0       2       0       0       0
   625 ;;      Totals:         0       2       0       0       0
   626 ;;Total ram usage:        2 bytes
   627 ;; Hardware stack levels required when called: 3
   628 ;; This function calls:
   629 ;;		_adc_get_channel
   630 ;;		_adc_read
   631 ;;		_adc_sel_channel
   632 ;;		_setup
   633 ;; This function is called by:
   634 ;;		Startup code after reset
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638     001A                     _main:	
   639                           ;psect for function _main
   640                           
   641     001A                     l1320:	
   642                           ;incstack = 0
   643                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   644                           
   645                           
   646                           ;slave_sensors.c: 101: 
   647     001A  120A  118A  2134  120A  118A  	fcall	_setup
   648     001F                     l1322:
   649     001F  120A  118A  2186  120A  118A  	fcall	_adc_get_channel
   650     0024  3A00               	xorlw	0
   651     0025  1D03               	skipz
   652     0026  2828               	goto	u571
   653     0027  2829               	goto	u570
   654     0028                     u571:
   655     0028  2837               	goto	l1328
   656     0029                     u570:
   657     0029                     l1324:
   658     0029  120A  118A  216B  120A  118A  	fcall	_adc_read
   659     002E  0874               	movf	?_adc_read+1,w
   660     002F  00F8               	movwf	_MQ2_val
   661     0030                     l1326:
   662     0030  3001               	movlw	1
   663     0031  120A  118A  2179  120A  118A  	fcall	_adc_sel_channel
   664     0036  285A               	goto	l1342
   665     0037                     l1328:
   666     0037  120A  118A  2186  120A  118A  	fcall	_adc_get_channel
   667     003C  3A01               	xorlw	1
   668     003D  1D03               	skipz
   669     003E  2840               	goto	u581
   670     003F  2841               	goto	u580
   671     0040                     u581:
   672     0040  285A               	goto	l1342
   673     0041                     u580:
   674     0041                     l1330:
   675     0041  120A  118A  216B  120A  118A  	fcall	_adc_read
   676     0046  0874               	movf	?_adc_read+1,w
   677     0047  1283               	bcf	3,5	;RP0=0, select bank0
   678     0048  1303               	bcf	3,6	;RP1=0, select bank0
   679     0049  00A3               	movwf	_LM35_val
   680     004A                     l1332:
   681     004A  3000               	movlw	0
   682     004B  120A  118A  2179  120A  118A  	fcall	_adc_sel_channel
   683     0050  285A               	goto	l1342
   684     0051                     l1334:
   685     0051  0878               	movf	_MQ2_val,w
   686     0052  00FA               	movwf	_send_data
   687     0053  286C               	goto	l1344
   688     0054                     l1336:
   689     0054  0823               	movf	_LM35_val,w
   690     0055  00FA               	movwf	_send_data
   691     0056  286C               	goto	l1344
   692     0057                     l1338:
   693     0057  30FF               	movlw	255
   694     0058  00FA               	movwf	_send_data
   695     0059  286C               	goto	l1344
   696     005A                     l1342:
   697     005A  0879               	movf	_request,w
   698     005B  1283               	bcf	3,5	;RP0=0, select bank0
   699     005C  1303               	bcf	3,6	;RP1=0, select bank0
   700     005D  00A1               	movwf	??_main
   701     005E  01A2               	clrf	??_main+1
   702                           
   703                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   704                           ; Switch size 1, requested type "simple"
   705                           ; Number of cases is 1, Range of values is 0 to 0
   706                           ; switch strategies available:
   707                           ; Name         Instructions Cycles
   708                           ; simple_byte            4     3 (average)
   709                           ; direct_byte           11     8 (fixed)
   710                           ; jumptable            260     6 (fixed)
   711                           ;	Chosen strategy is simple_byte
   712     005F  0822               	movf	??_main+1,w
   713     0060  3A00               	xorlw	0	; case 0
   714     0061  1903               	skipnz
   715     0062  2864               	goto	l1402
   716     0063  2857               	goto	l1338
   717     0064                     l1402:
   718                           
   719                           ; Switch size 1, requested type "simple"
   720                           ; Number of cases is 2, Range of values is 71 to 84
   721                           ; switch strategies available:
   722                           ; Name         Instructions Cycles
   723                           ; simple_byte            7     4 (average)
   724                           ; direct_byte           53    11 (fixed)
   725                           ; jumptable            263     9 (fixed)
   726                           ;	Chosen strategy is simple_byte
   727     0064  0821               	movf	??_main,w
   728     0065  3A47               	xorlw	71	; case 71
   729     0066  1903               	skipnz
   730     0067  2851               	goto	l1334
   731     0068  3A13               	xorlw	19	; case 84
   732     0069  1903               	skipnz
   733     006A  2854               	goto	l1336
   734     006B  2857               	goto	l1338
   735     006C                     l1344:
   736     006C  301A               	movlw	26
   737     006D  1283               	bcf	3,5	;RP0=0, select bank0
   738     006E  1303               	bcf	3,6	;RP1=0, select bank0
   739     006F  00A2               	movwf	??_main+1
   740     0070  30F7               	movlw	247
   741     0071  00A1               	movwf	??_main
   742     0072                     u597:
   743     0072  0BA1               	decfsz	??_main,f
   744     0073  2872               	goto	u597
   745     0074  0BA2               	decfsz	??_main+1,f
   746     0075  2872               	goto	u597
   747     0076  2877               	nop2
   748     0077  281F               	goto	l1322
   749     0078  120A  118A  280C   	ljmp	start
   750     007B                     __end_of_main:
   751                           
   752                           	psect	text1
   753     0134                     __ptext1:	
   754 ;; *************** function _setup *****************
   755 ;; Defined at:
   756 ;;		line 130 in file "slave_sensors.c"
   757 ;; Parameters:    Size  Location     Type
   758 ;;		None
   759 ;; Auto vars:     Size  Location     Type
   760 ;;		None
   761 ;; Return value:  Size  Location     Type
   762 ;;                  1    wreg      void 
   763 ;; Registers used:
   764 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   765 ;; Tracked objects:
   766 ;;		On entry : 0/0
   767 ;;		On exit  : 0/0
   768 ;;		Unchanged: 0/0
   769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   770 ;;      Params:         0       0       0       0       0
   771 ;;      Locals:         0       0       0       0       0
   772 ;;      Temps:          0       0       0       0       0
   773 ;;      Totals:         0       0       0       0       0
   774 ;;Total ram usage:        0 bytes
   775 ;; Hardware stack levels used: 1
   776 ;; Hardware stack levels required when called: 2
   777 ;; This function calls:
   778 ;;		_I2C_Slave_Init
   779 ;;		_adc_init
   780 ;; This function is called by:
   781 ;;		_main
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785     0134                     _setup:	
   786                           ;psect for function _setup
   787                           
   788     0134                     l1306:	
   789                           ;incstack = 0
   790                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   791                           
   792     0134  3003               	movlw	3
   793     0135  1683               	bsf	3,5	;RP0=1, select bank3
   794     0136  1703               	bsf	3,6	;RP1=1, select bank3
   795     0137  0088               	movwf	8	;volatile
   796     0138                     l1308:
   797     0138  0189               	clrf	9	;volatile
   798     0139                     l1310:
   799     0139  30FF               	movlw	255
   800     013A  1683               	bsf	3,5	;RP0=1, select bank1
   801     013B  1303               	bcf	3,6	;RP1=0, select bank1
   802     013C  0085               	movwf	5	;volatile
   803     013D                     l1312:
   804     013D  3070               	movlw	112
   805     013E  048F               	iorwf	15,f	;volatile
   806     013F                     l1314:
   807     013F  140F               	bsf	15,0	;volatile
   808     0140                     l1316:
   809     0140  01F3               	clrf	adc_init@R
   810     0141  3008               	movlw	8
   811     0142  00F4               	movwf	adc_init@clock
   812     0143  01F5               	clrf	adc_init@channel
   813     0144  3000               	movlw	0
   814     0145  120A  118A  20D8  120A  118A  	fcall	_adc_init
   815     014A                     l1318:
   816     014A  3020               	movlw	32
   817     014B  120A  118A  2151  120A  118A  	fcall	_I2C_Slave_Init
   818     0150                     l232:
   819     0150  0008               	return
   820     0151                     __end_of_setup:
   821                           
   822                           	psect	text2
   823     00D8                     __ptext2:	
   824 ;; *************** function _adc_init *****************
   825 ;; Defined at:
   826 ;;		line 4 in file "ADC_lib.c"
   827 ;; Parameters:    Size  Location     Type
   828 ;;  J               1    wreg     unsigned char 
   829 ;;  R               1    3[COMMON] unsigned char 
   830 ;;  clock           1    4[COMMON] unsigned char 
   831 ;;  channel         1    5[COMMON] unsigned char 
   832 ;; Auto vars:     Size  Location     Type
   833 ;;  J               1    0[BANK0 ] unsigned char 
   834 ;; Return value:  Size  Location     Type
   835 ;;                  1    wreg      void 
   836 ;; Registers used:
   837 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   838 ;; Tracked objects:
   839 ;;		On entry : 0/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   843 ;;      Params:         3       0       0       0       0
   844 ;;      Locals:         0       1       0       0       0
   845 ;;      Temps:          2       0       0       0       0
   846 ;;      Totals:         5       1       0       0       0
   847 ;;Total ram usage:        6 bytes
   848 ;; Hardware stack levels used: 1
   849 ;; Hardware stack levels required when called: 1
   850 ;; This function calls:
   851 ;;		Nothing
   852 ;; This function is called by:
   853 ;;		_setup
   854 ;; This function uses a non-reentrant model
   855 ;;
   856                           
   857     00D8                     _adc_init:	
   858                           ;psect for function _adc_init
   859                           
   860                           
   861                           ;incstack = 0
   862                           ; Regs used in _adc_init: [wreg-fsr0h+status,2+status,0]
   863                           ;adc_init@J stored from wreg
   864     00D8  1283               	bcf	3,5	;RP0=0, select bank0
   865     00D9  1303               	bcf	3,6	;RP1=0, select bank0
   866     00DA  00A0               	movwf	adc_init@J
   867     00DB                     l1284:
   868                           
   869                           ;ADC_lib.c: 13:     ADFM = J;
   870     00DB  1820               	btfsc	adc_init@J,0
   871     00DC  28DE               	goto	u511
   872     00DD  28E2               	goto	u510
   873     00DE                     u511:
   874     00DE  1683               	bsf	3,5	;RP0=1, select bank1
   875     00DF  1303               	bcf	3,6	;RP1=0, select bank1
   876     00E0  179F               	bsf	31,7	;volatile
   877     00E1  28E5               	goto	u524
   878     00E2                     u510:
   879     00E2  1683               	bsf	3,5	;RP0=1, select bank1
   880     00E3  1303               	bcf	3,6	;RP1=0, select bank1
   881     00E4  139F               	bcf	31,7	;volatile
   882     00E5                     u524:
   883                           
   884                           ;ADC_lib.c: 14:     VCFG0 = R;
   885     00E5  1873               	btfsc	adc_init@R,0
   886     00E6  28E8               	goto	u531
   887     00E7  28EC               	goto	u530
   888     00E8                     u531:
   889     00E8  1683               	bsf	3,5	;RP0=1, select bank1
   890     00E9  1303               	bcf	3,6	;RP1=0, select bank1
   891     00EA  161F               	bsf	31,4	;volatile
   892     00EB  28EF               	goto	u544
   893     00EC                     u530:
   894     00EC  1683               	bsf	3,5	;RP0=1, select bank1
   895     00ED  1303               	bcf	3,6	;RP1=0, select bank1
   896     00EE  121F               	bcf	31,4	;volatile
   897     00EF                     u544:
   898                           
   899                           ;ADC_lib.c: 15:     VCFG1 = R;
   900     00EF  1873               	btfsc	adc_init@R,0
   901     00F0  28F2               	goto	u551
   902     00F1  28F6               	goto	u550
   903     00F2                     u551:
   904     00F2  1683               	bsf	3,5	;RP0=1, select bank1
   905     00F3  1303               	bcf	3,6	;RP1=0, select bank1
   906     00F4  169F               	bsf	31,5	;volatile
   907     00F5  28F9               	goto	u564
   908     00F6                     u550:
   909     00F6  1683               	bsf	3,5	;RP0=1, select bank1
   910     00F7  1303               	bcf	3,6	;RP1=0, select bank1
   911     00F8  129F               	bcf	31,5	;volatile
   912     00F9                     u564:
   913                           
   914                           ;ADC_lib.c: 17:     switch(clock){
   915     00F9  2912               	goto	l1296
   916     00FA                     l1286:
   917                           
   918                           ;ADC_lib.c: 19:             ADCON0bits.ADCS = 0b00;
   919     00FA  303F               	movlw	-193
   920     00FB  1283               	bcf	3,5	;RP0=0, select bank0
   921     00FC  1303               	bcf	3,6	;RP1=0, select bank0
   922     00FD  059F               	andwf	31,f	;volatile
   923                           
   924                           ;ADC_lib.c: 21:             break;
   925     00FE  2928               	goto	l1298
   926     00FF                     l1288:
   927                           
   928                           ;ADC_lib.c: 23:             ADCON0bits.ADCS = 0b01;
   929     00FF  1283               	bcf	3,5	;RP0=0, select bank0
   930     0100  1303               	bcf	3,6	;RP1=0, select bank0
   931     0101  081F               	movf	31,w	;volatile
   932     0102  393F               	andlw	-193
   933     0103  3840               	iorlw	64
   934     0104  009F               	movwf	31	;volatile
   935                           
   936                           ;ADC_lib.c: 25:             break;
   937     0105  2928               	goto	l1298
   938     0106                     l1290:
   939                           
   940                           ;ADC_lib.c: 27:             ADCON0bits.ADCS = 0b10;
   941     0106  1283               	bcf	3,5	;RP0=0, select bank0
   942     0107  1303               	bcf	3,6	;RP1=0, select bank0
   943     0108  081F               	movf	31,w	;volatile
   944     0109  393F               	andlw	-193
   945     010A  3880               	iorlw	128
   946     010B  009F               	movwf	31	;volatile
   947                           
   948                           ;ADC_lib.c: 29:             break;
   949     010C  2928               	goto	l1298
   950     010D                     l1292:
   951                           
   952                           ;ADC_lib.c: 31:             ADCON0bits.ADCS = 0b11;
   953     010D  30C0               	movlw	192
   954     010E  1283               	bcf	3,5	;RP0=0, select bank0
   955     010F  1303               	bcf	3,6	;RP1=0, select bank0
   956     0110  049F               	iorwf	31,f	;volatile
   957                           
   958                           ;ADC_lib.c: 33:             break;
   959     0111  2928               	goto	l1298
   960     0112                     l1296:
   961     0112  0874               	movf	adc_init@clock,w
   962     0113  00F6               	movwf	??_adc_init
   963     0114  01F7               	clrf	??_adc_init+1
   964                           
   965                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   966                           ; Switch size 1, requested type "simple"
   967                           ; Number of cases is 1, Range of values is 0 to 0
   968                           ; switch strategies available:
   969                           ; Name         Instructions Cycles
   970                           ; simple_byte            4     3 (average)
   971                           ; direct_byte           11     8 (fixed)
   972                           ; jumptable            260     6 (fixed)
   973                           ;	Chosen strategy is simple_byte
   974     0115  0877               	movf	??_adc_init+1,w
   975     0116  3A00               	xorlw	0	; case 0
   976     0117  1903               	skipnz
   977     0118  291A               	goto	l1404
   978     0119  2928               	goto	l1298
   979     011A                     l1404:
   980                           
   981                           ; Switch size 1, requested type "simple"
   982                           ; Number of cases is 4, Range of values is 1 to 20
   983                           ; switch strategies available:
   984                           ; Name         Instructions Cycles
   985                           ; simple_byte           13     7 (average)
   986                           ; direct_byte           71    11 (fixed)
   987                           ; jumptable            263     9 (fixed)
   988                           ;	Chosen strategy is simple_byte
   989     011A  0876               	movf	??_adc_init,w
   990     011B  3A01               	xorlw	1	; case 1
   991     011C  1903               	skipnz
   992     011D  28FA               	goto	l1286
   993     011E  3A05               	xorlw	5	; case 4
   994     011F  1903               	skipnz
   995     0120  28FF               	goto	l1288
   996     0121  3A0C               	xorlw	12	; case 8
   997     0122  1903               	skipnz
   998     0123  2906               	goto	l1290
   999     0124  3A1C               	xorlw	28	; case 20
  1000     0125  1903               	skipnz
  1001     0126  290D               	goto	l1292
  1002     0127  2928               	goto	l1298
  1003     0128                     l1298:
  1004                           
  1005                           ;ADC_lib.c: 35:     ADCON0bits.CHS = channel;
  1006     0128  0875               	movf	adc_init@channel,w
  1007     0129  00F6               	movwf	??_adc_init
  1008     012A  0DF6               	rlf	??_adc_init,f
  1009     012B  0DF6               	rlf	??_adc_init,f
  1010     012C  1283               	bcf	3,5	;RP0=0, select bank0
  1011     012D  081F               	movf	31,w	;volatile
  1012     012E  0676               	xorwf	??_adc_init,w
  1013     012F  39C3               	andlw	-61
  1014     0130  0676               	xorwf	??_adc_init,w
  1015     0131  009F               	movwf	31	;volatile
  1016     0132                     l1300:
  1017                           
  1018                           ;ADC_lib.c: 38:     ADON = 1;
  1019     0132  141F               	bsf	31,0	;volatile
  1020     0133                     l23:
  1021     0133  0008               	return
  1022     0134                     __end_of_adc_init:
  1023                           
  1024                           	psect	text3
  1025     0151                     __ptext3:	
  1026 ;; *************** function _I2C_Slave_Init *****************
  1027 ;; Defined at:
  1028 ;;		line 93 in file "../PIC_MASTER.X/I2C.c"
  1029 ;; Parameters:    Size  Location     Type
  1030 ;;  address         1    wreg     unsigned char 
  1031 ;; Auto vars:     Size  Location     Type
  1032 ;;  address         1    3[COMMON] unsigned char 
  1033 ;; Return value:  Size  Location     Type
  1034 ;;                  1    wreg      void 
  1035 ;; Registers used:
  1036 ;;		wreg
  1037 ;; Tracked objects:
  1038 ;;		On entry : 0/0
  1039 ;;		On exit  : 0/0
  1040 ;;		Unchanged: 0/0
  1041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1042 ;;      Params:         0       0       0       0       0
  1043 ;;      Locals:         1       0       0       0       0
  1044 ;;      Temps:          0       0       0       0       0
  1045 ;;      Totals:         1       0       0       0       0
  1046 ;;Total ram usage:        1 bytes
  1047 ;; Hardware stack levels used: 1
  1048 ;; Hardware stack levels required when called: 1
  1049 ;; This function calls:
  1050 ;;		Nothing
  1051 ;; This function is called by:
  1052 ;;		_setup
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056     0151                     _I2C_Slave_Init:	
  1057                           ;psect for function _I2C_Slave_Init
  1058                           
  1059                           
  1060                           ;incstack = 0
  1061                           ; Regs used in _I2C_Slave_Init: [wreg]
  1062                           ;I2C_Slave_Init@address stored from wreg
  1063     0151  00F3               	movwf	I2C_Slave_Init@address
  1064     0152                     l1140:
  1065                           
  1066                           ;../PIC_MASTER.X/I2C.c: 93: void I2C_Slave_Init(uint8_t address);../PIC_MASTER.X/I2C.c: 
      +                          94: {;../PIC_MASTER.X/I2C.c: 95:     SSPADD = address;
  1067     0152  0873               	movf	I2C_Slave_Init@address,w
  1068     0153  1683               	bsf	3,5	;RP0=1, select bank1
  1069     0154  1303               	bcf	3,6	;RP1=0, select bank1
  1070     0155  0093               	movwf	19	;volatile
  1071                           
  1072                           ;../PIC_MASTER.X/I2C.c: 96:     SSPCON = 0x36;
  1073     0156  3036               	movlw	54
  1074     0157  1283               	bcf	3,5	;RP0=0, select bank0
  1075     0158  1303               	bcf	3,6	;RP1=0, select bank0
  1076     0159  0094               	movwf	20	;volatile
  1077                           
  1078                           ;../PIC_MASTER.X/I2C.c: 97:     SSPSTAT = 0x80;
  1079     015A  3080               	movlw	128
  1080     015B  1683               	bsf	3,5	;RP0=1, select bank1
  1081     015C  1303               	bcf	3,6	;RP1=0, select bank1
  1082     015D  0094               	movwf	20	;volatile
  1083                           
  1084                           ;../PIC_MASTER.X/I2C.c: 98:     SSPCON2 = 0x01;
  1085     015E  3001               	movlw	1
  1086     015F  0091               	movwf	17	;volatile
  1087     0160                     l1142:
  1088                           
  1089                           ;../PIC_MASTER.X/I2C.c: 99:     TRISC3 = 1;
  1090     0160  1587               	bsf	7,3	;volatile
  1091     0161                     l1144:
  1092                           
  1093                           ;../PIC_MASTER.X/I2C.c: 100:     TRISC4 = 1;
  1094     0161  1607               	bsf	7,4	;volatile
  1095     0162                     l1146:
  1096                           
  1097                           ;../PIC_MASTER.X/I2C.c: 101:     GIE = 1;
  1098     0162  178B               	bsf	11,7	;volatile
  1099     0163                     l1148:
  1100                           
  1101                           ;../PIC_MASTER.X/I2C.c: 102:     PEIE = 1;
  1102     0163  170B               	bsf	11,6	;volatile
  1103     0164                     l1150:
  1104                           
  1105                           ;../PIC_MASTER.X/I2C.c: 103:     SSPIF = 0;
  1106     0164  1283               	bcf	3,5	;RP0=0, select bank0
  1107     0165  1303               	bcf	3,6	;RP1=0, select bank0
  1108     0166  118C               	bcf	12,3	;volatile
  1109     0167                     l1152:
  1110                           
  1111                           ;../PIC_MASTER.X/I2C.c: 104:     SSPIE = 1;
  1112     0167  1683               	bsf	3,5	;RP0=1, select bank1
  1113     0168  1303               	bcf	3,6	;RP1=0, select bank1
  1114     0169  158C               	bsf	12,3	;volatile
  1115     016A                     l145:
  1116     016A  0008               	return
  1117     016B                     __end_of_I2C_Slave_Init:
  1118                           
  1119                           	psect	text4
  1120     0179                     __ptext4:	
  1121 ;; *************** function _adc_sel_channel *****************
  1122 ;; Defined at:
  1123 ;;		line 49 in file "ADC_lib.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;  channel         1    wreg     unsigned char 
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;  channel         1    4[COMMON] unsigned char 
  1128 ;; Return value:  Size  Location     Type
  1129 ;;                  1    wreg      void 
  1130 ;; Registers used:
  1131 ;;		wreg, status,2, status,0
  1132 ;; Tracked objects:
  1133 ;;		On entry : 0/0
  1134 ;;		On exit  : 0/0
  1135 ;;		Unchanged: 0/0
  1136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1137 ;;      Params:         0       0       0       0       0
  1138 ;;      Locals:         1       0       0       0       0
  1139 ;;      Temps:          1       0       0       0       0
  1140 ;;      Totals:         2       0       0       0       0
  1141 ;;Total ram usage:        2 bytes
  1142 ;; Hardware stack levels used: 1
  1143 ;; Hardware stack levels required when called: 1
  1144 ;; This function calls:
  1145 ;;		Nothing
  1146 ;; This function is called by:
  1147 ;;		_main
  1148 ;; This function uses a non-reentrant model
  1149 ;;
  1150                           
  1151     0179                     _adc_sel_channel:	
  1152                           ;psect for function _adc_sel_channel
  1153                           
  1154                           
  1155                           ;incstack = 0
  1156                           ; Regs used in _adc_sel_channel: [wreg+status,2+status,0]
  1157                           ;adc_sel_channel@channel stored from wreg
  1158     0179  00F4               	movwf	adc_sel_channel@channel
  1159     017A                     l1160:
  1160                           
  1161                           ;ADC_lib.c: 50:     ADCON0bits.CHS = channel;
  1162     017A  0874               	movf	adc_sel_channel@channel,w
  1163     017B  00F3               	movwf	??_adc_sel_channel
  1164     017C  0DF3               	rlf	??_adc_sel_channel,f
  1165     017D  0DF3               	rlf	??_adc_sel_channel,f
  1166     017E  1283               	bcf	3,5	;RP0=0, select bank0
  1167     017F  1303               	bcf	3,6	;RP1=0, select bank0
  1168     0180  081F               	movf	31,w	;volatile
  1169     0181  0673               	xorwf	??_adc_sel_channel,w
  1170     0182  39C3               	andlw	-61
  1171     0183  0673               	xorwf	??_adc_sel_channel,w
  1172     0184  009F               	movwf	31	;volatile
  1173     0185                     l32:
  1174     0185  0008               	return
  1175     0186                     __end_of_adc_sel_channel:
  1176                           
  1177                           	psect	text5
  1178     016B                     __ptext5:	
  1179 ;; *************** function _adc_read *****************
  1180 ;; Defined at:
  1181 ;;		line 42 in file "ADC_lib.c"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;		None
  1184 ;; Auto vars:     Size  Location     Type
  1185 ;;		None
  1186 ;; Return value:  Size  Location     Type
  1187 ;;                  2    3[COMMON] unsigned int 
  1188 ;; Registers used:
  1189 ;;		wreg
  1190 ;; Tracked objects:
  1191 ;;		On entry : 0/0
  1192 ;;		On exit  : 0/0
  1193 ;;		Unchanged: 0/0
  1194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1195 ;;      Params:         2       0       0       0       0
  1196 ;;      Locals:         0       0       0       0       0
  1197 ;;      Temps:          0       0       0       0       0
  1198 ;;      Totals:         2       0       0       0       0
  1199 ;;Total ram usage:        2 bytes
  1200 ;; Hardware stack levels used: 1
  1201 ;; Hardware stack levels required when called: 1
  1202 ;; This function calls:
  1203 ;;		Nothing
  1204 ;; This function is called by:
  1205 ;;		_main
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209     016B                     _adc_read:	
  1210                           ;psect for function _adc_read
  1211                           
  1212     016B                     l1154:	
  1213                           ;incstack = 0
  1214                           ; Regs used in _adc_read: [wreg]
  1215                           
  1216                           
  1217                           ;ADC_lib.c: 43:     ADCON0bits.GO = 1;
  1218     016B  1283               	bcf	3,5	;RP0=0, select bank0
  1219     016C  1303               	bcf	3,6	;RP1=0, select bank0
  1220     016D  149F               	bsf	31,1	;volatile
  1221     016E                     l26:	
  1222                           ;ADC_lib.c: 44:     while(ADCON0bits.GO);
  1223                           
  1224     016E  189F               	btfsc	31,1	;volatile
  1225     016F  2971               	goto	u391
  1226     0170  2972               	goto	u390
  1227     0171                     u391:
  1228     0171  296E               	goto	l26
  1229     0172                     u390:
  1230     0172                     l1156:
  1231                           
  1232                           ;ADC_lib.c: 45:     return (ADRESH<<8) | ADRESL;
  1233     0172  081E               	movf	30,w	;volatile
  1234     0173  00F4               	movwf	?_adc_read+1
  1235     0174  1683               	bsf	3,5	;RP0=1, select bank1
  1236     0175  1303               	bcf	3,6	;RP1=0, select bank1
  1237     0176  081E               	movf	30,w	;volatile
  1238     0177  00F3               	movwf	?_adc_read
  1239     0178                     l29:
  1240     0178  0008               	return
  1241     0179                     __end_of_adc_read:
  1242                           
  1243                           	psect	text6
  1244     0186                     __ptext6:	
  1245 ;; *************** function _adc_get_channel *****************
  1246 ;; Defined at:
  1247 ;;		line 54 in file "ADC_lib.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;		None
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;		None
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  1    wreg      unsigned char 
  1254 ;; Registers used:
  1255 ;;		wreg, status,2, status,0
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1261 ;;      Params:         0       0       0       0       0
  1262 ;;      Locals:         0       0       0       0       0
  1263 ;;      Temps:          1       0       0       0       0
  1264 ;;      Totals:         1       0       0       0       0
  1265 ;;Total ram usage:        1 bytes
  1266 ;; Hardware stack levels used: 1
  1267 ;; Hardware stack levels required when called: 1
  1268 ;; This function calls:
  1269 ;;		Nothing
  1270 ;; This function is called by:
  1271 ;;		_main
  1272 ;; This function uses a non-reentrant model
  1273 ;;
  1274                           
  1275     0186                     _adc_get_channel:	
  1276                           ;psect for function _adc_get_channel
  1277                           
  1278     0186                     l1162:	
  1279                           ;incstack = 0
  1280                           ; Regs used in _adc_get_channel: [wreg+status,2+status,0]
  1281                           
  1282                           
  1283                           ;ADC_lib.c: 55:     return ADCON0bits.CHS;
  1284     0186  1283               	bcf	3,5	;RP0=0, select bank0
  1285     0187  1303               	bcf	3,6	;RP1=0, select bank0
  1286     0188  0C1F               	rrf	31,w	;volatile
  1287     0189  00F3               	movwf	??_adc_get_channel
  1288     018A  0C73               	rrf	??_adc_get_channel,w
  1289     018B  390F               	andlw	15
  1290     018C                     l35:
  1291     018C  0008               	return
  1292     018D                     __end_of_adc_get_channel:
  1293                           
  1294                           	psect	text7
  1295     007B                     __ptext7:	
  1296 ;; *************** function _isr *****************
  1297 ;; Defined at:
  1298 ;;		line 60 in file "slave_sensors.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;		None
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;		None
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  1    wreg      void 
  1305 ;; Registers used:
  1306 ;;		wreg
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1312 ;;      Params:         0       0       0       0       0
  1313 ;;      Locals:         0       0       0       0       0
  1314 ;;      Temps:          3       0       0       0       0
  1315 ;;      Totals:         3       0       0       0       0
  1316 ;;Total ram usage:        3 bytes
  1317 ;; Hardware stack levels used: 1
  1318 ;; This function calls:
  1319 ;;		Nothing
  1320 ;; This function is called by:
  1321 ;;		Interrupt level 1
  1322 ;; This function uses a non-reentrant model
  1323 ;;
  1324                           
  1325     007B                     _isr:	
  1326                           ;psect for function _isr
  1327                           
  1328     007B                     i1l1180:
  1329                           
  1330                           ;slave_sensors.c: 61:     setup();
  1331     007B  1283               	bcf	3,5	;RP0=0, select bank0
  1332     007C  1303               	bcf	3,6	;RP1=0, select bank0
  1333     007D  1D8C               	btfss	12,3	;volatile
  1334     007E  2880               	goto	u40_21
  1335     007F  2881               	goto	u40_20
  1336     0080                     u40_21:
  1337     0080  28D1               	goto	i1l213
  1338     0081                     u40_20:
  1339     0081                     i1l1182:
  1340                           
  1341                           ;slave_sensors.c: 63: 
  1342     0081  1214               	bcf	20,4	;volatile
  1343                           
  1344                           ;slave_sensors.c: 65:         if(adc_get_channel() == 0){
  1345     0082  1B14               	btfsc	20,6	;volatile
  1346     0083  2885               	goto	u41_21
  1347     0084  2886               	goto	u41_20
  1348     0085                     u41_21:
  1349     0085  288A               	goto	i1l1186
  1350     0086                     u41_20:
  1351     0086                     i1l1184:
  1352     0086  1F94               	btfss	20,7	;volatile
  1353     0087  2889               	goto	u42_21
  1354     0088  288A               	goto	u42_20
  1355     0089                     u42_21:
  1356     0089  288F               	goto	i1l1194
  1357     008A                     u42_20:
  1358     008A                     i1l1186:
  1359                           
  1360                           ;slave_sensors.c: 66:             MQ2_val = (adc_read()>>8) & 0x00FF;
  1361     008A  0813               	movf	19,w	;volatile
  1362     008B  00A4               	movwf	_discard
  1363     008C                     i1l1188:
  1364                           
  1365                           ;slave_sensors.c: 67:             adc_sel_channel(1);
  1366     008C  1314               	bcf	20,6	;volatile
  1367     008D                     i1l1190:
  1368                           
  1369                           ;slave_sensors.c: 68:         }
  1370     008D  1394               	bcf	20,7	;volatile
  1371     008E                     i1l1192:
  1372                           
  1373                           ;slave_sensors.c: 69:         else if (adc_get_channel() == 1){
  1374     008E  1614               	bsf	20,4	;volatile
  1375     008F                     i1l1194:
  1376                           
  1377                           ;slave_sensors.c: 72:         }
  1378     008F  1683               	bsf	3,5	;RP0=1, select bank1
  1379     0090  1303               	bcf	3,6	;RP1=0, select bank1
  1380     0091  1A94               	btfsc	20,5	;volatile
  1381     0092  2894               	goto	u43_21
  1382     0093  2895               	goto	u43_20
  1383     0094                     u43_21:
  1384     0094  28AF               	goto	i1l204
  1385     0095                     u43_20:
  1386     0095                     i1l1196:
  1387     0095  1914               	btfsc	20,2	;volatile
  1388     0096  2898               	goto	u44_21
  1389     0097  2899               	goto	u44_20
  1390     0098                     u44_21:
  1391     0098  28AF               	goto	i1l204
  1392     0099                     u44_20:
  1393     0099                     i1l1198:
  1394                           
  1395                           ;slave_sensors.c: 74:         switch(request){
  1396     0099  1283               	bcf	3,5	;RP0=0, select bank0
  1397     009A  1303               	bcf	3,6	;RP1=0, select bank0
  1398     009B  0813               	movf	19,w	;volatile
  1399     009C  00A4               	movwf	_discard
  1400     009D                     i1l1200:
  1401                           
  1402                           ;slave_sensors.c: 76:                 send_data = MQ2_val;
  1403     009D  118C               	bcf	12,3	;volatile
  1404     009E                     i1l1202:
  1405                           
  1406                           ;slave_sensors.c: 77:                 break;
  1407     009E  1614               	bsf	20,4	;volatile
  1408     009F                     i1l205:	
  1409                           ;slave_sensors.c: 78:             case 'T':
  1410                           
  1411     009F  1683               	bsf	3,5	;RP0=1, select bank1
  1412     00A0  1303               	bcf	3,6	;RP1=0, select bank1
  1413     00A1  1C14               	btfss	20,0	;volatile
  1414     00A2  28A4               	goto	u45_21
  1415     00A3  28A5               	goto	u45_20
  1416     00A4                     u45_21:
  1417     00A4  289F               	goto	i1l205
  1418     00A5                     u45_20:
  1419     00A5                     i1l1204:
  1420                           
  1421                           ;slave_sensors.c: 79:                 send_data = LM35_val;
  1422     00A5  1283               	bcf	3,5	;RP0=0, select bank0
  1423     00A6  1303               	bcf	3,6	;RP1=0, select bank0
  1424     00A7  0813               	movf	19,w	;volatile
  1425     00A8  00F9               	movwf	_request
  1426                           
  1427                           ;slave_sensors.c: 80:                 break;
  1428     00A9  30A6               	movlw	166
  1429     00AA  00F0               	movwf	??_isr
  1430     00AB                     u60_27:
  1431     00AB  0BF0               	decfsz	??_isr,f
  1432     00AC  28AB               	goto	u60_27
  1433     00AD  0000               	nop
  1434                           
  1435                           ;slave_sensors.c: 81:             default:
  1436     00AE  28CE               	goto	i1l208
  1437     00AF                     i1l204:	
  1438                           ;slave_sensors.c: 82:                 send_data = 0xFF;
  1439                           
  1440     00AF  1A94               	btfsc	20,5	;volatile
  1441     00B0  28B2               	goto	u46_21
  1442     00B1  28B3               	goto	u46_20
  1443     00B2                     u46_21:
  1444     00B2  28CE               	goto	i1l208
  1445     00B3                     u46_20:
  1446     00B3                     i1l1206:
  1447     00B3  1D14               	btfss	20,2	;volatile
  1448     00B4  28B6               	goto	u47_21
  1449     00B5  28B7               	goto	u47_20
  1450     00B6                     u47_21:
  1451     00B6  28CE               	goto	i1l208
  1452     00B7                     u47_20:
  1453     00B7                     i1l1208:
  1454                           
  1455                           ;slave_sensors.c: 83:                 break;
  1456     00B7  1283               	bcf	3,5	;RP0=0, select bank0
  1457     00B8  1303               	bcf	3,6	;RP1=0, select bank0
  1458     00B9  0813               	movf	19,w	;volatile
  1459     00BA  00A4               	movwf	_discard
  1460     00BB                     i1l1210:
  1461                           
  1462                           ;slave_sensors.c: 84:         }
  1463     00BB  1683               	bsf	3,5	;RP0=1, select bank1
  1464     00BC  1303               	bcf	3,6	;RP1=0, select bank1
  1465     00BD  1014               	bcf	20,0	;volatile
  1466                           
  1467                           ;slave_sensors.c: 85: 
  1468     00BE  087A               	movf	_send_data,w
  1469     00BF  1283               	bcf	3,5	;RP0=0, select bank0
  1470     00C0  1303               	bcf	3,6	;RP1=0, select bank0
  1471     00C1  0093               	movwf	19	;volatile
  1472     00C2                     i1l1212:
  1473                           
  1474                           ;slave_sensors.c: 86:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1475     00C2  1614               	bsf	20,4	;volatile
  1476                           
  1477                           ;slave_sensors.c: 87:     }
  1478     00C3  30A6               	movlw	166
  1479     00C4  00F0               	movwf	??_isr
  1480     00C5                     u61_27:
  1481     00C5  0BF0               	decfsz	??_isr,f
  1482     00C6  28C5               	goto	u61_27
  1483     00C7  0000               	nop
  1484     00C8                     i1l210:	
  1485                           ;slave_sensors.c: 88: }
  1486                           
  1487     00C8  1683               	bsf	3,5	;RP0=1, select bank1
  1488     00C9  1303               	bcf	3,6	;RP1=0, select bank1
  1489     00CA  1814               	btfsc	20,0	;volatile
  1490     00CB  28CD               	goto	u48_21
  1491     00CC  28CE               	goto	u48_20
  1492     00CD                     u48_21:
  1493     00CD  28C8               	goto	i1l210
  1494     00CE                     u48_20:
  1495     00CE                     i1l208:
  1496                           
  1497                           ;slave_sensors.c: 91:     ANSEL = 3;
  1498     00CE  1283               	bcf	3,5	;RP0=0, select bank0
  1499     00CF  1303               	bcf	3,6	;RP1=0, select bank0
  1500     00D0  118C               	bcf	12,3	;volatile
  1501     00D1                     i1l213:
  1502     00D1  0872               	movf	??_isr+2,w
  1503     00D2  008A               	movwf	10
  1504     00D3  0E71               	swapf	??_isr+1,w
  1505     00D4  0083               	movwf	3
  1506     00D5  0EFE               	swapf	btemp,f
  1507     00D6  0E7E               	swapf	btemp,w
  1508     00D7  0009               	retfie
  1509     00D8                     __end_of_isr:
  1510     007E                     btemp	set	126	;btemp
  1511     007E                     wtemp0	set	126
  1512                           
  1513                           	psect	intentry
  1514     0004                     __pintentry:	
  1515                           ;incstack = 0
  1516                           ; Regs used in _isr: [wreg]
  1517                           
  1518     0004                     interrupt_function:
  1519     007E                     saved_w	set	btemp
  1520     0004  00FE               	movwf	btemp
  1521     0005  0E03               	swapf	3,w
  1522     0006  00F1               	movwf	??_isr+1
  1523     0007  080A               	movf	10,w
  1524     0008  00F2               	movwf	??_isr+2
  1525     0009  120A  118A  287B   	ljmp	_isr
  1526                           
  1527                           	psect	config
  1528                           
  1529                           ;Config register CONFIG1 @ 0x2007
  1530                           ;	Oscillator Selection bits
  1531                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1532                           ;	Watchdog Timer Enable bit
  1533                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1534                           ;	Power-up Timer Enable bit
  1535                           ;	PWRTE = OFF, PWRT disabled
  1536                           ;	RE3/MCLR pin function select bit
  1537                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1538                           ;	Code Protection bit
  1539                           ;	CP = OFF, Program memory code protection is disabled
  1540                           ;	Data Code Protection bit
  1541                           ;	CPD = OFF, Data memory code protection is disabled
  1542                           ;	Brown Out Reset Selection bits
  1543                           ;	BOREN = OFF, BOR disabled
  1544                           ;	Internal External Switchover bit
  1545                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1546                           ;	Fail-Safe Clock Monitor Enabled bit
  1547                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1548                           ;	Low Voltage Programming Enable bit
  1549                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1550                           ;	In-Circuit Debugger Mode bit
  1551                           ;	DEBUG = 0x1, unprogrammed default
  1552     2007                     	org	8199
  1553     2007  20D4               	dw	8404
  1554                           
  1555                           ;Config register CONFIG2 @ 0x2008
  1556                           ;	Brown-out Reset Selection bit
  1557                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1558                           ;	Flash Program Memory Self Write Enable bits
  1559                           ;	WRT = OFF, Write protection off
  1560     2008                     	org	8200
  1561     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80      3       5
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_adc_init

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _setup->_adc_init

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     469
                                              1 BANK0      2     2      0
                    _adc_get_channel
                           _adc_read
                    _adc_sel_channel
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     447
                     _I2C_Slave_Init
                           _adc_init
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             6     3      3     425
                                              3 COMMON     5     2      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _adc_sel_channel                                      2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _adc_read                                             2     0      2       0
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _adc_get_channel                                      1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_get_channel
   _adc_read
   _adc_sel_channel
   _setup
     _I2C_Slave_Init
     _adc_init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      10       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       5       5        6.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      10      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Sep 01 16:07:04 2023

                     _BF 04A0                       l23 0133                       l32 0185  
                     l26 016E                       l35 018C                       l29 0178  
                    l232 0150                      l145 016A                      _CKP 00A4  
                    _GIE 005F                      _RD3 0043                      _RD4 0044  
                    _RD5 0045                      _RD6 0046                      _RD7 0047  
                    u510 00E2                      u511 00DE                      u530 00EC  
                    u531 00E8                      u524 00E5                      u390 0172  
                    u550 00F6                      u391 0171                      u551 00F2  
                    u544 00EF                      u570 0029                      u571 0028  
                    u564 00F9                      u580 0041                      u581 0040  
                    _SCS 0478                      u597 0072                      _isr 007B  
                   l1140 0152                     l1300 0132                     l1150 0164  
                   l1142 0160                     l1310 0139                     l1160 017A  
                   l1152 0167                     l1144 0161                     l1312 013D  
                   l1320 001A                     l1162 0186                     l1154 016B  
                   l1146 0162                     l1314 013F                     l1306 0134  
                   l1402 0064                     l1330 0041                     l1322 001F  
                   l1156 0172                     l1148 0163                     l1404 011A  
                   l1316 0140                     l1308 0138                     l1332 004A  
                   l1324 0029                     l1318 014A                     l1334 0051  
                   l1342 005A                     l1326 0030                     l1336 0054  
                   l1344 006C                     l1328 0037                     l1290 0106  
                   l1338 0057                     l1292 010D                     l1284 00DB  
                   l1286 00FA                     l1288 00FF                     l1296 0112  
                   l1298 0128                     _ADFM 04FF                     ?_isr 0070  
                   _ADON 00F8                     _PEIE 005E                     _WCOL 00A7  
                   _D_nA 04A5                     _R_nW 04A2                     _main 001A  
                   btemp 007E                     start 000C   adc_sel_channel@channel 0074  
                  ??_isr 0070                    ?_main 0070                    _ANSEL 0188  
                  i1l210 00C8                    i1l204 00AF                    i1l205 009F  
                  i1l213 00D1                    i1l208 00CE                    _VCFG0 04FC  
                  _VCFG1 04FD                    u40_20 0081                    u40_21 0080  
                  u41_20 0086                    u41_21 0085                    u42_20 008A  
                  u42_21 0089                    u43_20 0095                    u43_21 0094  
                  u44_20 0099                    u44_21 0098                    u60_27 00AB  
                  u45_20 00A5                    u45_21 00A4                    u61_27 00C5  
                  u46_20 00B3                    u46_21 00B2                    u47_20 00B7  
                  u47_21 00B6                    u48_20 00CE                    u48_21 00CD  
                  _TRISA 0085                    _SSPIE 0463                    _SSPIF 0063  
                  _SSPOV 00A6                    _setup 0134                    pclath 000A  
       ?_adc_sel_channel 0070                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 007B                   ??_main 0021  
                 _ADRESH 001E                   _ADRESL 009E                   ?_setup 0070  
                 _ANSELH 0189         __end_of_adc_init 0134         __end_of_adc_read 0179  
                 i1l1200 009D                   i1l1210 00BB                   i1l1202 009E  
                 i1l1212 00C2                   i1l1204 00A5                   i1l1206 00B3  
                 i1l1208 00B7                   i1l1180 007B                   i1l1190 008D  
                 i1l1182 0081                   i1l1192 008E                   i1l1184 0086  
                 i1l1194 008F                   i1l1186 008A                   i1l1196 0095  
                 i1l1188 008C                   i1l1198 0099                   _SSPADD 0093  
                 _TRISC3 043B                   _TRISC4 043C                   _SSPCON 0014  
                 _SSPBUF 0013                   saved_w 007E  __end_of__initialization 0016  
         __pcstackCOMMON 0070            __end_of_setup 0151                  ??_setup 0078  
  I2C_Slave_Init@address 0073               __pbssBANK0 0023               __pmaintext 001A  
             __pintentry 0004                ?_adc_init 0073                ?_adc_read 0073  
                _MQ2_val 0078                  _SSPCON2 0091                  _SSPSTAT 0094  
             ??_adc_init 0076               ??_adc_read 0075                  __ptext1 0134  
                __ptext2 00D8                  __ptext3 0151                  __ptext4 0179  
                __ptext5 016B                  __ptext6 0186                  __ptext7 007B  
                _discard 0024                  _request 0079     end_of_initialization 0016  
      ??_adc_get_channel 0073           _I2C_Slave_Init 0151                _PORTDbits 0008  
              _TRISCbits 0087   __end_of_I2C_Slave_Init 016B      start_initialization 000F  
            __end_of_isr 00D8          ?_I2C_Slave_Init 0070          adc_init@channel 0075  
      ??_adc_sel_channel 0073              __pbssCOMMON 0078                ___latbits 0002  
          __pcstackBANK0 0020            adc_init@clock 0074                adc_init@J 0020  
              adc_init@R 0073          _adc_get_channel 0186                 _LM35_val 0023  
      interrupt_function 0004                _send_data 007A               _ADCON0bits 001F  
__end_of_adc_get_channel 018D                 _adc_init 00D8                 _adc_read 016B  
       ??_I2C_Slave_Init 0073          _adc_sel_channel 0179                 intlevel1 0000  
             _OSCCONbits 008F         ?_adc_get_channel 0070              _SSPCON2bits 0091  
__end_of_adc_sel_channel 0186  
