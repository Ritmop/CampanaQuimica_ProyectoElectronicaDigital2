

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Sep 01 16:06:57 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18     0000                     
    19                           ; Generated 22/03/2023 GMT
    20                           ; 
    21                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0000                     	;# 
    54     0001                     	;# 
    55     0002                     	;# 
    56     0003                     	;# 
    57     0004                     	;# 
    58     0005                     	;# 
    59     0006                     	;# 
    60     0007                     	;# 
    61     0008                     	;# 
    62     0009                     	;# 
    63     000A                     	;# 
    64     000B                     	;# 
    65     000C                     	;# 
    66     000D                     	;# 
    67     000E                     	;# 
    68     000E                     	;# 
    69     000F                     	;# 
    70     0010                     	;# 
    71     0011                     	;# 
    72     0012                     	;# 
    73     0013                     	;# 
    74     0014                     	;# 
    75     0015                     	;# 
    76     0015                     	;# 
    77     0016                     	;# 
    78     0017                     	;# 
    79     0018                     	;# 
    80     0019                     	;# 
    81     001A                     	;# 
    82     001B                     	;# 
    83     001B                     	;# 
    84     001C                     	;# 
    85     001D                     	;# 
    86     001E                     	;# 
    87     001F                     	;# 
    88     0081                     	;# 
    89     0085                     	;# 
    90     0086                     	;# 
    91     0087                     	;# 
    92     0088                     	;# 
    93     0089                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     008E                     	;# 
    97     008F                     	;# 
    98     0090                     	;# 
    99     0091                     	;# 
   100     0092                     	;# 
   101     0093                     	;# 
   102     0093                     	;# 
   103     0093                     	;# 
   104     0094                     	;# 
   105     0095                     	;# 
   106     0096                     	;# 
   107     0097                     	;# 
   108     0098                     	;# 
   109     0099                     	;# 
   110     009A                     	;# 
   111     009B                     	;# 
   112     009C                     	;# 
   113     009D                     	;# 
   114     009E                     	;# 
   115     009F                     	;# 
   116     0105                     	;# 
   117     0107                     	;# 
   118     0108                     	;# 
   119     0109                     	;# 
   120     010C                     	;# 
   121     010C                     	;# 
   122     010D                     	;# 
   123     010E                     	;# 
   124     010F                     	;# 
   125     0185                     	;# 
   126     0187                     	;# 
   127     0188                     	;# 
   128     0189                     	;# 
   129     018C                     	;# 
   130     018D                     	;# 
   131     0000                     	;# 
   132     0001                     	;# 
   133     0002                     	;# 
   134     0003                     	;# 
   135     0004                     	;# 
   136     0005                     	;# 
   137     0006                     	;# 
   138     0007                     	;# 
   139     0008                     	;# 
   140     0009                     	;# 
   141     000A                     	;# 
   142     000B                     	;# 
   143     000C                     	;# 
   144     000D                     	;# 
   145     000E                     	;# 
   146     000E                     	;# 
   147     000F                     	;# 
   148     0010                     	;# 
   149     0011                     	;# 
   150     0012                     	;# 
   151     0013                     	;# 
   152     0014                     	;# 
   153     0015                     	;# 
   154     0015                     	;# 
   155     0016                     	;# 
   156     0017                     	;# 
   157     0018                     	;# 
   158     0019                     	;# 
   159     001A                     	;# 
   160     001B                     	;# 
   161     001B                     	;# 
   162     001C                     	;# 
   163     001D                     	;# 
   164     001E                     	;# 
   165     001F                     	;# 
   166     0081                     	;# 
   167     0085                     	;# 
   168     0086                     	;# 
   169     0087                     	;# 
   170     0088                     	;# 
   171     0089                     	;# 
   172     008C                     	;# 
   173     008D                     	;# 
   174     008E                     	;# 
   175     008F                     	;# 
   176     0090                     	;# 
   177     0091                     	;# 
   178     0092                     	;# 
   179     0093                     	;# 
   180     0093                     	;# 
   181     0093                     	;# 
   182     0094                     	;# 
   183     0095                     	;# 
   184     0096                     	;# 
   185     0097                     	;# 
   186     0098                     	;# 
   187     0099                     	;# 
   188     009A                     	;# 
   189     009B                     	;# 
   190     009C                     	;# 
   191     009D                     	;# 
   192     009E                     	;# 
   193     009F                     	;# 
   194     0105                     	;# 
   195     0107                     	;# 
   196     0108                     	;# 
   197     0109                     	;# 
   198     010C                     	;# 
   199     010C                     	;# 
   200     010D                     	;# 
   201     010E                     	;# 
   202     010F                     	;# 
   203     0185                     	;# 
   204     0187                     	;# 
   205     0188                     	;# 
   206     0189                     	;# 
   207     018C                     	;# 
   208     018D                     	;# 
   209     0000                     	;# 
   210     0001                     	;# 
   211     0002                     	;# 
   212     0003                     	;# 
   213     0004                     	;# 
   214     0005                     	;# 
   215     0006                     	;# 
   216     0007                     	;# 
   217     0008                     	;# 
   218     0009                     	;# 
   219     000A                     	;# 
   220     000B                     	;# 
   221     000C                     	;# 
   222     000D                     	;# 
   223     000E                     	;# 
   224     000E                     	;# 
   225     000F                     	;# 
   226     0010                     	;# 
   227     0011                     	;# 
   228     0012                     	;# 
   229     0013                     	;# 
   230     0014                     	;# 
   231     0015                     	;# 
   232     0015                     	;# 
   233     0016                     	;# 
   234     0017                     	;# 
   235     0018                     	;# 
   236     0019                     	;# 
   237     001A                     	;# 
   238     001B                     	;# 
   239     001B                     	;# 
   240     001C                     	;# 
   241     001D                     	;# 
   242     001E                     	;# 
   243     001F                     	;# 
   244     0081                     	;# 
   245     0085                     	;# 
   246     0086                     	;# 
   247     0087                     	;# 
   248     0088                     	;# 
   249     0089                     	;# 
   250     008C                     	;# 
   251     008D                     	;# 
   252     008E                     	;# 
   253     008F                     	;# 
   254     0090                     	;# 
   255     0091                     	;# 
   256     0092                     	;# 
   257     0093                     	;# 
   258     0093                     	;# 
   259     0093                     	;# 
   260     0094                     	;# 
   261     0095                     	;# 
   262     0096                     	;# 
   263     0097                     	;# 
   264     0098                     	;# 
   265     0099                     	;# 
   266     009A                     	;# 
   267     009B                     	;# 
   268     009C                     	;# 
   269     009D                     	;# 
   270     009E                     	;# 
   271     009F                     	;# 
   272     0105                     	;# 
   273     0107                     	;# 
   274     0108                     	;# 
   275     0109                     	;# 
   276     010C                     	;# 
   277     010C                     	;# 
   278     010D                     	;# 
   279     010E                     	;# 
   280     010F                     	;# 
   281     0185                     	;# 
   282     0187                     	;# 
   283     0188                     	;# 
   284     0189                     	;# 
   285     018C                     	;# 
   286     018D                     	;# 
   287                           
   288                           	psect	idataCOMMON
   289     0115                     __pidataCOMMON:
   290                           
   291                           ;initializer for _servoPos
   292     0115  3402               	retlw	2
   293     0014                     _SSPCON	set	20
   294     0001                     _TMR0	set	1
   295     0013                     _SSPBUF	set	19
   296     005E                     _PEIE	set	94
   297     005F                     _GIE	set	95
   298     005D                     _T0IE	set	93
   299     003A                     _RC2	set	58
   300     0038                     _RC0	set	56
   301     005A                     _T0IF	set	90
   302     00A7                     _WCOL	set	167
   303     00A6                     _SSPOV	set	166
   304     00A4                     _CKP	set	164
   305     0063                     _SSPIF	set	99
   306     0091                     _SSPCON2bits	set	145
   307     0087                     _TRISCbits	set	135
   308     0094                     _SSPSTAT	set	148
   309     0093                     _SSPADD	set	147
   310     0091                     _SSPCON2	set	145
   311     0081                     _OPTION_REGbits	set	129
   312     008F                     _OSCCONbits	set	143
   313     0463                     _SSPIE	set	1123
   314     043C                     _TRISC4	set	1084
   315     043B                     _TRISC3	set	1083
   316     040B                     _PSA	set	1035
   317     040D                     _T0CS	set	1037
   318     0478                     _SCS	set	1144
   319     043A                     _TRISC2	set	1082
   320     0438                     _TRISC0	set	1080
   321     04A0                     _BF	set	1184
   322     04A2                     _R_nW	set	1186
   323     04A5                     _D_nA	set	1189
   324     0189                     _ANSELH	set	393
   325     0188                     _ANSEL	set	392
   326                           
   327                           	psect	cinit
   328     0011                     start_initialization:	
   329                           ; #config settings
   330                           
   331     0011                     __initialization:
   332                           
   333                           ; Initialize objects allocated to COMMON
   334     0011  120A  118A  2115  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   335     0016  00FA               	movwf	__pdataCOMMON& (0+127)
   336                           
   337                           ; Clear objects allocated to COMMON
   338     0017  01F6               	clrf	__pbssCOMMON& (0+127)
   339     0018  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   340     0019  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   341     001A  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   342     001B                     end_of_initialization:	
   343                           ;End of C runtime variable initialization code
   344                           
   345     001B                     __end_of__initialization:
   346     001B  0183               	clrf	3
   347     001C  120A  118A  2892   	ljmp	_main	;jump to C main() function
   348                           
   349                           	psect	bssCOMMON
   350     0076                     __pbssCOMMON:
   351     0076                     _TMR0count:
   352     0076                     	ds	1
   353     0077                     _readI2C:
   354     0077                     	ds	1
   355     0078                     _send_data:
   356     0078                     	ds	1
   357     0079                     _discard:
   358     0079                     	ds	1
   359                           
   360                           	psect	dataCOMMON
   361     007A                     __pdataCOMMON:
   362     007A                     _servoPos:
   363     007A                     	ds	1
   364                           
   365                           	psect	cstackCOMMON
   366     0070                     __pcstackCOMMON:
   367     0070                     ?_setup:
   368     0070                     ?_angle_to_PWM:	
   369                           ; 1 bytes @ 0x0
   370                           
   371     0070                     ?_I2C_Slave_Init:	
   372                           ; 1 bytes @ 0x0
   373                           
   374     0070                     ?_initPWM:	
   375                           ; 1 bytes @ 0x0
   376                           
   377     0070                     ?_isr:	
   378                           ; 1 bytes @ 0x0
   379                           
   380     0070                     ??_isr:	
   381                           ; 1 bytes @ 0x0
   382                           
   383     0070                     ?_main:	
   384                           ; 1 bytes @ 0x0
   385                           
   386                           
   387                           ; 2 bytes @ 0x0
   388     0070                     	ds	4
   389     0074                     ??_angle_to_PWM:
   390     0074                     ??_I2C_Slave_Init:	
   391                           ; 1 bytes @ 0x4
   392                           
   393     0074                     ??_initPWM:	
   394                           ; 1 bytes @ 0x4
   395                           
   396     0074                     angle_to_PWM@position:	
   397                           ; 1 bytes @ 0x4
   398                           
   399     0074                     I2C_Slave_Init@address:	
   400                           ; 1 bytes @ 0x4
   401                           
   402                           
   403                           ; 1 bytes @ 0x4
   404     0074                     	ds	1
   405     0075                     ??_setup:
   406     0075                     ??_main:	
   407                           ; 1 bytes @ 0x5
   408                           
   409                           
   410                           ; 1 bytes @ 0x5
   411     0075                     	ds	1
   412                           
   413                           	psect	maintext
   414     0092                     __pmaintext:	
   415 ;;
   416 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   417 ;;
   418 ;; *************** function _main *****************
   419 ;; Defined at:
   420 ;;		line 108 in file "slave_motors.c"
   421 ;; Parameters:    Size  Location     Type
   422 ;;		None
   423 ;; Auto vars:     Size  Location     Type
   424 ;;		None
   425 ;; Return value:  Size  Location     Type
   426 ;;                  2   89[None  ] int 
   427 ;; Registers used:
   428 ;;		wreg, status,2, status,0, pclath, cstack
   429 ;; Tracked objects:
   430 ;;		On entry : B00/0
   431 ;;		On exit  : 0/0
   432 ;;		Unchanged: 0/0
   433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   434 ;;      Params:         0       0       0       0       0
   435 ;;      Locals:         0       0       0       0       0
   436 ;;      Temps:          1       0       0       0       0
   437 ;;      Totals:         1       0       0       0       0
   438 ;;Total ram usage:        1 bytes
   439 ;; Hardware stack levels required when called: 3
   440 ;; This function calls:
   441 ;;		_angle_to_PWM
   442 ;;		_setup
   443 ;; This function is called by:
   444 ;;		Startup code after reset
   445 ;; This function uses a non-reentrant model
   446 ;;
   447                           
   448     0092                     _main:	
   449                           ;psect for function _main
   450                           
   451     0092                     l854:	
   452                           ;incstack = 0
   453                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   454                           
   455                           
   456                           ;slave_motors.c: 109:     setup();
   457     0092  120A  118A  20B4  120A  118A  	fcall	_setup
   458     0097                     l856:
   459                           
   460                           ;slave_motors.c: 114:         servoPos = readI2C & 0x0F;
   461     0097  0877               	movf	_readI2C,w
   462     0098  390F               	andlw	15
   463     0099  00FA               	movwf	_servoPos
   464     009A                     l858:
   465                           
   466                           ;slave_motors.c: 116:         angle_to_PWM(servoPos);
   467     009A  087A               	movf	_servoPos,w
   468     009B  120A  118A  20EF  120A  118A  	fcall	_angle_to_PWM
   469     00A0                     l860:
   470                           
   471                           ;slave_motors.c: 119:         if((readI2C & 0xF0) == 0x10)
   472     00A0  30F0               	movlw	240
   473     00A1  0577               	andwf	_readI2C,w
   474     00A2  00F5               	movwf	??_main
   475     00A3  3010               	movlw	16
   476     00A4  0675               	xorwf	??_main,w
   477     00A5  1D03               	btfss	3,2
   478     00A6  28A8               	goto	u151
   479     00A7  28A9               	goto	u150
   480     00A8                     u151:
   481     00A8  28AD               	goto	l91
   482     00A9                     u150:
   483     00A9                     l862:
   484                           
   485                           ;slave_motors.c: 120:             RC0 = 1;
   486     00A9  1283               	bcf	3,5	;RP0=0, select bank0
   487     00AA  1303               	bcf	3,6	;RP1=0, select bank0
   488     00AB  1407               	bsf	7,0	;volatile
   489     00AC  2897               	goto	l856
   490     00AD                     l91:	
   491                           ;slave_motors.c: 121:         else
   492                           
   493                           
   494                           ;slave_motors.c: 122:             RC0 = 0;
   495     00AD  1283               	bcf	3,5	;RP0=0, select bank0
   496     00AE  1303               	bcf	3,6	;RP1=0, select bank0
   497     00AF  1007               	bcf	7,0	;volatile
   498     00B0  2897               	goto	l856
   499     00B1  120A  118A  280E   	ljmp	start
   500     00B4                     __end_of_main:
   501                           
   502                           	psect	text1
   503     00B4                     __ptext1:	
   504 ;; *************** function _setup *****************
   505 ;; Defined at:
   506 ;;		line 126 in file "slave_motors.c"
   507 ;; Parameters:    Size  Location     Type
   508 ;;		None
   509 ;; Auto vars:     Size  Location     Type
   510 ;;		None
   511 ;; Return value:  Size  Location     Type
   512 ;;                  1    wreg      void 
   513 ;; Registers used:
   514 ;;		wreg, status,2, status,0, pclath, cstack
   515 ;; Tracked objects:
   516 ;;		On entry : 0/0
   517 ;;		On exit  : 0/0
   518 ;;		Unchanged: 0/0
   519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   520 ;;      Params:         0       0       0       0       0
   521 ;;      Locals:         0       0       0       0       0
   522 ;;      Temps:          0       0       0       0       0
   523 ;;      Totals:         0       0       0       0       0
   524 ;;Total ram usage:        0 bytes
   525 ;; Hardware stack levels used: 1
   526 ;; Hardware stack levels required when called: 2
   527 ;; This function calls:
   528 ;;		_I2C_Slave_Init
   529 ;;		_initPWM
   530 ;; This function is called by:
   531 ;;		_main
   532 ;; This function uses a non-reentrant model
   533 ;;
   534                           
   535     00B4                     _setup:	
   536                           ;psect for function _setup
   537                           
   538     00B4                     l780:	
   539                           ;incstack = 0
   540                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   541                           
   542                           
   543                           ;slave_motors.c: 128:     ANSEL = 0;
   544     00B4  1683               	bsf	3,5	;RP0=1, select bank3
   545     00B5  1703               	bsf	3,6	;RP1=1, select bank3
   546     00B6  0188               	clrf	8	;volatile
   547                           
   548                           ;slave_motors.c: 129:     ANSELH= 0;
   549     00B7  0189               	clrf	9	;volatile
   550     00B8                     l782:
   551                           
   552                           ;slave_motors.c: 131:     TRISC0 = 0;
   553     00B8  1683               	bsf	3,5	;RP0=1, select bank1
   554     00B9  1303               	bcf	3,6	;RP1=0, select bank1
   555     00BA  1007               	bcf	7,0	;volatile
   556     00BB                     l784:
   557                           
   558                           ;slave_motors.c: 132:     RC0 = 0;
   559     00BB  1283               	bcf	3,5	;RP0=0, select bank0
   560     00BC  1303               	bcf	3,6	;RP1=0, select bank0
   561     00BD  1007               	bcf	7,0	;volatile
   562     00BE                     l786:
   563                           
   564                           ;slave_motors.c: 133:     TRISC2 = 0;
   565     00BE  1683               	bsf	3,5	;RP0=1, select bank1
   566     00BF  1303               	bcf	3,6	;RP1=0, select bank1
   567     00C0  1107               	bcf	7,2	;volatile
   568     00C1                     l788:
   569                           
   570                           ;slave_motors.c: 134:     RC2 = 0;
   571     00C1  1283               	bcf	3,5	;RP0=0, select bank0
   572     00C2  1303               	bcf	3,6	;RP1=0, select bank0
   573     00C3  1107               	bcf	7,2	;volatile
   574     00C4                     l790:
   575                           
   576                           ;slave_motors.c: 137:     OSCCONbits.IRCF = 0b111;
   577     00C4  3070               	movlw	112
   578     00C5  1683               	bsf	3,5	;RP0=1, select bank1
   579     00C6  1303               	bcf	3,6	;RP1=0, select bank1
   580     00C7  048F               	iorwf	15,f	;volatile
   581     00C8                     l792:
   582                           
   583                           ;slave_motors.c: 138:     SCS = 1;
   584     00C8  140F               	bsf	15,0	;volatile
   585     00C9                     l794:
   586                           
   587                           ;slave_motors.c: 141:     I2C_Slave_Init(0x30);
   588     00C9  3030               	movlw	48
   589     00CA  120A  118A  20D5  120A  118A  	fcall	_I2C_Slave_Init
   590     00CF                     l796:
   591                           
   592                           ;slave_motors.c: 144:     initPWM();
   593     00CF  120A  118A  2105  120A  118A  	fcall	_initPWM
   594     00D4                     l98:
   595     00D4  0008               	return
   596     00D5                     __end_of_setup:
   597                           
   598                           	psect	text2
   599     0105                     __ptext2:	
   600 ;; *************** function _initPWM *****************
   601 ;; Defined at:
   602 ;;		line 147 in file "slave_motors.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;		None
   605 ;; Auto vars:     Size  Location     Type
   606 ;;		None
   607 ;; Return value:  Size  Location     Type
   608 ;;                  1    wreg      void 
   609 ;; Registers used:
   610 ;;		wreg, status,2, status,0
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   616 ;;      Params:         0       0       0       0       0
   617 ;;      Locals:         0       0       0       0       0
   618 ;;      Temps:          0       0       0       0       0
   619 ;;      Totals:         0       0       0       0       0
   620 ;;Total ram usage:        0 bytes
   621 ;; Hardware stack levels used: 1
   622 ;; Hardware stack levels required when called: 1
   623 ;; This function calls:
   624 ;;		Nothing
   625 ;; This function is called by:
   626 ;;		_setup
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           
   630     0105                     _initPWM:	
   631                           ;psect for function _initPWM
   632                           
   633     0105                     l768:	
   634                           ;incstack = 0
   635                           ; Regs used in _initPWM: [wreg+status,2+status,0]
   636                           
   637                           
   638                           ;slave_motors.c: 149:     T0CS = 0;
   639     0105  1683               	bsf	3,5	;RP0=1, select bank1
   640     0106  1303               	bcf	3,6	;RP1=0, select bank1
   641     0107  1281               	bcf	1,5	;volatile
   642                           
   643                           ;slave_motors.c: 150:     PSA = 0;
   644     0108  1181               	bcf	1,3	;volatile
   645     0109                     l770:
   646                           
   647                           ;slave_motors.c: 151:     OPTION_REGbits.PS = 0b010;
   648     0109  0801               	movf	1,w	;volatile
   649     010A  39F8               	andlw	-8
   650     010B  3802               	iorlw	2
   651     010C  0081               	movwf	1	;volatile
   652     010D                     l772:
   653                           
   654                           ;slave_motors.c: 152:     T0IE = 1;
   655     010D  168B               	bsf	11,5	;volatile
   656     010E                     l774:
   657                           
   658                           ;slave_motors.c: 153:     T0IF = 0;
   659     010E  110B               	bcf	11,2	;volatile
   660     010F                     l776:
   661                           
   662                           ;slave_motors.c: 154:     GIE = 1;
   663     010F  178B               	bsf	11,7	;volatile
   664     0110                     l778:
   665                           
   666                           ;slave_motors.c: 155:     TMR0 = 131;
   667     0110  3083               	movlw	131
   668     0111  1283               	bcf	3,5	;RP0=0, select bank0
   669     0112  1303               	bcf	3,6	;RP1=0, select bank0
   670     0113  0081               	movwf	1	;volatile
   671     0114                     l101:
   672     0114  0008               	return
   673     0115                     __end_of_initPWM:
   674                           
   675                           	psect	text3
   676     00D5                     __ptext3:	
   677 ;; *************** function _I2C_Slave_Init *****************
   678 ;; Defined at:
   679 ;;		line 93 in file "I2C.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;  address         1    wreg     unsigned char 
   682 ;; Auto vars:     Size  Location     Type
   683 ;;  address         1    4[COMMON] unsigned char 
   684 ;; Return value:  Size  Location     Type
   685 ;;                  1    wreg      void 
   686 ;; Registers used:
   687 ;;		wreg
   688 ;; Tracked objects:
   689 ;;		On entry : 0/0
   690 ;;		On exit  : 0/0
   691 ;;		Unchanged: 0/0
   692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   693 ;;      Params:         0       0       0       0       0
   694 ;;      Locals:         1       0       0       0       0
   695 ;;      Temps:          0       0       0       0       0
   696 ;;      Totals:         1       0       0       0       0
   697 ;;Total ram usage:        1 bytes
   698 ;; Hardware stack levels used: 1
   699 ;; Hardware stack levels required when called: 1
   700 ;; This function calls:
   701 ;;		Nothing
   702 ;; This function is called by:
   703 ;;		_setup
   704 ;; This function uses a non-reentrant model
   705 ;;
   706                           
   707     00D5                     _I2C_Slave_Init:	
   708                           ;psect for function _I2C_Slave_Init
   709                           
   710                           
   711                           ;incstack = 0
   712                           ; Regs used in _I2C_Slave_Init: [wreg]
   713                           ;I2C_Slave_Init@address stored from wreg
   714     00D5  00F4               	movwf	I2C_Slave_Init@address
   715     00D6                     l754:
   716                           
   717                           ;I2C.c: 93: void I2C_Slave_Init(uint8_t address);I2C.c: 94: {;I2C.c: 95:     SSPADD = ad
      +                          dress;
   718     00D6  0874               	movf	I2C_Slave_Init@address,w
   719     00D7  1683               	bsf	3,5	;RP0=1, select bank1
   720     00D8  1303               	bcf	3,6	;RP1=0, select bank1
   721     00D9  0093               	movwf	19	;volatile
   722                           
   723                           ;I2C.c: 96:     SSPCON = 0x36;
   724     00DA  3036               	movlw	54
   725     00DB  1283               	bcf	3,5	;RP0=0, select bank0
   726     00DC  1303               	bcf	3,6	;RP1=0, select bank0
   727     00DD  0094               	movwf	20	;volatile
   728                           
   729                           ;I2C.c: 97:     SSPSTAT = 0x80;
   730     00DE  3080               	movlw	128
   731     00DF  1683               	bsf	3,5	;RP0=1, select bank1
   732     00E0  1303               	bcf	3,6	;RP1=0, select bank1
   733     00E1  0094               	movwf	20	;volatile
   734                           
   735                           ;I2C.c: 98:     SSPCON2 = 0x01;
   736     00E2  3001               	movlw	1
   737     00E3  0091               	movwf	17	;volatile
   738     00E4                     l756:
   739                           
   740                           ;I2C.c: 99:     TRISC3 = 1;
   741     00E4  1587               	bsf	7,3	;volatile
   742     00E5                     l758:
   743                           
   744                           ;I2C.c: 100:     TRISC4 = 1;
   745     00E5  1607               	bsf	7,4	;volatile
   746     00E6                     l760:
   747                           
   748                           ;I2C.c: 101:     GIE = 1;
   749     00E6  178B               	bsf	11,7	;volatile
   750     00E7                     l762:
   751                           
   752                           ;I2C.c: 102:     PEIE = 1;
   753     00E7  170B               	bsf	11,6	;volatile
   754     00E8                     l764:
   755                           
   756                           ;I2C.c: 103:     SSPIF = 0;
   757     00E8  1283               	bcf	3,5	;RP0=0, select bank0
   758     00E9  1303               	bcf	3,6	;RP1=0, select bank0
   759     00EA  118C               	bcf	12,3	;volatile
   760     00EB                     l766:
   761                           
   762                           ;I2C.c: 104:     SSPIE = 1;
   763     00EB  1683               	bsf	3,5	;RP0=1, select bank1
   764     00EC  1303               	bcf	3,6	;RP1=0, select bank1
   765     00ED  158C               	bsf	12,3	;volatile
   766     00EE                     l162:
   767     00EE  0008               	return
   768     00EF                     __end_of_I2C_Slave_Init:
   769                           
   770                           	psect	text4
   771     00EF                     __ptext4:	
   772 ;; *************** function _angle_to_PWM *****************
   773 ;; Defined at:
   774 ;;		line 158 in file "slave_motors.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;  position        1    wreg     unsigned char 
   777 ;; Auto vars:     Size  Location     Type
   778 ;;  position        1    4[COMMON] unsigned char 
   779 ;; Return value:  Size  Location     Type
   780 ;;                  1    wreg      void 
   781 ;; Registers used:
   782 ;;		wreg, status,2
   783 ;; Tracked objects:
   784 ;;		On entry : 0/0
   785 ;;		On exit  : 0/0
   786 ;;		Unchanged: 0/0
   787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   788 ;;      Params:         0       0       0       0       0
   789 ;;      Locals:         1       0       0       0       0
   790 ;;      Temps:          0       0       0       0       0
   791 ;;      Totals:         1       0       0       0       0
   792 ;;Total ram usage:        1 bytes
   793 ;; Hardware stack levels used: 1
   794 ;; Hardware stack levels required when called: 1
   795 ;; This function calls:
   796 ;;		Nothing
   797 ;; This function is called by:
   798 ;;		_main
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802     00EF                     _angle_to_PWM:	
   803                           ;psect for function _angle_to_PWM
   804                           
   805                           
   806                           ;incstack = 0
   807                           ; Regs used in _angle_to_PWM: [wreg+status,2]
   808                           ;angle_to_PWM@position stored from wreg
   809     00EF  00F4               	movwf	angle_to_PWM@position
   810     00F0                     l798:
   811                           
   812                           ;slave_motors.c: 160:     if(TMR0count >= 40){
   813     00F0  3028               	movlw	40
   814     00F1  0276               	subwf	_TMR0count,w
   815     00F2  1C03               	skipc
   816     00F3  28F5               	goto	u11
   817     00F4  28F6               	goto	u10
   818     00F5                     u11:
   819     00F5  28FB               	goto	l804
   820     00F6                     u10:
   821     00F6                     l800:
   822                           
   823                           ;slave_motors.c: 161:         TMR0count = 0;
   824     00F6  01F6               	clrf	_TMR0count
   825     00F7                     l802:
   826                           
   827                           ;slave_motors.c: 162:         RC2 = 1;
   828     00F7  1283               	bcf	3,5	;RP0=0, select bank0
   829     00F8  1303               	bcf	3,6	;RP1=0, select bank0
   830     00F9  1507               	bsf	7,2	;volatile
   831                           
   832                           ;slave_motors.c: 163:     }
   833     00FA  2904               	goto	l107
   834     00FB                     l804:
   835     00FB  0876               	movf	_TMR0count,w
   836     00FC  0674               	xorwf	angle_to_PWM@position,w
   837     00FD  1D03               	skipz
   838     00FE  2900               	goto	u21
   839     00FF  2901               	goto	u20
   840     0100                     u21:
   841     0100  2904               	goto	l107
   842     0101                     u20:
   843     0101                     l806:
   844                           
   845                           ;slave_motors.c: 165:         RC2 = 0;
   846     0101  1283               	bcf	3,5	;RP0=0, select bank0
   847     0102  1303               	bcf	3,6	;RP1=0, select bank0
   848     0103  1107               	bcf	7,2	;volatile
   849     0104                     l107:
   850     0104  0008               	return
   851     0105                     __end_of_angle_to_PWM:
   852                           
   853                           	psect	text5
   854     001F                     __ptext5:	
   855 ;; *************** function _isr *****************
   856 ;; Defined at:
   857 ;;		line 61 in file "slave_motors.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;		None
   860 ;; Auto vars:     Size  Location     Type
   861 ;;		None
   862 ;; Return value:  Size  Location     Type
   863 ;;                  1    wreg      void 
   864 ;; Registers used:
   865 ;;		wreg, status,2, status,0, btemp+1
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   871 ;;      Params:         0       0       0       0       0
   872 ;;      Locals:         0       0       0       0       0
   873 ;;      Temps:          4       0       0       0       0
   874 ;;      Totals:         4       0       0       0       0
   875 ;;Total ram usage:        4 bytes
   876 ;; Hardware stack levels used: 1
   877 ;; This function calls:
   878 ;;		Nothing
   879 ;; This function is called by:
   880 ;;		Interrupt level 1
   881 ;; This function uses a non-reentrant model
   882 ;;
   883                           
   884     001F                     _isr:	
   885                           ;psect for function _isr
   886                           
   887     001F                     i1l812:
   888     001F  1283               	bcf	3,5	;RP0=0, select bank0
   889     0020  1303               	bcf	3,6	;RP1=0, select bank0
   890     0021  1D8C               	btfss	12,3	;volatile
   891     0022  2824               	goto	u5_21
   892     0023  2825               	goto	u5_20
   893     0024                     u5_21:
   894     0024  287E               	goto	i1l71
   895     0025                     u5_20:
   896     0025                     i1l814:
   897     0025  1214               	bcf	20,4	;volatile
   898     0026  1B14               	btfsc	20,6	;volatile
   899     0027  2829               	goto	u6_21
   900     0028  282A               	goto	u6_20
   901     0029                     u6_21:
   902     0029  282E               	goto	i1l818
   903     002A                     u6_20:
   904     002A                     i1l816:
   905     002A  1F94               	btfss	20,7	;volatile
   906     002B  282D               	goto	u7_21
   907     002C  282E               	goto	u7_20
   908     002D                     u7_21:
   909     002D  2833               	goto	i1l826
   910     002E                     u7_20:
   911     002E                     i1l818:
   912     002E  0813               	movf	19,w	;volatile
   913     002F  00F9               	movwf	_discard
   914     0030                     i1l820:
   915     0030  1314               	bcf	20,6	;volatile
   916     0031                     i1l822:
   917     0031  1394               	bcf	20,7	;volatile
   918     0032                     i1l824:
   919     0032  1614               	bsf	20,4	;volatile
   920     0033                     i1l826:
   921     0033  1683               	bsf	3,5	;RP0=1, select bank1
   922     0034  1303               	bcf	3,6	;RP1=0, select bank1
   923     0035  1A94               	btfsc	20,5	;volatile
   924     0036  2838               	goto	u8_21
   925     0037  2839               	goto	u8_20
   926     0038                     u8_21:
   927     0038  285C               	goto	i1l75
   928     0039                     u8_20:
   929     0039                     i1l828:
   930     0039  1914               	btfsc	20,2	;volatile
   931     003A  283C               	goto	u9_21
   932     003B  283D               	goto	u9_20
   933     003C                     u9_21:
   934     003C  285C               	goto	i1l75
   935     003D                     u9_20:
   936     003D                     i1l830:
   937     003D  3004               	movlw	4
   938     003E  00F0               	movwf	??_isr
   939     003F                     u18_27:
   940     003F  0BF0               	decfsz	??_isr,f
   941     0040  283F               	goto	u18_27
   942     0041  0000               	nop
   943     0042  1283               	bcf	3,5	;RP0=0, select bank0
   944     0043  1303               	bcf	3,6	;RP1=0, select bank0
   945     0044  0813               	movf	19,w	;volatile
   946     0045  00F9               	movwf	_discard
   947     0046                     i1l832:
   948     0046  2847               	nop2	;2 cycle nop
   949     0047  2848               	nop2	;2 cycle nop
   950     0048                     i1l834:
   951     0048  1283               	bcf	3,5	;RP0=0, select bank0
   952     0049  1303               	bcf	3,6	;RP1=0, select bank0
   953     004A  118C               	bcf	12,3	;volatile
   954     004B                     i1l836:
   955     004B  1614               	bsf	20,4	;volatile
   956     004C                     i1l76:
   957     004C  1683               	bsf	3,5	;RP0=1, select bank1
   958     004D  1303               	bcf	3,6	;RP1=0, select bank1
   959     004E  1C14               	btfss	20,0	;volatile
   960     004F  2851               	goto	u10_21
   961     0050  2852               	goto	u10_20
   962     0051                     u10_21:
   963     0051  284C               	goto	i1l76
   964     0052                     u10_20:
   965     0052                     i1l838:
   966     0052  1283               	bcf	3,5	;RP0=0, select bank0
   967     0053  1303               	bcf	3,6	;RP1=0, select bank0
   968     0054  0813               	movf	19,w	;volatile
   969     0055  00F7               	movwf	_readI2C
   970     0056  30A6               	movlw	166
   971     0057  00F0               	movwf	??_isr
   972     0058                     u19_27:
   973     0058  0BF0               	decfsz	??_isr,f
   974     0059  2858               	goto	u19_27
   975     005A  0000               	nop
   976     005B  287B               	goto	i1l79
   977     005C                     i1l75:
   978     005C  1A94               	btfsc	20,5	;volatile
   979     005D  285F               	goto	u11_21
   980     005E  2860               	goto	u11_20
   981     005F                     u11_21:
   982     005F  287B               	goto	i1l79
   983     0060                     u11_20:
   984     0060                     i1l840:
   985     0060  1D14               	btfss	20,2	;volatile
   986     0061  2863               	goto	u12_21
   987     0062  2864               	goto	u12_20
   988     0063                     u12_21:
   989     0063  287B               	goto	i1l79
   990     0064                     u12_20:
   991     0064                     i1l842:
   992     0064  1283               	bcf	3,5	;RP0=0, select bank0
   993     0065  1303               	bcf	3,6	;RP1=0, select bank0
   994     0066  0813               	movf	19,w	;volatile
   995     0067  00F9               	movwf	_discard
   996     0068                     i1l844:
   997     0068  1683               	bsf	3,5	;RP0=1, select bank1
   998     0069  1303               	bcf	3,6	;RP1=0, select bank1
   999     006A  1014               	bcf	20,0	;volatile
  1000     006B  0878               	movf	_send_data,w
  1001     006C  1283               	bcf	3,5	;RP0=0, select bank0
  1002     006D  1303               	bcf	3,6	;RP1=0, select bank0
  1003     006E  0093               	movwf	19	;volatile
  1004     006F                     i1l846:
  1005     006F  1614               	bsf	20,4	;volatile
  1006     0070  30A6               	movlw	166
  1007     0071  00F0               	movwf	??_isr
  1008     0072                     u20_27:
  1009     0072  0BF0               	decfsz	??_isr,f
  1010     0073  2872               	goto	u20_27
  1011     0074  0000               	nop
  1012     0075                     i1l81:
  1013     0075  1683               	bsf	3,5	;RP0=1, select bank1
  1014     0076  1303               	bcf	3,6	;RP1=0, select bank1
  1015     0077  1814               	btfsc	20,0	;volatile
  1016     0078  287A               	goto	u13_21
  1017     0079  287B               	goto	u13_20
  1018     007A                     u13_21:
  1019     007A  2875               	goto	i1l81
  1020     007B                     u13_20:
  1021     007B                     i1l79:
  1022     007B  1283               	bcf	3,5	;RP0=0, select bank0
  1023     007C  1303               	bcf	3,6	;RP1=0, select bank0
  1024     007D  118C               	bcf	12,3	;volatile
  1025     007E                     i1l71:
  1026     007E  1D0B               	btfss	11,2	;volatile
  1027     007F  2881               	goto	u14_21
  1028     0080  2882               	goto	u14_20
  1029     0081                     u14_21:
  1030     0081  2889               	goto	i1l85
  1031     0082                     u14_20:
  1032     0082                     i1l848:
  1033     0082  3001               	movlw	1
  1034     0083  00FF               	movwf	btemp+1
  1035     0084  087F               	movf	btemp+1,w
  1036     0085  07F6               	addwf	_TMR0count,f
  1037     0086                     i1l850:
  1038     0086  3083               	movlw	131
  1039     0087  0081               	movwf	1	;volatile
  1040     0088                     i1l852:
  1041     0088  110B               	bcf	11,2	;volatile
  1042     0089                     i1l85:
  1043     0089  0873               	movf	??_isr+3,w
  1044     008A  00FF               	movwf	btemp+1
  1045     008B  0872               	movf	??_isr+2,w
  1046     008C  008A               	movwf	10
  1047     008D  0E71               	swapf	??_isr+1,w
  1048     008E  0083               	movwf	3
  1049     008F  0EFE               	swapf	btemp,f
  1050     0090  0E7E               	swapf	btemp,w
  1051     0091  0009               	retfie
  1052     0092                     __end_of_isr:
  1053     007E                     btemp	set	126	;btemp
  1054     007E                     wtemp0	set	126
  1055                           
  1056                           	psect	intentry
  1057     0004                     __pintentry:	
  1058                           ;incstack = 0
  1059                           ; Regs used in _isr: [wreg+status,2+status,0+btemp+1]
  1060                           
  1061     0004                     interrupt_function:
  1062     007E                     saved_w	set	btemp
  1063     0004  00FE               	movwf	btemp
  1064     0005  0E03               	swapf	3,w
  1065     0006  00F1               	movwf	??_isr+1
  1066     0007  080A               	movf	10,w
  1067     0008  00F2               	movwf	??_isr+2
  1068     0009  087F               	movf	btemp+1,w
  1069     000A  00F3               	movwf	??_isr+3
  1070     000B  120A  118A  281F   	ljmp	_isr
  1071                           
  1072                           	psect	config
  1073                           
  1074                           ;Config register CONFIG1 @ 0x2007
  1075                           ;	Oscillator Selection bits
  1076                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1077                           ;	Watchdog Timer Enable bit
  1078                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1079                           ;	Power-up Timer Enable bit
  1080                           ;	PWRTE = OFF, PWRT disabled
  1081                           ;	RE3/MCLR pin function select bit
  1082                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1083                           ;	Code Protection bit
  1084                           ;	CP = OFF, Program memory code protection is disabled
  1085                           ;	Data Code Protection bit
  1086                           ;	CPD = OFF, Data memory code protection is disabled
  1087                           ;	Brown Out Reset Selection bits
  1088                           ;	BOREN = OFF, BOR disabled
  1089                           ;	Internal External Switchover bit
  1090                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1091                           ;	Fail-Safe Clock Monitor Enabled bit
  1092                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1093                           ;	Low Voltage Programming Enable bit
  1094                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1095                           ;	In-Circuit Debugger Mode bit
  1096                           ;	DEBUG = 0x1, unprogrammed default
  1097     2007                     	org	8199
  1098     2007  20D4               	dw	8404
  1099                           
  1100                           ;Config register CONFIG2 @ 0x2008
  1101                           ;	Brown-out Reset Selection bit
  1102                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1103                           ;	Flash Program Memory Self Write Enable bits
  1104                           ;	WRT = OFF, Write protection off
  1105     2008                     	org	8200
  1106     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_angle_to_PWM
    _setup->_I2C_Slave_Init

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      30
                                              5 COMMON     1     1      0
                       _angle_to_PWM
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      15
                     _I2C_Slave_Init
                            _initPWM
 ---------------------------------------------------------------------------------
 (2) _initPWM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      15
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _angle_to_PWM                                         1     1      0      15
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _angle_to_PWM
   _setup
     _I2C_Slave_Init
     _initPWM

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       B      12        0.0%
ABS                  0      0       B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Sep 01 16:06:57 2023

                     _BF 04A0                       l91 00AD                       l98 00D4  
                     u10 00F6                       u11 00F5                       u20 0101  
                     u21 0100                      l101 0114                      l107 0104  
                    l162 00EE                      l800 00F6                      l802 00F7  
                    l804 00FB                      l806 0101                      l760 00E6  
                    l762 00E7                      l754 00D6                      l770 0109  
                    l764 00E8                      l756 00E4                      l772 010D  
                    l780 00B4                      l860 00A0                      l766 00EB  
                    l758 00E5                      l774 010E                      l790 00C4  
                    l782 00B8                      l862 00A9                      l854 0092  
                    l776 010F                      l768 0105                      l792 00C8  
                    l784 00BB                      l856 0097                      l778 0110  
                    l794 00C9                      l786 00BE                      l858 009A  
                    l796 00CF                      l788 00C1                      l798 00F0  
                    _CKP 00A4                      _GIE 005F                      _RC0 0038  
                    _RC2 003A                      u150 00A9                      u151 00A8  
                    _SCS 0478                      _PSA 040B                      _isr 001F  
                   ?_isr 0070                     _T0IE 005D                     _T0IF 005A  
                   _T0CS 040D                     _PEIE 005E                     i1l71 007E  
                   i1l81 0075                     i1l75 005C                     i1l76 004C  
                   i1l85 0089                     i1l79 007B                     _TMR0 0001  
                   _WCOL 00A7                     _D_nA 04A5                     u5_20 0025  
                   u5_21 0024                     u6_20 002A                     u6_21 0029  
                   u7_20 002E                     u7_21 002D                     u8_20 0039  
                   u8_21 0038                     u9_20 003D                     u9_21 003C  
                   _R_nW 04A2                     _main 0092                     btemp 007E  
                   start 000E                    ??_isr 0070                    ?_main 0070  
                  _ANSEL 0188                    i1l820 0030                    i1l812 001F  
                  i1l830 003D                    i1l822 0031                    i1l814 0025  
                  i1l840 0060                    i1l832 0046                    i1l824 0032  
                  i1l816 002A                    i1l850 0086                    i1l842 0064  
                  i1l834 0048                    i1l826 0033                    i1l818 002E  
                  i1l852 0088                    i1l844 0068                    i1l836 004B  
                  i1l828 0039                    i1l846 006F                    i1l838 0052  
                  i1l848 0082                    u10_20 0052                    u10_21 0051  
                  u11_20 0060                    u11_21 005F                    u12_20 0064  
                  u12_21 0063                    u20_27 0072                    u13_20 007B  
                  u13_21 007A                    u14_20 0082                    u14_21 0081  
                  u18_27 003F                    u19_27 0058                    _SSPIE 0463  
                  _SSPIF 0063                    _SSPOV 00A6     __end_of_angle_to_PWM 0105  
        __end_of_initPWM 0115                    _setup 00B4                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 00B4                   ??_main 0075                   ?_setup 0070  
                 _ANSELH 0189                   _SSPADD 0093                   _TRISC0 0438  
                 _TRISC2 043A                   _TRISC3 043B                   _TRISC4 043C  
                 _SSPBUF 0013                   _SSPCON 0014                ??_initPWM 0074  
           __pdataCOMMON 007A                   saved_w 007E  __end_of__initialization 001B  
         __pcstackCOMMON 0070            __end_of_setup 00D5           _OPTION_REGbits 0081  
                ??_setup 0075    I2C_Slave_Init@address 0074               __pmaintext 0092  
           _angle_to_PWM 00EF               __pintentry 0004                  _SSPCON2 0091  
                _SSPSTAT 0094                  __ptext1 00B4                  __ptext2 0105  
                __ptext3 00D5                  __ptext4 00EF                  __ptext5 001F  
                _discard 0079                  _readI2C 0077                  _initPWM 0105  
   angle_to_PWM@position 0074     end_of_initialization 001B           _I2C_Slave_Init 00D5  
              _TMR0count 0076                _TRISCbits 0087   __end_of_I2C_Slave_Init 00EF  
          __pidataCOMMON 0115      start_initialization 0011              __end_of_isr 0092  
        ?_I2C_Slave_Init 0070              __pbssCOMMON 0076                ___latbits 0002  
               ?_initPWM 0070        interrupt_function 0004                _send_data 0078  
       ??_I2C_Slave_Init 0074            ?_angle_to_PWM 0070                 _servoPos 007A  
               intlevel1 0000           ??_angle_to_PWM 0074               _OSCCONbits 008F  
            _SSPCON2bits 0091  
