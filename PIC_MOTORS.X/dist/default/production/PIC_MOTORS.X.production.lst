

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Aug 23 10:46:05 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18     0000                     
    19                           ; Generated 22/03/2023 GMT
    20                           ; 
    21                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0000                     	;# 
    54     0001                     	;# 
    55     0002                     	;# 
    56     0003                     	;# 
    57     0004                     	;# 
    58     0005                     	;# 
    59     0006                     	;# 
    60     0007                     	;# 
    61     0008                     	;# 
    62     0009                     	;# 
    63     000A                     	;# 
    64     000B                     	;# 
    65     000C                     	;# 
    66     000D                     	;# 
    67     000E                     	;# 
    68     000E                     	;# 
    69     000F                     	;# 
    70     0010                     	;# 
    71     0011                     	;# 
    72     0012                     	;# 
    73     0013                     	;# 
    74     0014                     	;# 
    75     0015                     	;# 
    76     0015                     	;# 
    77     0016                     	;# 
    78     0017                     	;# 
    79     0018                     	;# 
    80     0019                     	;# 
    81     001A                     	;# 
    82     001B                     	;# 
    83     001B                     	;# 
    84     001C                     	;# 
    85     001D                     	;# 
    86     001E                     	;# 
    87     001F                     	;# 
    88     0081                     	;# 
    89     0085                     	;# 
    90     0086                     	;# 
    91     0087                     	;# 
    92     0088                     	;# 
    93     0089                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     008E                     	;# 
    97     008F                     	;# 
    98     0090                     	;# 
    99     0091                     	;# 
   100     0092                     	;# 
   101     0093                     	;# 
   102     0093                     	;# 
   103     0093                     	;# 
   104     0094                     	;# 
   105     0095                     	;# 
   106     0096                     	;# 
   107     0097                     	;# 
   108     0098                     	;# 
   109     0099                     	;# 
   110     009A                     	;# 
   111     009B                     	;# 
   112     009C                     	;# 
   113     009D                     	;# 
   114     009E                     	;# 
   115     009F                     	;# 
   116     0105                     	;# 
   117     0107                     	;# 
   118     0108                     	;# 
   119     0109                     	;# 
   120     010C                     	;# 
   121     010C                     	;# 
   122     010D                     	;# 
   123     010E                     	;# 
   124     010F                     	;# 
   125     0185                     	;# 
   126     0187                     	;# 
   127     0188                     	;# 
   128     0189                     	;# 
   129     018C                     	;# 
   130     018D                     	;# 
   131     0000                     	;# 
   132     0001                     	;# 
   133     0002                     	;# 
   134     0003                     	;# 
   135     0004                     	;# 
   136     0005                     	;# 
   137     0006                     	;# 
   138     0007                     	;# 
   139     0008                     	;# 
   140     0009                     	;# 
   141     000A                     	;# 
   142     000B                     	;# 
   143     000C                     	;# 
   144     000D                     	;# 
   145     000E                     	;# 
   146     000E                     	;# 
   147     000F                     	;# 
   148     0010                     	;# 
   149     0011                     	;# 
   150     0012                     	;# 
   151     0013                     	;# 
   152     0014                     	;# 
   153     0015                     	;# 
   154     0015                     	;# 
   155     0016                     	;# 
   156     0017                     	;# 
   157     0018                     	;# 
   158     0019                     	;# 
   159     001A                     	;# 
   160     001B                     	;# 
   161     001B                     	;# 
   162     001C                     	;# 
   163     001D                     	;# 
   164     001E                     	;# 
   165     001F                     	;# 
   166     0081                     	;# 
   167     0085                     	;# 
   168     0086                     	;# 
   169     0087                     	;# 
   170     0088                     	;# 
   171     0089                     	;# 
   172     008C                     	;# 
   173     008D                     	;# 
   174     008E                     	;# 
   175     008F                     	;# 
   176     0090                     	;# 
   177     0091                     	;# 
   178     0092                     	;# 
   179     0093                     	;# 
   180     0093                     	;# 
   181     0093                     	;# 
   182     0094                     	;# 
   183     0095                     	;# 
   184     0096                     	;# 
   185     0097                     	;# 
   186     0098                     	;# 
   187     0099                     	;# 
   188     009A                     	;# 
   189     009B                     	;# 
   190     009C                     	;# 
   191     009D                     	;# 
   192     009E                     	;# 
   193     009F                     	;# 
   194     0105                     	;# 
   195     0107                     	;# 
   196     0108                     	;# 
   197     0109                     	;# 
   198     010C                     	;# 
   199     010C                     	;# 
   200     010D                     	;# 
   201     010E                     	;# 
   202     010F                     	;# 
   203     0185                     	;# 
   204     0187                     	;# 
   205     0188                     	;# 
   206     0189                     	;# 
   207     018C                     	;# 
   208     018D                     	;# 
   209     0000                     	;# 
   210     0001                     	;# 
   211     0002                     	;# 
   212     0003                     	;# 
   213     0004                     	;# 
   214     0005                     	;# 
   215     0006                     	;# 
   216     0007                     	;# 
   217     0008                     	;# 
   218     0009                     	;# 
   219     000A                     	;# 
   220     000B                     	;# 
   221     000C                     	;# 
   222     000D                     	;# 
   223     000E                     	;# 
   224     000E                     	;# 
   225     000F                     	;# 
   226     0010                     	;# 
   227     0011                     	;# 
   228     0012                     	;# 
   229     0013                     	;# 
   230     0014                     	;# 
   231     0015                     	;# 
   232     0015                     	;# 
   233     0016                     	;# 
   234     0017                     	;# 
   235     0018                     	;# 
   236     0019                     	;# 
   237     001A                     	;# 
   238     001B                     	;# 
   239     001B                     	;# 
   240     001C                     	;# 
   241     001D                     	;# 
   242     001E                     	;# 
   243     001F                     	;# 
   244     0081                     	;# 
   245     0085                     	;# 
   246     0086                     	;# 
   247     0087                     	;# 
   248     0088                     	;# 
   249     0089                     	;# 
   250     008C                     	;# 
   251     008D                     	;# 
   252     008E                     	;# 
   253     008F                     	;# 
   254     0090                     	;# 
   255     0091                     	;# 
   256     0092                     	;# 
   257     0093                     	;# 
   258     0093                     	;# 
   259     0093                     	;# 
   260     0094                     	;# 
   261     0095                     	;# 
   262     0096                     	;# 
   263     0097                     	;# 
   264     0098                     	;# 
   265     0099                     	;# 
   266     009A                     	;# 
   267     009B                     	;# 
   268     009C                     	;# 
   269     009D                     	;# 
   270     009E                     	;# 
   271     009F                     	;# 
   272     0105                     	;# 
   273     0107                     	;# 
   274     0108                     	;# 
   275     0109                     	;# 
   276     010C                     	;# 
   277     010C                     	;# 
   278     010D                     	;# 
   279     010E                     	;# 
   280     010F                     	;# 
   281     0185                     	;# 
   282     0187                     	;# 
   283     0188                     	;# 
   284     0189                     	;# 
   285     018C                     	;# 
   286     018D                     	;# 
   287                           
   288                           	psect	idataCOMMON
   289     011F                     __pidataCOMMON:
   290                           
   291                           ;initializer for _servoPos
   292     011F  3402               	retlw	2
   293     0014                     _SSPCON	set	20
   294     0005                     _PORTA	set	5
   295     0001                     _TMR0	set	1
   296     0013                     _SSPBUF	set	19
   297     005E                     _PEIE	set	94
   298     005F                     _GIE	set	95
   299     005D                     _T0IE	set	93
   300     003A                     _RC2	set	58
   301     005A                     _T0IF	set	90
   302     0038                     _RC0	set	56
   303     00A7                     _WCOL	set	167
   304     00A6                     _SSPOV	set	166
   305     00A4                     _CKP	set	164
   306     0063                     _SSPIF	set	99
   307     0091                     _SSPCON2bits	set	145
   308     0087                     _TRISCbits	set	135
   309     0094                     _SSPSTAT	set	148
   310     0093                     _SSPADD	set	147
   311     0091                     _SSPCON2	set	145
   312     0081                     _OPTION_REGbits	set	129
   313     008F                     _OSCCONbits	set	143
   314     0085                     _TRISA	set	133
   315     0463                     _SSPIE	set	1123
   316     043C                     _TRISC4	set	1084
   317     043B                     _TRISC3	set	1083
   318     040B                     _PSA	set	1035
   319     040D                     _T0CS	set	1037
   320     0478                     _SCS	set	1144
   321     043A                     _TRISC2	set	1082
   322     0438                     _TRISC0	set	1080
   323     04A0                     _BF	set	1184
   324     04A2                     _R_nW	set	1186
   325     04A5                     _D_nA	set	1189
   326     0189                     _ANSELH	set	393
   327     0188                     _ANSEL	set	392
   328                           
   329                           	psect	cinit
   330     0011                     start_initialization:	
   331                           ; #config settings
   332                           
   333     0011                     __initialization:
   334                           
   335                           ; Initialize objects allocated to COMMON
   336     0011  120A  118A  211F  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   337     0016  00FD               	movwf	__pdataCOMMON& (0+127)
   338                           
   339                           ; Clear objects allocated to COMMON
   340     0017  01F0               	clrf	__pbssCOMMON& (0+127)
   341     0018  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   342     0019  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   343     001A  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   344     001B  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   345     001C  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   346     001D  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   347     001E                     end_of_initialization:	
   348                           ;End of C runtime variable initialization code
   349                           
   350     001E                     __end_of__initialization:
   351     001E  0183               	clrf	3
   352     001F  120A  118A  2896   	ljmp	_main	;jump to C main() function
   353                           
   354                           	psect	bssCOMMON
   355     0070                     __pbssCOMMON:
   356     0070                     _stateDC:
   357     0070                     	ds	1
   358     0071                     _prevPos:
   359     0071                     	ds	1
   360     0072                     _TMR0count2:
   361     0072                     	ds	1
   362     0073                     _TMR0count:
   363     0073                     	ds	1
   364     0074                     _readI2C:
   365     0074                     	ds	1
   366     0075                     _send_data:
   367     0075                     	ds	1
   368     0076                     _discard:
   369     0076                     	ds	1
   370                           
   371                           	psect	dataCOMMON
   372     007D                     __pdataCOMMON:
   373     007D                     _servoPos:
   374     007D                     	ds	1
   375                           
   376                           	psect	cstackCOMMON
   377     0077                     __pcstackCOMMON:
   378     0077                     ?_setup:
   379     0077                     ?_angle_to_PWM:	
   380                           ; 1 bytes @ 0x0
   381                           
   382     0077                     ?_I2C_Slave_Init:	
   383                           ; 1 bytes @ 0x0
   384                           
   385     0077                     ?_initPWM:	
   386                           ; 1 bytes @ 0x0
   387                           
   388     0077                     ?_isr:	
   389                           ; 1 bytes @ 0x0
   390                           
   391     0077                     ??_isr:	
   392                           ; 1 bytes @ 0x0
   393                           
   394     0077                     ?_main:	
   395                           ; 1 bytes @ 0x0
   396                           
   397                           
   398                           ; 2 bytes @ 0x0
   399     0077                     	ds	4
   400     007B                     ??_angle_to_PWM:
   401     007B                     ??_I2C_Slave_Init:	
   402                           ; 1 bytes @ 0x4
   403                           
   404     007B                     ??_initPWM:	
   405                           ; 1 bytes @ 0x4
   406                           
   407     007B                     angle_to_PWM@position:	
   408                           ; 1 bytes @ 0x4
   409                           
   410     007B                     I2C_Slave_Init@address:	
   411                           ; 1 bytes @ 0x4
   412                           
   413                           
   414                           ; 1 bytes @ 0x4
   415     007B                     	ds	1
   416     007C                     ??_setup:
   417     007C                     ??_main:	
   418                           ; 1 bytes @ 0x5
   419                           
   420                           
   421                           ; 1 bytes @ 0x5
   422     007C                     	ds	1
   423                           
   424                           	psect	maintext
   425     0096                     __pmaintext:	
   426 ;;
   427 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   428 ;;
   429 ;; *************** function _main *****************
   430 ;; Defined at:
   431 ;;		line 108 in file "slave_motors.c"
   432 ;; Parameters:    Size  Location     Type
   433 ;;		None
   434 ;; Auto vars:     Size  Location     Type
   435 ;;		None
   436 ;; Return value:  Size  Location     Type
   437 ;;                  2   99[None  ] int 
   438 ;; Registers used:
   439 ;;		wreg, status,2, status,0, pclath, cstack
   440 ;; Tracked objects:
   441 ;;		On entry : B00/0
   442 ;;		On exit  : 0/0
   443 ;;		Unchanged: 0/0
   444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   445 ;;      Params:         0       0       0       0       0
   446 ;;      Locals:         0       0       0       0       0
   447 ;;      Temps:          1       0       0       0       0
   448 ;;      Totals:         1       0       0       0       0
   449 ;;Total ram usage:        1 bytes
   450 ;; Hardware stack levels required when called: 3
   451 ;; This function calls:
   452 ;;		_angle_to_PWM
   453 ;;		_setup
   454 ;; This function is called by:
   455 ;;		Startup code after reset
   456 ;; This function uses a non-reentrant model
   457 ;;
   458                           
   459     0096                     _main:	
   460                           ;psect for function _main
   461                           
   462     0096                     l864:	
   463                           ;incstack = 0
   464                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   465                           
   466                           
   467                           ;slave_motors.c: 109:     setup();
   468     0096  120A  118A  20BC  120A  118A  	fcall	_setup
   469     009B                     l866:
   470                           
   471                           ;slave_motors.c: 114:         PORTA = readI2C;
   472     009B  0874               	movf	_readI2C,w
   473     009C  1283               	bcf	3,5	;RP0=0, select bank0
   474     009D  1303               	bcf	3,6	;RP1=0, select bank0
   475     009E  0085               	movwf	5	;volatile
   476     009F                     l868:
   477                           
   478                           ;slave_motors.c: 115:         servoPos = readI2C & 0x0F;
   479     009F  0874               	movf	_readI2C,w
   480     00A0  390F               	andlw	15
   481     00A1  00FD               	movwf	_servoPos
   482     00A2                     l870:
   483                           
   484                           ;slave_motors.c: 118:             angle_to_PWM(servoPos);
   485     00A2  087D               	movf	_servoPos,w
   486     00A3  120A  118A  20F9  120A  118A  	fcall	_angle_to_PWM
   487     00A8                     l872:
   488                           
   489                           ;slave_motors.c: 121:         if((readI2C & 0xF0) == 0x10)
   490     00A8  30F0               	movlw	240
   491     00A9  0574               	andwf	_readI2C,w
   492     00AA  00FC               	movwf	??_main
   493     00AB  3010               	movlw	16
   494     00AC  067C               	xorwf	??_main,w
   495     00AD  1D03               	btfss	3,2
   496     00AE  28B0               	goto	u151
   497     00AF  28B1               	goto	u150
   498     00B0                     u151:
   499     00B0  28B5               	goto	l101
   500     00B1                     u150:
   501     00B1                     l874:
   502                           
   503                           ;slave_motors.c: 122:             RC0 = 1;
   504     00B1  1283               	bcf	3,5	;RP0=0, select bank0
   505     00B2  1303               	bcf	3,6	;RP1=0, select bank0
   506     00B3  1407               	bsf	7,0	;volatile
   507     00B4  289B               	goto	l866
   508     00B5                     l101:	
   509                           ;slave_motors.c: 123:         else
   510                           
   511                           
   512                           ;slave_motors.c: 124:             RC0 = 0;
   513     00B5  1283               	bcf	3,5	;RP0=0, select bank0
   514     00B6  1303               	bcf	3,6	;RP1=0, select bank0
   515     00B7  1007               	bcf	7,0	;volatile
   516     00B8  289B               	goto	l866
   517     00B9  120A  118A  280E   	ljmp	start
   518     00BC                     __end_of_main:
   519                           
   520                           	psect	text1
   521     00BC                     __ptext1:	
   522 ;; *************** function _setup *****************
   523 ;; Defined at:
   524 ;;		line 128 in file "slave_motors.c"
   525 ;; Parameters:    Size  Location     Type
   526 ;;		None
   527 ;; Auto vars:     Size  Location     Type
   528 ;;		None
   529 ;; Return value:  Size  Location     Type
   530 ;;                  1    wreg      void 
   531 ;; Registers used:
   532 ;;		wreg, status,2, status,0, pclath, cstack
   533 ;; Tracked objects:
   534 ;;		On entry : 0/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   538 ;;      Params:         0       0       0       0       0
   539 ;;      Locals:         0       0       0       0       0
   540 ;;      Temps:          0       0       0       0       0
   541 ;;      Totals:         0       0       0       0       0
   542 ;;Total ram usage:        0 bytes
   543 ;; Hardware stack levels used: 1
   544 ;; Hardware stack levels required when called: 2
   545 ;; This function calls:
   546 ;;		_I2C_Slave_Init
   547 ;;		_initPWM
   548 ;; This function is called by:
   549 ;;		_main
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553     00BC                     _setup:	
   554                           ;psect for function _setup
   555                           
   556     00BC                     l790:	
   557                           ;incstack = 0
   558                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   559                           
   560                           
   561                           ;slave_motors.c: 130:     ANSEL = 0;
   562     00BC  1683               	bsf	3,5	;RP0=1, select bank3
   563     00BD  1703               	bsf	3,6	;RP1=1, select bank3
   564     00BE  0188               	clrf	8	;volatile
   565                           
   566                           ;slave_motors.c: 131:     ANSELH= 0;
   567     00BF  0189               	clrf	9	;volatile
   568                           
   569                           ;slave_motors.c: 133:     TRISA = 0;
   570     00C0  1683               	bsf	3,5	;RP0=1, select bank1
   571     00C1  1303               	bcf	3,6	;RP1=0, select bank1
   572     00C2  0185               	clrf	5	;volatile
   573                           
   574                           ;slave_motors.c: 134:     PORTA = 0;
   575     00C3  1283               	bcf	3,5	;RP0=0, select bank0
   576     00C4  1303               	bcf	3,6	;RP1=0, select bank0
   577     00C5  0185               	clrf	5	;volatile
   578     00C6                     l792:
   579                           
   580                           ;slave_motors.c: 136:     TRISC0 = 0;
   581     00C6  1683               	bsf	3,5	;RP0=1, select bank1
   582     00C7  1303               	bcf	3,6	;RP1=0, select bank1
   583     00C8  1007               	bcf	7,0	;volatile
   584     00C9                     l794:
   585                           
   586                           ;slave_motors.c: 137:     TRISC2 = 0;
   587     00C9  1107               	bcf	7,2	;volatile
   588     00CA                     l796:
   589                           
   590                           ;slave_motors.c: 138:     RC0 = 0;
   591     00CA  1283               	bcf	3,5	;RP0=0, select bank0
   592     00CB  1303               	bcf	3,6	;RP1=0, select bank0
   593     00CC  1007               	bcf	7,0	;volatile
   594     00CD                     l798:
   595                           
   596                           ;slave_motors.c: 139:     RC2 = 0;
   597     00CD  1107               	bcf	7,2	;volatile
   598     00CE                     l800:
   599                           
   600                           ;slave_motors.c: 142:     OSCCONbits.IRCF = 0b111;
   601     00CE  3070               	movlw	112
   602     00CF  1683               	bsf	3,5	;RP0=1, select bank1
   603     00D0  1303               	bcf	3,6	;RP1=0, select bank1
   604     00D1  048F               	iorwf	15,f	;volatile
   605     00D2                     l802:
   606                           
   607                           ;slave_motors.c: 143:     SCS = 1;
   608     00D2  140F               	bsf	15,0	;volatile
   609     00D3                     l804:
   610                           
   611                           ;slave_motors.c: 146:     I2C_Slave_Init(0x30);
   612     00D3  3030               	movlw	48
   613     00D4  120A  118A  20DF  120A  118A  	fcall	_I2C_Slave_Init
   614     00D9                     l806:
   615                           
   616                           ;slave_motors.c: 149:     initPWM();
   617     00D9  120A  118A  210F  120A  118A  	fcall	_initPWM
   618     00DE                     l108:
   619     00DE  0008               	return
   620     00DF                     __end_of_setup:
   621                           
   622                           	psect	text2
   623     010F                     __ptext2:	
   624 ;; *************** function _initPWM *****************
   625 ;; Defined at:
   626 ;;		line 152 in file "slave_motors.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;		None
   629 ;; Auto vars:     Size  Location     Type
   630 ;;		None
   631 ;; Return value:  Size  Location     Type
   632 ;;                  1    wreg      void 
   633 ;; Registers used:
   634 ;;		wreg, status,2, status,0
   635 ;; Tracked objects:
   636 ;;		On entry : 0/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   640 ;;      Params:         0       0       0       0       0
   641 ;;      Locals:         0       0       0       0       0
   642 ;;      Temps:          0       0       0       0       0
   643 ;;      Totals:         0       0       0       0       0
   644 ;;Total ram usage:        0 bytes
   645 ;; Hardware stack levels used: 1
   646 ;; Hardware stack levels required when called: 1
   647 ;; This function calls:
   648 ;;		Nothing
   649 ;; This function is called by:
   650 ;;		_setup
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654     010F                     _initPWM:	
   655                           ;psect for function _initPWM
   656                           
   657     010F                     l778:	
   658                           ;incstack = 0
   659                           ; Regs used in _initPWM: [wreg+status,2+status,0]
   660                           
   661                           
   662                           ;slave_motors.c: 154:     T0CS = 0;
   663     010F  1683               	bsf	3,5	;RP0=1, select bank1
   664     0110  1303               	bcf	3,6	;RP1=0, select bank1
   665     0111  1281               	bcf	1,5	;volatile
   666                           
   667                           ;slave_motors.c: 155:     PSA = 0;
   668     0112  1181               	bcf	1,3	;volatile
   669     0113                     l780:
   670                           
   671                           ;slave_motors.c: 156:     OPTION_REGbits.PS = 0b010;
   672     0113  0801               	movf	1,w	;volatile
   673     0114  39F8               	andlw	-8
   674     0115  3802               	iorlw	2
   675     0116  0081               	movwf	1	;volatile
   676     0117                     l782:
   677                           
   678                           ;slave_motors.c: 157:     T0IE = 1;
   679     0117  168B               	bsf	11,5	;volatile
   680     0118                     l784:
   681                           
   682                           ;slave_motors.c: 158:     T0IF = 0;
   683     0118  110B               	bcf	11,2	;volatile
   684     0119                     l786:
   685                           
   686                           ;slave_motors.c: 159:     GIE = 1;
   687     0119  178B               	bsf	11,7	;volatile
   688     011A                     l788:
   689                           
   690                           ;slave_motors.c: 160:     TMR0 = 131;
   691     011A  3083               	movlw	131
   692     011B  1283               	bcf	3,5	;RP0=0, select bank0
   693     011C  1303               	bcf	3,6	;RP1=0, select bank0
   694     011D  0081               	movwf	1	;volatile
   695     011E                     l111:
   696     011E  0008               	return
   697     011F                     __end_of_initPWM:
   698                           
   699                           	psect	text3
   700     00DF                     __ptext3:	
   701 ;; *************** function _I2C_Slave_Init *****************
   702 ;; Defined at:
   703 ;;		line 93 in file "I2C.c"
   704 ;; Parameters:    Size  Location     Type
   705 ;;  address         1    wreg     unsigned char 
   706 ;; Auto vars:     Size  Location     Type
   707 ;;  address         1    4[COMMON] unsigned char 
   708 ;; Return value:  Size  Location     Type
   709 ;;                  1    wreg      void 
   710 ;; Registers used:
   711 ;;		wreg
   712 ;; Tracked objects:
   713 ;;		On entry : 0/0
   714 ;;		On exit  : 0/0
   715 ;;		Unchanged: 0/0
   716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   717 ;;      Params:         0       0       0       0       0
   718 ;;      Locals:         1       0       0       0       0
   719 ;;      Temps:          0       0       0       0       0
   720 ;;      Totals:         1       0       0       0       0
   721 ;;Total ram usage:        1 bytes
   722 ;; Hardware stack levels used: 1
   723 ;; Hardware stack levels required when called: 1
   724 ;; This function calls:
   725 ;;		Nothing
   726 ;; This function is called by:
   727 ;;		_setup
   728 ;; This function uses a non-reentrant model
   729 ;;
   730                           
   731     00DF                     _I2C_Slave_Init:	
   732                           ;psect for function _I2C_Slave_Init
   733                           
   734                           
   735                           ;incstack = 0
   736                           ; Regs used in _I2C_Slave_Init: [wreg]
   737                           ;I2C_Slave_Init@address stored from wreg
   738     00DF  00FB               	movwf	I2C_Slave_Init@address
   739     00E0                     l764:
   740                           
   741                           ;I2C.c: 93: void I2C_Slave_Init(uint8_t address);I2C.c: 94: {;I2C.c: 95:     SSPADD = ad
      +                          dress;
   742     00E0  087B               	movf	I2C_Slave_Init@address,w
   743     00E1  1683               	bsf	3,5	;RP0=1, select bank1
   744     00E2  1303               	bcf	3,6	;RP1=0, select bank1
   745     00E3  0093               	movwf	19	;volatile
   746                           
   747                           ;I2C.c: 96:     SSPCON = 0x36;
   748     00E4  3036               	movlw	54
   749     00E5  1283               	bcf	3,5	;RP0=0, select bank0
   750     00E6  1303               	bcf	3,6	;RP1=0, select bank0
   751     00E7  0094               	movwf	20	;volatile
   752                           
   753                           ;I2C.c: 97:     SSPSTAT = 0x80;
   754     00E8  3080               	movlw	128
   755     00E9  1683               	bsf	3,5	;RP0=1, select bank1
   756     00EA  1303               	bcf	3,6	;RP1=0, select bank1
   757     00EB  0094               	movwf	20	;volatile
   758                           
   759                           ;I2C.c: 98:     SSPCON2 = 0x01;
   760     00EC  3001               	movlw	1
   761     00ED  0091               	movwf	17	;volatile
   762     00EE                     l766:
   763                           
   764                           ;I2C.c: 99:     TRISC3 = 1;
   765     00EE  1587               	bsf	7,3	;volatile
   766     00EF                     l768:
   767                           
   768                           ;I2C.c: 100:     TRISC4 = 1;
   769     00EF  1607               	bsf	7,4	;volatile
   770     00F0                     l770:
   771                           
   772                           ;I2C.c: 101:     GIE = 1;
   773     00F0  178B               	bsf	11,7	;volatile
   774     00F1                     l772:
   775                           
   776                           ;I2C.c: 102:     PEIE = 1;
   777     00F1  170B               	bsf	11,6	;volatile
   778     00F2                     l774:
   779                           
   780                           ;I2C.c: 103:     SSPIF = 0;
   781     00F2  1283               	bcf	3,5	;RP0=0, select bank0
   782     00F3  1303               	bcf	3,6	;RP1=0, select bank0
   783     00F4  118C               	bcf	12,3	;volatile
   784     00F5                     l776:
   785                           
   786                           ;I2C.c: 104:     SSPIE = 1;
   787     00F5  1683               	bsf	3,5	;RP0=1, select bank1
   788     00F6  1303               	bcf	3,6	;RP1=0, select bank1
   789     00F7  158C               	bsf	12,3	;volatile
   790     00F8                     l172:
   791     00F8  0008               	return
   792     00F9                     __end_of_I2C_Slave_Init:
   793                           
   794                           	psect	text4
   795     00F9                     __ptext4:	
   796 ;; *************** function _angle_to_PWM *****************
   797 ;; Defined at:
   798 ;;		line 163 in file "slave_motors.c"
   799 ;; Parameters:    Size  Location     Type
   800 ;;  position        1    wreg     unsigned char 
   801 ;; Auto vars:     Size  Location     Type
   802 ;;  position        1    4[COMMON] unsigned char 
   803 ;; Return value:  Size  Location     Type
   804 ;;                  1    wreg      void 
   805 ;; Registers used:
   806 ;;		wreg, status,2
   807 ;; Tracked objects:
   808 ;;		On entry : 0/0
   809 ;;		On exit  : 0/0
   810 ;;		Unchanged: 0/0
   811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   812 ;;      Params:         0       0       0       0       0
   813 ;;      Locals:         1       0       0       0       0
   814 ;;      Temps:          0       0       0       0       0
   815 ;;      Totals:         1       0       0       0       0
   816 ;;Total ram usage:        1 bytes
   817 ;; Hardware stack levels used: 1
   818 ;; Hardware stack levels required when called: 1
   819 ;; This function calls:
   820 ;;		Nothing
   821 ;; This function is called by:
   822 ;;		_main
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826     00F9                     _angle_to_PWM:	
   827                           ;psect for function _angle_to_PWM
   828                           
   829                           
   830                           ;incstack = 0
   831                           ; Regs used in _angle_to_PWM: [wreg+status,2]
   832                           ;angle_to_PWM@position stored from wreg
   833     00F9  00FB               	movwf	angle_to_PWM@position
   834     00FA                     l808:
   835                           
   836                           ;slave_motors.c: 165:     if(TMR0count >= 40){
   837     00FA  3028               	movlw	40
   838     00FB  0273               	subwf	_TMR0count,w
   839     00FC  1C03               	skipc
   840     00FD  28FF               	goto	u11
   841     00FE  2900               	goto	u10
   842     00FF                     u11:
   843     00FF  2905               	goto	l814
   844     0100                     u10:
   845     0100                     l810:
   846                           
   847                           ;slave_motors.c: 166:         TMR0count = 0;
   848     0100  01F3               	clrf	_TMR0count
   849     0101                     l812:
   850                           
   851                           ;slave_motors.c: 167:         RC2 = 1;
   852     0101  1283               	bcf	3,5	;RP0=0, select bank0
   853     0102  1303               	bcf	3,6	;RP1=0, select bank0
   854     0103  1507               	bsf	7,2	;volatile
   855                           
   856                           ;slave_motors.c: 168:     }
   857     0104  290E               	goto	l117
   858     0105                     l814:
   859     0105  0873               	movf	_TMR0count,w
   860     0106  067B               	xorwf	angle_to_PWM@position,w
   861     0107  1D03               	skipz
   862     0108  290A               	goto	u21
   863     0109  290B               	goto	u20
   864     010A                     u21:
   865     010A  290E               	goto	l117
   866     010B                     u20:
   867     010B                     l816:
   868                           
   869                           ;slave_motors.c: 170:         RC2 = 0;
   870     010B  1283               	bcf	3,5	;RP0=0, select bank0
   871     010C  1303               	bcf	3,6	;RP1=0, select bank0
   872     010D  1107               	bcf	7,2	;volatile
   873     010E                     l117:
   874     010E  0008               	return
   875     010F                     __end_of_angle_to_PWM:
   876                           
   877                           	psect	text5
   878     0022                     __ptext5:	
   879 ;; *************** function _isr *****************
   880 ;; Defined at:
   881 ;;		line 59 in file "slave_motors.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;		None
   884 ;; Auto vars:     Size  Location     Type
   885 ;;		None
   886 ;; Return value:  Size  Location     Type
   887 ;;                  1    wreg      void 
   888 ;; Registers used:
   889 ;;		wreg, status,2, status,0, btemp+1
   890 ;; Tracked objects:
   891 ;;		On entry : 0/0
   892 ;;		On exit  : 0/0
   893 ;;		Unchanged: 0/0
   894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   895 ;;      Params:         0       0       0       0       0
   896 ;;      Locals:         0       0       0       0       0
   897 ;;      Temps:          4       0       0       0       0
   898 ;;      Totals:         4       0       0       0       0
   899 ;;Total ram usage:        4 bytes
   900 ;; Hardware stack levels used: 1
   901 ;; This function calls:
   902 ;;		Nothing
   903 ;; This function is called by:
   904 ;;		Interrupt level 1
   905 ;; This function uses a non-reentrant model
   906 ;;
   907                           
   908     0022                     _isr:	
   909                           ;psect for function _isr
   910                           
   911     0022                     i1l822:
   912                           
   913                           ;slave_motors.c: 60: 
   914     0022  1283               	bcf	3,5	;RP0=0, select bank0
   915     0023  1303               	bcf	3,6	;RP1=0, select bank0
   916     0024  1D8C               	btfss	12,3	;volatile
   917     0025  2827               	goto	u5_21
   918     0026  2828               	goto	u5_20
   919     0027                     u5_21:
   920     0027  2882               	goto	i1l81
   921     0028                     u5_20:
   922     0028                     i1l824:
   923                           
   924                           ;slave_motors.c: 61:         TMR0 = 131;
   925     0028  1214               	bcf	20,4	;volatile
   926                           
   927                           ;slave_motors.c: 63:     }
   928     0029  1B14               	btfsc	20,6	;volatile
   929     002A  282C               	goto	u6_21
   930     002B  282D               	goto	u6_20
   931     002C                     u6_21:
   932     002C  2831               	goto	i1l84
   933     002D                     u6_20:
   934     002D                     i1l826:
   935     002D  1F94               	btfss	20,7	;volatile
   936     002E  2830               	goto	u7_21
   937     002F  2831               	goto	u7_20
   938     0030                     u7_21:
   939     0030  2837               	goto	i1l836
   940     0031                     u7_20:
   941     0031                     i1l84:
   942                           
   943                           ;slave_motors.c: 64: }
   944     0031  1407               	bsf	7,0	;volatile
   945     0032                     i1l828:
   946     0032  0813               	movf	19,w	;volatile
   947     0033  00F6               	movwf	_discard
   948     0034                     i1l830:
   949     0034  1314               	bcf	20,6	;volatile
   950     0035                     i1l832:
   951     0035  1394               	bcf	20,7	;volatile
   952     0036                     i1l834:
   953     0036  1614               	bsf	20,4	;volatile
   954     0037                     i1l836:
   955     0037  1683               	bsf	3,5	;RP0=1, select bank1
   956     0038  1303               	bcf	3,6	;RP1=0, select bank1
   957     0039  1A94               	btfsc	20,5	;volatile
   958     003A  283C               	goto	u8_21
   959     003B  283D               	goto	u8_20
   960     003C                     u8_21:
   961     003C  2860               	goto	i1l85
   962     003D                     u8_20:
   963     003D                     i1l838:
   964     003D  1914               	btfsc	20,2	;volatile
   965     003E  2840               	goto	u9_21
   966     003F  2841               	goto	u9_20
   967     0040                     u9_21:
   968     0040  2860               	goto	i1l85
   969     0041                     u9_20:
   970     0041                     i1l840:
   971     0041  3004               	movlw	4
   972     0042  00F7               	movwf	??_isr
   973     0043                     u18_27:
   974     0043  0BF7               	decfsz	??_isr,f
   975     0044  2843               	goto	u18_27
   976     0045  0000               	nop
   977     0046  1283               	bcf	3,5	;RP0=0, select bank0
   978     0047  1303               	bcf	3,6	;RP1=0, select bank0
   979     0048  0813               	movf	19,w	;volatile
   980     0049  00F6               	movwf	_discard
   981     004A                     i1l842:
   982     004A  284B               	nop2	;2 cycle nop
   983     004B  284C               	nop2	;2 cycle nop
   984     004C                     i1l844:
   985     004C  1283               	bcf	3,5	;RP0=0, select bank0
   986     004D  1303               	bcf	3,6	;RP1=0, select bank0
   987     004E  118C               	bcf	12,3	;volatile
   988     004F                     i1l846:
   989     004F  1614               	bsf	20,4	;volatile
   990     0050                     i1l86:
   991     0050  1683               	bsf	3,5	;RP0=1, select bank1
   992     0051  1303               	bcf	3,6	;RP1=0, select bank1
   993     0052  1C14               	btfss	20,0	;volatile
   994     0053  2855               	goto	u10_21
   995     0054  2856               	goto	u10_20
   996     0055                     u10_21:
   997     0055  2850               	goto	i1l86
   998     0056                     u10_20:
   999     0056                     i1l848:
  1000     0056  1283               	bcf	3,5	;RP0=0, select bank0
  1001     0057  1303               	bcf	3,6	;RP1=0, select bank0
  1002     0058  0813               	movf	19,w	;volatile
  1003     0059  00F4               	movwf	_readI2C
  1004     005A  30A6               	movlw	166
  1005     005B  00F7               	movwf	??_isr
  1006     005C                     u19_27:
  1007     005C  0BF7               	decfsz	??_isr,f
  1008     005D  285C               	goto	u19_27
  1009     005E  0000               	nop
  1010     005F  287F               	goto	i1l89
  1011     0060                     i1l85:
  1012     0060  1A94               	btfsc	20,5	;volatile
  1013     0061  2863               	goto	u11_21
  1014     0062  2864               	goto	u11_20
  1015     0063                     u11_21:
  1016     0063  287F               	goto	i1l89
  1017     0064                     u11_20:
  1018     0064                     i1l850:
  1019     0064  1D14               	btfss	20,2	;volatile
  1020     0065  2867               	goto	u12_21
  1021     0066  2868               	goto	u12_20
  1022     0067                     u12_21:
  1023     0067  287F               	goto	i1l89
  1024     0068                     u12_20:
  1025     0068                     i1l852:
  1026     0068  1283               	bcf	3,5	;RP0=0, select bank0
  1027     0069  1303               	bcf	3,6	;RP1=0, select bank0
  1028     006A  0813               	movf	19,w	;volatile
  1029     006B  00F6               	movwf	_discard
  1030     006C                     i1l854:
  1031     006C  1683               	bsf	3,5	;RP0=1, select bank1
  1032     006D  1303               	bcf	3,6	;RP1=0, select bank1
  1033     006E  1014               	bcf	20,0	;volatile
  1034     006F  0875               	movf	_send_data,w
  1035     0070  1283               	bcf	3,5	;RP0=0, select bank0
  1036     0071  1303               	bcf	3,6	;RP1=0, select bank0
  1037     0072  0093               	movwf	19	;volatile
  1038     0073                     i1l856:
  1039     0073  1614               	bsf	20,4	;volatile
  1040     0074  30A6               	movlw	166
  1041     0075  00F7               	movwf	??_isr
  1042     0076                     u20_27:
  1043     0076  0BF7               	decfsz	??_isr,f
  1044     0077  2876               	goto	u20_27
  1045     0078  0000               	nop
  1046     0079                     i1l91:
  1047     0079  1683               	bsf	3,5	;RP0=1, select bank1
  1048     007A  1303               	bcf	3,6	;RP1=0, select bank1
  1049     007B  1814               	btfsc	20,0	;volatile
  1050     007C  287E               	goto	u13_21
  1051     007D  287F               	goto	u13_20
  1052     007E                     u13_21:
  1053     007E  2879               	goto	i1l91
  1054     007F                     u13_20:
  1055     007F                     i1l89:
  1056     007F  1283               	bcf	3,5	;RP0=0, select bank0
  1057     0080  1303               	bcf	3,6	;RP1=0, select bank0
  1058     0081  118C               	bcf	12,3	;volatile
  1059     0082                     i1l81:
  1060     0082  1D0B               	btfss	11,2	;volatile
  1061     0083  2885               	goto	u14_21
  1062     0084  2886               	goto	u14_20
  1063     0085                     u14_21:
  1064     0085  288D               	goto	i1l95
  1065     0086                     u14_20:
  1066     0086                     i1l858:
  1067     0086  3001               	movlw	1
  1068     0087  00FF               	movwf	btemp+1
  1069     0088  087F               	movf	btemp+1,w
  1070     0089  07F3               	addwf	_TMR0count,f
  1071     008A                     i1l860:
  1072     008A  3083               	movlw	131
  1073     008B  0081               	movwf	1	;volatile
  1074     008C                     i1l862:
  1075     008C  110B               	bcf	11,2	;volatile
  1076     008D                     i1l95:
  1077     008D  087A               	movf	??_isr+3,w
  1078     008E  00FF               	movwf	btemp+1
  1079     008F  0879               	movf	??_isr+2,w
  1080     0090  008A               	movwf	10
  1081     0091  0E78               	swapf	??_isr+1,w
  1082     0092  0083               	movwf	3
  1083     0093  0EFE               	swapf	btemp,f
  1084     0094  0E7E               	swapf	btemp,w
  1085     0095  0009               	retfie
  1086     0096                     __end_of_isr:
  1087     007E                     btemp	set	126	;btemp
  1088     007E                     wtemp0	set	126
  1089                           
  1090                           	psect	intentry
  1091     0004                     __pintentry:	
  1092                           ;incstack = 0
  1093                           ; Regs used in _isr: [wreg+status,2+status,0+btemp+1]
  1094                           
  1095     0004                     interrupt_function:
  1096     007E                     saved_w	set	btemp
  1097     0004  00FE               	movwf	btemp
  1098     0005  0E03               	swapf	3,w
  1099     0006  00F8               	movwf	??_isr+1
  1100     0007  080A               	movf	10,w
  1101     0008  00F9               	movwf	??_isr+2
  1102     0009  087F               	movf	btemp+1,w
  1103     000A  00FA               	movwf	??_isr+3
  1104     000B  120A  118A  2822   	ljmp	_isr
  1105                           
  1106                           	psect	config
  1107                           
  1108                           ;Config register CONFIG1 @ 0x2007
  1109                           ;	Oscillator Selection bits
  1110                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1111                           ;	Watchdog Timer Enable bit
  1112                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1113                           ;	Power-up Timer Enable bit
  1114                           ;	PWRTE = OFF, PWRT disabled
  1115                           ;	RE3/MCLR pin function select bit
  1116                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1117                           ;	Code Protection bit
  1118                           ;	CP = OFF, Program memory code protection is disabled
  1119                           ;	Data Code Protection bit
  1120                           ;	CPD = OFF, Data memory code protection is disabled
  1121                           ;	Brown Out Reset Selection bits
  1122                           ;	BOREN = OFF, BOR disabled
  1123                           ;	Internal External Switchover bit
  1124                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1125                           ;	Fail-Safe Clock Monitor Enabled bit
  1126                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1127                           ;	Low Voltage Programming Enable bit
  1128                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1129                           ;	In-Circuit Debugger Mode bit
  1130                           ;	DEBUG = 0x1, unprogrammed default
  1131     2007                     	org	8199
  1132     2007  20D4               	dw	8404
  1133                           
  1134                           ;Config register CONFIG2 @ 0x2008
  1135                           ;	Brown-out Reset Selection bit
  1136                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1137                           ;	Flash Program Memory Self Write Enable bits
  1138                           ;	WRT = OFF, Write protection off
  1139     2008                     	org	8200
  1140     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_angle_to_PWM
    _setup->_I2C_Slave_Init

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      30
                                              5 COMMON     1     1      0
                       _angle_to_PWM
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      15
                     _I2C_Slave_Init
                            _initPWM
 ---------------------------------------------------------------------------------
 (2) _initPWM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      15
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _angle_to_PWM                                         1     1      0      15
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _angle_to_PWM
   _setup
     _I2C_Slave_Init
     _initPWM

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       E      12        0.0%
ABS                  0      0       E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Aug 23 10:46:05 2023

                     _BF 04A0                       u10 0100                       u11 00FF  
                     u20 010B                       u21 010A                      l101 00B5  
                    l111 011E                      l108 00DE                      l117 010E  
                    l172 00F8                      l800 00CE                      l810 0100  
                    l802 00D2                      l812 0101                      l804 00D3  
                    l814 0105                      l806 00D9                      l816 010B  
                    l808 00FA                      l770 00F0                      l772 00F1  
                    l764 00E0                      l780 0113                      l774 00F2  
                    l766 00EE                      l782 0117                      l790 00BC  
                    l870 00A2                      l776 00F5                      l768 00EF  
                    l784 0118                      l792 00C6                      l872 00A8  
                    l864 0096                      l786 0119                      l778 010F  
                    l794 00C9                      l874 00B1                      l866 009B  
                    l788 011A                      l796 00CA                      l868 009F  
                    l798 00CD                      _CKP 00A4                      _GIE 005F  
                    _RC0 0038                      _RC2 003A                      u150 00B1  
                    u151 00B0                      _SCS 0478                      _PSA 040B  
                    _isr 0022                     ?_isr 0077                     _T0IE 005D  
                   _T0IF 005A                     _T0CS 040D                     _PEIE 005E  
                   i1l81 0082                     i1l91 0079                     i1l84 0031  
                   i1l85 0060                     i1l86 0050                     i1l95 008D  
                   i1l89 007F                     _TMR0 0001                     _WCOL 00A7  
                   _D_nA 04A5                     u5_20 0028                     u5_21 0027  
                   u6_20 002D                     u6_21 002C                     u7_20 0031  
                   u7_21 0030                     u8_20 003D                     u8_21 003C  
                   u9_20 0041                     u9_21 0040                     _R_nW 04A2  
                   _main 0096                     btemp 007E                     start 000E  
                  ??_isr 0077                    ?_main 0077                    _ANSEL 0188  
                  i1l830 0034                    i1l822 0022                    i1l840 0041  
                  i1l832 0035                    i1l824 0028                    i1l850 0064  
                  i1l842 004A                    i1l834 0036                    i1l826 002D  
                  i1l860 008A                    i1l852 0068                    i1l844 004C  
                  i1l828 0032                    i1l836 0037                    i1l862 008C  
                  i1l854 006C                    i1l846 004F                    i1l838 003D  
                  i1l856 0073                    i1l848 0056                    i1l858 0086  
                  u10_20 0056                    u10_21 0055                    u11_20 0064  
                  u11_21 0063                    u12_20 0068                    u12_21 0067  
                  u20_27 0076                    u13_20 007F                    u13_21 007E  
                  u14_20 0086                    u14_21 0085                    u18_27 0043  
                  _PORTA 0005                    u19_27 005C                    _TRISA 0085  
                  _SSPIE 0463                    _SSPIF 0063                    _SSPOV 00A6  
   __end_of_angle_to_PWM 010F          __end_of_initPWM 011F                    _setup 00BC  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 00BC                   ??_main 007C  
                 ?_setup 0077                   _ANSELH 0189                   _SSPADD 0093  
                 _TRISC0 0438                   _TRISC2 043A                   _TRISC3 043B  
                 _TRISC4 043C                   _SSPBUF 0013                   _SSPCON 0014  
              ??_initPWM 007B             __pdataCOMMON 007D                   saved_w 007E  
__end_of__initialization 001E           __pcstackCOMMON 0077            __end_of_setup 00DF  
         _OPTION_REGbits 0081                  ??_setup 007C    I2C_Slave_Init@address 007B  
             __pmaintext 0096             _angle_to_PWM 00F9               __pintentry 0004  
                _SSPCON2 0091                  _SSPSTAT 0094                  __ptext1 00BC  
                __ptext2 010F                  __ptext3 00DF                  __ptext4 00F9  
                __ptext5 0022                  _discard 0076                  _readI2C 0074  
                _initPWM 010F     angle_to_PWM@position 007B                  _prevPos 0071  
                _stateDC 0070     end_of_initialization 001E           _I2C_Slave_Init 00DF  
              _TMR0count 0073                _TRISCbits 0087   __end_of_I2C_Slave_Init 00F9  
          __pidataCOMMON 011F      start_initialization 0011              __end_of_isr 0096  
        ?_I2C_Slave_Init 0077              __pbssCOMMON 0070                ___latbits 0002  
               ?_initPWM 0077        interrupt_function 0004                _send_data 0075  
       ??_I2C_Slave_Init 007B            ?_angle_to_PWM 0077                 _servoPos 007D  
               intlevel1 0000           ??_angle_to_PWM 007B               _OSCCONbits 008F  
            _SSPCON2bits 0091               _TMR0count2 0072  
