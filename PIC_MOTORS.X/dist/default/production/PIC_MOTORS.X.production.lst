

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Aug 24 17:22:00 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18     0000                     
    19                           ; Generated 22/03/2023 GMT
    20                           ; 
    21                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0000                     	;# 
    54     0001                     	;# 
    55     0002                     	;# 
    56     0003                     	;# 
    57     0004                     	;# 
    58     0005                     	;# 
    59     0006                     	;# 
    60     0007                     	;# 
    61     0008                     	;# 
    62     0009                     	;# 
    63     000A                     	;# 
    64     000B                     	;# 
    65     000C                     	;# 
    66     000D                     	;# 
    67     000E                     	;# 
    68     000E                     	;# 
    69     000F                     	;# 
    70     0010                     	;# 
    71     0011                     	;# 
    72     0012                     	;# 
    73     0013                     	;# 
    74     0014                     	;# 
    75     0015                     	;# 
    76     0015                     	;# 
    77     0016                     	;# 
    78     0017                     	;# 
    79     0018                     	;# 
    80     0019                     	;# 
    81     001A                     	;# 
    82     001B                     	;# 
    83     001B                     	;# 
    84     001C                     	;# 
    85     001D                     	;# 
    86     001E                     	;# 
    87     001F                     	;# 
    88     0081                     	;# 
    89     0085                     	;# 
    90     0086                     	;# 
    91     0087                     	;# 
    92     0088                     	;# 
    93     0089                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     008E                     	;# 
    97     008F                     	;# 
    98     0090                     	;# 
    99     0091                     	;# 
   100     0092                     	;# 
   101     0093                     	;# 
   102     0093                     	;# 
   103     0093                     	;# 
   104     0094                     	;# 
   105     0095                     	;# 
   106     0096                     	;# 
   107     0097                     	;# 
   108     0098                     	;# 
   109     0099                     	;# 
   110     009A                     	;# 
   111     009B                     	;# 
   112     009C                     	;# 
   113     009D                     	;# 
   114     009E                     	;# 
   115     009F                     	;# 
   116     0105                     	;# 
   117     0107                     	;# 
   118     0108                     	;# 
   119     0109                     	;# 
   120     010C                     	;# 
   121     010C                     	;# 
   122     010D                     	;# 
   123     010E                     	;# 
   124     010F                     	;# 
   125     0185                     	;# 
   126     0187                     	;# 
   127     0188                     	;# 
   128     0189                     	;# 
   129     018C                     	;# 
   130     018D                     	;# 
   131     0000                     	;# 
   132     0001                     	;# 
   133     0002                     	;# 
   134     0003                     	;# 
   135     0004                     	;# 
   136     0005                     	;# 
   137     0006                     	;# 
   138     0007                     	;# 
   139     0008                     	;# 
   140     0009                     	;# 
   141     000A                     	;# 
   142     000B                     	;# 
   143     000C                     	;# 
   144     000D                     	;# 
   145     000E                     	;# 
   146     000E                     	;# 
   147     000F                     	;# 
   148     0010                     	;# 
   149     0011                     	;# 
   150     0012                     	;# 
   151     0013                     	;# 
   152     0014                     	;# 
   153     0015                     	;# 
   154     0015                     	;# 
   155     0016                     	;# 
   156     0017                     	;# 
   157     0018                     	;# 
   158     0019                     	;# 
   159     001A                     	;# 
   160     001B                     	;# 
   161     001B                     	;# 
   162     001C                     	;# 
   163     001D                     	;# 
   164     001E                     	;# 
   165     001F                     	;# 
   166     0081                     	;# 
   167     0085                     	;# 
   168     0086                     	;# 
   169     0087                     	;# 
   170     0088                     	;# 
   171     0089                     	;# 
   172     008C                     	;# 
   173     008D                     	;# 
   174     008E                     	;# 
   175     008F                     	;# 
   176     0090                     	;# 
   177     0091                     	;# 
   178     0092                     	;# 
   179     0093                     	;# 
   180     0093                     	;# 
   181     0093                     	;# 
   182     0094                     	;# 
   183     0095                     	;# 
   184     0096                     	;# 
   185     0097                     	;# 
   186     0098                     	;# 
   187     0099                     	;# 
   188     009A                     	;# 
   189     009B                     	;# 
   190     009C                     	;# 
   191     009D                     	;# 
   192     009E                     	;# 
   193     009F                     	;# 
   194     0105                     	;# 
   195     0107                     	;# 
   196     0108                     	;# 
   197     0109                     	;# 
   198     010C                     	;# 
   199     010C                     	;# 
   200     010D                     	;# 
   201     010E                     	;# 
   202     010F                     	;# 
   203     0185                     	;# 
   204     0187                     	;# 
   205     0188                     	;# 
   206     0189                     	;# 
   207     018C                     	;# 
   208     018D                     	;# 
   209     0000                     	;# 
   210     0001                     	;# 
   211     0002                     	;# 
   212     0003                     	;# 
   213     0004                     	;# 
   214     0005                     	;# 
   215     0006                     	;# 
   216     0007                     	;# 
   217     0008                     	;# 
   218     0009                     	;# 
   219     000A                     	;# 
   220     000B                     	;# 
   221     000C                     	;# 
   222     000D                     	;# 
   223     000E                     	;# 
   224     000E                     	;# 
   225     000F                     	;# 
   226     0010                     	;# 
   227     0011                     	;# 
   228     0012                     	;# 
   229     0013                     	;# 
   230     0014                     	;# 
   231     0015                     	;# 
   232     0015                     	;# 
   233     0016                     	;# 
   234     0017                     	;# 
   235     0018                     	;# 
   236     0019                     	;# 
   237     001A                     	;# 
   238     001B                     	;# 
   239     001B                     	;# 
   240     001C                     	;# 
   241     001D                     	;# 
   242     001E                     	;# 
   243     001F                     	;# 
   244     0081                     	;# 
   245     0085                     	;# 
   246     0086                     	;# 
   247     0087                     	;# 
   248     0088                     	;# 
   249     0089                     	;# 
   250     008C                     	;# 
   251     008D                     	;# 
   252     008E                     	;# 
   253     008F                     	;# 
   254     0090                     	;# 
   255     0091                     	;# 
   256     0092                     	;# 
   257     0093                     	;# 
   258     0093                     	;# 
   259     0093                     	;# 
   260     0094                     	;# 
   261     0095                     	;# 
   262     0096                     	;# 
   263     0097                     	;# 
   264     0098                     	;# 
   265     0099                     	;# 
   266     009A                     	;# 
   267     009B                     	;# 
   268     009C                     	;# 
   269     009D                     	;# 
   270     009E                     	;# 
   271     009F                     	;# 
   272     0105                     	;# 
   273     0107                     	;# 
   274     0108                     	;# 
   275     0109                     	;# 
   276     010C                     	;# 
   277     010C                     	;# 
   278     010D                     	;# 
   279     010E                     	;# 
   280     010F                     	;# 
   281     0185                     	;# 
   282     0187                     	;# 
   283     0188                     	;# 
   284     0189                     	;# 
   285     018C                     	;# 
   286     018D                     	;# 
   287                           
   288                           	psect	idataCOMMON
   289     0116                     __pidataCOMMON:
   290                           
   291                           ;initializer for _servoPos
   292     0116  3402               	retlw	2
   293     0014                     _SSPCON	set	20
   294     0001                     _TMR0	set	1
   295     0013                     _SSPBUF	set	19
   296     005E                     _PEIE	set	94
   297     005F                     _GIE	set	95
   298     005D                     _T0IE	set	93
   299     003A                     _RC2	set	58
   300     0038                     _RC0	set	56
   301     005A                     _T0IF	set	90
   302     00A7                     _WCOL	set	167
   303     00A6                     _SSPOV	set	166
   304     00A4                     _CKP	set	164
   305     0063                     _SSPIF	set	99
   306     0091                     _SSPCON2bits	set	145
   307     0087                     _TRISCbits	set	135
   308     0094                     _SSPSTAT	set	148
   309     0093                     _SSPADD	set	147
   310     0091                     _SSPCON2	set	145
   311     0081                     _OPTION_REGbits	set	129
   312     008F                     _OSCCONbits	set	143
   313     0463                     _SSPIE	set	1123
   314     043C                     _TRISC4	set	1084
   315     043B                     _TRISC3	set	1083
   316     040B                     _PSA	set	1035
   317     040D                     _T0CS	set	1037
   318     0478                     _SCS	set	1144
   319     043A                     _TRISC2	set	1082
   320     0438                     _TRISC0	set	1080
   321     04A0                     _BF	set	1184
   322     04A2                     _R_nW	set	1186
   323     04A5                     _D_nA	set	1189
   324     0189                     _ANSELH	set	393
   325     0188                     _ANSEL	set	392
   326                           
   327                           	psect	cinit
   328     0011                     start_initialization:	
   329                           ; #config settings
   330                           
   331     0011                     __initialization:
   332                           
   333                           ; Initialize objects allocated to COMMON
   334     0011  120A  118A  2116  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   335     0016  00FB               	movwf	__pdataCOMMON& (0+127)
   336                           
   337                           ; Clear objects allocated to COMMON
   338     0017  01F6               	clrf	__pbssCOMMON& (0+127)
   339     0018  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   340     0019  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   341     001A  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   342     001B  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   343     001C                     end_of_initialization:	
   344                           ;End of C runtime variable initialization code
   345                           
   346     001C                     __end_of__initialization:
   347     001C  0183               	clrf	3
   348     001D  120A  118A  2893   	ljmp	_main	;jump to C main() function
   349                           
   350                           	psect	bssCOMMON
   351     0076                     __pbssCOMMON:
   352     0076                     _TMR0count2:
   353     0076                     	ds	1
   354     0077                     _TMR0count:
   355     0077                     	ds	1
   356     0078                     _readI2C:
   357     0078                     	ds	1
   358     0079                     _send_data:
   359     0079                     	ds	1
   360     007A                     _discard:
   361     007A                     	ds	1
   362                           
   363                           	psect	dataCOMMON
   364     007B                     __pdataCOMMON:
   365     007B                     _servoPos:
   366     007B                     	ds	1
   367                           
   368                           	psect	cstackCOMMON
   369     0070                     __pcstackCOMMON:
   370     0070                     ?_setup:
   371     0070                     ?_angle_to_PWM:	
   372                           ; 1 bytes @ 0x0
   373                           
   374     0070                     ?_I2C_Slave_Init:	
   375                           ; 1 bytes @ 0x0
   376                           
   377     0070                     ?_initPWM:	
   378                           ; 1 bytes @ 0x0
   379                           
   380     0070                     ?_isr:	
   381                           ; 1 bytes @ 0x0
   382                           
   383     0070                     ??_isr:	
   384                           ; 1 bytes @ 0x0
   385                           
   386     0070                     ?_main:	
   387                           ; 1 bytes @ 0x0
   388                           
   389                           
   390                           ; 2 bytes @ 0x0
   391     0070                     	ds	4
   392     0074                     ??_angle_to_PWM:
   393     0074                     ??_I2C_Slave_Init:	
   394                           ; 1 bytes @ 0x4
   395                           
   396     0074                     ??_initPWM:	
   397                           ; 1 bytes @ 0x4
   398                           
   399     0074                     angle_to_PWM@position:	
   400                           ; 1 bytes @ 0x4
   401                           
   402     0074                     I2C_Slave_Init@address:	
   403                           ; 1 bytes @ 0x4
   404                           
   405                           
   406                           ; 1 bytes @ 0x4
   407     0074                     	ds	1
   408     0075                     ??_setup:
   409     0075                     ??_main:	
   410                           ; 1 bytes @ 0x5
   411                           
   412                           
   413                           ; 1 bytes @ 0x5
   414     0075                     	ds	1
   415                           
   416                           	psect	maintext
   417     0093                     __pmaintext:	
   418 ;;
   419 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   420 ;;
   421 ;; *************** function _main *****************
   422 ;; Defined at:
   423 ;;		line 109 in file "slave_motors.c"
   424 ;; Parameters:    Size  Location     Type
   425 ;;		None
   426 ;; Auto vars:     Size  Location     Type
   427 ;;		None
   428 ;; Return value:  Size  Location     Type
   429 ;;                  2   91[None  ] int 
   430 ;; Registers used:
   431 ;;		wreg, status,2, status,0, pclath, cstack
   432 ;; Tracked objects:
   433 ;;		On entry : B00/0
   434 ;;		On exit  : 0/0
   435 ;;		Unchanged: 0/0
   436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   437 ;;      Params:         0       0       0       0       0
   438 ;;      Locals:         0       0       0       0       0
   439 ;;      Temps:          1       0       0       0       0
   440 ;;      Totals:         1       0       0       0       0
   441 ;;Total ram usage:        1 bytes
   442 ;; Hardware stack levels required when called: 3
   443 ;; This function calls:
   444 ;;		_angle_to_PWM
   445 ;;		_setup
   446 ;; This function is called by:
   447 ;;		Startup code after reset
   448 ;; This function uses a non-reentrant model
   449 ;;
   450                           
   451     0093                     _main:	
   452                           ;psect for function _main
   453                           
   454     0093                     l856:	
   455                           ;incstack = 0
   456                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   457                           
   458                           
   459                           ;slave_motors.c: 110:     setup();
   460     0093  120A  118A  20B5  120A  118A  	fcall	_setup
   461     0098                     l858:
   462                           
   463                           ;slave_motors.c: 115:         servoPos = readI2C & 0x0F;
   464     0098  0878               	movf	_readI2C,w
   465     0099  390F               	andlw	15
   466     009A  00FB               	movwf	_servoPos
   467     009B                     l860:
   468                           
   469                           ;slave_motors.c: 117:         angle_to_PWM(servoPos);
   470     009B  087B               	movf	_servoPos,w
   471     009C  120A  118A  20F0  120A  118A  	fcall	_angle_to_PWM
   472     00A1                     l862:
   473                           
   474                           ;slave_motors.c: 120:         if((readI2C & 0xF0) == 0x10)
   475     00A1  30F0               	movlw	240
   476     00A2  0578               	andwf	_readI2C,w
   477     00A3  00F5               	movwf	??_main
   478     00A4  3010               	movlw	16
   479     00A5  0675               	xorwf	??_main,w
   480     00A6  1D03               	btfss	3,2
   481     00A7  28A9               	goto	u151
   482     00A8  28AA               	goto	u150
   483     00A9                     u151:
   484     00A9  28AE               	goto	l93
   485     00AA                     u150:
   486     00AA                     l864:
   487                           
   488                           ;slave_motors.c: 121:             RC0 = 1;
   489     00AA  1283               	bcf	3,5	;RP0=0, select bank0
   490     00AB  1303               	bcf	3,6	;RP1=0, select bank0
   491     00AC  1407               	bsf	7,0	;volatile
   492     00AD  2898               	goto	l858
   493     00AE                     l93:	
   494                           ;slave_motors.c: 122:         else
   495                           
   496                           
   497                           ;slave_motors.c: 123:             RC0 = 0;
   498     00AE  1283               	bcf	3,5	;RP0=0, select bank0
   499     00AF  1303               	bcf	3,6	;RP1=0, select bank0
   500     00B0  1007               	bcf	7,0	;volatile
   501     00B1  2898               	goto	l858
   502     00B2  120A  118A  280E   	ljmp	start
   503     00B5                     __end_of_main:
   504                           
   505                           	psect	text1
   506     00B5                     __ptext1:	
   507 ;; *************** function _setup *****************
   508 ;; Defined at:
   509 ;;		line 127 in file "slave_motors.c"
   510 ;; Parameters:    Size  Location     Type
   511 ;;		None
   512 ;; Auto vars:     Size  Location     Type
   513 ;;		None
   514 ;; Return value:  Size  Location     Type
   515 ;;                  1    wreg      void 
   516 ;; Registers used:
   517 ;;		wreg, status,2, status,0, pclath, cstack
   518 ;; Tracked objects:
   519 ;;		On entry : 0/0
   520 ;;		On exit  : 0/0
   521 ;;		Unchanged: 0/0
   522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   523 ;;      Params:         0       0       0       0       0
   524 ;;      Locals:         0       0       0       0       0
   525 ;;      Temps:          0       0       0       0       0
   526 ;;      Totals:         0       0       0       0       0
   527 ;;Total ram usage:        0 bytes
   528 ;; Hardware stack levels used: 1
   529 ;; Hardware stack levels required when called: 2
   530 ;; This function calls:
   531 ;;		_I2C_Slave_Init
   532 ;;		_initPWM
   533 ;; This function is called by:
   534 ;;		_main
   535 ;; This function uses a non-reentrant model
   536 ;;
   537                           
   538     00B5                     _setup:	
   539                           ;psect for function _setup
   540                           
   541     00B5                     l782:	
   542                           ;incstack = 0
   543                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   544                           
   545                           
   546                           ;slave_motors.c: 129:     ANSEL = 0;
   547     00B5  1683               	bsf	3,5	;RP0=1, select bank3
   548     00B6  1703               	bsf	3,6	;RP1=1, select bank3
   549     00B7  0188               	clrf	8	;volatile
   550                           
   551                           ;slave_motors.c: 130:     ANSELH= 0;
   552     00B8  0189               	clrf	9	;volatile
   553     00B9                     l784:
   554                           
   555                           ;slave_motors.c: 132:     TRISC0 = 0;
   556     00B9  1683               	bsf	3,5	;RP0=1, select bank1
   557     00BA  1303               	bcf	3,6	;RP1=0, select bank1
   558     00BB  1007               	bcf	7,0	;volatile
   559     00BC                     l786:
   560                           
   561                           ;slave_motors.c: 133:     RC0 = 0;
   562     00BC  1283               	bcf	3,5	;RP0=0, select bank0
   563     00BD  1303               	bcf	3,6	;RP1=0, select bank0
   564     00BE  1007               	bcf	7,0	;volatile
   565     00BF                     l788:
   566                           
   567                           ;slave_motors.c: 134:     TRISC2 = 0;
   568     00BF  1683               	bsf	3,5	;RP0=1, select bank1
   569     00C0  1303               	bcf	3,6	;RP1=0, select bank1
   570     00C1  1107               	bcf	7,2	;volatile
   571     00C2                     l790:
   572                           
   573                           ;slave_motors.c: 135:     RC2 = 0;
   574     00C2  1283               	bcf	3,5	;RP0=0, select bank0
   575     00C3  1303               	bcf	3,6	;RP1=0, select bank0
   576     00C4  1107               	bcf	7,2	;volatile
   577     00C5                     l792:
   578                           
   579                           ;slave_motors.c: 138:     OSCCONbits.IRCF = 0b111;
   580     00C5  3070               	movlw	112
   581     00C6  1683               	bsf	3,5	;RP0=1, select bank1
   582     00C7  1303               	bcf	3,6	;RP1=0, select bank1
   583     00C8  048F               	iorwf	15,f	;volatile
   584     00C9                     l794:
   585                           
   586                           ;slave_motors.c: 139:     SCS = 1;
   587     00C9  140F               	bsf	15,0	;volatile
   588     00CA                     l796:
   589                           
   590                           ;slave_motors.c: 142:     I2C_Slave_Init(0x30);
   591     00CA  3030               	movlw	48
   592     00CB  120A  118A  20D6  120A  118A  	fcall	_I2C_Slave_Init
   593     00D0                     l798:
   594                           
   595                           ;slave_motors.c: 145:     initPWM();
   596     00D0  120A  118A  2106  120A  118A  	fcall	_initPWM
   597     00D5                     l100:
   598     00D5  0008               	return
   599     00D6                     __end_of_setup:
   600                           
   601                           	psect	text2
   602     0106                     __ptext2:	
   603 ;; *************** function _initPWM *****************
   604 ;; Defined at:
   605 ;;		line 148 in file "slave_motors.c"
   606 ;; Parameters:    Size  Location     Type
   607 ;;		None
   608 ;; Auto vars:     Size  Location     Type
   609 ;;		None
   610 ;; Return value:  Size  Location     Type
   611 ;;                  1    wreg      void 
   612 ;; Registers used:
   613 ;;		wreg, status,2, status,0
   614 ;; Tracked objects:
   615 ;;		On entry : 0/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   619 ;;      Params:         0       0       0       0       0
   620 ;;      Locals:         0       0       0       0       0
   621 ;;      Temps:          0       0       0       0       0
   622 ;;      Totals:         0       0       0       0       0
   623 ;;Total ram usage:        0 bytes
   624 ;; Hardware stack levels used: 1
   625 ;; Hardware stack levels required when called: 1
   626 ;; This function calls:
   627 ;;		Nothing
   628 ;; This function is called by:
   629 ;;		_setup
   630 ;; This function uses a non-reentrant model
   631 ;;
   632                           
   633     0106                     _initPWM:	
   634                           ;psect for function _initPWM
   635                           
   636     0106                     l770:	
   637                           ;incstack = 0
   638                           ; Regs used in _initPWM: [wreg+status,2+status,0]
   639                           
   640                           
   641                           ;slave_motors.c: 150:     T0CS = 0;
   642     0106  1683               	bsf	3,5	;RP0=1, select bank1
   643     0107  1303               	bcf	3,6	;RP1=0, select bank1
   644     0108  1281               	bcf	1,5	;volatile
   645                           
   646                           ;slave_motors.c: 151:     PSA = 0;
   647     0109  1181               	bcf	1,3	;volatile
   648     010A                     l772:
   649                           
   650                           ;slave_motors.c: 152:     OPTION_REGbits.PS = 0b010;
   651     010A  0801               	movf	1,w	;volatile
   652     010B  39F8               	andlw	-8
   653     010C  3802               	iorlw	2
   654     010D  0081               	movwf	1	;volatile
   655     010E                     l774:
   656                           
   657                           ;slave_motors.c: 153:     T0IE = 1;
   658     010E  168B               	bsf	11,5	;volatile
   659     010F                     l776:
   660                           
   661                           ;slave_motors.c: 154:     T0IF = 0;
   662     010F  110B               	bcf	11,2	;volatile
   663     0110                     l778:
   664                           
   665                           ;slave_motors.c: 155:     GIE = 1;
   666     0110  178B               	bsf	11,7	;volatile
   667     0111                     l780:
   668                           
   669                           ;slave_motors.c: 156:     TMR0 = 131;
   670     0111  3083               	movlw	131
   671     0112  1283               	bcf	3,5	;RP0=0, select bank0
   672     0113  1303               	bcf	3,6	;RP1=0, select bank0
   673     0114  0081               	movwf	1	;volatile
   674     0115                     l103:
   675     0115  0008               	return
   676     0116                     __end_of_initPWM:
   677                           
   678                           	psect	text3
   679     00D6                     __ptext3:	
   680 ;; *************** function _I2C_Slave_Init *****************
   681 ;; Defined at:
   682 ;;		line 93 in file "I2C.c"
   683 ;; Parameters:    Size  Location     Type
   684 ;;  address         1    wreg     unsigned char 
   685 ;; Auto vars:     Size  Location     Type
   686 ;;  address         1    4[COMMON] unsigned char 
   687 ;; Return value:  Size  Location     Type
   688 ;;                  1    wreg      void 
   689 ;; Registers used:
   690 ;;		wreg
   691 ;; Tracked objects:
   692 ;;		On entry : 0/0
   693 ;;		On exit  : 0/0
   694 ;;		Unchanged: 0/0
   695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   696 ;;      Params:         0       0       0       0       0
   697 ;;      Locals:         1       0       0       0       0
   698 ;;      Temps:          0       0       0       0       0
   699 ;;      Totals:         1       0       0       0       0
   700 ;;Total ram usage:        1 bytes
   701 ;; Hardware stack levels used: 1
   702 ;; Hardware stack levels required when called: 1
   703 ;; This function calls:
   704 ;;		Nothing
   705 ;; This function is called by:
   706 ;;		_setup
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710     00D6                     _I2C_Slave_Init:	
   711                           ;psect for function _I2C_Slave_Init
   712                           
   713                           
   714                           ;incstack = 0
   715                           ; Regs used in _I2C_Slave_Init: [wreg]
   716                           ;I2C_Slave_Init@address stored from wreg
   717     00D6  00F4               	movwf	I2C_Slave_Init@address
   718     00D7                     l756:
   719                           
   720                           ;I2C.c: 93: void I2C_Slave_Init(uint8_t address);I2C.c: 94: {;I2C.c: 95:     SSPADD = ad
      +                          dress;
   721     00D7  0874               	movf	I2C_Slave_Init@address,w
   722     00D8  1683               	bsf	3,5	;RP0=1, select bank1
   723     00D9  1303               	bcf	3,6	;RP1=0, select bank1
   724     00DA  0093               	movwf	19	;volatile
   725                           
   726                           ;I2C.c: 96:     SSPCON = 0x36;
   727     00DB  3036               	movlw	54
   728     00DC  1283               	bcf	3,5	;RP0=0, select bank0
   729     00DD  1303               	bcf	3,6	;RP1=0, select bank0
   730     00DE  0094               	movwf	20	;volatile
   731                           
   732                           ;I2C.c: 97:     SSPSTAT = 0x80;
   733     00DF  3080               	movlw	128
   734     00E0  1683               	bsf	3,5	;RP0=1, select bank1
   735     00E1  1303               	bcf	3,6	;RP1=0, select bank1
   736     00E2  0094               	movwf	20	;volatile
   737                           
   738                           ;I2C.c: 98:     SSPCON2 = 0x01;
   739     00E3  3001               	movlw	1
   740     00E4  0091               	movwf	17	;volatile
   741     00E5                     l758:
   742                           
   743                           ;I2C.c: 99:     TRISC3 = 1;
   744     00E5  1587               	bsf	7,3	;volatile
   745     00E6                     l760:
   746                           
   747                           ;I2C.c: 100:     TRISC4 = 1;
   748     00E6  1607               	bsf	7,4	;volatile
   749     00E7                     l762:
   750                           
   751                           ;I2C.c: 101:     GIE = 1;
   752     00E7  178B               	bsf	11,7	;volatile
   753     00E8                     l764:
   754                           
   755                           ;I2C.c: 102:     PEIE = 1;
   756     00E8  170B               	bsf	11,6	;volatile
   757     00E9                     l766:
   758                           
   759                           ;I2C.c: 103:     SSPIF = 0;
   760     00E9  1283               	bcf	3,5	;RP0=0, select bank0
   761     00EA  1303               	bcf	3,6	;RP1=0, select bank0
   762     00EB  118C               	bcf	12,3	;volatile
   763     00EC                     l768:
   764                           
   765                           ;I2C.c: 104:     SSPIE = 1;
   766     00EC  1683               	bsf	3,5	;RP0=1, select bank1
   767     00ED  1303               	bcf	3,6	;RP1=0, select bank1
   768     00EE  158C               	bsf	12,3	;volatile
   769     00EF                     l164:
   770     00EF  0008               	return
   771     00F0                     __end_of_I2C_Slave_Init:
   772                           
   773                           	psect	text4
   774     00F0                     __ptext4:	
   775 ;; *************** function _angle_to_PWM *****************
   776 ;; Defined at:
   777 ;;		line 159 in file "slave_motors.c"
   778 ;; Parameters:    Size  Location     Type
   779 ;;  position        1    wreg     unsigned char 
   780 ;; Auto vars:     Size  Location     Type
   781 ;;  position        1    4[COMMON] unsigned char 
   782 ;; Return value:  Size  Location     Type
   783 ;;                  1    wreg      void 
   784 ;; Registers used:
   785 ;;		wreg, status,2
   786 ;; Tracked objects:
   787 ;;		On entry : 0/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   791 ;;      Params:         0       0       0       0       0
   792 ;;      Locals:         1       0       0       0       0
   793 ;;      Temps:          0       0       0       0       0
   794 ;;      Totals:         1       0       0       0       0
   795 ;;Total ram usage:        1 bytes
   796 ;; Hardware stack levels used: 1
   797 ;; Hardware stack levels required when called: 1
   798 ;; This function calls:
   799 ;;		Nothing
   800 ;; This function is called by:
   801 ;;		_main
   802 ;; This function uses a non-reentrant model
   803 ;;
   804                           
   805     00F0                     _angle_to_PWM:	
   806                           ;psect for function _angle_to_PWM
   807                           
   808                           
   809                           ;incstack = 0
   810                           ; Regs used in _angle_to_PWM: [wreg+status,2]
   811                           ;angle_to_PWM@position stored from wreg
   812     00F0  00F4               	movwf	angle_to_PWM@position
   813     00F1                     l800:
   814                           
   815                           ;slave_motors.c: 161:     if(TMR0count >= 40){
   816     00F1  3028               	movlw	40
   817     00F2  0277               	subwf	_TMR0count,w
   818     00F3  1C03               	skipc
   819     00F4  28F6               	goto	u11
   820     00F5  28F7               	goto	u10
   821     00F6                     u11:
   822     00F6  28FC               	goto	l806
   823     00F7                     u10:
   824     00F7                     l802:
   825                           
   826                           ;slave_motors.c: 162:         TMR0count = 0;
   827     00F7  01F7               	clrf	_TMR0count
   828     00F8                     l804:
   829                           
   830                           ;slave_motors.c: 163:         RC2 = 1;
   831     00F8  1283               	bcf	3,5	;RP0=0, select bank0
   832     00F9  1303               	bcf	3,6	;RP1=0, select bank0
   833     00FA  1507               	bsf	7,2	;volatile
   834                           
   835                           ;slave_motors.c: 164:     }
   836     00FB  2905               	goto	l109
   837     00FC                     l806:
   838     00FC  0877               	movf	_TMR0count,w
   839     00FD  0674               	xorwf	angle_to_PWM@position,w
   840     00FE  1D03               	skipz
   841     00FF  2901               	goto	u21
   842     0100  2902               	goto	u20
   843     0101                     u21:
   844     0101  2905               	goto	l109
   845     0102                     u20:
   846     0102                     l808:
   847                           
   848                           ;slave_motors.c: 166:         RC2 = 0;
   849     0102  1283               	bcf	3,5	;RP0=0, select bank0
   850     0103  1303               	bcf	3,6	;RP1=0, select bank0
   851     0104  1107               	bcf	7,2	;volatile
   852     0105                     l109:
   853     0105  0008               	return
   854     0106                     __end_of_angle_to_PWM:
   855                           
   856                           	psect	text5
   857     0020                     __ptext5:	
   858 ;; *************** function _isr *****************
   859 ;; Defined at:
   860 ;;		line 61 in file "slave_motors.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;		None
   863 ;; Auto vars:     Size  Location     Type
   864 ;;		None
   865 ;; Return value:  Size  Location     Type
   866 ;;                  1    wreg      void 
   867 ;; Registers used:
   868 ;;		wreg, status,2, status,0, btemp+1
   869 ;; Tracked objects:
   870 ;;		On entry : 0/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   874 ;;      Params:         0       0       0       0       0
   875 ;;      Locals:         0       0       0       0       0
   876 ;;      Temps:          4       0       0       0       0
   877 ;;      Totals:         4       0       0       0       0
   878 ;;Total ram usage:        4 bytes
   879 ;; Hardware stack levels used: 1
   880 ;; This function calls:
   881 ;;		Nothing
   882 ;; This function is called by:
   883 ;;		Interrupt level 1
   884 ;; This function uses a non-reentrant model
   885 ;;
   886                           
   887     0020                     _isr:	
   888                           ;psect for function _isr
   889                           
   890     0020                     i1l814:
   891                           
   892                           ;slave_motors.c: 62: }
   893     0020  1283               	bcf	3,5	;RP0=0, select bank0
   894     0021  1303               	bcf	3,6	;RP1=0, select bank0
   895     0022  1D8C               	btfss	12,3	;volatile
   896     0023  2825               	goto	u5_21
   897     0024  2826               	goto	u5_20
   898     0025                     u5_21:
   899     0025  287F               	goto	i1l73
   900     0026                     u5_20:
   901     0026                     i1l816:
   902     0026  1214               	bcf	20,4	;volatile
   903     0027  1B14               	btfsc	20,6	;volatile
   904     0028  282A               	goto	u6_21
   905     0029  282B               	goto	u6_20
   906     002A                     u6_21:
   907     002A  282F               	goto	i1l820
   908     002B                     u6_20:
   909     002B                     i1l818:
   910     002B  1F94               	btfss	20,7	;volatile
   911     002C  282E               	goto	u7_21
   912     002D  282F               	goto	u7_20
   913     002E                     u7_21:
   914     002E  2834               	goto	i1l828
   915     002F                     u7_20:
   916     002F                     i1l820:
   917     002F  0813               	movf	19,w	;volatile
   918     0030  00FA               	movwf	_discard
   919     0031                     i1l822:
   920     0031  1314               	bcf	20,6	;volatile
   921     0032                     i1l824:
   922     0032  1394               	bcf	20,7	;volatile
   923     0033                     i1l826:
   924     0033  1614               	bsf	20,4	;volatile
   925     0034                     i1l828:
   926     0034  1683               	bsf	3,5	;RP0=1, select bank1
   927     0035  1303               	bcf	3,6	;RP1=0, select bank1
   928     0036  1A94               	btfsc	20,5	;volatile
   929     0037  2839               	goto	u8_21
   930     0038  283A               	goto	u8_20
   931     0039                     u8_21:
   932     0039  285D               	goto	i1l77
   933     003A                     u8_20:
   934     003A                     i1l830:
   935     003A  1914               	btfsc	20,2	;volatile
   936     003B  283D               	goto	u9_21
   937     003C  283E               	goto	u9_20
   938     003D                     u9_21:
   939     003D  285D               	goto	i1l77
   940     003E                     u9_20:
   941     003E                     i1l832:
   942     003E  3004               	movlw	4
   943     003F  00F0               	movwf	??_isr
   944     0040                     u18_27:
   945     0040  0BF0               	decfsz	??_isr,f
   946     0041  2840               	goto	u18_27
   947     0042  0000               	nop
   948     0043  1283               	bcf	3,5	;RP0=0, select bank0
   949     0044  1303               	bcf	3,6	;RP1=0, select bank0
   950     0045  0813               	movf	19,w	;volatile
   951     0046  00FA               	movwf	_discard
   952     0047                     i1l834:
   953     0047  2848               	nop2	;2 cycle nop
   954     0048  2849               	nop2	;2 cycle nop
   955     0049                     i1l836:
   956     0049  1283               	bcf	3,5	;RP0=0, select bank0
   957     004A  1303               	bcf	3,6	;RP1=0, select bank0
   958     004B  118C               	bcf	12,3	;volatile
   959     004C                     i1l838:
   960     004C  1614               	bsf	20,4	;volatile
   961     004D                     i1l78:
   962     004D  1683               	bsf	3,5	;RP0=1, select bank1
   963     004E  1303               	bcf	3,6	;RP1=0, select bank1
   964     004F  1C14               	btfss	20,0	;volatile
   965     0050  2852               	goto	u10_21
   966     0051  2853               	goto	u10_20
   967     0052                     u10_21:
   968     0052  284D               	goto	i1l78
   969     0053                     u10_20:
   970     0053                     i1l840:
   971     0053  1283               	bcf	3,5	;RP0=0, select bank0
   972     0054  1303               	bcf	3,6	;RP1=0, select bank0
   973     0055  0813               	movf	19,w	;volatile
   974     0056  00F8               	movwf	_readI2C
   975     0057  30A6               	movlw	166
   976     0058  00F0               	movwf	??_isr
   977     0059                     u19_27:
   978     0059  0BF0               	decfsz	??_isr,f
   979     005A  2859               	goto	u19_27
   980     005B  0000               	nop
   981     005C  287C               	goto	i1l81
   982     005D                     i1l77:
   983     005D  1A94               	btfsc	20,5	;volatile
   984     005E  2860               	goto	u11_21
   985     005F  2861               	goto	u11_20
   986     0060                     u11_21:
   987     0060  287C               	goto	i1l81
   988     0061                     u11_20:
   989     0061                     i1l842:
   990     0061  1D14               	btfss	20,2	;volatile
   991     0062  2864               	goto	u12_21
   992     0063  2865               	goto	u12_20
   993     0064                     u12_21:
   994     0064  287C               	goto	i1l81
   995     0065                     u12_20:
   996     0065                     i1l844:
   997     0065  1283               	bcf	3,5	;RP0=0, select bank0
   998     0066  1303               	bcf	3,6	;RP1=0, select bank0
   999     0067  0813               	movf	19,w	;volatile
  1000     0068  00FA               	movwf	_discard
  1001     0069                     i1l846:
  1002     0069  1683               	bsf	3,5	;RP0=1, select bank1
  1003     006A  1303               	bcf	3,6	;RP1=0, select bank1
  1004     006B  1014               	bcf	20,0	;volatile
  1005     006C  0879               	movf	_send_data,w
  1006     006D  1283               	bcf	3,5	;RP0=0, select bank0
  1007     006E  1303               	bcf	3,6	;RP1=0, select bank0
  1008     006F  0093               	movwf	19	;volatile
  1009     0070                     i1l848:
  1010     0070  1614               	bsf	20,4	;volatile
  1011     0071  30A6               	movlw	166
  1012     0072  00F0               	movwf	??_isr
  1013     0073                     u20_27:
  1014     0073  0BF0               	decfsz	??_isr,f
  1015     0074  2873               	goto	u20_27
  1016     0075  0000               	nop
  1017     0076                     i1l83:
  1018     0076  1683               	bsf	3,5	;RP0=1, select bank1
  1019     0077  1303               	bcf	3,6	;RP1=0, select bank1
  1020     0078  1814               	btfsc	20,0	;volatile
  1021     0079  287B               	goto	u13_21
  1022     007A  287C               	goto	u13_20
  1023     007B                     u13_21:
  1024     007B  2876               	goto	i1l83
  1025     007C                     u13_20:
  1026     007C                     i1l81:
  1027     007C  1283               	bcf	3,5	;RP0=0, select bank0
  1028     007D  1303               	bcf	3,6	;RP1=0, select bank0
  1029     007E  118C               	bcf	12,3	;volatile
  1030     007F                     i1l73:
  1031     007F  1D0B               	btfss	11,2	;volatile
  1032     0080  2882               	goto	u14_21
  1033     0081  2883               	goto	u14_20
  1034     0082                     u14_21:
  1035     0082  288A               	goto	i1l87
  1036     0083                     u14_20:
  1037     0083                     i1l850:
  1038     0083  3001               	movlw	1
  1039     0084  00FF               	movwf	btemp+1
  1040     0085  087F               	movf	btemp+1,w
  1041     0086  07F7               	addwf	_TMR0count,f
  1042     0087                     i1l852:
  1043     0087  3083               	movlw	131
  1044     0088  0081               	movwf	1	;volatile
  1045     0089                     i1l854:
  1046     0089  110B               	bcf	11,2	;volatile
  1047     008A                     i1l87:
  1048     008A  0873               	movf	??_isr+3,w
  1049     008B  00FF               	movwf	btemp+1
  1050     008C  0872               	movf	??_isr+2,w
  1051     008D  008A               	movwf	10
  1052     008E  0E71               	swapf	??_isr+1,w
  1053     008F  0083               	movwf	3
  1054     0090  0EFE               	swapf	btemp,f
  1055     0091  0E7E               	swapf	btemp,w
  1056     0092  0009               	retfie
  1057     0093                     __end_of_isr:
  1058     007E                     btemp	set	126	;btemp
  1059     007E                     wtemp0	set	126
  1060                           
  1061                           	psect	intentry
  1062     0004                     __pintentry:	
  1063                           ;incstack = 0
  1064                           ; Regs used in _isr: [wreg+status,2+status,0+btemp+1]
  1065                           
  1066     0004                     interrupt_function:
  1067     007E                     saved_w	set	btemp
  1068     0004  00FE               	movwf	btemp
  1069     0005  0E03               	swapf	3,w
  1070     0006  00F1               	movwf	??_isr+1
  1071     0007  080A               	movf	10,w
  1072     0008  00F2               	movwf	??_isr+2
  1073     0009  087F               	movf	btemp+1,w
  1074     000A  00F3               	movwf	??_isr+3
  1075     000B  120A  118A  2820   	ljmp	_isr
  1076                           
  1077                           	psect	config
  1078                           
  1079                           ;Config register CONFIG1 @ 0x2007
  1080                           ;	Oscillator Selection bits
  1081                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1082                           ;	Watchdog Timer Enable bit
  1083                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1084                           ;	Power-up Timer Enable bit
  1085                           ;	PWRTE = OFF, PWRT disabled
  1086                           ;	RE3/MCLR pin function select bit
  1087                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1088                           ;	Code Protection bit
  1089                           ;	CP = OFF, Program memory code protection is disabled
  1090                           ;	Data Code Protection bit
  1091                           ;	CPD = OFF, Data memory code protection is disabled
  1092                           ;	Brown Out Reset Selection bits
  1093                           ;	BOREN = OFF, BOR disabled
  1094                           ;	Internal External Switchover bit
  1095                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1096                           ;	Fail-Safe Clock Monitor Enabled bit
  1097                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1098                           ;	Low Voltage Programming Enable bit
  1099                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1100                           ;	In-Circuit Debugger Mode bit
  1101                           ;	DEBUG = 0x1, unprogrammed default
  1102     2007                     	org	8199
  1103     2007  20D4               	dw	8404
  1104                           
  1105                           ;Config register CONFIG2 @ 0x2008
  1106                           ;	Brown-out Reset Selection bit
  1107                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1108                           ;	Flash Program Memory Self Write Enable bits
  1109                           ;	WRT = OFF, Write protection off
  1110     2008                     	org	8200
  1111     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_angle_to_PWM
    _setup->_I2C_Slave_Init

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      30
                                              5 COMMON     1     1      0
                       _angle_to_PWM
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      15
                     _I2C_Slave_Init
                            _initPWM
 ---------------------------------------------------------------------------------
 (2) _initPWM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      15
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _angle_to_PWM                                         1     1      0      15
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _angle_to_PWM
   _setup
     _I2C_Slave_Init
     _initPWM

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       C      12        0.0%
ABS                  0      0       C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Aug 24 17:22:00 2023

                     _BF 04A0                       l93 00AE                       u10 00F7  
                     u11 00F6                       u20 0102                       u21 0101  
                    l100 00D5                      l103 0115                      l109 0105  
                    l164 00EF                      l800 00F1                      l802 00F7  
                    l804 00F8                      l806 00FC                      l808 0102  
                    l760 00E6                      l762 00E7                      l770 0106  
                    l764 00E8                      l756 00D7                      l780 0111  
                    l772 010A                      l860 009B                      l766 00E9  
                    l758 00E5                      l774 010E                      l790 00C2  
                    l782 00B5                      l862 00A1                      l768 00EC  
                    l776 010F                      l792 00C5                      l784 00B9  
                    l864 00AA                      l856 0093                      l778 0110  
                    l794 00C9                      l786 00BC                      l858 0098  
                    l796 00CA                      l788 00BF                      l798 00D0  
                    _CKP 00A4                      _GIE 005F                      _RC0 0038  
                    _RC2 003A                      u150 00AA                      u151 00A9  
                    _SCS 0478                      _PSA 040B                      _isr 0020  
                   ?_isr 0070                     _T0IE 005D                     _T0IF 005A  
                   _T0CS 040D                     _PEIE 005E                     i1l81 007C  
                   i1l73 007F                     i1l83 0076                     i1l77 005D  
                   i1l78 004D                     i1l87 008A                     _TMR0 0001  
                   _WCOL 00A7                     _D_nA 04A5                     u5_20 0026  
                   u5_21 0025                     u6_20 002B                     u6_21 002A  
                   u7_20 002F                     u7_21 002E                     u8_20 003A  
                   u8_21 0039                     u9_20 003E                     u9_21 003D  
                   _R_nW 04A2                     _main 0093                     btemp 007E  
                   start 000E                    ??_isr 0070                    ?_main 0070  
                  _ANSEL 0188                    i1l820 002F                    i1l830 003A  
                  i1l822 0031                    i1l814 0020                    i1l840 0053  
                  i1l832 003E                    i1l824 0032                    i1l816 0026  
                  i1l850 0083                    i1l842 0061                    i1l834 0047  
                  i1l826 0033                    i1l818 002B                    i1l852 0087  
                  i1l844 0065                    i1l836 0049                    i1l828 0034  
                  i1l854 0089                    i1l846 0069                    i1l838 004C  
                  i1l848 0070                    u10_20 0053                    u10_21 0052  
                  u11_20 0061                    u11_21 0060                    u12_20 0065  
                  u12_21 0064                    u20_27 0073                    u13_20 007C  
                  u13_21 007B                    u14_20 0083                    u14_21 0082  
                  u18_27 0040                    u19_27 0059                    _SSPIE 0463  
                  _SSPIF 0063                    _SSPOV 00A6     __end_of_angle_to_PWM 0106  
        __end_of_initPWM 0116                    _setup 00B5                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 00B5                   ??_main 0075                   ?_setup 0070  
                 _ANSELH 0189                   _SSPADD 0093                   _TRISC0 0438  
                 _TRISC2 043A                   _TRISC3 043B                   _TRISC4 043C  
                 _SSPBUF 0013                   _SSPCON 0014                ??_initPWM 0074  
           __pdataCOMMON 007B                   saved_w 007E  __end_of__initialization 001C  
         __pcstackCOMMON 0070            __end_of_setup 00D6           _OPTION_REGbits 0081  
                ??_setup 0075    I2C_Slave_Init@address 0074               __pmaintext 0093  
           _angle_to_PWM 00F0               __pintentry 0004                  _SSPCON2 0091  
                _SSPSTAT 0094                  __ptext1 00B5                  __ptext2 0106  
                __ptext3 00D6                  __ptext4 00F0                  __ptext5 0020  
                _discard 007A                  _readI2C 0078                  _initPWM 0106  
   angle_to_PWM@position 0074     end_of_initialization 001C           _I2C_Slave_Init 00D6  
              _TMR0count 0077                _TRISCbits 0087   __end_of_I2C_Slave_Init 00F0  
          __pidataCOMMON 0116      start_initialization 0011              __end_of_isr 0093  
        ?_I2C_Slave_Init 0070              __pbssCOMMON 0076                ___latbits 0002  
               ?_initPWM 0070        interrupt_function 0004                _send_data 0079  
       ??_I2C_Slave_Init 0074            ?_angle_to_PWM 0070                 _servoPos 007B  
               intlevel1 0000           ??_angle_to_PWM 0074               _OSCCONbits 008F  
            _SSPCON2bits 0091               _TMR0count2 0076  
