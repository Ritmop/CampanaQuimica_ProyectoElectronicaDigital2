

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Aug 22 18:28:46 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18     0000                     
    19                           ; Generated 22/03/2023 GMT
    20                           ; 
    21                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0000                     	;# 
    54     0001                     	;# 
    55     0002                     	;# 
    56     0003                     	;# 
    57     0004                     	;# 
    58     0005                     	;# 
    59     0006                     	;# 
    60     0007                     	;# 
    61     0008                     	;# 
    62     0009                     	;# 
    63     000A                     	;# 
    64     000B                     	;# 
    65     000C                     	;# 
    66     000D                     	;# 
    67     000E                     	;# 
    68     000E                     	;# 
    69     000F                     	;# 
    70     0010                     	;# 
    71     0011                     	;# 
    72     0012                     	;# 
    73     0013                     	;# 
    74     0014                     	;# 
    75     0015                     	;# 
    76     0015                     	;# 
    77     0016                     	;# 
    78     0017                     	;# 
    79     0018                     	;# 
    80     0019                     	;# 
    81     001A                     	;# 
    82     001B                     	;# 
    83     001B                     	;# 
    84     001C                     	;# 
    85     001D                     	;# 
    86     001E                     	;# 
    87     001F                     	;# 
    88     0081                     	;# 
    89     0085                     	;# 
    90     0086                     	;# 
    91     0087                     	;# 
    92     0088                     	;# 
    93     0089                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     008E                     	;# 
    97     008F                     	;# 
    98     0090                     	;# 
    99     0091                     	;# 
   100     0092                     	;# 
   101     0093                     	;# 
   102     0093                     	;# 
   103     0093                     	;# 
   104     0094                     	;# 
   105     0095                     	;# 
   106     0096                     	;# 
   107     0097                     	;# 
   108     0098                     	;# 
   109     0099                     	;# 
   110     009A                     	;# 
   111     009B                     	;# 
   112     009C                     	;# 
   113     009D                     	;# 
   114     009E                     	;# 
   115     009F                     	;# 
   116     0105                     	;# 
   117     0107                     	;# 
   118     0108                     	;# 
   119     0109                     	;# 
   120     010C                     	;# 
   121     010C                     	;# 
   122     010D                     	;# 
   123     010E                     	;# 
   124     010F                     	;# 
   125     0185                     	;# 
   126     0187                     	;# 
   127     0188                     	;# 
   128     0189                     	;# 
   129     018C                     	;# 
   130     018D                     	;# 
   131     0000                     	;# 
   132     0001                     	;# 
   133     0002                     	;# 
   134     0003                     	;# 
   135     0004                     	;# 
   136     0005                     	;# 
   137     0006                     	;# 
   138     0007                     	;# 
   139     0008                     	;# 
   140     0009                     	;# 
   141     000A                     	;# 
   142     000B                     	;# 
   143     000C                     	;# 
   144     000D                     	;# 
   145     000E                     	;# 
   146     000E                     	;# 
   147     000F                     	;# 
   148     0010                     	;# 
   149     0011                     	;# 
   150     0012                     	;# 
   151     0013                     	;# 
   152     0014                     	;# 
   153     0015                     	;# 
   154     0015                     	;# 
   155     0016                     	;# 
   156     0017                     	;# 
   157     0018                     	;# 
   158     0019                     	;# 
   159     001A                     	;# 
   160     001B                     	;# 
   161     001B                     	;# 
   162     001C                     	;# 
   163     001D                     	;# 
   164     001E                     	;# 
   165     001F                     	;# 
   166     0081                     	;# 
   167     0085                     	;# 
   168     0086                     	;# 
   169     0087                     	;# 
   170     0088                     	;# 
   171     0089                     	;# 
   172     008C                     	;# 
   173     008D                     	;# 
   174     008E                     	;# 
   175     008F                     	;# 
   176     0090                     	;# 
   177     0091                     	;# 
   178     0092                     	;# 
   179     0093                     	;# 
   180     0093                     	;# 
   181     0093                     	;# 
   182     0094                     	;# 
   183     0095                     	;# 
   184     0096                     	;# 
   185     0097                     	;# 
   186     0098                     	;# 
   187     0099                     	;# 
   188     009A                     	;# 
   189     009B                     	;# 
   190     009C                     	;# 
   191     009D                     	;# 
   192     009E                     	;# 
   193     009F                     	;# 
   194     0105                     	;# 
   195     0107                     	;# 
   196     0108                     	;# 
   197     0109                     	;# 
   198     010C                     	;# 
   199     010C                     	;# 
   200     010D                     	;# 
   201     010E                     	;# 
   202     010F                     	;# 
   203     0185                     	;# 
   204     0187                     	;# 
   205     0188                     	;# 
   206     0189                     	;# 
   207     018C                     	;# 
   208     018D                     	;# 
   209     0000                     	;# 
   210     0001                     	;# 
   211     0002                     	;# 
   212     0003                     	;# 
   213     0004                     	;# 
   214     0005                     	;# 
   215     0006                     	;# 
   216     0007                     	;# 
   217     0008                     	;# 
   218     0009                     	;# 
   219     000A                     	;# 
   220     000B                     	;# 
   221     000C                     	;# 
   222     000D                     	;# 
   223     000E                     	;# 
   224     000E                     	;# 
   225     000F                     	;# 
   226     0010                     	;# 
   227     0011                     	;# 
   228     0012                     	;# 
   229     0013                     	;# 
   230     0014                     	;# 
   231     0015                     	;# 
   232     0015                     	;# 
   233     0016                     	;# 
   234     0017                     	;# 
   235     0018                     	;# 
   236     0019                     	;# 
   237     001A                     	;# 
   238     001B                     	;# 
   239     001B                     	;# 
   240     001C                     	;# 
   241     001D                     	;# 
   242     001E                     	;# 
   243     001F                     	;# 
   244     0081                     	;# 
   245     0085                     	;# 
   246     0086                     	;# 
   247     0087                     	;# 
   248     0088                     	;# 
   249     0089                     	;# 
   250     008C                     	;# 
   251     008D                     	;# 
   252     008E                     	;# 
   253     008F                     	;# 
   254     0090                     	;# 
   255     0091                     	;# 
   256     0092                     	;# 
   257     0093                     	;# 
   258     0093                     	;# 
   259     0093                     	;# 
   260     0094                     	;# 
   261     0095                     	;# 
   262     0096                     	;# 
   263     0097                     	;# 
   264     0098                     	;# 
   265     0099                     	;# 
   266     009A                     	;# 
   267     009B                     	;# 
   268     009C                     	;# 
   269     009D                     	;# 
   270     009E                     	;# 
   271     009F                     	;# 
   272     0105                     	;# 
   273     0107                     	;# 
   274     0108                     	;# 
   275     0109                     	;# 
   276     010C                     	;# 
   277     010C                     	;# 
   278     010D                     	;# 
   279     010E                     	;# 
   280     010F                     	;# 
   281     0185                     	;# 
   282     0187                     	;# 
   283     0188                     	;# 
   284     0189                     	;# 
   285     018C                     	;# 
   286     018D                     	;# 
   287                           
   288                           	psect	idataCOMMON
   289     0125                     __pidataCOMMON:
   290                           
   291                           ;initializer for _servoPos
   292     0125  3402               	retlw	2
   293     0014                     _SSPCON	set	20
   294     0006                     _PORTB	set	6
   295     0005                     _PORTA	set	5
   296     0001                     _TMR0	set	1
   297     0013                     _SSPBUF	set	19
   298     005E                     _PEIE	set	94
   299     005F                     _GIE	set	95
   300     005D                     _T0IE	set	93
   301     003A                     _RC2	set	58
   302     005A                     _T0IF	set	90
   303     0038                     _RC0	set	56
   304     00A7                     _WCOL	set	167
   305     00A6                     _SSPOV	set	166
   306     00A4                     _CKP	set	164
   307     0063                     _SSPIF	set	99
   308     0091                     _SSPCON2bits	set	145
   309     0087                     _TRISCbits	set	135
   310     0094                     _SSPSTAT	set	148
   311     0093                     _SSPADD	set	147
   312     0091                     _SSPCON2	set	145
   313     0081                     _OPTION_REGbits	set	129
   314     008F                     _OSCCONbits	set	143
   315     0086                     _TRISB	set	134
   316     0085                     _TRISA	set	133
   317     0463                     _SSPIE	set	1123
   318     043C                     _TRISC4	set	1084
   319     043B                     _TRISC3	set	1083
   320     040B                     _PSA	set	1035
   321     040D                     _T0CS	set	1037
   322     0478                     _SCS	set	1144
   323     043A                     _TRISC2	set	1082
   324     0438                     _TRISC0	set	1080
   325     04A0                     _BF	set	1184
   326     04A2                     _R_nW	set	1186
   327     04A5                     _D_nA	set	1189
   328     0189                     _ANSELH	set	393
   329     0188                     _ANSEL	set	392
   330                           
   331                           	psect	cinit
   332     0011                     start_initialization:	
   333                           ; #config settings
   334                           
   335     0011                     __initialization:
   336                           
   337                           ; Initialize objects allocated to COMMON
   338     0011  120A  118A  2125  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   339     0016  00FB               	movwf	__pdataCOMMON& (0+127)
   340                           
   341                           ; Clear objects allocated to COMMON
   342     0017  01F6               	clrf	__pbssCOMMON& (0+127)
   343     0018  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   344     0019  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   345     001A  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   346     001B  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   347     001C                     end_of_initialization:	
   348                           ;End of C runtime variable initialization code
   349                           
   350     001C                     __end_of__initialization:
   351     001C  0183               	clrf	3
   352     001D  120A  118A  28BD   	ljmp	_main	;jump to C main() function
   353                           
   354                           	psect	bssCOMMON
   355     0076                     __pbssCOMMON:
   356     0076                     _stateDC:
   357     0076                     	ds	1
   358     0077                     _TMR0count:
   359     0077                     	ds	1
   360     0078                     _readI2C:
   361     0078                     	ds	1
   362     0079                     _send_data:
   363     0079                     	ds	1
   364     007A                     _discard:
   365     007A                     	ds	1
   366                           
   367                           	psect	dataCOMMON
   368     007B                     __pdataCOMMON:
   369     007B                     _servoPos:
   370     007B                     	ds	1
   371                           
   372                           	psect	cstackCOMMON
   373     0070                     __pcstackCOMMON:
   374     0070                     ?_setup:
   375     0070                     ?_angle_to_PWM:	
   376                           ; 1 bytes @ 0x0
   377                           
   378     0070                     ?_I2C_Slave_Init:	
   379                           ; 1 bytes @ 0x0
   380                           
   381     0070                     ?_initPWM:	
   382                           ; 1 bytes @ 0x0
   383                           
   384     0070                     ?_isr:	
   385                           ; 1 bytes @ 0x0
   386                           
   387     0070                     ??_isr:	
   388                           ; 1 bytes @ 0x0
   389                           
   390     0070                     ?_main:	
   391                           ; 1 bytes @ 0x0
   392                           
   393                           
   394                           ; 2 bytes @ 0x0
   395     0070                     	ds	4
   396     0074                     ??_angle_to_PWM:
   397     0074                     ??_I2C_Slave_Init:	
   398                           ; 1 bytes @ 0x4
   399                           
   400     0074                     ??_initPWM:	
   401                           ; 1 bytes @ 0x4
   402                           
   403     0074                     angle_to_PWM@position:	
   404                           ; 1 bytes @ 0x4
   405                           
   406     0074                     I2C_Slave_Init@address:	
   407                           ; 1 bytes @ 0x4
   408                           
   409                           
   410                           ; 1 bytes @ 0x4
   411     0074                     	ds	1
   412     0075                     ??_setup:
   413     0075                     ??_main:	
   414                           ; 1 bytes @ 0x5
   415                           
   416                           
   417                           ; 1 bytes @ 0x5
   418     0075                     	ds	1
   419                           
   420                           	psect	maintext
   421     00BD                     __pmaintext:	
   422 ;;
   423 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   424 ;;
   425 ;; *************** function _main *****************
   426 ;; Defined at:
   427 ;;		line 107 in file "slave_motors.c"
   428 ;; Parameters:    Size  Location     Type
   429 ;;		None
   430 ;; Auto vars:     Size  Location     Type
   431 ;;		None
   432 ;; Return value:  Size  Location     Type
   433 ;;                  2   99[None  ] int 
   434 ;; Registers used:
   435 ;;		wreg, status,2, status,0, pclath, cstack
   436 ;; Tracked objects:
   437 ;;		On entry : B00/0
   438 ;;		On exit  : 0/0
   439 ;;		Unchanged: 0/0
   440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   441 ;;      Params:         0       0       0       0       0
   442 ;;      Locals:         0       0       0       0       0
   443 ;;      Temps:          1       0       0       0       0
   444 ;;      Totals:         1       0       0       0       0
   445 ;;Total ram usage:        1 bytes
   446 ;; Hardware stack levels required when called: 3
   447 ;; This function calls:
   448 ;;		_angle_to_PWM
   449 ;;		_setup
   450 ;; This function is called by:
   451 ;;		Startup code after reset
   452 ;; This function uses a non-reentrant model
   453 ;;
   454                           
   455     00BD                     _main:	
   456                           ;psect for function _main
   457                           
   458     00BD                     l867:	
   459                           ;incstack = 0
   460                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   461                           
   462                           
   463                           ;slave_motors.c: 108:     setup();
   464     00BD  120A  118A  2094  120A  118A  	fcall	_setup
   465     00C2                     l869:
   466                           
   467                           ;slave_motors.c: 113:         PORTA = readI2C;
   468     00C2  0878               	movf	_readI2C,w
   469     00C3  1283               	bcf	3,5	;RP0=0, select bank0
   470     00C4  1303               	bcf	3,6	;RP1=0, select bank0
   471     00C5  0085               	movwf	5	;volatile
   472     00C6                     l871:
   473                           
   474                           ;slave_motors.c: 114:         servoPos = readI2C & 0x0F;
   475     00C6  0878               	movf	_readI2C,w
   476     00C7  390F               	andlw	15
   477     00C8  00FB               	movwf	_servoPos
   478     00C9                     l873:
   479                           
   480                           ;slave_motors.c: 115:         PORTB = TMR0count;
   481     00C9  0877               	movf	_TMR0count,w
   482     00CA  0086               	movwf	6	;volatile
   483     00CB                     l875:
   484                           
   485                           ;slave_motors.c: 116:         angle_to_PWM(servoPos);
   486     00CB  087B               	movf	_servoPos,w
   487     00CC  120A  118A  20FF  120A  118A  	fcall	_angle_to_PWM
   488     00D1                     l877:
   489                           
   490                           ;slave_motors.c: 119:         if((readI2C & 0xF0) == 0x10)
   491     00D1  30F0               	movlw	240
   492     00D2  0578               	andwf	_readI2C,w
   493     00D3  00F5               	movwf	??_main
   494     00D4  3010               	movlw	16
   495     00D5  0675               	xorwf	??_main,w
   496     00D6  1D03               	btfss	3,2
   497     00D7  28D9               	goto	u151
   498     00D8  28DA               	goto	u150
   499     00D9                     u151:
   500     00D9  28DE               	goto	l101
   501     00DA                     u150:
   502     00DA                     l879:
   503                           
   504                           ;slave_motors.c: 120:             RC0 = 1;
   505     00DA  1283               	bcf	3,5	;RP0=0, select bank0
   506     00DB  1303               	bcf	3,6	;RP1=0, select bank0
   507     00DC  1407               	bsf	7,0	;volatile
   508     00DD  28C2               	goto	l869
   509     00DE                     l101:	
   510                           ;slave_motors.c: 121:         else
   511                           
   512                           
   513                           ;slave_motors.c: 122:             RC0 = 0;
   514     00DE  1283               	bcf	3,5	;RP0=0, select bank0
   515     00DF  1303               	bcf	3,6	;RP1=0, select bank0
   516     00E0  1007               	bcf	7,0	;volatile
   517     00E1  28C2               	goto	l869
   518     00E2  120A  118A  280E   	ljmp	start
   519     00E5                     __end_of_main:
   520                           
   521                           	psect	text1
   522     0094                     __ptext1:	
   523 ;; *************** function _setup *****************
   524 ;; Defined at:
   525 ;;		line 126 in file "slave_motors.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;		None
   528 ;; Auto vars:     Size  Location     Type
   529 ;;		None
   530 ;; Return value:  Size  Location     Type
   531 ;;                  1    wreg      void 
   532 ;; Registers used:
   533 ;;		wreg, status,2, status,0, pclath, cstack
   534 ;; Tracked objects:
   535 ;;		On entry : 0/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   539 ;;      Params:         0       0       0       0       0
   540 ;;      Locals:         0       0       0       0       0
   541 ;;      Temps:          0       0       0       0       0
   542 ;;      Totals:         0       0       0       0       0
   543 ;;Total ram usage:        0 bytes
   544 ;; Hardware stack levels used: 1
   545 ;; Hardware stack levels required when called: 2
   546 ;; This function calls:
   547 ;;		_I2C_Slave_Init
   548 ;;		_initPWM
   549 ;; This function is called by:
   550 ;;		_main
   551 ;; This function uses a non-reentrant model
   552 ;;
   553                           
   554     0094                     _setup:	
   555                           ;psect for function _setup
   556                           
   557     0094                     l793:	
   558                           ;incstack = 0
   559                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   560                           
   561                           
   562                           ;slave_motors.c: 128:     ANSEL = 0;
   563     0094  1683               	bsf	3,5	;RP0=1, select bank3
   564     0095  1703               	bsf	3,6	;RP1=1, select bank3
   565     0096  0188               	clrf	8	;volatile
   566                           
   567                           ;slave_motors.c: 129:     ANSELH= 0;
   568     0097  0189               	clrf	9	;volatile
   569                           
   570                           ;slave_motors.c: 131:     TRISA = 0;
   571     0098  1683               	bsf	3,5	;RP0=1, select bank1
   572     0099  1303               	bcf	3,6	;RP1=0, select bank1
   573     009A  0185               	clrf	5	;volatile
   574                           
   575                           ;slave_motors.c: 132:     PORTA = 0;
   576     009B  1283               	bcf	3,5	;RP0=0, select bank0
   577     009C  1303               	bcf	3,6	;RP1=0, select bank0
   578     009D  0185               	clrf	5	;volatile
   579                           
   580                           ;slave_motors.c: 133:     TRISB = 0;
   581     009E  1683               	bsf	3,5	;RP0=1, select bank1
   582     009F  1303               	bcf	3,6	;RP1=0, select bank1
   583     00A0  0186               	clrf	6	;volatile
   584                           
   585                           ;slave_motors.c: 134:     PORTB = 0;
   586     00A1  1283               	bcf	3,5	;RP0=0, select bank0
   587     00A2  1303               	bcf	3,6	;RP1=0, select bank0
   588     00A3  0186               	clrf	6	;volatile
   589     00A4                     l795:
   590                           
   591                           ;slave_motors.c: 136:     TRISC0 = 0;
   592     00A4  1683               	bsf	3,5	;RP0=1, select bank1
   593     00A5  1303               	bcf	3,6	;RP1=0, select bank1
   594     00A6  1007               	bcf	7,0	;volatile
   595     00A7                     l797:
   596                           
   597                           ;slave_motors.c: 137:     TRISC2 = 0;
   598     00A7  1107               	bcf	7,2	;volatile
   599     00A8                     l799:
   600                           
   601                           ;slave_motors.c: 138:     RC0 = 0;
   602     00A8  1283               	bcf	3,5	;RP0=0, select bank0
   603     00A9  1303               	bcf	3,6	;RP1=0, select bank0
   604     00AA  1007               	bcf	7,0	;volatile
   605     00AB                     l801:
   606                           
   607                           ;slave_motors.c: 139:     RC2 = 0;
   608     00AB  1107               	bcf	7,2	;volatile
   609     00AC                     l803:
   610                           
   611                           ;slave_motors.c: 142:     OSCCONbits.IRCF = 0b111;
   612     00AC  3070               	movlw	112
   613     00AD  1683               	bsf	3,5	;RP0=1, select bank1
   614     00AE  1303               	bcf	3,6	;RP1=0, select bank1
   615     00AF  048F               	iorwf	15,f	;volatile
   616     00B0                     l805:
   617                           
   618                           ;slave_motors.c: 143:     SCS = 1;
   619     00B0  140F               	bsf	15,0	;volatile
   620     00B1                     l807:
   621                           
   622                           ;slave_motors.c: 146:     I2C_Slave_Init(0x30);
   623     00B1  3030               	movlw	48
   624     00B2  120A  118A  20E5  120A  118A  	fcall	_I2C_Slave_Init
   625     00B7                     l809:
   626                           
   627                           ;slave_motors.c: 149:     initPWM();
   628     00B7  120A  118A  2115  120A  118A  	fcall	_initPWM
   629     00BC                     l108:
   630     00BC  0008               	return
   631     00BD                     __end_of_setup:
   632                           
   633                           	psect	text2
   634     0115                     __ptext2:	
   635 ;; *************** function _initPWM *****************
   636 ;; Defined at:
   637 ;;		line 152 in file "slave_motors.c"
   638 ;; Parameters:    Size  Location     Type
   639 ;;		None
   640 ;; Auto vars:     Size  Location     Type
   641 ;;		None
   642 ;; Return value:  Size  Location     Type
   643 ;;                  1    wreg      void 
   644 ;; Registers used:
   645 ;;		wreg, status,2, status,0
   646 ;; Tracked objects:
   647 ;;		On entry : 0/0
   648 ;;		On exit  : 0/0
   649 ;;		Unchanged: 0/0
   650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   651 ;;      Params:         0       0       0       0       0
   652 ;;      Locals:         0       0       0       0       0
   653 ;;      Temps:          0       0       0       0       0
   654 ;;      Totals:         0       0       0       0       0
   655 ;;Total ram usage:        0 bytes
   656 ;; Hardware stack levels used: 1
   657 ;; Hardware stack levels required when called: 1
   658 ;; This function calls:
   659 ;;		Nothing
   660 ;; This function is called by:
   661 ;;		_setup
   662 ;; This function uses a non-reentrant model
   663 ;;
   664                           
   665     0115                     _initPWM:	
   666                           ;psect for function _initPWM
   667                           
   668     0115                     l781:	
   669                           ;incstack = 0
   670                           ; Regs used in _initPWM: [wreg+status,2+status,0]
   671                           
   672                           
   673                           ;slave_motors.c: 154:     T0CS = 0;
   674     0115  1683               	bsf	3,5	;RP0=1, select bank1
   675     0116  1303               	bcf	3,6	;RP1=0, select bank1
   676     0117  1281               	bcf	1,5	;volatile
   677                           
   678                           ;slave_motors.c: 155:     PSA = 0;
   679     0118  1181               	bcf	1,3	;volatile
   680     0119                     l783:
   681                           
   682                           ;slave_motors.c: 156:     OPTION_REGbits.PS = 0b010;
   683     0119  0801               	movf	1,w	;volatile
   684     011A  39F8               	andlw	-8
   685     011B  3802               	iorlw	2
   686     011C  0081               	movwf	1	;volatile
   687     011D                     l785:
   688                           
   689                           ;slave_motors.c: 157:     T0IE = 1;
   690     011D  168B               	bsf	11,5	;volatile
   691     011E                     l787:
   692                           
   693                           ;slave_motors.c: 158:     T0IF = 0;
   694     011E  110B               	bcf	11,2	;volatile
   695     011F                     l789:
   696                           
   697                           ;slave_motors.c: 159:     GIE = 1;
   698     011F  178B               	bsf	11,7	;volatile
   699     0120                     l791:
   700                           
   701                           ;slave_motors.c: 160:     TMR0 = 131;
   702     0120  3083               	movlw	131
   703     0121  1283               	bcf	3,5	;RP0=0, select bank0
   704     0122  1303               	bcf	3,6	;RP1=0, select bank0
   705     0123  0081               	movwf	1	;volatile
   706     0124                     l111:
   707     0124  0008               	return
   708     0125                     __end_of_initPWM:
   709                           
   710                           	psect	text3
   711     00E5                     __ptext3:	
   712 ;; *************** function _I2C_Slave_Init *****************
   713 ;; Defined at:
   714 ;;		line 93 in file "I2C.c"
   715 ;; Parameters:    Size  Location     Type
   716 ;;  address         1    wreg     unsigned char 
   717 ;; Auto vars:     Size  Location     Type
   718 ;;  address         1    4[COMMON] unsigned char 
   719 ;; Return value:  Size  Location     Type
   720 ;;                  1    wreg      void 
   721 ;; Registers used:
   722 ;;		wreg
   723 ;; Tracked objects:
   724 ;;		On entry : 0/0
   725 ;;		On exit  : 0/0
   726 ;;		Unchanged: 0/0
   727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   728 ;;      Params:         0       0       0       0       0
   729 ;;      Locals:         1       0       0       0       0
   730 ;;      Temps:          0       0       0       0       0
   731 ;;      Totals:         1       0       0       0       0
   732 ;;Total ram usage:        1 bytes
   733 ;; Hardware stack levels used: 1
   734 ;; Hardware stack levels required when called: 1
   735 ;; This function calls:
   736 ;;		Nothing
   737 ;; This function is called by:
   738 ;;		_setup
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742     00E5                     _I2C_Slave_Init:	
   743                           ;psect for function _I2C_Slave_Init
   744                           
   745                           
   746                           ;incstack = 0
   747                           ; Regs used in _I2C_Slave_Init: [wreg]
   748                           ;I2C_Slave_Init@address stored from wreg
   749     00E5  00F4               	movwf	I2C_Slave_Init@address
   750     00E6                     l767:
   751                           
   752                           ;I2C.c: 93: void I2C_Slave_Init(uint8_t address);I2C.c: 94: {;I2C.c: 95:     SSPADD = ad
      +                          dress;
   753     00E6  0874               	movf	I2C_Slave_Init@address,w
   754     00E7  1683               	bsf	3,5	;RP0=1, select bank1
   755     00E8  1303               	bcf	3,6	;RP1=0, select bank1
   756     00E9  0093               	movwf	19	;volatile
   757                           
   758                           ;I2C.c: 96:     SSPCON = 0x36;
   759     00EA  3036               	movlw	54
   760     00EB  1283               	bcf	3,5	;RP0=0, select bank0
   761     00EC  1303               	bcf	3,6	;RP1=0, select bank0
   762     00ED  0094               	movwf	20	;volatile
   763                           
   764                           ;I2C.c: 97:     SSPSTAT = 0x80;
   765     00EE  3080               	movlw	128
   766     00EF  1683               	bsf	3,5	;RP0=1, select bank1
   767     00F0  1303               	bcf	3,6	;RP1=0, select bank1
   768     00F1  0094               	movwf	20	;volatile
   769                           
   770                           ;I2C.c: 98:     SSPCON2 = 0x01;
   771     00F2  3001               	movlw	1
   772     00F3  0091               	movwf	17	;volatile
   773     00F4                     l769:
   774                           
   775                           ;I2C.c: 99:     TRISC3 = 1;
   776     00F4  1587               	bsf	7,3	;volatile
   777     00F5                     l771:
   778                           
   779                           ;I2C.c: 100:     TRISC4 = 1;
   780     00F5  1607               	bsf	7,4	;volatile
   781     00F6                     l773:
   782                           
   783                           ;I2C.c: 101:     GIE = 1;
   784     00F6  178B               	bsf	11,7	;volatile
   785     00F7                     l775:
   786                           
   787                           ;I2C.c: 102:     PEIE = 1;
   788     00F7  170B               	bsf	11,6	;volatile
   789     00F8                     l777:
   790                           
   791                           ;I2C.c: 103:     SSPIF = 0;
   792     00F8  1283               	bcf	3,5	;RP0=0, select bank0
   793     00F9  1303               	bcf	3,6	;RP1=0, select bank0
   794     00FA  118C               	bcf	12,3	;volatile
   795     00FB                     l779:
   796                           
   797                           ;I2C.c: 104:     SSPIE = 1;
   798     00FB  1683               	bsf	3,5	;RP0=1, select bank1
   799     00FC  1303               	bcf	3,6	;RP1=0, select bank1
   800     00FD  158C               	bsf	12,3	;volatile
   801     00FE                     l175:
   802     00FE  0008               	return
   803     00FF                     __end_of_I2C_Slave_Init:
   804                           
   805                           	psect	text4
   806     00FF                     __ptext4:	
   807 ;; *************** function _angle_to_PWM *****************
   808 ;; Defined at:
   809 ;;		line 167 in file "slave_motors.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;  position        1    wreg     unsigned char 
   812 ;; Auto vars:     Size  Location     Type
   813 ;;  position        1    4[COMMON] unsigned char 
   814 ;; Return value:  Size  Location     Type
   815 ;;                  1    wreg      void 
   816 ;; Registers used:
   817 ;;		wreg, status,2
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   823 ;;      Params:         0       0       0       0       0
   824 ;;      Locals:         1       0       0       0       0
   825 ;;      Temps:          0       0       0       0       0
   826 ;;      Totals:         1       0       0       0       0
   827 ;;Total ram usage:        1 bytes
   828 ;; Hardware stack levels used: 1
   829 ;; Hardware stack levels required when called: 1
   830 ;; This function calls:
   831 ;;		Nothing
   832 ;; This function is called by:
   833 ;;		_main
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837     00FF                     _angle_to_PWM:	
   838                           ;psect for function _angle_to_PWM
   839                           
   840                           
   841                           ;incstack = 0
   842                           ; Regs used in _angle_to_PWM: [wreg+status,2]
   843                           ;angle_to_PWM@position stored from wreg
   844     00FF  00F4               	movwf	angle_to_PWM@position
   845     0100                     l811:
   846                           
   847                           ;slave_motors.c: 169:     if(TMR0count >= 40){
   848     0100  3028               	movlw	40
   849     0101  0277               	subwf	_TMR0count,w
   850     0102  1C03               	skipc
   851     0103  2905               	goto	u11
   852     0104  2906               	goto	u10
   853     0105                     u11:
   854     0105  290B               	goto	l817
   855     0106                     u10:
   856     0106                     l813:
   857                           
   858                           ;slave_motors.c: 170:         TMR0count = 0;
   859     0106  01F7               	clrf	_TMR0count
   860     0107                     l815:
   861                           
   862                           ;slave_motors.c: 171:         RC2 = 1;
   863     0107  1283               	bcf	3,5	;RP0=0, select bank0
   864     0108  1303               	bcf	3,6	;RP1=0, select bank0
   865     0109  1507               	bsf	7,2	;volatile
   866                           
   867                           ;slave_motors.c: 172:     }
   868     010A  2914               	goto	l120
   869     010B                     l817:
   870     010B  0877               	movf	_TMR0count,w
   871     010C  0674               	xorwf	angle_to_PWM@position,w
   872     010D  1D03               	skipz
   873     010E  2910               	goto	u21
   874     010F  2911               	goto	u20
   875     0110                     u21:
   876     0110  2914               	goto	l120
   877     0111                     u20:
   878     0111                     l819:
   879                           
   880                           ;slave_motors.c: 174:         RC2 = 0;
   881     0111  1283               	bcf	3,5	;RP0=0, select bank0
   882     0112  1303               	bcf	3,6	;RP1=0, select bank0
   883     0113  1107               	bcf	7,2	;volatile
   884     0114                     l120:
   885     0114  0008               	return
   886     0115                     __end_of_angle_to_PWM:
   887                           
   888                           	psect	text5
   889     0020                     __ptext5:	
   890 ;; *************** function _isr *****************
   891 ;; Defined at:
   892 ;;		line 59 in file "slave_motors.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;		None
   895 ;; Auto vars:     Size  Location     Type
   896 ;;		None
   897 ;; Return value:  Size  Location     Type
   898 ;;                  1    wreg      void 
   899 ;; Registers used:
   900 ;;		wreg, status,2, status,0, btemp+1
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   906 ;;      Params:         0       0       0       0       0
   907 ;;      Locals:         0       0       0       0       0
   908 ;;      Temps:          4       0       0       0       0
   909 ;;      Totals:         4       0       0       0       0
   910 ;;Total ram usage:        4 bytes
   911 ;; Hardware stack levels used: 1
   912 ;; This function calls:
   913 ;;		Nothing
   914 ;; This function is called by:
   915 ;;		Interrupt level 1
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919     0020                     _isr:	
   920                           ;psect for function _isr
   921                           
   922     0020                     i1l825:
   923                           
   924                           ;slave_motors.c: 60:         TMR0 = 131;
   925     0020  1283               	bcf	3,5	;RP0=0, select bank0
   926     0021  1303               	bcf	3,6	;RP1=0, select bank0
   927     0022  1D8C               	btfss	12,3	;volatile
   928     0023  2825               	goto	u5_21
   929     0024  2826               	goto	u5_20
   930     0025                     u5_21:
   931     0025  2880               	goto	i1l81
   932     0026                     u5_20:
   933     0026                     i1l827:
   934                           
   935                           ;slave_motors.c: 61:         T0IF = 0;
   936     0026  1214               	bcf	20,4	;volatile
   937                           
   938                           ;slave_motors.c: 63: }
   939     0027  1B14               	btfsc	20,6	;volatile
   940     0028  282A               	goto	u6_21
   941     0029  282B               	goto	u6_20
   942     002A                     u6_21:
   943     002A  282F               	goto	i1l84
   944     002B                     u6_20:
   945     002B                     i1l829:
   946     002B  1F94               	btfss	20,7	;volatile
   947     002C  282E               	goto	u7_21
   948     002D  282F               	goto	u7_20
   949     002E                     u7_21:
   950     002E  2835               	goto	i1l839
   951     002F                     u7_20:
   952     002F                     i1l84:
   953     002F  1407               	bsf	7,0	;volatile
   954     0030                     i1l831:
   955     0030  0813               	movf	19,w	;volatile
   956     0031  00FA               	movwf	_discard
   957     0032                     i1l833:
   958     0032  1314               	bcf	20,6	;volatile
   959     0033                     i1l835:
   960     0033  1394               	bcf	20,7	;volatile
   961     0034                     i1l837:
   962     0034  1614               	bsf	20,4	;volatile
   963     0035                     i1l839:
   964     0035  1683               	bsf	3,5	;RP0=1, select bank1
   965     0036  1303               	bcf	3,6	;RP1=0, select bank1
   966     0037  1A94               	btfsc	20,5	;volatile
   967     0038  283A               	goto	u8_21
   968     0039  283B               	goto	u8_20
   969     003A                     u8_21:
   970     003A  285E               	goto	i1l85
   971     003B                     u8_20:
   972     003B                     i1l841:
   973     003B  1914               	btfsc	20,2	;volatile
   974     003C  283E               	goto	u9_21
   975     003D  283F               	goto	u9_20
   976     003E                     u9_21:
   977     003E  285E               	goto	i1l85
   978     003F                     u9_20:
   979     003F                     i1l843:
   980     003F  3004               	movlw	4
   981     0040  00F0               	movwf	??_isr
   982     0041                     u18_27:
   983     0041  0BF0               	decfsz	??_isr,f
   984     0042  2841               	goto	u18_27
   985     0043  0000               	nop
   986     0044  1283               	bcf	3,5	;RP0=0, select bank0
   987     0045  1303               	bcf	3,6	;RP1=0, select bank0
   988     0046  0813               	movf	19,w	;volatile
   989     0047  00FA               	movwf	_discard
   990     0048                     i1l845:
   991     0048  2849               	nop2	;2 cycle nop
   992     0049  284A               	nop2	;2 cycle nop
   993     004A                     i1l847:
   994     004A  1283               	bcf	3,5	;RP0=0, select bank0
   995     004B  1303               	bcf	3,6	;RP1=0, select bank0
   996     004C  118C               	bcf	12,3	;volatile
   997     004D                     i1l849:
   998     004D  1614               	bsf	20,4	;volatile
   999     004E                     i1l86:
  1000     004E  1683               	bsf	3,5	;RP0=1, select bank1
  1001     004F  1303               	bcf	3,6	;RP1=0, select bank1
  1002     0050  1C14               	btfss	20,0	;volatile
  1003     0051  2853               	goto	u10_21
  1004     0052  2854               	goto	u10_20
  1005     0053                     u10_21:
  1006     0053  284E               	goto	i1l86
  1007     0054                     u10_20:
  1008     0054                     i1l851:
  1009     0054  1283               	bcf	3,5	;RP0=0, select bank0
  1010     0055  1303               	bcf	3,6	;RP1=0, select bank0
  1011     0056  0813               	movf	19,w	;volatile
  1012     0057  00F8               	movwf	_readI2C
  1013     0058  30A6               	movlw	166
  1014     0059  00F0               	movwf	??_isr
  1015     005A                     u19_27:
  1016     005A  0BF0               	decfsz	??_isr,f
  1017     005B  285A               	goto	u19_27
  1018     005C  0000               	nop
  1019     005D  287D               	goto	i1l89
  1020     005E                     i1l85:
  1021     005E  1A94               	btfsc	20,5	;volatile
  1022     005F  2861               	goto	u11_21
  1023     0060  2862               	goto	u11_20
  1024     0061                     u11_21:
  1025     0061  287D               	goto	i1l89
  1026     0062                     u11_20:
  1027     0062                     i1l853:
  1028     0062  1D14               	btfss	20,2	;volatile
  1029     0063  2865               	goto	u12_21
  1030     0064  2866               	goto	u12_20
  1031     0065                     u12_21:
  1032     0065  287D               	goto	i1l89
  1033     0066                     u12_20:
  1034     0066                     i1l855:
  1035     0066  1283               	bcf	3,5	;RP0=0, select bank0
  1036     0067  1303               	bcf	3,6	;RP1=0, select bank0
  1037     0068  0813               	movf	19,w	;volatile
  1038     0069  00FA               	movwf	_discard
  1039     006A                     i1l857:
  1040     006A  1683               	bsf	3,5	;RP0=1, select bank1
  1041     006B  1303               	bcf	3,6	;RP1=0, select bank1
  1042     006C  1014               	bcf	20,0	;volatile
  1043     006D  0879               	movf	_send_data,w
  1044     006E  1283               	bcf	3,5	;RP0=0, select bank0
  1045     006F  1303               	bcf	3,6	;RP1=0, select bank0
  1046     0070  0093               	movwf	19	;volatile
  1047     0071                     i1l859:
  1048     0071  1614               	bsf	20,4	;volatile
  1049     0072  30A6               	movlw	166
  1050     0073  00F0               	movwf	??_isr
  1051     0074                     u20_27:
  1052     0074  0BF0               	decfsz	??_isr,f
  1053     0075  2874               	goto	u20_27
  1054     0076  0000               	nop
  1055     0077                     i1l91:
  1056     0077  1683               	bsf	3,5	;RP0=1, select bank1
  1057     0078  1303               	bcf	3,6	;RP1=0, select bank1
  1058     0079  1814               	btfsc	20,0	;volatile
  1059     007A  287C               	goto	u13_21
  1060     007B  287D               	goto	u13_20
  1061     007C                     u13_21:
  1062     007C  2877               	goto	i1l91
  1063     007D                     u13_20:
  1064     007D                     i1l89:
  1065     007D  1283               	bcf	3,5	;RP0=0, select bank0
  1066     007E  1303               	bcf	3,6	;RP1=0, select bank0
  1067     007F  118C               	bcf	12,3	;volatile
  1068     0080                     i1l81:
  1069     0080  1D0B               	btfss	11,2	;volatile
  1070     0081  2883               	goto	u14_21
  1071     0082  2884               	goto	u14_20
  1072     0083                     u14_21:
  1073     0083  288B               	goto	i1l95
  1074     0084                     u14_20:
  1075     0084                     i1l861:
  1076     0084  3001               	movlw	1
  1077     0085  00FF               	movwf	btemp+1
  1078     0086  087F               	movf	btemp+1,w
  1079     0087  07F7               	addwf	_TMR0count,f
  1080     0088                     i1l863:
  1081     0088  3083               	movlw	131
  1082     0089  0081               	movwf	1	;volatile
  1083     008A                     i1l865:
  1084     008A  110B               	bcf	11,2	;volatile
  1085     008B                     i1l95:
  1086     008B  0873               	movf	??_isr+3,w
  1087     008C  00FF               	movwf	btemp+1
  1088     008D  0872               	movf	??_isr+2,w
  1089     008E  008A               	movwf	10
  1090     008F  0E71               	swapf	??_isr+1,w
  1091     0090  0083               	movwf	3
  1092     0091  0EFE               	swapf	btemp,f
  1093     0092  0E7E               	swapf	btemp,w
  1094     0093  0009               	retfie
  1095     0094                     __end_of_isr:
  1096     007E                     btemp	set	126	;btemp
  1097     007E                     wtemp0	set	126
  1098                           
  1099                           	psect	intentry
  1100     0004                     __pintentry:	
  1101                           ;incstack = 0
  1102                           ; Regs used in _isr: [wreg+status,2+status,0+btemp+1]
  1103                           
  1104     0004                     interrupt_function:
  1105     007E                     saved_w	set	btemp
  1106     0004  00FE               	movwf	btemp
  1107     0005  0E03               	swapf	3,w
  1108     0006  00F1               	movwf	??_isr+1
  1109     0007  080A               	movf	10,w
  1110     0008  00F2               	movwf	??_isr+2
  1111     0009  087F               	movf	btemp+1,w
  1112     000A  00F3               	movwf	??_isr+3
  1113     000B  120A  118A  2820   	ljmp	_isr
  1114                           
  1115                           	psect	config
  1116                           
  1117                           ;Config register CONFIG1 @ 0x2007
  1118                           ;	Oscillator Selection bits
  1119                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1120                           ;	Watchdog Timer Enable bit
  1121                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1122                           ;	Power-up Timer Enable bit
  1123                           ;	PWRTE = OFF, PWRT disabled
  1124                           ;	RE3/MCLR pin function select bit
  1125                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1126                           ;	Code Protection bit
  1127                           ;	CP = OFF, Program memory code protection is disabled
  1128                           ;	Data Code Protection bit
  1129                           ;	CPD = OFF, Data memory code protection is disabled
  1130                           ;	Brown Out Reset Selection bits
  1131                           ;	BOREN = OFF, BOR disabled
  1132                           ;	Internal External Switchover bit
  1133                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1134                           ;	Fail-Safe Clock Monitor Enabled bit
  1135                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1136                           ;	Low Voltage Programming Enable bit
  1137                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1138                           ;	In-Circuit Debugger Mode bit
  1139                           ;	DEBUG = 0x1, unprogrammed default
  1140     2007                     	org	8199
  1141     2007  20D4               	dw	8404
  1142                           
  1143                           ;Config register CONFIG2 @ 0x2008
  1144                           ;	Brown-out Reset Selection bit
  1145                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1146                           ;	Flash Program Memory Self Write Enable bits
  1147                           ;	WRT = OFF, Write protection off
  1148     2008                     	org	8200
  1149     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_angle_to_PWM
    _setup->_I2C_Slave_Init

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      30
                                              5 COMMON     1     1      0
                       _angle_to_PWM
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      15
                     _I2C_Slave_Init
                            _initPWM
 ---------------------------------------------------------------------------------
 (2) _initPWM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      15
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _angle_to_PWM                                         1     1      0      15
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _angle_to_PWM
   _setup
     _I2C_Slave_Init
     _initPWM

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       C      12        0.0%
ABS                  0      0       C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Aug 22 18:28:46 2023

                     _BF 04A0                       u10 0106                       u11 0105  
                     u20 0111                       u21 0110                      l101 00DE  
                    l111 0124                      l120 0114                      l108 00BC  
                    l175 00FE                      l801 00AB                      l811 0100  
                    l803 00AC                      l813 0106                      l805 00B0  
                    l815 0107                      l807 00B1                      l817 010B  
                    l809 00B7                      l819 0111                      l771 00F5  
                    l773 00F6                      l781 0115                      l775 00F7  
                    l767 00E6                      l791 0120                      l783 0119  
                    l871 00C6                      l777 00F8                      l769 00F4  
                    l785 011D                      l793 0094                      l873 00C9  
                    l779 00FB                      l787 011E                      l795 00A4  
                    l875 00CB                      l867 00BD                      l789 011F  
                    l797 00A7                      l877 00D1                      l869 00C2  
                    l799 00A8                      l879 00DA                      _CKP 00A4  
                    _GIE 005F                      _RC0 0038                      _RC2 003A  
                    u150 00DA                      u151 00D9                      _SCS 0478  
                    _PSA 040B                      _isr 0020                     ?_isr 0070  
                   _T0IE 005D                     _T0IF 005A                     _T0CS 040D  
                   _PEIE 005E                     i1l81 0080                     i1l91 0077  
                   i1l84 002F                     i1l85 005E                     i1l86 004E  
                   i1l95 008B                     i1l89 007D                     _TMR0 0001  
                   _WCOL 00A7                     _D_nA 04A5                     u5_20 0026  
                   u5_21 0025                     u6_20 002B                     u6_21 002A  
                   u7_20 002F                     u7_21 002E                     u8_20 003B  
                   u8_21 003A                     u9_20 003F                     u9_21 003E  
                   _R_nW 04A2                     _main 00BD                     btemp 007E  
                   start 000E                    ??_isr 0070                    ?_main 0070  
                  _ANSEL 0188                    i1l831 0030                    i1l841 003B  
                  i1l833 0032                    i1l825 0020                    i1l851 0054  
                  i1l843 003F                    i1l835 0033                    i1l827 0026  
                  i1l861 0084                    i1l853 0062                    i1l845 0048  
                  i1l837 0034                    i1l829 002B                    i1l863 0088  
                  i1l855 0066                    i1l847 004A                    i1l839 0035  
                  i1l865 008A                    i1l857 006A                    i1l849 004D  
                  i1l859 0071                    u10_20 0054                    u10_21 0053  
                  u11_20 0062                    u11_21 0061                    u12_20 0066  
                  u12_21 0065                    u20_27 0074                    u13_20 007D  
                  u13_21 007C                    u14_20 0084                    u14_21 0083  
                  u18_27 0041                    _PORTA 0005                    _PORTB 0006  
                  u19_27 005A                    _TRISA 0085                    _TRISB 0086  
                  _SSPIE 0463                    _SSPIF 0063                    _SSPOV 00A6  
   __end_of_angle_to_PWM 0115          __end_of_initPWM 0125                    _setup 0094  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 00E5                   ??_main 0075  
                 ?_setup 0070                   _ANSELH 0189                   _SSPADD 0093  
                 _TRISC0 0438                   _TRISC2 043A                   _TRISC3 043B  
                 _TRISC4 043C                   _SSPBUF 0013                   _SSPCON 0014  
              ??_initPWM 0074             __pdataCOMMON 007B                   saved_w 007E  
__end_of__initialization 001C           __pcstackCOMMON 0070            __end_of_setup 00BD  
         _OPTION_REGbits 0081                  ??_setup 0075    I2C_Slave_Init@address 0074  
             __pmaintext 00BD             _angle_to_PWM 00FF               __pintentry 0004  
                _SSPCON2 0091                  _SSPSTAT 0094                  __ptext1 0094  
                __ptext2 0115                  __ptext3 00E5                  __ptext4 00FF  
                __ptext5 0020                  _discard 007A                  _readI2C 0078  
                _initPWM 0115     angle_to_PWM@position 0074                  _stateDC 0076  
   end_of_initialization 001C           _I2C_Slave_Init 00E5                _TMR0count 0077  
              _TRISCbits 0087   __end_of_I2C_Slave_Init 00FF            __pidataCOMMON 0125  
    start_initialization 0011              __end_of_isr 0094          ?_I2C_Slave_Init 0070  
            __pbssCOMMON 0076                ___latbits 0002                 ?_initPWM 0070  
      interrupt_function 0004                _send_data 0079         ??_I2C_Slave_Init 0074  
          ?_angle_to_PWM 0070                 _servoPos 007B                 intlevel1 0000  
         ??_angle_to_PWM 0074               _OSCCONbits 008F              _SSPCON2bits 0091  
