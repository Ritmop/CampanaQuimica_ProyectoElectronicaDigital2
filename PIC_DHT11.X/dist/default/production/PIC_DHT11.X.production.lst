

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Aug 20 11:38:12 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33     0000                     
    34                           ; Generated 22/03/2023 GMT
    35                           ; 
    36                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F887 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68     0000                     	;# 
    69     0001                     	;# 
    70     0002                     	;# 
    71     0003                     	;# 
    72     0004                     	;# 
    73     0005                     	;# 
    74     0006                     	;# 
    75     0007                     	;# 
    76     0008                     	;# 
    77     0009                     	;# 
    78     000A                     	;# 
    79     000B                     	;# 
    80     000C                     	;# 
    81     000D                     	;# 
    82     000E                     	;# 
    83     000E                     	;# 
    84     000F                     	;# 
    85     0010                     	;# 
    86     0011                     	;# 
    87     0012                     	;# 
    88     0013                     	;# 
    89     0014                     	;# 
    90     0015                     	;# 
    91     0015                     	;# 
    92     0016                     	;# 
    93     0017                     	;# 
    94     0018                     	;# 
    95     0019                     	;# 
    96     001A                     	;# 
    97     001B                     	;# 
    98     001B                     	;# 
    99     001C                     	;# 
   100     001D                     	;# 
   101     001E                     	;# 
   102     001F                     	;# 
   103     0081                     	;# 
   104     0085                     	;# 
   105     0086                     	;# 
   106     0087                     	;# 
   107     0088                     	;# 
   108     0089                     	;# 
   109     008C                     	;# 
   110     008D                     	;# 
   111     008E                     	;# 
   112     008F                     	;# 
   113     0090                     	;# 
   114     0091                     	;# 
   115     0092                     	;# 
   116     0093                     	;# 
   117     0093                     	;# 
   118     0093                     	;# 
   119     0094                     	;# 
   120     0095                     	;# 
   121     0096                     	;# 
   122     0097                     	;# 
   123     0098                     	;# 
   124     0099                     	;# 
   125     009A                     	;# 
   126     009B                     	;# 
   127     009C                     	;# 
   128     009D                     	;# 
   129     009E                     	;# 
   130     009F                     	;# 
   131     0105                     	;# 
   132     0107                     	;# 
   133     0108                     	;# 
   134     0109                     	;# 
   135     010C                     	;# 
   136     010C                     	;# 
   137     010D                     	;# 
   138     010E                     	;# 
   139     010F                     	;# 
   140     0185                     	;# 
   141     0187                     	;# 
   142     0188                     	;# 
   143     0189                     	;# 
   144     018C                     	;# 
   145     018D                     	;# 
   146     0000                     	;# 
   147     0001                     	;# 
   148     0002                     	;# 
   149     0003                     	;# 
   150     0004                     	;# 
   151     0005                     	;# 
   152     0006                     	;# 
   153     0007                     	;# 
   154     0008                     	;# 
   155     0009                     	;# 
   156     000A                     	;# 
   157     000B                     	;# 
   158     000C                     	;# 
   159     000D                     	;# 
   160     000E                     	;# 
   161     000E                     	;# 
   162     000F                     	;# 
   163     0010                     	;# 
   164     0011                     	;# 
   165     0012                     	;# 
   166     0013                     	;# 
   167     0014                     	;# 
   168     0015                     	;# 
   169     0015                     	;# 
   170     0016                     	;# 
   171     0017                     	;# 
   172     0018                     	;# 
   173     0019                     	;# 
   174     001A                     	;# 
   175     001B                     	;# 
   176     001B                     	;# 
   177     001C                     	;# 
   178     001D                     	;# 
   179     001E                     	;# 
   180     001F                     	;# 
   181     0081                     	;# 
   182     0085                     	;# 
   183     0086                     	;# 
   184     0087                     	;# 
   185     0088                     	;# 
   186     0089                     	;# 
   187     008C                     	;# 
   188     008D                     	;# 
   189     008E                     	;# 
   190     008F                     	;# 
   191     0090                     	;# 
   192     0091                     	;# 
   193     0092                     	;# 
   194     0093                     	;# 
   195     0093                     	;# 
   196     0093                     	;# 
   197     0094                     	;# 
   198     0095                     	;# 
   199     0096                     	;# 
   200     0097                     	;# 
   201     0098                     	;# 
   202     0099                     	;# 
   203     009A                     	;# 
   204     009B                     	;# 
   205     009C                     	;# 
   206     009D                     	;# 
   207     009E                     	;# 
   208     009F                     	;# 
   209     0105                     	;# 
   210     0107                     	;# 
   211     0108                     	;# 
   212     0109                     	;# 
   213     010C                     	;# 
   214     010C                     	;# 
   215     010D                     	;# 
   216     010E                     	;# 
   217     010F                     	;# 
   218     0185                     	;# 
   219     0187                     	;# 
   220     0188                     	;# 
   221     0189                     	;# 
   222     018C                     	;# 
   223     018D                     	;# 
   224     0000                     	;# 
   225     0001                     	;# 
   226     0002                     	;# 
   227     0003                     	;# 
   228     0004                     	;# 
   229     0005                     	;# 
   230     0006                     	;# 
   231     0007                     	;# 
   232     0008                     	;# 
   233     0009                     	;# 
   234     000A                     	;# 
   235     000B                     	;# 
   236     000C                     	;# 
   237     000D                     	;# 
   238     000E                     	;# 
   239     000E                     	;# 
   240     000F                     	;# 
   241     0010                     	;# 
   242     0011                     	;# 
   243     0012                     	;# 
   244     0013                     	;# 
   245     0014                     	;# 
   246     0015                     	;# 
   247     0015                     	;# 
   248     0016                     	;# 
   249     0017                     	;# 
   250     0018                     	;# 
   251     0019                     	;# 
   252     001A                     	;# 
   253     001B                     	;# 
   254     001B                     	;# 
   255     001C                     	;# 
   256     001D                     	;# 
   257     001E                     	;# 
   258     001F                     	;# 
   259     0081                     	;# 
   260     0085                     	;# 
   261     0086                     	;# 
   262     0087                     	;# 
   263     0088                     	;# 
   264     0089                     	;# 
   265     008C                     	;# 
   266     008D                     	;# 
   267     008E                     	;# 
   268     008F                     	;# 
   269     0090                     	;# 
   270     0091                     	;# 
   271     0092                     	;# 
   272     0093                     	;# 
   273     0093                     	;# 
   274     0093                     	;# 
   275     0094                     	;# 
   276     0095                     	;# 
   277     0096                     	;# 
   278     0097                     	;# 
   279     0098                     	;# 
   280     0099                     	;# 
   281     009A                     	;# 
   282     009B                     	;# 
   283     009C                     	;# 
   284     009D                     	;# 
   285     009E                     	;# 
   286     009F                     	;# 
   287     0105                     	;# 
   288     0107                     	;# 
   289     0108                     	;# 
   290     0109                     	;# 
   291     010C                     	;# 
   292     010C                     	;# 
   293     010D                     	;# 
   294     010E                     	;# 
   295     010F                     	;# 
   296     0185                     	;# 
   297     0187                     	;# 
   298     0188                     	;# 
   299     0189                     	;# 
   300     018C                     	;# 
   301     018D                     	;# 
   302     0000                     	;# 
   303     0001                     	;# 
   304     0002                     	;# 
   305     0003                     	;# 
   306     0004                     	;# 
   307     0005                     	;# 
   308     0006                     	;# 
   309     0007                     	;# 
   310     0008                     	;# 
   311     0009                     	;# 
   312     000A                     	;# 
   313     000B                     	;# 
   314     000C                     	;# 
   315     000D                     	;# 
   316     000E                     	;# 
   317     000E                     	;# 
   318     000F                     	;# 
   319     0010                     	;# 
   320     0011                     	;# 
   321     0012                     	;# 
   322     0013                     	;# 
   323     0014                     	;# 
   324     0015                     	;# 
   325     0015                     	;# 
   326     0016                     	;# 
   327     0017                     	;# 
   328     0018                     	;# 
   329     0019                     	;# 
   330     001A                     	;# 
   331     001B                     	;# 
   332     001B                     	;# 
   333     001C                     	;# 
   334     001D                     	;# 
   335     001E                     	;# 
   336     001F                     	;# 
   337     0081                     	;# 
   338     0085                     	;# 
   339     0086                     	;# 
   340     0087                     	;# 
   341     0088                     	;# 
   342     0089                     	;# 
   343     008C                     	;# 
   344     008D                     	;# 
   345     008E                     	;# 
   346     008F                     	;# 
   347     0090                     	;# 
   348     0091                     	;# 
   349     0092                     	;# 
   350     0093                     	;# 
   351     0093                     	;# 
   352     0093                     	;# 
   353     0094                     	;# 
   354     0095                     	;# 
   355     0096                     	;# 
   356     0097                     	;# 
   357     0098                     	;# 
   358     0099                     	;# 
   359     009A                     	;# 
   360     009B                     	;# 
   361     009C                     	;# 
   362     009D                     	;# 
   363     009E                     	;# 
   364     009F                     	;# 
   365     0105                     	;# 
   366     0107                     	;# 
   367     0108                     	;# 
   368     0109                     	;# 
   369     010C                     	;# 
   370     010C                     	;# 
   371     010D                     	;# 
   372     010E                     	;# 
   373     010F                     	;# 
   374     0185                     	;# 
   375     0187                     	;# 
   376     0188                     	;# 
   377     0189                     	;# 
   378     018C                     	;# 
   379     018D                     	;# 
   380                           
   381                           	psect	idataCOMMON
   382     0488                     __pidataCOMMON:
   383                           
   384                           ;initializer for _data_ok
   385     0488  3401               	retlw	1
   386     0008                     _PORTDbits	set	8
   387     0008                     _PORTD	set	8
   388     0040                     _RD0	set	64
   389     0043                     _RD3	set	67
   390     0047                     _RD7	set	71
   391     0046                     _RD6	set	70
   392     0045                     _RD5	set	69
   393     0044                     _RD4	set	68
   394     008F                     _OSCCONbits	set	143
   395     0088                     _TRISD	set	136
   396     0440                     _TRISD0	set	1088
   397     0478                     _SCS	set	1144
   398     0189                     _ANSELH	set	393
   399     0188                     _ANSEL	set	392
   400                           
   401                           	psect	strings
   402     0391                     __pstrings:
   403     0391                     stringtab:
   404     0391                     __stringtab:
   405                           
   406                           ;	String table - string pointers are 1 byte each
   407     0391  1BFF               	btfsc	btemp+1,7
   408     0392  2B9B               	ljmp	stringcode
   409     0393  1383               	bcf	3,7
   410     0394  187F               	btfsc	btemp+1,0
   411     0395  1783               	bsf	3,7
   412     0396  0800               	movf	0,w
   413     0397  0A84               	incf	4,f
   414     0398  1903               	skipnz
   415     0399  0AFF               	incf	btemp+1,f
   416     039A  0008               	return
   417     039B                     stringcode:
   418     039B                     stringdir:
   419     039B  3003               	movlw	high stringdir
   420     039C  008A               	movwf	10
   421     039D  0804               	movf	4,w
   422     039E  0A84               	incf	4,f
   423     039F  0782               	addwf	2,f
   424     03A0                     __stringbase:
   425     03A0  3400               	retlw	0
   426     03A1                     __end_of__stringtab:
   427     03A1                     STR_1:
   428     03A1  3452               	retlw	82	;'R'
   429     03A2  3445               	retlw	69	;'E'
   430     03A3  3441               	retlw	65	;'A'
   431     03A4  3444               	retlw	68	;'D'
   432     03A5  3420               	retlw	32	;' '
   433     03A6  3445               	retlw	69	;'E'
   434     03A7  3452               	retlw	82	;'R'
   435     03A8  3452               	retlw	82	;'R'
   436     03A9  344F               	retlw	79	;'O'
   437     03AA  3452               	retlw	82	;'R'
   438     03AB  3400               	retlw	0
   439     03AC                     STR_4:
   440     03AC  3448               	retlw	72	;'H'
   441     03AD  343A               	retlw	58	;':'
   442     03AE  3420               	retlw	32	;' '
   443     03AF  3420               	retlw	32	;' '
   444     03B0  3400               	retlw	0
   445     03B1                     STR_5:
   446     03B1  3420               	retlw	32	;' '
   447     03B2  3425               	retlw	37	;'%'
   448     03B3  3452               	retlw	82	;'R'
   449     03B4  3448               	retlw	72	;'H'
   450     03B5  3400               	retlw	0
   451     03B6                     STR_2:
   452     03B6  3454               	retlw	84	;'T'
   453     03B7  343A               	retlw	58	;':'
   454     03B8  3420               	retlw	32	;' '
   455     03B9  3400               	retlw	0
   456     03BA                     STR_3:
   457     03BA  3427               	retlw	39	;'''
   458     03BB  3443               	retlw	67	;'C'
   459     03BC  3400               	retlw	0
   460                           
   461                           	psect	cinit
   462     000F                     start_initialization:	
   463                           ; #config settings
   464                           
   465     000F                     __initialization:
   466                           
   467                           ; Initialize objects allocated to COMMON
   468     000F  120A  118A  2488  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   469     0014  00FB               	movwf	__pdataCOMMON& (0+127)
   470                           
   471                           ; Clear objects allocated to BANK0
   472     0015  1383               	bcf	3,7	;select IRP bank0
   473     0016  3020               	movlw	low __pbssBANK0
   474     0017  0084               	movwf	4
   475     0018  3035               	movlw	low (__pbssBANK0+21)
   476     0019  120A  118A  2479  120A  118A  	fcall	clear_ram0
   477     001E                     end_of_initialization:	
   478                           ;End of C runtime variable initialization code
   479                           
   480     001E                     __end_of__initialization:
   481     001E  0183               	clrf	3
   482     001F  120A  118A  2A35   	ljmp	_main	;jump to C main() function
   483                           
   484                           	psect	dataCOMMON
   485     007B                     __pdataCOMMON:
   486     007B                     _data_ok:
   487     007B                     	ds	1
   488                           
   489                           	psect	bssBANK0
   490     0020                     __pbssBANK0:
   491     0020                     _bits:
   492     0020                     	ds	5
   493     0025                     _d_hum:
   494     0025                     	ds	3
   495     0028                     _u_hum:
   496     0028                     	ds	3
   497     002B                     _d_temp:
   498     002B                     	ds	3
   499     002E                     _u_temp:
   500     002E                     	ds	3
   501     0031                     _temperatura:
   502     0031                     	ds	2
   503     0033                     _humedad:
   504     0033                     	ds	2
   505                           
   506                           	psect	clrtext
   507     0479                     clear_ram0:	
   508                           ;	Called with FSR containing the base address, and
   509                           ;	W with the last address+1
   510                           
   511     0479  0064               	clrwdt	;clear the watchdog before getting into this loop
   512     047A                     clrloop0:
   513     047A  0180               	clrf	0	;clear RAM location pointed to by FSR
   514     047B  0A84               	incf	4,f	;increment pointer
   515     047C  0604               	xorwf	4,w	;XOR with final address
   516     047D  1903               	btfsc	3,2	;have we reached the end yet?
   517     047E  3400               	retlw	0	;all done for this memory range, return
   518     047F  0604               	xorwf	4,w	;XOR again to restore value
   519     0480  2C7A               	goto	clrloop0	;do the next byte
   520                           
   521                           	psect	cstackCOMMON
   522     0070                     __pcstackCOMMON:
   523     0070                     ?_setup:
   524     0070                     ?_DHT11_start:	
   525                           ; 1 bytes @ 0x0
   526                           
   527     0070                     ?_Lcd_Clear:	
   528                           ; 1 bytes @ 0x0
   529                           
   530     0070                     ?_LDC_output:	
   531                           ; 1 bytes @ 0x0
   532                           
   533     0070                     ?_Lcd_Init:	
   534                           ; 1 bytes @ 0x0
   535                           
   536     0070                     ?_Lcd_Write_Char:	
   537                           ; 1 bytes @ 0x0
   538                           
   539     0070                     ?_isr:	
   540                           ; 1 bytes @ 0x0
   541                           
   542     0070                     ??_isr:	
   543                           ; 1 bytes @ 0x0
   544                           
   545     0070                     ?_Lcd_Port:	
   546                           ; 1 bytes @ 0x0
   547                           
   548     0070                     ?_Lcd_Cmd:	
   549                           ; 1 bytes @ 0x0
   550                           
   551     0070                     ?_DHT11_response:	
   552                           ; 1 bytes @ 0x0
   553                           
   554     0070                     ?_DHT11_read_byte:	
   555                           ; 1 bytes @ 0x0
   556                           
   557     0070                     ?_main:	
   558                           ; 1 bytes @ 0x0
   559                           
   560                           
   561                           ; 2 bytes @ 0x0
   562     0070                     	ds	2
   563     0072                     ??_DHT11_start:
   564     0072                     ??_Lcd_Port:	
   565                           ; 1 bytes @ 0x2
   566                           
   567     0072                     ??_DHT11_response:	
   568                           ; 1 bytes @ 0x2
   569                           
   570     0072                     ??_DHT11_read_byte:	
   571                           ; 1 bytes @ 0x2
   572                           
   573     0072                     ?___awdiv:	
   574                           ; 1 bytes @ 0x2
   575                           
   576     0072                     ?___awmod:	
   577                           ; 2 bytes @ 0x2
   578                           
   579     0072                     Lcd_Port@a:	
   580                           ; 2 bytes @ 0x2
   581                           
   582     0072                     ___awdiv@divisor:	
   583                           ; 1 bytes @ 0x2
   584                           
   585     0072                     ___awmod@divisor:	
   586                           ; 2 bytes @ 0x2
   587                           
   588                           
   589                           ; 2 bytes @ 0x2
   590     0072                     	ds	1
   591     0073                     ??_Lcd_Write_Char:
   592     0073                     ??_Lcd_Cmd:	
   593                           ; 1 bytes @ 0x3
   594                           
   595     0073                     DHT11_read_byte@i:	
   596                           ; 1 bytes @ 0x3
   597                           
   598                           
   599                           ; 1 bytes @ 0x3
   600     0073                     	ds	1
   601     0074                     Lcd_Write_Char@temp:
   602     0074                     DHT11_read_byte@data:	
   603                           ; 1 bytes @ 0x4
   604                           
   605     0074                     ___awdiv@dividend:	
   606                           ; 1 bytes @ 0x4
   607                           
   608     0074                     ___awmod@dividend:	
   609                           ; 2 bytes @ 0x4
   610                           
   611                           
   612                           ; 2 bytes @ 0x4
   613     0074                     	ds	1
   614     0075                     ?_DHT11_read_data:
   615     0075                     Lcd_Cmd@a:	
   616                           ; 1 bytes @ 0x5
   617                           
   618     0075                     Lcd_Write_Char@y:	
   619                           ; 1 bytes @ 0x5
   620                           
   621     0075                     DHT11_read_data@temp:	
   622                           ; 1 bytes @ 0x5
   623                           
   624                           
   625                           ; 1 bytes @ 0x5
   626     0075                     	ds	1
   627     0076                     ??_DHT11_read_data:
   628     0076                     ??_Lcd_Clear:	
   629                           ; 1 bytes @ 0x6
   630                           
   631     0076                     ?_Lcd_Set_Cursor:	
   632                           ; 1 bytes @ 0x6
   633                           
   634     0076                     ??_Lcd_Init:	
   635                           ; 1 bytes @ 0x6
   636                           
   637     0076                     ??___awdiv:	
   638                           ; 1 bytes @ 0x6
   639                           
   640     0076                     ??___awmod:	
   641                           ; 1 bytes @ 0x6
   642                           
   643     0076                     Lcd_Set_Cursor@b:	
   644                           ; 1 bytes @ 0x6
   645                           
   646     0076                     Lcd_Write_Char@a:	
   647                           ; 1 bytes @ 0x6
   648                           
   649     0076                     ___awdiv@counter:	
   650                           ; 1 bytes @ 0x6
   651                           
   652     0076                     ___awmod@counter:	
   653                           ; 1 bytes @ 0x6
   654                           
   655                           
   656                           ; 1 bytes @ 0x6
   657     0076                     	ds	1
   658     0077                     ??_Lcd_Set_Cursor:
   659     0077                     ?_Lcd_Write_String:	
   660                           ; 1 bytes @ 0x7
   661                           
   662     0077                     ___awdiv@sign:	
   663                           ; 1 bytes @ 0x7
   664                           
   665     0077                     ___awmod@sign:	
   666                           ; 1 bytes @ 0x7
   667                           
   668     0077                     Lcd_Write_String@a:	
   669                           ; 1 bytes @ 0x7
   670                           
   671                           
   672                           ; 2 bytes @ 0x7
   673     0077                     	ds	1
   674     0078                     ??_setup:
   675     0078                     ___awdiv@quotient:	
   676                           ; 1 bytes @ 0x8
   677                           
   678                           
   679                           ; 2 bytes @ 0x8
   680     0078                     	ds	1
   681     0079                     Lcd_Write_String@i:
   682                           
   683                           ; 2 bytes @ 0x9
   684     0079                     	ds	1
   685     007A                     ?_separar_digitos8:
   686     007A                     separar_digitos8@dig8:	
   687                           ; 1 bytes @ 0xA
   688                           
   689                           
   690                           ; 1 bytes @ 0xA
   691     007A                     	ds	1
   692     007B                     ??_LDC_output:
   693                           
   694                           	psect	cstackBANK0
   695     0035                     __pcstackBANK0:	
   696                           ; 1 bytes @ 0xB
   697                           
   698     0035                     ??_Lcd_Write_String:
   699     0035                     ??_separar_digitos8:	
   700                           ; 1 bytes @ 0x0
   701                           
   702     0035                     Lcd_Set_Cursor@a:	
   703                           ; 1 bytes @ 0x0
   704                           
   705     0035                     DHT11_read_data@hum:	
   706                           ; 1 bytes @ 0x0
   707                           
   708                           
   709                           ; 1 bytes @ 0x0
   710     0035                     	ds	1
   711     0036                     Lcd_Set_Cursor@z:
   712     0036                     DHT11_read_data@parity:	
   713                           ; 1 bytes @ 0x1
   714                           
   715                           
   716                           ; 1 bytes @ 0x1
   717     0036                     	ds	1
   718     0037                     separar_digitos8@div1:
   719     0037                     Lcd_Set_Cursor@y:	
   720                           ; 1 bytes @ 0x2
   721                           
   722                           
   723                           ; 1 bytes @ 0x2
   724     0037                     	ds	1
   725     0038                     separar_digitos8@decenas:
   726     0038                     Lcd_Set_Cursor@temp:	
   727                           ; 1 bytes @ 0x3
   728                           
   729                           
   730                           ; 1 bytes @ 0x3
   731     0038                     	ds	1
   732     0039                     separar_digitos8@unidades:
   733                           
   734                           ; 1 bytes @ 0x4
   735     0039                     	ds	1
   736     003A                     separar_digitos8@num:
   737                           
   738                           ; 1 bytes @ 0x5
   739     003A                     	ds	1
   740     003B                     ??_main:
   741                           
   742                           ; 1 bytes @ 0x6
   743     003B                     	ds	3
   744                           
   745                           	psect	maintext
   746     0235                     __pmaintext:	
   747 ;;
   748 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   749 ;;
   750 ;; *************** function _main *****************
   751 ;; Defined at:
   752 ;;		line 62 in file "slave_DHT11.c"
   753 ;; Parameters:    Size  Location     Type
   754 ;;		None
   755 ;; Auto vars:     Size  Location     Type
   756 ;;		None
   757 ;; Return value:  Size  Location     Type
   758 ;;                  2   57[None  ] int 
   759 ;; Registers used:
   760 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   761 ;; Tracked objects:
   762 ;;		On entry : B00/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   766 ;;      Params:         0       0       0       0       0
   767 ;;      Locals:         0       0       0       0       0
   768 ;;      Temps:          0       3       0       0       0
   769 ;;      Totals:         0       3       0       0       0
   770 ;;Total ram usage:        3 bytes
   771 ;; Hardware stack levels required when called: 5
   772 ;; This function calls:
   773 ;;		_DHT11_read_data
   774 ;;		_DHT11_start
   775 ;;		_LDC_output
   776 ;;		_Lcd_Clear
   777 ;;		_Lcd_Set_Cursor
   778 ;;		_Lcd_Write_String
   779 ;;		_setup
   780 ;; This function is called by:
   781 ;;		Startup code after reset
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785     0235                     _main:	
   786                           ;psect for function _main
   787                           
   788     0235                     l1492:	
   789                           ;incstack = 0
   790                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   791                           
   792                           
   793                           ;slave_DHT11.c: 63: 
   794     0235  120A  118A  240A  120A  118A  	fcall	_setup
   795                           
   796                           ;slave_DHT11.c: 64: void LDC_output(void){
   797     023A  120A  118A  2428  120A  118A  	fcall	_DHT11_start
   798     023F                     l1494:
   799                           
   800                           ;slave_DHT11.c: 67:     separar_digitos8((temperatura & 0x00FF),d_temp);
   801     023F  3015               	movlw	21
   802     0240  1283               	bcf	3,5	;RP0=0, select bank0
   803     0241  1303               	bcf	3,6	;RP1=0, select bank0
   804     0242  00BD               	movwf	??_main+2
   805     0243  304B               	movlw	75
   806     0244  00BC               	movwf	??_main+1
   807     0245  30BD               	movlw	189
   808     0246  00BB               	movwf	??_main
   809     0247                     u1087:
   810     0247  0BBB               	decfsz	??_main,f
   811     0248  2A47               	goto	u1087
   812     0249  0BBC               	decfsz	??_main+1,f
   813     024A  2A47               	goto	u1087
   814     024B  0BBD               	decfsz	??_main+2,f
   815     024C  2A47               	goto	u1087
   816     024D  2A4E               	nop2
   817     024E                     l1496:
   818                           
   819                           ;slave_DHT11.c: 69:     separar_digitos8((humedad & 0x00FF),d_hum);
   820     024E  3031               	movlw	(low (_temperatura| 0))& (0+255)
   821     024F  00F5               	movwf	DHT11_read_data@temp
   822     0250  3033               	movlw	(low (_humedad| 0))& (0+255)
   823     0251  120A  118A  20A0  120A  118A  	fcall	_DHT11_read_data
   824     0256  00FB               	movwf	_data_ok
   825     0257                     l1498:
   826                           
   827                           ;slave_DHT11.c: 72:     Lcd_Write_String("T: ");
   828     0257  087B               	movf	_data_ok,w
   829     0258  1903               	btfsc	3,2
   830     0259  2A5B               	goto	u1071
   831     025A  2A5C               	goto	u1070
   832     025B                     u1071:
   833     025B  2A67               	goto	l1504
   834     025C                     u1070:
   835     025C                     l1500:
   836                           
   837                           ;slave_DHT11.c: 73:     Lcd_Write_String(u_temp);
   838     025C  120A  118A  246C  120A  118A  	fcall	_Lcd_Clear
   839     0261                     l1502:
   840                           
   841                           ;slave_DHT11.c: 74:     Lcd_Write_Char('.');
   842     0261  120A  118A  2022  120A  118A  	fcall	_LDC_output
   843                           
   844                           ;slave_DHT11.c: 75:     Lcd_Write_String(d_temp);
   845     0266  2A3F               	goto	l1494
   846     0267                     l1504:
   847                           
   848                           ;slave_DHT11.c: 78:     Lcd_Set_Cursor(2,1);
   849     0267  01F6               	clrf	Lcd_Set_Cursor@b
   850     0268  0AF6               	incf	Lcd_Set_Cursor@b,f
   851     0269  3002               	movlw	2
   852     026A  120A  118A  2281  120A  118A  	fcall	_Lcd_Set_Cursor
   853                           
   854                           ;slave_DHT11.c: 79:     Lcd_Write_String("H:  ");
   855     026F  120A  118A  246C  120A  118A  	fcall	_Lcd_Clear
   856     0274                     l1506:
   857                           
   858                           ;slave_DHT11.c: 80:     Lcd_Write_String(u_hum);
   859     0274  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   860     0275  00F7               	movwf	Lcd_Write_String@a
   861     0276  3080               	movlw	128
   862     0277  00F8               	movwf	Lcd_Write_String@a+1
   863     0278  120A  118A  2318  120A  118A  	fcall	_Lcd_Write_String
   864     027D  2A3F               	goto	l1494
   865     027E  120A  118A  280C   	ljmp	start
   866     0281                     __end_of_main:
   867                           
   868                           	psect	text1
   869     040A                     __ptext1:	
   870 ;; *************** function _setup *****************
   871 ;; Defined at:
   872 ;;		line 85 in file "slave_DHT11.c"
   873 ;; Parameters:    Size  Location     Type
   874 ;;		None
   875 ;; Auto vars:     Size  Location     Type
   876 ;;		None
   877 ;; Return value:  Size  Location     Type
   878 ;;                  1    wreg      void 
   879 ;; Registers used:
   880 ;;		wreg, status,2, status,0, pclath, cstack
   881 ;; Tracked objects:
   882 ;;		On entry : 0/0
   883 ;;		On exit  : 0/0
   884 ;;		Unchanged: 0/0
   885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   886 ;;      Params:         0       0       0       0       0
   887 ;;      Locals:         0       0       0       0       0
   888 ;;      Temps:          2       0       0       0       0
   889 ;;      Totals:         2       0       0       0       0
   890 ;;Total ram usage:        2 bytes
   891 ;; Hardware stack levels used: 1
   892 ;; Hardware stack levels required when called: 4
   893 ;; This function calls:
   894 ;;		_Lcd_Init
   895 ;; This function is called by:
   896 ;;		_main
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900     040A                     _setup:	
   901                           ;psect for function _setup
   902                           
   903     040A                     l1430:	
   904                           ;incstack = 0
   905                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   906                           
   907                           
   908                           ;slave_DHT11.c: 86:     uint8_t div1,decenas,unidades;
   909     040A  1683               	bsf	3,5	;RP0=1, select bank3
   910     040B  1703               	bsf	3,6	;RP1=1, select bank3
   911     040C  0188               	clrf	8	;volatile
   912                           
   913                           ;slave_DHT11.c: 87:     div1 = num / 10;
   914     040D  0189               	clrf	9	;volatile
   915                           
   916                           ;slave_DHT11.c: 89:     decenas = div1 % 10;
   917     040E  1683               	bsf	3,5	;RP0=1, select bank1
   918     040F  1303               	bcf	3,6	;RP1=0, select bank1
   919     0410  0188               	clrf	8	;volatile
   920                           
   921                           ;slave_DHT11.c: 90: 
   922     0411  1283               	bcf	3,5	;RP0=0, select bank0
   923     0412  1303               	bcf	3,6	;RP1=0, select bank0
   924     0413  0188               	clrf	8	;volatile
   925     0414                     l1432:
   926                           
   927                           ;slave_DHT11.c: 93: }
   928     0414  3070               	movlw	112
   929     0415  1683               	bsf	3,5	;RP0=1, select bank1
   930     0416  1303               	bcf	3,6	;RP1=0, select bank1
   931     0417  048F               	iorwf	15,f	;volatile
   932     0418                     l1434:
   933     0418  140F               	bsf	15,0	;volatile
   934     0419                     l1436:
   935     0419  120A  118A  217F  120A  118A  	fcall	_Lcd_Init
   936     041E                     l1438:
   937     041E  301A               	movlw	26
   938     041F  00F9               	movwf	??_setup+1
   939     0420  30F8               	movlw	248
   940     0421  00F8               	movwf	??_setup
   941     0422                     u1097:
   942     0422  0BF8               	decfsz	??_setup,f
   943     0423  2C22               	goto	u1097
   944     0424  0BF9               	decfsz	??_setup+1,f
   945     0425  2C22               	goto	u1097
   946     0426  0000               	nop
   947     0427                     l66:
   948     0427  0008               	return
   949     0428                     __end_of_setup:
   950                           
   951                           	psect	text2
   952     017F                     __ptext2:	
   953 ;; *************** function _Lcd_Init *****************
   954 ;; Defined at:
   955 ;;		line 65 in file "LCD4b.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;		None
   958 ;; Auto vars:     Size  Location     Type
   959 ;;		None
   960 ;; Return value:  Size  Location     Type
   961 ;;                  1    wreg      void 
   962 ;; Registers used:
   963 ;;		wreg, status,2, status,0, pclath, cstack
   964 ;; Tracked objects:
   965 ;;		On entry : 0/0
   966 ;;		On exit  : 0/0
   967 ;;		Unchanged: 0/0
   968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   969 ;;      Params:         0       0       0       0       0
   970 ;;      Locals:         0       0       0       0       0
   971 ;;      Temps:          2       0       0       0       0
   972 ;;      Totals:         2       0       0       0       0
   973 ;;Total ram usage:        2 bytes
   974 ;; Hardware stack levels used: 1
   975 ;; Hardware stack levels required when called: 3
   976 ;; This function calls:
   977 ;;		_Lcd_Cmd
   978 ;;		_Lcd_Port
   979 ;; This function is called by:
   980 ;;		_setup
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984     017F                     _Lcd_Init:	
   985                           ;psect for function _Lcd_Init
   986                           
   987     017F                     l1396:	
   988                           ;incstack = 0
   989                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
   990                           
   991                           
   992                           ;LCD4b.c: 66:     Lcd_Port(0x00);
   993     017F  3000               	movlw	0
   994     0180  120A  118A  23E8  120A  118A  	fcall	_Lcd_Port
   995     0185                     l1398:
   996                           
   997                           ;LCD4b.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
   998     0185  3034               	movlw	52
   999     0186  00F7               	movwf	??_Lcd_Init+1
  1000     0187  30F1               	movlw	241
  1001     0188  00F6               	movwf	??_Lcd_Init
  1002     0189                     u1107:
  1003     0189  0BF6               	decfsz	??_Lcd_Init,f
  1004     018A  2989               	goto	u1107
  1005     018B  0BF7               	decfsz	??_Lcd_Init+1,f
  1006     018C  2989               	goto	u1107
  1007     018D  298E               	nop2
  1008     018E                     l1400:
  1009                           
  1010                           ;LCD4b.c: 68:     Lcd_Cmd(0x03);
  1011     018E  3003               	movlw	3
  1012     018F  120A  118A  2443  120A  118A  	fcall	_Lcd_Cmd
  1013                           
  1014                           ;LCD4b.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1015     0194  300D               	movlw	13
  1016     0195  00F7               	movwf	??_Lcd_Init+1
  1017     0196  30FB               	movlw	251
  1018     0197  00F6               	movwf	??_Lcd_Init
  1019     0198                     u1117:
  1020     0198  0BF6               	decfsz	??_Lcd_Init,f
  1021     0199  2998               	goto	u1117
  1022     019A  0BF7               	decfsz	??_Lcd_Init+1,f
  1023     019B  2998               	goto	u1117
  1024     019C  299D               	nop2
  1025     019D                     l1402:
  1026                           
  1027                           ;LCD4b.c: 70:     Lcd_Cmd(0x03);
  1028     019D  3003               	movlw	3
  1029     019E  120A  118A  2443  120A  118A  	fcall	_Lcd_Cmd
  1030     01A3                     l1404:
  1031                           
  1032                           ;LCD4b.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  1033     01A3  301D               	movlw	29
  1034     01A4  00F7               	movwf	??_Lcd_Init+1
  1035     01A5  3091               	movlw	145
  1036     01A6  00F6               	movwf	??_Lcd_Init
  1037     01A7                     u1127:
  1038     01A7  0BF6               	decfsz	??_Lcd_Init,f
  1039     01A8  29A7               	goto	u1127
  1040     01A9  0BF7               	decfsz	??_Lcd_Init+1,f
  1041     01AA  29A7               	goto	u1127
  1042                           
  1043                           ;LCD4b.c: 72:     Lcd_Cmd(0x03);
  1044     01AB  3003               	movlw	3
  1045     01AC  120A  118A  2443  120A  118A  	fcall	_Lcd_Cmd
  1046                           
  1047                           ;LCD4b.c: 74:     Lcd_Cmd(0x02);
  1048     01B1  3002               	movlw	2
  1049     01B2  120A  118A  2443  120A  118A  	fcall	_Lcd_Cmd
  1050                           
  1051                           ;LCD4b.c: 75:     Lcd_Cmd(0x02);
  1052     01B7  3002               	movlw	2
  1053     01B8  120A  118A  2443  120A  118A  	fcall	_Lcd_Cmd
  1054                           
  1055                           ;LCD4b.c: 76:     Lcd_Cmd(0x08);
  1056     01BD  3008               	movlw	8
  1057     01BE  120A  118A  2443  120A  118A  	fcall	_Lcd_Cmd
  1058                           
  1059                           ;LCD4b.c: 77:     Lcd_Cmd(0x00);
  1060     01C3  3000               	movlw	0
  1061     01C4  120A  118A  2443  120A  118A  	fcall	_Lcd_Cmd
  1062                           
  1063                           ;LCD4b.c: 78:     Lcd_Cmd(0x0C);
  1064     01C9  300C               	movlw	12
  1065     01CA  120A  118A  2443  120A  118A  	fcall	_Lcd_Cmd
  1066                           
  1067                           ;LCD4b.c: 79:     Lcd_Cmd(0x00);
  1068     01CF  3000               	movlw	0
  1069     01D0  120A  118A  2443  120A  118A  	fcall	_Lcd_Cmd
  1070                           
  1071                           ;LCD4b.c: 80:     Lcd_Cmd(0x06);
  1072     01D5  3006               	movlw	6
  1073     01D6  120A  118A  2443  120A  118A  	fcall	_Lcd_Cmd
  1074     01DB                     l112:
  1075     01DB  0008               	return
  1076     01DC                     __end_of_Lcd_Init:
  1077                           
  1078                           	psect	text3
  1079     046C                     __ptext3:	
  1080 ;; *************** function _Lcd_Clear *****************
  1081 ;; Defined at:
  1082 ;;		line 43 in file "LCD4b.c"
  1083 ;; Parameters:    Size  Location     Type
  1084 ;;		None
  1085 ;; Auto vars:     Size  Location     Type
  1086 ;;		None
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  1    wreg      void 
  1089 ;; Registers used:
  1090 ;;		wreg, status,2, status,0, pclath, cstack
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1096 ;;      Params:         0       0       0       0       0
  1097 ;;      Locals:         0       0       0       0       0
  1098 ;;      Temps:          0       0       0       0       0
  1099 ;;      Totals:         0       0       0       0       0
  1100 ;;Total ram usage:        0 bytes
  1101 ;; Hardware stack levels used: 1
  1102 ;; Hardware stack levels required when called: 3
  1103 ;; This function calls:
  1104 ;;		_Lcd_Cmd
  1105 ;; This function is called by:
  1106 ;;		_main
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110     046C                     _Lcd_Clear:	
  1111                           ;psect for function _Lcd_Clear
  1112                           
  1113     046C                     l1472:	
  1114                           ;incstack = 0
  1115                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1116                           
  1117                           
  1118                           ;LCD4b.c: 44:     Lcd_Cmd(0);
  1119     046C  3000               	movlw	0
  1120     046D  120A  118A  2443  120A  118A  	fcall	_Lcd_Cmd
  1121                           
  1122                           ;LCD4b.c: 45:     Lcd_Cmd(1);
  1123     0472  3001               	movlw	1
  1124     0473  120A  118A  2443  120A  118A  	fcall	_Lcd_Cmd
  1125     0478                     l103:
  1126     0478  0008               	return
  1127     0479                     __end_of_Lcd_Clear:
  1128                           
  1129                           	psect	text4
  1130     0022                     __ptext4:	
  1131 ;; *************** function _LDC_output *****************
  1132 ;; Defined at:
  1133 ;;		line 101 in file "slave_DHT11.c"
  1134 ;; Parameters:    Size  Location     Type
  1135 ;;		None
  1136 ;; Auto vars:     Size  Location     Type
  1137 ;;		None
  1138 ;; Return value:  Size  Location     Type
  1139 ;;                  1    wreg      void 
  1140 ;; Registers used:
  1141 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1142 ;; Tracked objects:
  1143 ;;		On entry : 0/0
  1144 ;;		On exit  : 0/0
  1145 ;;		Unchanged: 0/0
  1146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1147 ;;      Params:         0       0       0       0       0
  1148 ;;      Locals:         0       0       0       0       0
  1149 ;;      Temps:          0       0       0       0       0
  1150 ;;      Totals:         0       0       0       0       0
  1151 ;;Total ram usage:        0 bytes
  1152 ;; Hardware stack levels used: 1
  1153 ;; Hardware stack levels required when called: 4
  1154 ;; This function calls:
  1155 ;;		_Lcd_Set_Cursor
  1156 ;;		_Lcd_Write_Char
  1157 ;;		_Lcd_Write_String
  1158 ;;		_separar_digitos8
  1159 ;; This function is called by:
  1160 ;;		_main
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164     0022                     _LDC_output:	
  1165                           ;psect for function _LDC_output
  1166                           
  1167     0022                     l1474:	
  1168                           ;incstack = 0
  1169                           ; Regs used in _LDC_output: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1170                           
  1171     0022  302E               	movlw	(low (_u_temp| 0))& (0+255)
  1172     0023  00FA               	movwf	separar_digitos8@dig8
  1173     0024  1283               	bcf	3,5	;RP0=0, select bank0
  1174     0025  1303               	bcf	3,6	;RP1=0, select bank0
  1175     0026  0832               	movf	_temperatura+1,w
  1176     0027  120A  118A  22CD  120A  118A  	fcall	_separar_digitos8
  1177     002C  302B               	movlw	(low (_d_temp| 0))& (0+255)
  1178     002D  00FA               	movwf	separar_digitos8@dig8
  1179     002E  1283               	bcf	3,5	;RP0=0, select bank0
  1180     002F  1303               	bcf	3,6	;RP1=0, select bank0
  1181     0030  0831               	movf	_temperatura,w
  1182     0031  120A  118A  22CD  120A  118A  	fcall	_separar_digitos8
  1183     0036  3028               	movlw	(low (_u_hum| 0))& (0+255)
  1184     0037  00FA               	movwf	separar_digitos8@dig8
  1185     0038  1283               	bcf	3,5	;RP0=0, select bank0
  1186     0039  1303               	bcf	3,6	;RP1=0, select bank0
  1187     003A  0834               	movf	_humedad+1,w
  1188     003B  120A  118A  22CD  120A  118A  	fcall	_separar_digitos8
  1189     0040  3025               	movlw	(low (_d_hum| 0))& (0+255)
  1190     0041  00FA               	movwf	separar_digitos8@dig8
  1191     0042  1283               	bcf	3,5	;RP0=0, select bank0
  1192     0043  1303               	bcf	3,6	;RP1=0, select bank0
  1193     0044  0833               	movf	_humedad,w
  1194     0045  120A  118A  22CD  120A  118A  	fcall	_separar_digitos8
  1195     004A                     l1476:
  1196     004A  01F6               	clrf	Lcd_Set_Cursor@b
  1197     004B  0AF6               	incf	Lcd_Set_Cursor@b,f
  1198     004C  3001               	movlw	1
  1199     004D  120A  118A  2281  120A  118A  	fcall	_Lcd_Set_Cursor
  1200     0052                     l1478:
  1201     0052  3016               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1202     0053  00F7               	movwf	Lcd_Write_String@a
  1203     0054  3080               	movlw	128
  1204     0055  00F8               	movwf	Lcd_Write_String@a+1
  1205     0056  120A  118A  2318  120A  118A  	fcall	_Lcd_Write_String
  1206     005B                     l1480:
  1207     005B  302E               	movlw	(low (_u_temp| 0))& (0+255)
  1208     005C  00F7               	movwf	Lcd_Write_String@a
  1209     005D  3000               	movlw	0
  1210     005E  00F8               	movwf	Lcd_Write_String@a+1
  1211     005F  120A  118A  2318  120A  118A  	fcall	_Lcd_Write_String
  1212     0064                     l1482:
  1213     0064  302E               	movlw	46
  1214     0065  120A  118A  235C  120A  118A  	fcall	_Lcd_Write_Char
  1215     006A  302B               	movlw	(low (_d_temp| 0))& (0+255)
  1216     006B  00F7               	movwf	Lcd_Write_String@a
  1217     006C  3000               	movlw	0
  1218     006D  00F8               	movwf	Lcd_Write_String@a+1
  1219     006E  120A  118A  2318  120A  118A  	fcall	_Lcd_Write_String
  1220     0073  301A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1221     0074  00F7               	movwf	Lcd_Write_String@a
  1222     0075  3080               	movlw	128
  1223     0076  00F8               	movwf	Lcd_Write_String@a+1
  1224     0077  120A  118A  2318  120A  118A  	fcall	_Lcd_Write_String
  1225     007C                     l1484:
  1226     007C  01F6               	clrf	Lcd_Set_Cursor@b
  1227     007D  0AF6               	incf	Lcd_Set_Cursor@b,f
  1228     007E  3002               	movlw	2
  1229     007F  120A  118A  2281  120A  118A  	fcall	_Lcd_Set_Cursor
  1230     0084                     l1486:
  1231     0084  300C               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1232     0085  00F7               	movwf	Lcd_Write_String@a
  1233     0086  3080               	movlw	128
  1234     0087  00F8               	movwf	Lcd_Write_String@a+1
  1235     0088  120A  118A  2318  120A  118A  	fcall	_Lcd_Write_String
  1236     008D                     l1488:
  1237     008D  3028               	movlw	(low (_u_hum| 0))& (0+255)
  1238     008E  00F7               	movwf	Lcd_Write_String@a
  1239     008F  3000               	movlw	0
  1240     0090  00F8               	movwf	Lcd_Write_String@a+1
  1241     0091  120A  118A  2318  120A  118A  	fcall	_Lcd_Write_String
  1242     0096                     l1490:
  1243     0096  3011               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1244     0097  00F7               	movwf	Lcd_Write_String@a
  1245     0098  3080               	movlw	128
  1246     0099  00F8               	movwf	Lcd_Write_String@a+1
  1247     009A  120A  118A  2318  120A  118A  	fcall	_Lcd_Write_String
  1248     009F                     l69:
  1249     009F  0008               	return
  1250     00A0                     __end_of_LDC_output:
  1251                           
  1252                           	psect	text5
  1253     02CD                     __ptext5:	
  1254 ;; *************** function _separar_digitos8 *****************
  1255 ;; Defined at:
  1256 ;;		line 122 in file "slave_DHT11.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;  num             1    wreg     unsigned char 
  1259 ;;  dig8            1   10[COMMON] PTR unsigned char 
  1260 ;;		 -> d_hum(3), u_hum(3), d_temp(3), u_temp(3), 
  1261 ;; Auto vars:     Size  Location     Type
  1262 ;;  num             1    5[BANK0 ] unsigned char 
  1263 ;;  unidades        1    4[BANK0 ] unsigned char 
  1264 ;;  decenas         1    3[BANK0 ] unsigned char 
  1265 ;;  div1            1    2[BANK0 ] unsigned char 
  1266 ;; Return value:  Size  Location     Type
  1267 ;;                  1    wreg      void 
  1268 ;; Registers used:
  1269 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1275 ;;      Params:         1       0       0       0       0
  1276 ;;      Locals:         0       4       0       0       0
  1277 ;;      Temps:          0       2       0       0       0
  1278 ;;      Totals:         1       6       0       0       0
  1279 ;;Total ram usage:        7 bytes
  1280 ;; Hardware stack levels used: 1
  1281 ;; Hardware stack levels required when called: 2
  1282 ;; This function calls:
  1283 ;;		___awdiv
  1284 ;;		___awmod
  1285 ;; This function is called by:
  1286 ;;		_LDC_output
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290     02CD                     _separar_digitos8:	
  1291                           ;psect for function _separar_digitos8
  1292                           
  1293                           
  1294                           ;incstack = 0
  1295                           ; Regs used in _separar_digitos8: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1296                           ;separar_digitos8@num stored from wreg
  1297     02CD  1283               	bcf	3,5	;RP0=0, select bank0
  1298     02CE  1303               	bcf	3,6	;RP1=0, select bank0
  1299     02CF  00BA               	movwf	separar_digitos8@num
  1300     02D0                     l1208:
  1301     02D0  300A               	movlw	10
  1302     02D1  00F2               	movwf	___awdiv@divisor
  1303     02D2  3000               	movlw	0
  1304     02D3  00F3               	movwf	___awdiv@divisor+1
  1305     02D4  083A               	movf	separar_digitos8@num,w
  1306     02D5  00B5               	movwf	??_separar_digitos8
  1307     02D6  01B6               	clrf	??_separar_digitos8+1
  1308     02D7  0835               	movf	??_separar_digitos8,w
  1309     02D8  00F4               	movwf	___awdiv@dividend
  1310     02D9  0836               	movf	??_separar_digitos8+1,w
  1311     02DA  00F5               	movwf	___awdiv@dividend+1
  1312     02DB  120A  118A  2118  120A  118A  	fcall	___awdiv
  1313     02E0  0872               	movf	?___awdiv,w
  1314     02E1  1283               	bcf	3,5	;RP0=0, select bank0
  1315     02E2  1303               	bcf	3,6	;RP1=0, select bank0
  1316     02E3  00B7               	movwf	separar_digitos8@div1
  1317     02E4  300A               	movlw	10
  1318     02E5  00F2               	movwf	___awmod@divisor
  1319     02E6  3000               	movlw	0
  1320     02E7  00F3               	movwf	___awmod@divisor+1
  1321     02E8  083A               	movf	separar_digitos8@num,w
  1322     02E9  00B5               	movwf	??_separar_digitos8
  1323     02EA  01B6               	clrf	??_separar_digitos8+1
  1324     02EB  0835               	movf	??_separar_digitos8,w
  1325     02EC  00F4               	movwf	___awmod@dividend
  1326     02ED  0836               	movf	??_separar_digitos8+1,w
  1327     02EE  00F5               	movwf	___awmod@dividend+1
  1328     02EF  120A  118A  21DC  120A  118A  	fcall	___awmod
  1329     02F4  0872               	movf	?___awmod,w
  1330     02F5  1283               	bcf	3,5	;RP0=0, select bank0
  1331     02F6  1303               	bcf	3,6	;RP1=0, select bank0
  1332     02F7  00B9               	movwf	separar_digitos8@unidades
  1333     02F8  300A               	movlw	10
  1334     02F9  00F2               	movwf	___awmod@divisor
  1335     02FA  3000               	movlw	0
  1336     02FB  00F3               	movwf	___awmod@divisor+1
  1337     02FC  0837               	movf	separar_digitos8@div1,w
  1338     02FD  00B5               	movwf	??_separar_digitos8
  1339     02FE  01B6               	clrf	??_separar_digitos8+1
  1340     02FF  0835               	movf	??_separar_digitos8,w
  1341     0300  00F4               	movwf	___awmod@dividend
  1342     0301  0836               	movf	??_separar_digitos8+1,w
  1343     0302  00F5               	movwf	___awmod@dividend+1
  1344     0303  120A  118A  21DC  120A  118A  	fcall	___awmod
  1345     0308  0872               	movf	?___awmod,w
  1346     0309  1283               	bcf	3,5	;RP0=0, select bank0
  1347     030A  1303               	bcf	3,6	;RP1=0, select bank0
  1348     030B  00B8               	movwf	separar_digitos8@decenas
  1349     030C                     l1210:
  1350     030C  0A7A               	incf	separar_digitos8@dig8,w
  1351     030D  0084               	movwf	4
  1352     030E  0839               	movf	separar_digitos8@unidades,w
  1353     030F  3E30               	addlw	48
  1354     0310  1383               	bcf	3,7	;select IRP bank0
  1355     0311  0080               	movwf	0
  1356     0312                     l1212:
  1357     0312  087A               	movf	separar_digitos8@dig8,w
  1358     0313  0084               	movwf	4
  1359     0314  0838               	movf	separar_digitos8@decenas,w
  1360     0315  3E30               	addlw	48
  1361     0316  0080               	movwf	0
  1362     0317                     l72:
  1363     0317  0008               	return
  1364     0318                     __end_of_separar_digitos8:
  1365                           
  1366                           	psect	text6
  1367     01DC                     __ptext6:	
  1368 ;; *************** function ___awmod *****************
  1369 ;; Defined at:
  1370 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;  divisor         2    2[COMMON] int 
  1373 ;;  dividend        2    4[COMMON] int 
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;  sign            1    7[COMMON] unsigned char 
  1376 ;;  counter         1    6[COMMON] unsigned char 
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  2    2[COMMON] int 
  1379 ;; Registers used:
  1380 ;;		wreg, status,2, status,0, btemp+1
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1386 ;;      Params:         4       0       0       0       0
  1387 ;;      Locals:         2       0       0       0       0
  1388 ;;      Temps:          0       0       0       0       0
  1389 ;;      Totals:         6       0       0       0       0
  1390 ;;Total ram usage:        6 bytes
  1391 ;; Hardware stack levels used: 1
  1392 ;; Hardware stack levels required when called: 1
  1393 ;; This function calls:
  1394 ;;		Nothing
  1395 ;; This function is called by:
  1396 ;;		_separar_digitos8
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400     01DC                     ___awmod:	
  1401                           ;psect for function ___awmod
  1402                           
  1403     01DC                     l1124:	
  1404                           ;incstack = 0
  1405                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  1406                           
  1407     01DC  01F7               	clrf	___awmod@sign
  1408     01DD                     l1126:
  1409     01DD  1FF5               	btfss	___awmod@dividend+1,7
  1410     01DE  29E0               	goto	u581
  1411     01DF  29E1               	goto	u580
  1412     01E0                     u581:
  1413     01E0  29E8               	goto	l1132
  1414     01E1                     u580:
  1415     01E1                     l1128:
  1416     01E1  09F4               	comf	___awmod@dividend,f
  1417     01E2  09F5               	comf	___awmod@dividend+1,f
  1418     01E3  0AF4               	incf	___awmod@dividend,f
  1419     01E4  1903               	skipnz
  1420     01E5  0AF5               	incf	___awmod@dividend+1,f
  1421     01E6                     l1130:
  1422     01E6  01F7               	clrf	___awmod@sign
  1423     01E7  0AF7               	incf	___awmod@sign,f
  1424     01E8                     l1132:
  1425     01E8  1FF3               	btfss	___awmod@divisor+1,7
  1426     01E9  29EB               	goto	u591
  1427     01EA  29EC               	goto	u590
  1428     01EB                     u591:
  1429     01EB  29F1               	goto	l1136
  1430     01EC                     u590:
  1431     01EC                     l1134:
  1432     01EC  09F2               	comf	___awmod@divisor,f
  1433     01ED  09F3               	comf	___awmod@divisor+1,f
  1434     01EE  0AF2               	incf	___awmod@divisor,f
  1435     01EF  1903               	skipnz
  1436     01F0  0AF3               	incf	___awmod@divisor+1,f
  1437     01F1                     l1136:
  1438     01F1  0872               	movf	___awmod@divisor,w
  1439     01F2  0473               	iorwf	___awmod@divisor+1,w
  1440     01F3  1903               	btfsc	3,2
  1441     01F4  29F6               	goto	u601
  1442     01F5  29F7               	goto	u600
  1443     01F6                     u601:
  1444     01F6  2A26               	goto	l1154
  1445     01F7                     u600:
  1446     01F7                     l1138:
  1447     01F7  01F6               	clrf	___awmod@counter
  1448     01F8  0AF6               	incf	___awmod@counter,f
  1449     01F9  2A05               	goto	l1144
  1450     01FA                     l1140:
  1451     01FA  3001               	movlw	1
  1452     01FB                     u615:
  1453     01FB  1003               	clrc
  1454     01FC  0DF2               	rlf	___awmod@divisor,f
  1455     01FD  0DF3               	rlf	___awmod@divisor+1,f
  1456     01FE  3EFF               	addlw	-1
  1457     01FF  1D03               	skipz
  1458     0200  29FB               	goto	u615
  1459     0201                     l1142:
  1460     0201  3001               	movlw	1
  1461     0202  00FF               	movwf	btemp+1
  1462     0203  087F               	movf	btemp+1,w
  1463     0204  07F6               	addwf	___awmod@counter,f
  1464     0205                     l1144:
  1465     0205  1FF3               	btfss	___awmod@divisor+1,7
  1466     0206  2A08               	goto	u621
  1467     0207  2A09               	goto	u620
  1468     0208                     u621:
  1469     0208  29FA               	goto	l1140
  1470     0209                     u620:
  1471     0209                     l1146:
  1472     0209  0873               	movf	___awmod@divisor+1,w
  1473     020A  0275               	subwf	___awmod@dividend+1,w
  1474     020B  1D03               	skipz
  1475     020C  2A0F               	goto	u635
  1476     020D  0872               	movf	___awmod@divisor,w
  1477     020E  0274               	subwf	___awmod@dividend,w
  1478     020F                     u635:
  1479     020F  1C03               	skipc
  1480     0210  2A12               	goto	u631
  1481     0211  2A13               	goto	u630
  1482     0212                     u631:
  1483     0212  2A19               	goto	l1150
  1484     0213                     u630:
  1485     0213                     l1148:
  1486     0213  0872               	movf	___awmod@divisor,w
  1487     0214  02F4               	subwf	___awmod@dividend,f
  1488     0215  0873               	movf	___awmod@divisor+1,w
  1489     0216  1C03               	skipc
  1490     0217  03F5               	decf	___awmod@dividend+1,f
  1491     0218  02F5               	subwf	___awmod@dividend+1,f
  1492     0219                     l1150:
  1493     0219  3001               	movlw	1
  1494     021A                     u645:
  1495     021A  1003               	clrc
  1496     021B  0CF3               	rrf	___awmod@divisor+1,f
  1497     021C  0CF2               	rrf	___awmod@divisor,f
  1498     021D  3EFF               	addlw	-1
  1499     021E  1D03               	skipz
  1500     021F  2A1A               	goto	u645
  1501     0220                     l1152:
  1502     0220  3001               	movlw	1
  1503     0221  02F6               	subwf	___awmod@counter,f
  1504     0222  1D03               	btfss	3,2
  1505     0223  2A25               	goto	u651
  1506     0224  2A26               	goto	u650
  1507     0225                     u651:
  1508     0225  2A09               	goto	l1146
  1509     0226                     u650:
  1510     0226                     l1154:
  1511     0226  0877               	movf	___awmod@sign,w
  1512     0227  1903               	btfsc	3,2
  1513     0228  2A2A               	goto	u661
  1514     0229  2A2B               	goto	u660
  1515     022A                     u661:
  1516     022A  2A30               	goto	l1158
  1517     022B                     u660:
  1518     022B                     l1156:
  1519     022B  09F4               	comf	___awmod@dividend,f
  1520     022C  09F5               	comf	___awmod@dividend+1,f
  1521     022D  0AF4               	incf	___awmod@dividend,f
  1522     022E  1903               	skipnz
  1523     022F  0AF5               	incf	___awmod@dividend+1,f
  1524     0230                     l1158:
  1525     0230  0875               	movf	___awmod@dividend+1,w
  1526     0231  00F3               	movwf	?___awmod+1
  1527     0232  0874               	movf	___awmod@dividend,w
  1528     0233  00F2               	movwf	?___awmod
  1529     0234                     l420:
  1530     0234  0008               	return
  1531     0235                     __end_of___awmod:
  1532                           
  1533                           	psect	text7
  1534     0118                     __ptext7:	
  1535 ;; *************** function ___awdiv *****************
  1536 ;; Defined at:
  1537 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;  divisor         2    2[COMMON] int 
  1540 ;;  dividend        2    4[COMMON] int 
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;  quotient        2    8[COMMON] int 
  1543 ;;  sign            1    7[COMMON] unsigned char 
  1544 ;;  counter         1    6[COMMON] unsigned char 
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  2    2[COMMON] int 
  1547 ;; Registers used:
  1548 ;;		wreg, status,2, status,0, btemp+1
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1554 ;;      Params:         4       0       0       0       0
  1555 ;;      Locals:         4       0       0       0       0
  1556 ;;      Temps:          0       0       0       0       0
  1557 ;;      Totals:         8       0       0       0       0
  1558 ;;Total ram usage:        8 bytes
  1559 ;; Hardware stack levels used: 1
  1560 ;; Hardware stack levels required when called: 1
  1561 ;; This function calls:
  1562 ;;		Nothing
  1563 ;; This function is called by:
  1564 ;;		_separar_digitos8
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568     0118                     ___awdiv:	
  1569                           ;psect for function ___awdiv
  1570                           
  1571     0118                     l1080:	
  1572                           ;incstack = 0
  1573                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  1574                           
  1575     0118  01F7               	clrf	___awdiv@sign
  1576     0119                     l1082:
  1577     0119  1FF3               	btfss	___awdiv@divisor+1,7
  1578     011A  291C               	goto	u481
  1579     011B  291D               	goto	u480
  1580     011C                     u481:
  1581     011C  2924               	goto	l1088
  1582     011D                     u480:
  1583     011D                     l1084:
  1584     011D  09F2               	comf	___awdiv@divisor,f
  1585     011E  09F3               	comf	___awdiv@divisor+1,f
  1586     011F  0AF2               	incf	___awdiv@divisor,f
  1587     0120  1903               	skipnz
  1588     0121  0AF3               	incf	___awdiv@divisor+1,f
  1589     0122                     l1086:
  1590     0122  01F7               	clrf	___awdiv@sign
  1591     0123  0AF7               	incf	___awdiv@sign,f
  1592     0124                     l1088:
  1593     0124  1FF5               	btfss	___awdiv@dividend+1,7
  1594     0125  2927               	goto	u491
  1595     0126  2928               	goto	u490
  1596     0127                     u491:
  1597     0127  2931               	goto	l1094
  1598     0128                     u490:
  1599     0128                     l1090:
  1600     0128  09F4               	comf	___awdiv@dividend,f
  1601     0129  09F5               	comf	___awdiv@dividend+1,f
  1602     012A  0AF4               	incf	___awdiv@dividend,f
  1603     012B  1903               	skipnz
  1604     012C  0AF5               	incf	___awdiv@dividend+1,f
  1605     012D                     l1092:
  1606     012D  3001               	movlw	1
  1607     012E  00FF               	movwf	btemp+1
  1608     012F  087F               	movf	btemp+1,w
  1609     0130  06F7               	xorwf	___awdiv@sign,f
  1610     0131                     l1094:
  1611     0131  01F8               	clrf	___awdiv@quotient
  1612     0132  01F9               	clrf	___awdiv@quotient+1
  1613     0133                     l1096:
  1614     0133  0872               	movf	___awdiv@divisor,w
  1615     0134  0473               	iorwf	___awdiv@divisor+1,w
  1616     0135  1903               	btfsc	3,2
  1617     0136  2938               	goto	u501
  1618     0137  2939               	goto	u500
  1619     0138                     u501:
  1620     0138  2970               	goto	l1116
  1621     0139                     u500:
  1622     0139                     l1098:
  1623     0139  01F6               	clrf	___awdiv@counter
  1624     013A  0AF6               	incf	___awdiv@counter,f
  1625     013B  2947               	goto	l1104
  1626     013C                     l1100:
  1627     013C  3001               	movlw	1
  1628     013D                     u515:
  1629     013D  1003               	clrc
  1630     013E  0DF2               	rlf	___awdiv@divisor,f
  1631     013F  0DF3               	rlf	___awdiv@divisor+1,f
  1632     0140  3EFF               	addlw	-1
  1633     0141  1D03               	skipz
  1634     0142  293D               	goto	u515
  1635     0143                     l1102:
  1636     0143  3001               	movlw	1
  1637     0144  00FF               	movwf	btemp+1
  1638     0145  087F               	movf	btemp+1,w
  1639     0146  07F6               	addwf	___awdiv@counter,f
  1640     0147                     l1104:
  1641     0147  1FF3               	btfss	___awdiv@divisor+1,7
  1642     0148  294A               	goto	u521
  1643     0149  294B               	goto	u520
  1644     014A                     u521:
  1645     014A  293C               	goto	l1100
  1646     014B                     u520:
  1647     014B                     l1106:
  1648     014B  3001               	movlw	1
  1649     014C                     u535:
  1650     014C  1003               	clrc
  1651     014D  0DF8               	rlf	___awdiv@quotient,f
  1652     014E  0DF9               	rlf	___awdiv@quotient+1,f
  1653     014F  3EFF               	addlw	-1
  1654     0150  1D03               	skipz
  1655     0151  294C               	goto	u535
  1656     0152  0873               	movf	___awdiv@divisor+1,w
  1657     0153  0275               	subwf	___awdiv@dividend+1,w
  1658     0154  1D03               	skipz
  1659     0155  2958               	goto	u545
  1660     0156  0872               	movf	___awdiv@divisor,w
  1661     0157  0274               	subwf	___awdiv@dividend,w
  1662     0158                     u545:
  1663     0158  1C03               	skipc
  1664     0159  295B               	goto	u541
  1665     015A  295C               	goto	u540
  1666     015B                     u541:
  1667     015B  2963               	goto	l1112
  1668     015C                     u540:
  1669     015C                     l1108:
  1670     015C  0872               	movf	___awdiv@divisor,w
  1671     015D  02F4               	subwf	___awdiv@dividend,f
  1672     015E  0873               	movf	___awdiv@divisor+1,w
  1673     015F  1C03               	skipc
  1674     0160  03F5               	decf	___awdiv@dividend+1,f
  1675     0161  02F5               	subwf	___awdiv@dividend+1,f
  1676     0162                     l1110:
  1677     0162  1478               	bsf	___awdiv@quotient,0
  1678     0163                     l1112:
  1679     0163  3001               	movlw	1
  1680     0164                     u555:
  1681     0164  1003               	clrc
  1682     0165  0CF3               	rrf	___awdiv@divisor+1,f
  1683     0166  0CF2               	rrf	___awdiv@divisor,f
  1684     0167  3EFF               	addlw	-1
  1685     0168  1D03               	skipz
  1686     0169  2964               	goto	u555
  1687     016A                     l1114:
  1688     016A  3001               	movlw	1
  1689     016B  02F6               	subwf	___awdiv@counter,f
  1690     016C  1D03               	btfss	3,2
  1691     016D  296F               	goto	u561
  1692     016E  2970               	goto	u560
  1693     016F                     u561:
  1694     016F  294B               	goto	l1106
  1695     0170                     u560:
  1696     0170                     l1116:
  1697     0170  0877               	movf	___awdiv@sign,w
  1698     0171  1903               	btfsc	3,2
  1699     0172  2974               	goto	u571
  1700     0173  2975               	goto	u570
  1701     0174                     u571:
  1702     0174  297A               	goto	l1120
  1703     0175                     u570:
  1704     0175                     l1118:
  1705     0175  09F8               	comf	___awdiv@quotient,f
  1706     0176  09F9               	comf	___awdiv@quotient+1,f
  1707     0177  0AF8               	incf	___awdiv@quotient,f
  1708     0178  1903               	skipnz
  1709     0179  0AF9               	incf	___awdiv@quotient+1,f
  1710     017A                     l1120:
  1711     017A  0879               	movf	___awdiv@quotient+1,w
  1712     017B  00F3               	movwf	?___awdiv+1
  1713     017C  0878               	movf	___awdiv@quotient,w
  1714     017D  00F2               	movwf	?___awdiv
  1715     017E                     l407:
  1716     017E  0008               	return
  1717     017F                     __end_of___awdiv:
  1718                           
  1719                           	psect	text8
  1720     0318                     __ptext8:	
  1721 ;; *************** function _Lcd_Write_String *****************
  1722 ;; Defined at:
  1723 ;;		line 98 in file "LCD4b.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;  a               2    7[COMMON] PTR unsigned char 
  1726 ;;		 -> STR_5(5), STR_4(5), STR_3(3), STR_2(4), 
  1727 ;;		 -> u_hum(3), d_temp(3), u_temp(3), STR_1(11), 
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;  i               2    9[COMMON] int 
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  1    wreg      void 
  1732 ;; Registers used:
  1733 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1739 ;;      Params:         2       0       0       0       0
  1740 ;;      Locals:         2       0       0       0       0
  1741 ;;      Temps:          0       3       0       0       0
  1742 ;;      Totals:         4       3       0       0       0
  1743 ;;Total ram usage:        7 bytes
  1744 ;; Hardware stack levels used: 1
  1745 ;; Hardware stack levels required when called: 3
  1746 ;; This function calls:
  1747 ;;		_Lcd_Write_Char
  1748 ;; This function is called by:
  1749 ;;		_main
  1750 ;;		_LDC_output
  1751 ;; This function uses a non-reentrant model
  1752 ;;
  1753                           
  1754     0318                     _Lcd_Write_String:	
  1755                           ;psect for function _Lcd_Write_String
  1756                           
  1757     0318                     l1388:	
  1758                           ;incstack = 0
  1759                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1760                           
  1761                           
  1762                           ;LCD4b.c: 99:     int i;;LCD4b.c: 100:     for (i = 0; a[i] != '\0'; i++)
  1763     0318  01F9               	clrf	Lcd_Write_String@i
  1764     0319  01FA               	clrf	Lcd_Write_String@i+1
  1765     031A  2B3D               	goto	l1394
  1766     031B                     l1390:
  1767                           
  1768                           ;LCD4b.c: 101:         Lcd_Write_Char(a[i]);
  1769     031B  0879               	movf	Lcd_Write_String@i,w
  1770     031C  0777               	addwf	Lcd_Write_String@a,w
  1771     031D  00B6               	movwf	??_Lcd_Write_String+1
  1772     031E  0878               	movf	Lcd_Write_String@a+1,w
  1773     031F  00B5               	movwf	??_Lcd_Write_String
  1774     0320  1803               	skipnc
  1775     0321  0AB5               	incf	??_Lcd_Write_String,f
  1776     0322  1FF9               	btfss	Lcd_Write_String@i,7
  1777     0323  2B25               	goto	u940
  1778     0324  03B5               	decf	??_Lcd_Write_String,f
  1779     0325                     u940:
  1780     0325  1283               	bcf	3,5	;RP0=0, select bank0
  1781     0326  1303               	bcf	3,6	;RP1=0, select bank0
  1782     0327  0835               	movf	??_Lcd_Write_String,w
  1783     0328  00B7               	movwf	??_Lcd_Write_String+2
  1784     0329  0837               	movf	??_Lcd_Write_String+2,w
  1785     032A  00FF               	movwf	btemp+1
  1786     032B  0836               	movf	??_Lcd_Write_String+1,w
  1787     032C  0084               	movwf	4
  1788     032D  120A  118A  2391  120A  118A  	fcall	stringtab
  1789     0332  120A  118A  235C  120A  118A  	fcall	_Lcd_Write_Char
  1790     0337                     l1392:
  1791     0337  3001               	movlw	1
  1792     0338  07F9               	addwf	Lcd_Write_String@i,f
  1793     0339  1803               	skipnc
  1794     033A  0AFA               	incf	Lcd_Write_String@i+1,f
  1795     033B  3000               	movlw	0
  1796     033C  07FA               	addwf	Lcd_Write_String@i+1,f
  1797     033D                     l1394:
  1798     033D  0879               	movf	Lcd_Write_String@i,w
  1799     033E  0777               	addwf	Lcd_Write_String@a,w
  1800     033F  1283               	bcf	3,5	;RP0=0, select bank0
  1801     0340  1303               	bcf	3,6	;RP1=0, select bank0
  1802     0341  00B6               	movwf	??_Lcd_Write_String+1
  1803     0342  0878               	movf	Lcd_Write_String@a+1,w
  1804     0343  00B5               	movwf	??_Lcd_Write_String
  1805     0344  1803               	skipnc
  1806     0345  0AB5               	incf	??_Lcd_Write_String,f
  1807     0346  1FF9               	btfss	Lcd_Write_String@i,7
  1808     0347  2B49               	goto	u950
  1809     0348  03B5               	decf	??_Lcd_Write_String,f
  1810     0349                     u950:
  1811     0349  1283               	bcf	3,5	;RP0=0, select bank0
  1812     034A  1303               	bcf	3,6	;RP1=0, select bank0
  1813     034B  0835               	movf	??_Lcd_Write_String,w
  1814     034C  00B7               	movwf	??_Lcd_Write_String+2
  1815     034D  0837               	movf	??_Lcd_Write_String+2,w
  1816     034E  00FF               	movwf	btemp+1
  1817     034F  0836               	movf	??_Lcd_Write_String+1,w
  1818     0350  0084               	movwf	4
  1819     0351  120A  118A  2391  120A  118A  	fcall	stringtab
  1820     0356  3A00               	xorlw	0
  1821     0357  1D03               	skipz
  1822     0358  2B5A               	goto	u961
  1823     0359  2B5B               	goto	u960
  1824     035A                     u961:
  1825     035A  2B1B               	goto	l1390
  1826     035B                     u960:
  1827     035B                     l121:
  1828     035B  0008               	return
  1829     035C                     __end_of_Lcd_Write_String:
  1830                           
  1831                           	psect	text9
  1832     035C                     __ptext9:	
  1833 ;; *************** function _Lcd_Write_Char *****************
  1834 ;; Defined at:
  1835 ;;		line 83 in file "LCD4b.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;  a               1    wreg     unsigned char 
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;  a               1    6[COMMON] unsigned char 
  1840 ;;  y               1    5[COMMON] unsigned char 
  1841 ;;  temp            1    4[COMMON] unsigned char 
  1842 ;; Return value:  Size  Location     Type
  1843 ;;                  1    wreg      void 
  1844 ;; Registers used:
  1845 ;;		wreg, status,2, status,0, pclath, cstack
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1851 ;;      Params:         0       0       0       0       0
  1852 ;;      Locals:         3       0       0       0       0
  1853 ;;      Temps:          1       0       0       0       0
  1854 ;;      Totals:         4       0       0       0       0
  1855 ;;Total ram usage:        4 bytes
  1856 ;; Hardware stack levels used: 1
  1857 ;; Hardware stack levels required when called: 2
  1858 ;; This function calls:
  1859 ;;		_Lcd_Port
  1860 ;; This function is called by:
  1861 ;;		_LDC_output
  1862 ;;		_Lcd_Write_String
  1863 ;; This function uses a non-reentrant model
  1864 ;;
  1865                           
  1866     035C                     _Lcd_Write_Char:	
  1867                           ;psect for function _Lcd_Write_Char
  1868                           
  1869                           
  1870                           ;incstack = 0
  1871                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1872                           ;Lcd_Write_Char@a stored from wreg
  1873     035C  00F6               	movwf	Lcd_Write_Char@a
  1874     035D                     l1330:
  1875                           
  1876                           ;LCD4b.c: 84:     char temp, y;;LCD4b.c: 85:     temp = a & 0x0F;
  1877     035D  0876               	movf	Lcd_Write_Char@a,w
  1878     035E  390F               	andlw	15
  1879     035F  00F4               	movwf	Lcd_Write_Char@temp
  1880                           
  1881                           ;LCD4b.c: 86:     y = a & 0xF0;
  1882     0360  0876               	movf	Lcd_Write_Char@a,w
  1883     0361  39F0               	andlw	240
  1884     0362  00F5               	movwf	Lcd_Write_Char@y
  1885     0363                     l1332:
  1886                           
  1887                           ;LCD4b.c: 87:     PORTDbits.RD2 = 1;
  1888     0363  1283               	bcf	3,5	;RP0=0, select bank0
  1889     0364  1303               	bcf	3,6	;RP1=0, select bank0
  1890     0365  1508               	bsf	8,2	;volatile
  1891     0366                     l1334:
  1892                           
  1893                           ;LCD4b.c: 88:     Lcd_Port(y >> 4);
  1894     0366  0875               	movf	Lcd_Write_Char@y,w
  1895     0367  00F3               	movwf	??_Lcd_Write_Char
  1896     0368  3004               	movlw	4
  1897     0369                     u895:
  1898     0369  1003               	clrc
  1899     036A  0CF3               	rrf	??_Lcd_Write_Char,f
  1900     036B  3EFF               	addlw	-1
  1901     036C  1D03               	skipz
  1902     036D  2B69               	goto	u895
  1903     036E  0873               	movf	??_Lcd_Write_Char,w
  1904     036F  120A  118A  23E8  120A  118A  	fcall	_Lcd_Port
  1905     0374                     l1336:
  1906                           
  1907                           ;LCD4b.c: 89:     RD3 = 1;
  1908     0374  1283               	bcf	3,5	;RP0=0, select bank0
  1909     0375  1303               	bcf	3,6	;RP1=0, select bank0
  1910     0376  1588               	bsf	8,3	;volatile
  1911     0377                     l1338:
  1912                           
  1913                           ;LCD4b.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1914     0377  301A               	movlw	26
  1915     0378  00F3               	movwf	??_Lcd_Write_Char
  1916     0379                     u1137:
  1917     0379  0BF3               	decfsz	??_Lcd_Write_Char,f
  1918     037A  2B79               	goto	u1137
  1919     037B  0000               	nop
  1920     037C                     l1340:
  1921                           
  1922                           ;LCD4b.c: 91:     RD3 = 0;
  1923     037C  1283               	bcf	3,5	;RP0=0, select bank0
  1924     037D  1303               	bcf	3,6	;RP1=0, select bank0
  1925     037E  1188               	bcf	8,3	;volatile
  1926     037F                     l1342:
  1927                           
  1928                           ;LCD4b.c: 92:     Lcd_Port(temp);
  1929     037F  0874               	movf	Lcd_Write_Char@temp,w
  1930     0380  120A  118A  23E8  120A  118A  	fcall	_Lcd_Port
  1931     0385                     l1344:
  1932                           
  1933                           ;LCD4b.c: 93:     RD3 = 1;
  1934     0385  1283               	bcf	3,5	;RP0=0, select bank0
  1935     0386  1303               	bcf	3,6	;RP1=0, select bank0
  1936     0387  1588               	bsf	8,3	;volatile
  1937     0388                     l1346:
  1938                           
  1939                           ;LCD4b.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1940     0388  301A               	movlw	26
  1941     0389  00F3               	movwf	??_Lcd_Write_Char
  1942     038A                     u1147:
  1943     038A  0BF3               	decfsz	??_Lcd_Write_Char,f
  1944     038B  2B8A               	goto	u1147
  1945     038C  0000               	nop
  1946     038D                     l1348:
  1947                           
  1948                           ;LCD4b.c: 95:     RD3 = 0;
  1949     038D  1283               	bcf	3,5	;RP0=0, select bank0
  1950     038E  1303               	bcf	3,6	;RP1=0, select bank0
  1951     038F  1188               	bcf	8,3	;volatile
  1952     0390                     l115:
  1953     0390  0008               	return
  1954     0391                     __end_of_Lcd_Write_Char:
  1955                           
  1956                           	psect	text10
  1957     0281                     __ptext10:	
  1958 ;; *************** function _Lcd_Set_Cursor *****************
  1959 ;; Defined at:
  1960 ;;		line 48 in file "LCD4b.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;  a               1    wreg     unsigned char 
  1963 ;;  b               1    6[COMMON] unsigned char 
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;  a               1    0[BANK0 ] unsigned char 
  1966 ;;  temp            1    3[BANK0 ] unsigned char 
  1967 ;;  y               1    2[BANK0 ] unsigned char 
  1968 ;;  z               1    1[BANK0 ] unsigned char 
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  1    wreg      void 
  1971 ;; Registers used:
  1972 ;;		wreg, status,2, status,0, pclath, cstack
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1978 ;;      Params:         1       0       0       0       0
  1979 ;;      Locals:         0       4       0       0       0
  1980 ;;      Temps:          1       0       0       0       0
  1981 ;;      Totals:         2       4       0       0       0
  1982 ;;Total ram usage:        6 bytes
  1983 ;; Hardware stack levels used: 1
  1984 ;; Hardware stack levels required when called: 3
  1985 ;; This function calls:
  1986 ;;		_Lcd_Cmd
  1987 ;; This function is called by:
  1988 ;;		_main
  1989 ;;		_LDC_output
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993     0281                     _Lcd_Set_Cursor:	
  1994                           ;psect for function _Lcd_Set_Cursor
  1995                           
  1996                           
  1997                           ;incstack = 0
  1998                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1999                           ;Lcd_Set_Cursor@a stored from wreg
  2000     0281  1283               	bcf	3,5	;RP0=0, select bank0
  2001     0282  1303               	bcf	3,6	;RP1=0, select bank0
  2002     0283  00B5               	movwf	Lcd_Set_Cursor@a
  2003     0284                     l1368:
  2004                           
  2005                           ;LCD4b.c: 49:     char temp, z, y;;LCD4b.c: 50:     if (a == 1) {
  2006     0284  0335               	decf	Lcd_Set_Cursor@a,w
  2007     0285  1D03               	btfss	3,2
  2008     0286  2A88               	goto	u901
  2009     0287  2A89               	goto	u900
  2010     0288                     u901:
  2011     0288  2AA8               	goto	l1378
  2012     0289                     u900:
  2013     0289                     l1370:
  2014                           
  2015                           ;LCD4b.c: 51:         temp = 0x80 + b - 1;
  2016     0289  0876               	movf	Lcd_Set_Cursor@b,w
  2017     028A  3E7F               	addlw	127
  2018     028B  00B8               	movwf	Lcd_Set_Cursor@temp
  2019                           
  2020                           ;LCD4b.c: 52:         z = temp >> 4;
  2021     028C  0838               	movf	Lcd_Set_Cursor@temp,w
  2022     028D  00F7               	movwf	??_Lcd_Set_Cursor
  2023     028E  3004               	movlw	4
  2024     028F                     u915:
  2025     028F  1003               	clrc
  2026     0290  0CF7               	rrf	??_Lcd_Set_Cursor,f
  2027     0291  3EFF               	addlw	-1
  2028     0292  1D03               	skipz
  2029     0293  2A8F               	goto	u915
  2030     0294  0877               	movf	??_Lcd_Set_Cursor,w
  2031     0295  00B6               	movwf	Lcd_Set_Cursor@z
  2032     0296                     l1372:
  2033                           
  2034                           ;LCD4b.c: 53:         y = temp & 0x0F;
  2035     0296  0838               	movf	Lcd_Set_Cursor@temp,w
  2036     0297  390F               	andlw	15
  2037     0298  00B7               	movwf	Lcd_Set_Cursor@y
  2038     0299                     l1374:
  2039                           
  2040                           ;LCD4b.c: 54:         Lcd_Cmd(z);
  2041     0299  0836               	movf	Lcd_Set_Cursor@z,w
  2042     029A  120A  118A  2443  120A  118A  	fcall	_Lcd_Cmd
  2043     029F                     l1376:
  2044                           
  2045                           ;LCD4b.c: 55:         Lcd_Cmd(y);
  2046     029F  1283               	bcf	3,5	;RP0=0, select bank0
  2047     02A0  1303               	bcf	3,6	;RP1=0, select bank0
  2048     02A1  0837               	movf	Lcd_Set_Cursor@y,w
  2049     02A2  120A  118A  2443  120A  118A  	fcall	_Lcd_Cmd
  2050                           
  2051                           ;LCD4b.c: 56:     } else if (a == 2) {
  2052     02A7  2ACC               	goto	l109
  2053     02A8                     l1378:
  2054     02A8  3002               	movlw	2
  2055     02A9  0635               	xorwf	Lcd_Set_Cursor@a,w
  2056     02AA  1D03               	btfss	3,2
  2057     02AB  2AAD               	goto	u921
  2058     02AC  2AAE               	goto	u920
  2059     02AD                     u921:
  2060     02AD  2ACC               	goto	l109
  2061     02AE                     u920:
  2062     02AE                     l1380:
  2063                           
  2064                           ;LCD4b.c: 57:         temp = 0xC0 + b - 1;
  2065     02AE  0876               	movf	Lcd_Set_Cursor@b,w
  2066     02AF  3EBF               	addlw	191
  2067     02B0  00B8               	movwf	Lcd_Set_Cursor@temp
  2068                           
  2069                           ;LCD4b.c: 58:         z = temp >> 4;
  2070     02B1  0838               	movf	Lcd_Set_Cursor@temp,w
  2071     02B2  00F7               	movwf	??_Lcd_Set_Cursor
  2072     02B3  3004               	movlw	4
  2073     02B4                     u935:
  2074     02B4  1003               	clrc
  2075     02B5  0CF7               	rrf	??_Lcd_Set_Cursor,f
  2076     02B6  3EFF               	addlw	-1
  2077     02B7  1D03               	skipz
  2078     02B8  2AB4               	goto	u935
  2079     02B9  0877               	movf	??_Lcd_Set_Cursor,w
  2080     02BA  00B6               	movwf	Lcd_Set_Cursor@z
  2081     02BB                     l1382:
  2082                           
  2083                           ;LCD4b.c: 59:         y = temp & 0x0F;
  2084     02BB  0838               	movf	Lcd_Set_Cursor@temp,w
  2085     02BC  390F               	andlw	15
  2086     02BD  00B7               	movwf	Lcd_Set_Cursor@y
  2087     02BE                     l1384:
  2088                           
  2089                           ;LCD4b.c: 60:         Lcd_Cmd(z);
  2090     02BE  0836               	movf	Lcd_Set_Cursor@z,w
  2091     02BF  120A  118A  2443  120A  118A  	fcall	_Lcd_Cmd
  2092     02C4                     l1386:
  2093                           
  2094                           ;LCD4b.c: 61:         Lcd_Cmd(y);
  2095     02C4  1283               	bcf	3,5	;RP0=0, select bank0
  2096     02C5  1303               	bcf	3,6	;RP1=0, select bank0
  2097     02C6  0837               	movf	Lcd_Set_Cursor@y,w
  2098     02C7  120A  118A  2443  120A  118A  	fcall	_Lcd_Cmd
  2099     02CC                     l109:
  2100     02CC  0008               	return
  2101     02CD                     __end_of_Lcd_Set_Cursor:
  2102                           
  2103                           	psect	text11
  2104     0443                     __ptext11:	
  2105 ;; *************** function _Lcd_Cmd *****************
  2106 ;; Defined at:
  2107 ;;		line 35 in file "LCD4b.c"
  2108 ;; Parameters:    Size  Location     Type
  2109 ;;  a               1    wreg     unsigned char 
  2110 ;; Auto vars:     Size  Location     Type
  2111 ;;  a               1    5[COMMON] unsigned char 
  2112 ;; Return value:  Size  Location     Type
  2113 ;;                  1    wreg      void 
  2114 ;; Registers used:
  2115 ;;		wreg, status,2, status,0, pclath, cstack
  2116 ;; Tracked objects:
  2117 ;;		On entry : 0/0
  2118 ;;		On exit  : 0/0
  2119 ;;		Unchanged: 0/0
  2120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2121 ;;      Params:         0       0       0       0       0
  2122 ;;      Locals:         1       0       0       0       0
  2123 ;;      Temps:          2       0       0       0       0
  2124 ;;      Totals:         3       0       0       0       0
  2125 ;;Total ram usage:        3 bytes
  2126 ;; Hardware stack levels used: 1
  2127 ;; Hardware stack levels required when called: 2
  2128 ;; This function calls:
  2129 ;;		_Lcd_Port
  2130 ;; This function is called by:
  2131 ;;		_Lcd_Clear
  2132 ;;		_Lcd_Set_Cursor
  2133 ;;		_Lcd_Init
  2134 ;;		_Lcd_Shift_Right
  2135 ;;		_Lcd_Shift_Left
  2136 ;; This function uses a non-reentrant model
  2137 ;;
  2138                           
  2139     0443                     _Lcd_Cmd:	
  2140                           ;psect for function _Lcd_Cmd
  2141                           
  2142                           
  2143                           ;incstack = 0
  2144                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2145                           ;Lcd_Cmd@a stored from wreg
  2146     0443  00F5               	movwf	Lcd_Cmd@a
  2147     0444                     l1350:
  2148                           
  2149                           ;LCD4b.c: 36:     PORTDbits.RD2 = 0;
  2150     0444  1283               	bcf	3,5	;RP0=0, select bank0
  2151     0445  1303               	bcf	3,6	;RP1=0, select bank0
  2152     0446  1108               	bcf	8,2	;volatile
  2153     0447                     l1352:
  2154                           
  2155                           ;LCD4b.c: 37:     Lcd_Port(a);
  2156     0447  0875               	movf	Lcd_Cmd@a,w
  2157     0448  120A  118A  23E8  120A  118A  	fcall	_Lcd_Port
  2158     044D                     l1354:
  2159                           
  2160                           ;LCD4b.c: 38:     RD3 = 1;
  2161     044D  1283               	bcf	3,5	;RP0=0, select bank0
  2162     044E  1303               	bcf	3,6	;RP1=0, select bank0
  2163     044F  1588               	bsf	8,3	;volatile
  2164     0450                     l1356:
  2165                           
  2166                           ;LCD4b.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2167     0450  300B               	movlw	11
  2168     0451  00F4               	movwf	??_Lcd_Cmd+1
  2169     0452  3062               	movlw	98
  2170     0453  00F3               	movwf	??_Lcd_Cmd
  2171     0454                     u1157:
  2172     0454  0BF3               	decfsz	??_Lcd_Cmd,f
  2173     0455  2C54               	goto	u1157
  2174     0456  0BF4               	decfsz	??_Lcd_Cmd+1,f
  2175     0457  2C54               	goto	u1157
  2176     0458  0000               	nop
  2177     0459                     l1358:
  2178                           
  2179                           ;LCD4b.c: 40:     RD3 = 0;
  2180     0459  1283               	bcf	3,5	;RP0=0, select bank0
  2181     045A  1303               	bcf	3,6	;RP1=0, select bank0
  2182     045B  1188               	bcf	8,3	;volatile
  2183     045C                     l100:
  2184     045C  0008               	return
  2185     045D                     __end_of_Lcd_Cmd:
  2186                           
  2187                           	psect	text12
  2188     03E8                     __ptext12:	
  2189 ;; *************** function _Lcd_Port *****************
  2190 ;; Defined at:
  2191 ;;		line 13 in file "LCD4b.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;  a               1    wreg     unsigned char 
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;  a               1    2[COMMON] unsigned char 
  2196 ;; Return value:  Size  Location     Type
  2197 ;;                  1    wreg      void 
  2198 ;; Registers used:
  2199 ;;		wreg
  2200 ;; Tracked objects:
  2201 ;;		On entry : 0/0
  2202 ;;		On exit  : 0/0
  2203 ;;		Unchanged: 0/0
  2204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2205 ;;      Params:         0       0       0       0       0
  2206 ;;      Locals:         1       0       0       0       0
  2207 ;;      Temps:          0       0       0       0       0
  2208 ;;      Totals:         1       0       0       0       0
  2209 ;;Total ram usage:        1 bytes
  2210 ;; Hardware stack levels used: 1
  2211 ;; Hardware stack levels required when called: 1
  2212 ;; This function calls:
  2213 ;;		Nothing
  2214 ;; This function is called by:
  2215 ;;		_Lcd_Cmd
  2216 ;;		_Lcd_Init
  2217 ;;		_Lcd_Write_Char
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221     03E8                     _Lcd_Port:	
  2222                           ;psect for function _Lcd_Port
  2223                           
  2224                           
  2225                           ;incstack = 0
  2226                           ; Regs used in _Lcd_Port: [wreg]
  2227                           ;Lcd_Port@a stored from wreg
  2228     03E8  00F2               	movwf	Lcd_Port@a
  2229     03E9                     l1320:
  2230                           
  2231                           ;LCD4b.c: 14:     if (a & 1)
  2232     03E9  1C72               	btfss	Lcd_Port@a,0
  2233     03EA  2BEC               	goto	u851
  2234     03EB  2BED               	goto	u850
  2235     03EC                     u851:
  2236     03EC  2BF1               	goto	l89
  2237     03ED                     u850:
  2238     03ED                     l1322:
  2239                           
  2240                           ;LCD4b.c: 15:         RD4 = 1;
  2241     03ED  1283               	bcf	3,5	;RP0=0, select bank0
  2242     03EE  1303               	bcf	3,6	;RP1=0, select bank0
  2243     03EF  1608               	bsf	8,4	;volatile
  2244     03F0  2BF4               	goto	l90
  2245     03F1                     l89:	
  2246                           ;LCD4b.c: 16:     else
  2247                           
  2248                           
  2249                           ;LCD4b.c: 17:         RD4 = 0;
  2250     03F1  1283               	bcf	3,5	;RP0=0, select bank0
  2251     03F2  1303               	bcf	3,6	;RP1=0, select bank0
  2252     03F3  1208               	bcf	8,4	;volatile
  2253     03F4                     l90:
  2254                           
  2255                           ;LCD4b.c: 19:     if (a & 2)
  2256     03F4  1CF2               	btfss	Lcd_Port@a,1
  2257     03F5  2BF7               	goto	u861
  2258     03F6  2BF8               	goto	u860
  2259     03F7                     u861:
  2260     03F7  2BFA               	goto	l91
  2261     03F8                     u860:
  2262     03F8                     l1324:
  2263                           
  2264                           ;LCD4b.c: 20:         RD5 = 1;
  2265     03F8  1688               	bsf	8,5	;volatile
  2266     03F9  2BFB               	goto	l92
  2267     03FA                     l91:	
  2268                           ;LCD4b.c: 21:     else
  2269                           
  2270                           
  2271                           ;LCD4b.c: 22:         RD5 = 0;
  2272     03FA  1288               	bcf	8,5	;volatile
  2273     03FB                     l92:
  2274                           
  2275                           ;LCD4b.c: 24:     if (a & 4)
  2276     03FB  1D72               	btfss	Lcd_Port@a,2
  2277     03FC  2BFE               	goto	u871
  2278     03FD  2BFF               	goto	u870
  2279     03FE                     u871:
  2280     03FE  2C01               	goto	l93
  2281     03FF                     u870:
  2282     03FF                     l1326:
  2283                           
  2284                           ;LCD4b.c: 25:         RD6 = 1;
  2285     03FF  1708               	bsf	8,6	;volatile
  2286     0400  2C02               	goto	l94
  2287     0401                     l93:	
  2288                           ;LCD4b.c: 26:     else
  2289                           
  2290                           
  2291                           ;LCD4b.c: 27:         RD6 = 0;
  2292     0401  1308               	bcf	8,6	;volatile
  2293     0402                     l94:
  2294                           
  2295                           ;LCD4b.c: 29:     if (a & 8)
  2296     0402  1DF2               	btfss	Lcd_Port@a,3
  2297     0403  2C05               	goto	u881
  2298     0404  2C06               	goto	u880
  2299     0405                     u881:
  2300     0405  2C08               	goto	l95
  2301     0406                     u880:
  2302     0406                     l1328:
  2303                           
  2304                           ;LCD4b.c: 30:         RD7 = 1;
  2305     0406  1788               	bsf	8,7	;volatile
  2306     0407  2C09               	goto	l97
  2307     0408                     l95:	
  2308                           ;LCD4b.c: 31:     else
  2309                           
  2310                           
  2311                           ;LCD4b.c: 32:         RD7 = 0;
  2312     0408  1388               	bcf	8,7	;volatile
  2313     0409                     l97:
  2314     0409  0008               	return
  2315     040A                     __end_of_Lcd_Port:
  2316                           
  2317                           	psect	text13
  2318     00A0                     __ptext13:	
  2319 ;; *************** function _DHT11_read_data *****************
  2320 ;; Defined at:
  2321 ;;		line 48 in file "DHT11.c"
  2322 ;; Parameters:    Size  Location     Type
  2323 ;;  hum             1    wreg     PTR int 
  2324 ;;		 -> humedad(2), 
  2325 ;;  temp            1    5[COMMON] PTR int 
  2326 ;;		 -> temperatura(2), 
  2327 ;; Auto vars:     Size  Location     Type
  2328 ;;  hum             1    0[BANK0 ] PTR int 
  2329 ;;		 -> humedad(2), 
  2330 ;;  parity          1    1[BANK0 ] char 
  2331 ;; Return value:  Size  Location     Type
  2332 ;;                  1    wreg      char 
  2333 ;; Registers used:
  2334 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2340 ;;      Params:         1       0       0       0       0
  2341 ;;      Locals:         0       2       0       0       0
  2342 ;;      Temps:          4       0       0       0       0
  2343 ;;      Totals:         5       2       0       0       0
  2344 ;;Total ram usage:        7 bytes
  2345 ;; Hardware stack levels used: 1
  2346 ;; Hardware stack levels required when called: 2
  2347 ;; This function calls:
  2348 ;;		_DHT11_read_byte
  2349 ;;		_DHT11_response
  2350 ;;		_DHT11_start
  2351 ;; This function is called by:
  2352 ;;		_main
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356     00A0                     _DHT11_read_data:	
  2357                           ;psect for function _DHT11_read_data
  2358                           
  2359                           
  2360                           ;incstack = 0
  2361                           ; Regs used in _DHT11_read_data: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2362                           ;DHT11_read_data@hum stored from wreg
  2363     00A0  1283               	bcf	3,5	;RP0=0, select bank0
  2364     00A1  1303               	bcf	3,6	;RP1=0, select bank0
  2365     00A2  00B5               	movwf	DHT11_read_data@hum
  2366     00A3                     l1440:
  2367     00A3                     l1442:
  2368                           
  2369                           ;DHT11.c: 51:    DHT11_start();
  2370     00A3  120A  118A  2428  120A  118A  	fcall	_DHT11_start
  2371     00A8                     l1444:
  2372                           
  2373                           ;DHT11.c: 52:    DHT11_response();
  2374     00A8  120A  118A  245D  120A  118A  	fcall	_DHT11_response
  2375     00AD                     l1446:
  2376                           
  2377                           ;DHT11.c: 53:    bits[0] = DHT11_read_byte();
  2378     00AD  120A  118A  23BD  120A  118A  	fcall	_DHT11_read_byte
  2379     00B2  1283               	bcf	3,5	;RP0=0, select bank0
  2380     00B3  1303               	bcf	3,6	;RP1=0, select bank0
  2381     00B4  00A0               	movwf	_bits
  2382     00B5                     l1448:
  2383                           
  2384                           ;DHT11.c: 54:    bits[1] = DHT11_read_byte();
  2385     00B5  120A  118A  23BD  120A  118A  	fcall	_DHT11_read_byte
  2386     00BA  1283               	bcf	3,5	;RP0=0, select bank0
  2387     00BB  1303               	bcf	3,6	;RP1=0, select bank0
  2388     00BC  00A1               	movwf	_bits+1
  2389     00BD                     l1450:
  2390                           
  2391                           ;DHT11.c: 55:    bits[2] = DHT11_read_byte();
  2392     00BD  120A  118A  23BD  120A  118A  	fcall	_DHT11_read_byte
  2393     00C2  1283               	bcf	3,5	;RP0=0, select bank0
  2394     00C3  1303               	bcf	3,6	;RP1=0, select bank0
  2395     00C4  00A2               	movwf	_bits+2
  2396     00C5                     l1452:
  2397                           
  2398                           ;DHT11.c: 56:    bits[3] = DHT11_read_byte();
  2399     00C5  120A  118A  23BD  120A  118A  	fcall	_DHT11_read_byte
  2400     00CA  1283               	bcf	3,5	;RP0=0, select bank0
  2401     00CB  1303               	bcf	3,6	;RP1=0, select bank0
  2402     00CC  00A3               	movwf	_bits+3
  2403     00CD                     l1454:
  2404                           
  2405                           ;DHT11.c: 57:    bits[4] = DHT11_read_byte();
  2406     00CD  120A  118A  23BD  120A  118A  	fcall	_DHT11_read_byte
  2407     00D2  1283               	bcf	3,5	;RP0=0, select bank0
  2408     00D3  1303               	bcf	3,6	;RP1=0, select bank0
  2409     00D4  00A4               	movwf	_bits+4
  2410     00D5                     l1456:
  2411                           
  2412                           ;DHT11.c: 58:    parity = bits[0] + bits[1] + bits[2] + bits[3];
  2413     00D5  0822               	movf	_bits+2,w
  2414     00D6  0721               	addwf	_bits+1,w
  2415     00D7  00F6               	movwf	??_DHT11_read_data
  2416     00D8  0823               	movf	_bits+3,w
  2417     00D9  0776               	addwf	??_DHT11_read_data,w
  2418     00DA  00F7               	movwf	??_DHT11_read_data+1
  2419     00DB  0820               	movf	_bits,w
  2420     00DC  0777               	addwf	??_DHT11_read_data+1,w
  2421     00DD  00B6               	movwf	DHT11_read_data@parity
  2422     00DE                     l1458:
  2423                           
  2424                           ;DHT11.c: 59:    if (parity == bits[4]){
  2425     00DE  0824               	movf	_bits+4,w
  2426     00DF  0636               	xorwf	DHT11_read_data@parity,w
  2427     00E0  1D03               	skipz
  2428     00E1  28E3               	goto	u1041
  2429     00E2  28E4               	goto	u1040
  2430     00E3                     u1041:
  2431     00E3  2916               	goto	l1468
  2432     00E4                     u1040:
  2433     00E4                     l1460:
  2434                           
  2435                           ;DHT11.c: 60:         *hum = bits[0]<<8 | bits[1];
  2436     00E4  0820               	movf	_bits,w
  2437     00E5  00F6               	movwf	??_DHT11_read_data
  2438     00E6  01F7               	clrf	??_DHT11_read_data+1
  2439     00E7  0876               	movf	??_DHT11_read_data,w
  2440     00E8  00F7               	movwf	??_DHT11_read_data+1
  2441     00E9  01F6               	clrf	??_DHT11_read_data
  2442     00EA  0821               	movf	_bits+1,w
  2443     00EB  0476               	iorwf	??_DHT11_read_data,w
  2444     00EC  00F8               	movwf	??_DHT11_read_data+2
  2445     00ED  01F9               	clrf	??_DHT11_read_data+3
  2446     00EE  1FA1               	btfss	_bits+1,7
  2447     00EF  28F1               	goto	u1054
  2448     00F0  03F9               	decf	??_DHT11_read_data+3,f
  2449     00F1                     u1054:
  2450     00F1  0877               	movf	??_DHT11_read_data+1,w
  2451     00F2  04F9               	iorwf	??_DHT11_read_data+3,f
  2452     00F3  1283               	bcf	3,5	;RP0=0, select bank0
  2453     00F4  1303               	bcf	3,6	;RP1=0, select bank0
  2454     00F5  0835               	movf	DHT11_read_data@hum,w
  2455     00F6  0084               	movwf	4
  2456     00F7  0878               	movf	??_DHT11_read_data+2,w
  2457     00F8  1383               	bcf	3,7	;select IRP bank0
  2458     00F9  0080               	movwf	0
  2459     00FA  0A84               	incf	4,f
  2460     00FB  0879               	movf	??_DHT11_read_data+3,w
  2461     00FC  0080               	movwf	0
  2462                           
  2463                           ;DHT11.c: 61:         *temp = bits[2]<<8 | bits[3];
  2464     00FD  0822               	movf	_bits+2,w
  2465     00FE  00F6               	movwf	??_DHT11_read_data
  2466     00FF  01F7               	clrf	??_DHT11_read_data+1
  2467     0100  0876               	movf	??_DHT11_read_data,w
  2468     0101  00F7               	movwf	??_DHT11_read_data+1
  2469     0102  01F6               	clrf	??_DHT11_read_data
  2470     0103  0823               	movf	_bits+3,w
  2471     0104  0476               	iorwf	??_DHT11_read_data,w
  2472     0105  00F8               	movwf	??_DHT11_read_data+2
  2473     0106  01F9               	clrf	??_DHT11_read_data+3
  2474     0107  1FA3               	btfss	_bits+3,7
  2475     0108  290A               	goto	u1064
  2476     0109  03F9               	decf	??_DHT11_read_data+3,f
  2477     010A                     u1064:
  2478     010A  0877               	movf	??_DHT11_read_data+1,w
  2479     010B  04F9               	iorwf	??_DHT11_read_data+3,f
  2480     010C  0875               	movf	DHT11_read_data@temp,w
  2481     010D  0084               	movwf	4
  2482     010E  0878               	movf	??_DHT11_read_data+2,w
  2483     010F  1383               	bcf	3,7	;select IRP bank0
  2484     0110  0080               	movwf	0
  2485     0111  0A84               	incf	4,f
  2486     0112  0879               	movf	??_DHT11_read_data+3,w
  2487     0113  0080               	movwf	0
  2488     0114                     l1462:
  2489                           
  2490                           ;DHT11.c: 62:     return 1;
  2491     0114  3001               	movlw	1
  2492     0115  2917               	goto	l167
  2493     0116                     l1468:
  2494                           
  2495                           ;DHT11.c: 65:       return 0;
  2496     0116  3000               	movlw	0
  2497     0117                     l167:
  2498     0117  0008               	return
  2499     0118                     __end_of_DHT11_read_data:
  2500                           
  2501                           	psect	text14
  2502     0428                     __ptext14:	
  2503 ;; *************** function _DHT11_start *****************
  2504 ;; Defined at:
  2505 ;;		line 15 in file "DHT11.c"
  2506 ;; Parameters:    Size  Location     Type
  2507 ;;		None
  2508 ;; Auto vars:     Size  Location     Type
  2509 ;;		None
  2510 ;; Return value:  Size  Location     Type
  2511 ;;                  1    wreg      void 
  2512 ;; Registers used:
  2513 ;;		wreg
  2514 ;; Tracked objects:
  2515 ;;		On entry : 0/0
  2516 ;;		On exit  : 0/0
  2517 ;;		Unchanged: 0/0
  2518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2519 ;;      Params:         0       0       0       0       0
  2520 ;;      Locals:         0       0       0       0       0
  2521 ;;      Temps:          2       0       0       0       0
  2522 ;;      Totals:         2       0       0       0       0
  2523 ;;Total ram usage:        2 bytes
  2524 ;; Hardware stack levels used: 1
  2525 ;; Hardware stack levels required when called: 1
  2526 ;; This function calls:
  2527 ;;		Nothing
  2528 ;; This function is called by:
  2529 ;;		_main
  2530 ;;		_DHT11_read_data
  2531 ;; This function uses a non-reentrant model
  2532 ;;
  2533                           
  2534     0428                     _DHT11_start:	
  2535                           ;psect for function _DHT11_start
  2536                           
  2537     0428                     l1360:	
  2538                           ;incstack = 0
  2539                           ; Regs used in _DHT11_start: [wreg]
  2540                           
  2541                           
  2542                           ;DHT11.c: 16:     TRISD0 = 0;
  2543     0428  1683               	bsf	3,5	;RP0=1, select bank1
  2544     0429  1303               	bcf	3,6	;RP1=0, select bank1
  2545     042A  1008               	bcf	8,0	;volatile
  2546                           
  2547                           ;DHT11.c: 17:     RD0 = 0;
  2548     042B  1283               	bcf	3,5	;RP0=0, select bank0
  2549     042C  1303               	bcf	3,6	;RP1=0, select bank0
  2550     042D  1008               	bcf	8,0	;volatile
  2551     042E                     l1362:
  2552                           
  2553                           ;DHT11.c: 18:     _delay((unsigned long)((25)*(8000000/4000.0)));
  2554     042E  3041               	movlw	65
  2555     042F  00F3               	movwf	??_DHT11_start+1
  2556     0430  30EE               	movlw	238
  2557     0431  00F2               	movwf	??_DHT11_start
  2558     0432                     u1167:
  2559     0432  0BF2               	decfsz	??_DHT11_start,f
  2560     0433  2C32               	goto	u1167
  2561     0434  0BF3               	decfsz	??_DHT11_start+1,f
  2562     0435  2C32               	goto	u1167
  2563     0436  0000               	nop
  2564     0437                     l1364:
  2565                           
  2566                           ;DHT11.c: 19:     RD0 = 1;
  2567     0437  1283               	bcf	3,5	;RP0=0, select bank0
  2568     0438  1303               	bcf	3,6	;RP1=0, select bank0
  2569     0439  1408               	bsf	8,0	;volatile
  2570     043A                     l1366:
  2571                           
  2572                           ;DHT11.c: 20:     TRISD0 = 1;
  2573     043A  1683               	bsf	3,5	;RP0=1, select bank1
  2574     043B  1303               	bcf	3,6	;RP1=0, select bank1
  2575     043C  1408               	bsf	8,0	;volatile
  2576                           
  2577                           ;DHT11.c: 21:     _delay((unsigned long)((30)*(8000000/4000000.0)));
  2578     043D  3013               	movlw	19
  2579     043E  00F2               	movwf	??_DHT11_start
  2580     043F                     u1177:
  2581     043F  0BF2               	decfsz	??_DHT11_start,f
  2582     0440  2C3F               	goto	u1177
  2583     0441  2C42               	nop2
  2584     0442                     l138:
  2585     0442  0008               	return
  2586     0443                     __end_of_DHT11_start:
  2587                           
  2588                           	psect	text15
  2589     045D                     __ptext15:	
  2590 ;; *************** function _DHT11_response *****************
  2591 ;; Defined at:
  2592 ;;		line 24 in file "DHT11.c"
  2593 ;; Parameters:    Size  Location     Type
  2594 ;;		None
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;		None
  2597 ;; Return value:  Size  Location     Type
  2598 ;;                  1    wreg      void 
  2599 ;; Registers used:
  2600 ;;		None
  2601 ;; Tracked objects:
  2602 ;;		On entry : 0/0
  2603 ;;		On exit  : 0/0
  2604 ;;		Unchanged: 0/0
  2605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2606 ;;      Params:         0       0       0       0       0
  2607 ;;      Locals:         0       0       0       0       0
  2608 ;;      Temps:          0       0       0       0       0
  2609 ;;      Totals:         0       0       0       0       0
  2610 ;;Total ram usage:        0 bytes
  2611 ;; Hardware stack levels used: 1
  2612 ;; Hardware stack levels required when called: 1
  2613 ;; This function calls:
  2614 ;;		Nothing
  2615 ;; This function is called by:
  2616 ;;		_DHT11_read_data
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620     045D                     _DHT11_response:	
  2621                           ;psect for function _DHT11_response
  2622                           
  2623     045D                     l1406:	
  2624                           ;incstack = 0
  2625                           ; Regs used in _DHT11_response: []
  2626                           
  2627     045D                     l141:	
  2628                           ;DHT11.c: 25:     while(RD0 == 1);
  2629                           
  2630     045D  1283               	bcf	3,5	;RP0=0, select bank0
  2631     045E  1303               	bcf	3,6	;RP1=0, select bank0
  2632     045F  1808               	btfsc	8,0	;volatile
  2633     0460  2C62               	goto	u971
  2634     0461  2C63               	goto	u970
  2635     0462                     u971:
  2636     0462  2C5D               	goto	l141
  2637     0463                     u970:
  2638     0463                     l144:
  2639     0463  1C08               	btfss	8,0	;volatile
  2640     0464  2C66               	goto	u981
  2641     0465  2C67               	goto	u980
  2642     0466                     u981:
  2643     0466  2C63               	goto	l144
  2644     0467                     u980:
  2645     0467                     l147:
  2646     0467  1808               	btfsc	8,0	;volatile
  2647     0468  2C6A               	goto	u991
  2648     0469  2C6B               	goto	u990
  2649     046A                     u991:
  2650     046A  2C67               	goto	l147
  2651     046B                     u990:
  2652     046B                     l150:
  2653     046B  0008               	return
  2654     046C                     __end_of_DHT11_response:
  2655                           
  2656                           	psect	text16
  2657     03BD                     __ptext16:	
  2658 ;; *************** function _DHT11_read_byte *****************
  2659 ;; Defined at:
  2660 ;;		line 30 in file "DHT11.c"
  2661 ;; Parameters:    Size  Location     Type
  2662 ;;		None
  2663 ;; Auto vars:     Size  Location     Type
  2664 ;;  data            1    4[COMMON] char 
  2665 ;;  i               1    3[COMMON] char 
  2666 ;; Return value:  Size  Location     Type
  2667 ;;                  1    wreg      char 
  2668 ;; Registers used:
  2669 ;;		wreg, status,2, status,0, btemp+1
  2670 ;; Tracked objects:
  2671 ;;		On entry : 0/0
  2672 ;;		On exit  : 0/0
  2673 ;;		Unchanged: 0/0
  2674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2675 ;;      Params:         0       0       0       0       0
  2676 ;;      Locals:         2       0       0       0       0
  2677 ;;      Temps:          1       0       0       0       0
  2678 ;;      Totals:         3       0       0       0       0
  2679 ;;Total ram usage:        3 bytes
  2680 ;; Hardware stack levels used: 1
  2681 ;; Hardware stack levels required when called: 1
  2682 ;; This function calls:
  2683 ;;		Nothing
  2684 ;; This function is called by:
  2685 ;;		_DHT11_read_data
  2686 ;; This function uses a non-reentrant model
  2687 ;;
  2688                           
  2689     03BD                     _DHT11_read_byte:	
  2690                           ;psect for function _DHT11_read_byte
  2691                           
  2692     03BD                     l1408:	
  2693                           ;incstack = 0
  2694                           ; Regs used in _DHT11_read_byte: [wreg+status,2+status,0+btemp+1]
  2695                           
  2696                           
  2697                           ;DHT11.c: 32:    int8_t i;;DHT11.c: 33:    int8_t data = 0;
  2698     03BD  01F4               	clrf	DHT11_read_byte@data
  2699                           
  2700                           ;DHT11.c: 34:    for(i=0; i<8; i++){
  2701     03BE  01F3               	clrf	DHT11_read_byte@i
  2702     03BF                     l155:
  2703     03BF  1283               	bcf	3,5	;RP0=0, select bank0
  2704     03C0  1303               	bcf	3,6	;RP1=0, select bank0
  2705     03C1  1C08               	btfss	8,0	;volatile
  2706     03C2  2BC4               	goto	u1001
  2707     03C3  2BC5               	goto	u1000
  2708     03C4                     u1001:
  2709     03C4  2BBF               	goto	l155
  2710     03C5                     u1000:
  2711     03C5                     l1414:
  2712                           
  2713                           ;DHT11.c: 36:     _delay((unsigned long)((30)*(8000000/4000000.0)));
  2714     03C5  3013               	movlw	19
  2715     03C6  00F2               	movwf	??_DHT11_read_byte
  2716     03C7                     u1187:
  2717     03C7  0BF2               	decfsz	??_DHT11_read_byte,f
  2718     03C8  2BC7               	goto	u1187
  2719     03C9  2BCA               	nop2
  2720     03CA                     l1416:
  2721                           
  2722                           ;DHT11.c: 37:     if(RD0 == 1){
  2723     03CA  1283               	bcf	3,5	;RP0=0, select bank0
  2724     03CB  1303               	bcf	3,6	;RP1=0, select bank0
  2725     03CC  1C08               	btfss	8,0	;volatile
  2726     03CD  2BCF               	goto	u1011
  2727     03CE  2BD0               	goto	u1010
  2728     03CF                     u1011:
  2729     03CF  2BD3               	goto	l1420
  2730     03D0                     u1010:
  2731     03D0                     l1418:
  2732                           
  2733                           ;DHT11.c: 38:         data = (data<<1 | 1);
  2734     03D0  1403               	setc
  2735     03D1  0DF4               	rlf	DHT11_read_byte@data,f
  2736                           
  2737                           ;DHT11.c: 39:     }
  2738     03D2  2BD7               	goto	l160
  2739     03D3                     l1420:
  2740                           
  2741                           ;DHT11.c: 41:         data = (data<<1);
  2742     03D3  0874               	movf	DHT11_read_byte@data,w
  2743     03D4  00F2               	movwf	??_DHT11_read_byte
  2744     03D5  0772               	addwf	??_DHT11_read_byte,w
  2745     03D6  00F4               	movwf	DHT11_read_byte@data
  2746     03D7                     l160:
  2747     03D7  1808               	btfsc	8,0	;volatile
  2748     03D8  2BDA               	goto	u1021
  2749     03D9  2BDB               	goto	u1020
  2750     03DA                     u1021:
  2751     03DA  2BD7               	goto	l160
  2752     03DB                     u1020:
  2753     03DB                     l1422:
  2754                           
  2755                           ;DHT11.c: 44:    }
  2756     03DB  3001               	movlw	1
  2757     03DC  00FF               	movwf	btemp+1
  2758     03DD  087F               	movf	btemp+1,w
  2759     03DE  07F3               	addwf	DHT11_read_byte@i,f
  2760     03DF                     l1424:
  2761     03DF  0873               	movf	DHT11_read_byte@i,w
  2762     03E0  3A80               	xorlw	128
  2763     03E1  3E78               	addlw	-136
  2764     03E2  1C03               	skipc
  2765     03E3  2BE5               	goto	u1031
  2766     03E4  2BE6               	goto	u1030
  2767     03E5                     u1031:
  2768     03E5  2BBF               	goto	l155
  2769     03E6                     u1030:
  2770     03E6                     l1426:
  2771                           
  2772                           ;DHT11.c: 45:    return data;
  2773     03E6  0874               	movf	DHT11_read_byte@data,w
  2774     03E7                     l163:
  2775     03E7  0008               	return
  2776     03E8                     __end_of_DHT11_read_byte:
  2777                           
  2778                           	psect	text17
  2779     0481                     __ptext17:	
  2780 ;; *************** function _isr *****************
  2781 ;; Defined at:
  2782 ;;		line 53 in file "slave_DHT11.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;		None
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;		None
  2787 ;; Return value:  Size  Location     Type
  2788 ;;                  1    wreg      void 
  2789 ;; Registers used:
  2790 ;;		None
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/0
  2793 ;;		On exit  : 0/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2796 ;;      Params:         0       0       0       0       0
  2797 ;;      Locals:         0       0       0       0       0
  2798 ;;      Temps:          2       0       0       0       0
  2799 ;;      Totals:         2       0       0       0       0
  2800 ;;Total ram usage:        2 bytes
  2801 ;; Hardware stack levels used: 1
  2802 ;; This function calls:
  2803 ;;		Nothing
  2804 ;; This function is called by:
  2805 ;;		Interrupt level 1
  2806 ;; This function uses a non-reentrant model
  2807 ;;
  2808                           
  2809     0481                     _isr:	
  2810                           ;psect for function _isr
  2811                           
  2812     0481                     i1l53:
  2813     0481  0871               	movf	??_isr+1,w
  2814     0482  008A               	movwf	10
  2815     0483  0E70               	swapf	??_isr,w
  2816     0484  0083               	movwf	3
  2817     0485  0EFE               	swapf	btemp,f
  2818     0486  0E7E               	swapf	btemp,w
  2819     0487  0009               	retfie
  2820     0488                     __end_of_isr:
  2821     007E                     btemp	set	126	;btemp
  2822     007E                     wtemp0	set	126
  2823                           
  2824                           	psect	intentry
  2825     0004                     __pintentry:	
  2826                           ;incstack = 0
  2827                           ; Regs used in _isr: []
  2828                           
  2829     0004                     interrupt_function:
  2830     007E                     saved_w	set	btemp
  2831     0004  00FE               	movwf	btemp
  2832     0005  0E03               	swapf	3,w
  2833     0006  00F0               	movwf	??_isr
  2834     0007  080A               	movf	10,w
  2835     0008  00F1               	movwf	??_isr+1
  2836     0009  120A  118A  2C81   	ljmp	_isr
  2837                           
  2838                           	psect	config
  2839                           
  2840                           ;Config register CONFIG1 @ 0x2007
  2841                           ;	Oscillator Selection bits
  2842                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2843                           ;	Watchdog Timer Enable bit
  2844                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2845                           ;	Power-up Timer Enable bit
  2846                           ;	PWRTE = OFF, PWRT disabled
  2847                           ;	RE3/MCLR pin function select bit
  2848                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2849                           ;	Code Protection bit
  2850                           ;	CP = OFF, Program memory code protection is disabled
  2851                           ;	Data Code Protection bit
  2852                           ;	CPD = OFF, Data memory code protection is disabled
  2853                           ;	Brown Out Reset Selection bits
  2854                           ;	BOREN = OFF, BOR disabled
  2855                           ;	Internal External Switchover bit
  2856                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2857                           ;	Fail-Safe Clock Monitor Enabled bit
  2858                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2859                           ;	Low Voltage Programming Enable bit
  2860                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2861                           ;	In-Circuit Debugger Mode bit
  2862                           ;	DEBUG = 0x1, unprogrammed default
  2863     2007                     	org	8199
  2864     2007  20D4               	dw	8404
  2865                           
  2866                           ;Config register CONFIG2 @ 0x2008
  2867                           ;	Brown-out Reset Selection bit
  2868                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2869                           ;	Flash Program Memory Self Write Enable bits
  2870                           ;	WRT = OFF, Write protection off
  2871     2008                     	org	8200
  2872     2008  3FFF               	dw	16383

Data Sizes:
    Strings     28
    Constant    0
    Data        1
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80      9      30
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    DHT11_read_data@temp	PTR int  size(1) Largest target is 2
		 -> temperatura(BANK0[2]), 

    DHT11_read_data@hum	PTR int  size(1) Largest target is 2
		 -> humedad(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 11
		 -> STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[3]), STR_2(CODE[4]), 
		 -> u_hum(BANK0[3]), d_temp(BANK0[3]), u_temp(BANK0[3]), STR_1(CODE[11]), 

    separar_digitos8@dig8	PTR unsigned char  size(1) Largest target is 3
		 -> d_hum(BANK0[3]), u_hum(BANK0[3]), d_temp(BANK0[3]), u_temp(BANK0[3]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Write_String
    _setup->_Lcd_Init
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _LDC_output->_Lcd_Write_String
    _LDC_output->_separar_digitos8
    _separar_digitos8->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _DHT11_read_data->_DHT11_read_byte

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _LDC_output->_separar_digitos8

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    6434
                                              6 BANK0      3     3      0
                    _DHT11_read_data
                        _DHT11_start
                         _LDC_output
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                2     2      0     279
                                              8 COMMON     2     2      0
                           _Lcd_Init
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     279
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _LDC_output                                           0     0      0    3686
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                   _separar_digitos8
 ---------------------------------------------------------------------------------
 (2) _separar_digitos8                                     7     6      1    1513
                                             10 COMMON     1     0      1
                                              0 BANK0      6     6      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     600
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2    1104
                                              7 COMMON     4     2      2
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     254
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     815
                                              6 COMMON     2     1      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     155
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_read_data                                      7     6      1     395
                                              5 COMMON     5     4      1
                                              0 BANK0      2     2      0
                    _DHT11_read_byte
                     _DHT11_response
                        _DHT11_start
 ---------------------------------------------------------------------------------
 (1) _DHT11_start                                          2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _DHT11_response                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DHT11_read_byte                                      3     3      0     170
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DHT11_read_data
     _DHT11_read_byte
     _DHT11_response
     _DHT11_start
   _DHT11_start
   _LDC_output
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
     _separar_digitos8
       ___awdiv
       ___awmod
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Set_Cursor
   _Lcd_Write_String
   _setup
     _Lcd_Init
       _Lcd_Cmd
       _Lcd_Port

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      9      1E       5       37.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2A      12        0.0%
ABS                  0      0      2A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Aug 20 11:38:12 2023

                       pc 0002                        l72 0317                        l90 03F4  
                      l66 0427                        l91 03FA                        l92 03FB  
                      l93 0401                        l69 009F                        l94 0402  
                      l95 0408                        l97 0409                        l89 03F1  
            ___awdiv@sign 0077                        fsr 0004                       l100 045C  
                     l103 0478                       l112 01DB                       l121 035B  
                     l115 0390                       l141 045D                       l109 02CC  
                     l150 046B                       l160 03D7                       l144 0463  
                     l138 0442                       l163 03E7                       l155 03BF  
                     l147 0467                       l420 0234                       l167 0117  
                     l407 017E                       _RD0 0040                       _RD3 0043  
                     _RD4 0044                       _RD5 0045                       _RD6 0046  
                     _RD7 0047                       u500 0139                       u501 0138  
                     u520 014B                       u600 01F7                       u521 014A  
                     u601 01F6                       u515 013D                       u540 015C  
                     u620 0209                       u541 015B                       u621 0208  
                     u630 0213                       u535 014C                       u631 0212  
                     u615 01FB                       u560 0170                       u480 011D  
                     u561 016F                       u545 0158                       u481 011C  
                     u570 0175                       u490 0128                       u650 0226  
                     u571 0174                       u555 0164                       u491 0127  
                     u651 0225                       u635 020F                       u900 0289  
                     u660 022B                       u580 01E1                       u901 0288  
                     u661 022A                       u645 021A                       u581 01E0  
                     _SCS 0478                       u590 01EC                       u591 01EB  
                     u920 02AE                       u921 02AD                       u850 03ED  
                     u851 03EC                       u915 028F                       u860 03F8  
                     u940 0325                       u861 03F7                       u870 03FF  
                     u950 0349                       u871 03FE                       u935 02B4  
                     u880 0406                       u960 035B                       u881 0405  
                     u961 035A                       u970 0463                       u971 0462  
                     u980 0467                       u981 0466                       u990 046B  
                     u991 046A                       u895 0369                       _isr 0481  
                     fsr0 0004                       indf 0000              ___awmod@sign 0077  
             ?_LDC_output 0070                      l1100 013C                      l1110 0162  
                    l1102 0143                      l1120 017A                      l1112 0163  
                    l1104 0147                      l1114 016A                      l1106 014B  
                    l1130 01E6                      l1210 030C  separar_digitos8@unidades 0039  
                    l1108 015C                      l1116 0170                      l1140 01FA  
                    l1132 01E8                      l1124 01DC                      l1212 0312  
                    l1118 0175                      l1150 0219                      l1142 0201  
                    l1134 01EC                      l1126 01DD                      l1320 03E9  
                    l1080 0118                      l1152 0220                      l1144 0205  
                    l1136 01F1                      l1128 01E1                      l1208 02D0  
                    l1400 018E                      l1322 03ED                      l1330 035D  
                    l1090 0128                      l1082 0119                      l1146 0209  
                    l1138 01F7                      l1154 0226                      l1402 019D  
                    l1420 03D3                      l1324 03F8                      l1340 037C  
                    l1332 0363                      l1092 012D                      l1084 011D  
                    l1156 022B                      l1148 0213                      l1404 01A3  
                    l1500 025C                      l1422 03DB                      l1414 03C5  
                    l1406 045D                      l1326 03FF                      l1350 0444  
                    l1342 037F                      l1334 0366                      l1094 0131  
                    l1086 0122                      l1158 0230                      l1430 040A  
                    l1502 0261                      l1424 03DF                      l1416 03CA  
                    l1408 03BD                      l1360 0428                      l1440 00A3  
                    l1328 0406                      l1352 0447                      l1344 0385  
                    l1336 0374                      l1096 0133                      l1088 0124  
                    l1432 0414                      l1504 0267                      l1426 03E6  
                    l1418 03D0                      l1362 042E                      l1450 00BD  
                    l1442 00A3                      l1354 044D                      l1370 0289  
                    l1346 0388                      l1338 0377                      l1098 0139  
                    l1434 0418                      l1506 0274                      l1364 0437  
                    l1460 00E4                      l1452 00C5                      l1444 00A8  
                    l1356 0450                      l1380 02AE                      l1372 0296  
                    l1348 038D                      l1436 0419                      l1366 043A  
                    l1462 0114                      l1454 00CD                      l1446 00AD  
                    l1358 0459                      l1382 02BB                      l1374 0299  
                    l1390 031B                      l1438 041E                      l1456 00D5  
                    l1448 00B5                      l1384 02BE                      l1376 029F  
                    l1368 0284                      l1392 0337                      l1480 005B  
                    l1472 046C                      l1458 00DE                      l1386 02C4  
                    l1378 02A8                      l1394 033D                      l1490 0096  
                    l1482 0064                      l1474 0022                      l1468 0116  
                    l1388 0318                      l1484 007C                      l1476 004A  
                    l1396 017F                      l1492 0235                      l1486 0084  
                    l1478 0052                      l1398 0185                      l1494 023F  
                    l1488 008D                      l1496 024E                      l1498 0257  
                    ?_isr 0070                      STR_1 03A1                      STR_2 03B6  
                    STR_3 03BA                      STR_4 03AC                      STR_5 03B1  
                    u1000 03C5                      u1001 03C4                      u1010 03D0  
                    u1011 03CF                      u1020 03DB                      u1021 03DA  
                    u1030 03E6                      u1031 03E5                      u1040 00E4  
                    u1041 00E3                      u1107 0189                      u1117 0198  
                    u1054 00F1                      u1070 025C                      u1127 01A7  
                    u1071 025B                      u1064 010A                      u1137 0379  
                    u1147 038A                      u1157 0454                      u1167 0432  
                    u1087 0247                      u1177 043F                      u1097 0422  
                    u1187 03C7                      i1l53 0481         ?_Lcd_Write_String 0077  
                    _bits 0020                      _main 0235                      btemp 007E  
                    start 000C        ??_Lcd_Write_String 0035           __end_of_Lcd_Cmd 045D  
                   ??_isr 0070                     ?_main 0070           __end_of___awdiv 017F  
         __end_of___awmod 0235                     _ANSEL 0188           ___awdiv@divisor 0072  
         ___awdiv@counter 0076                     _PORTD 0008                     _TRISD 0088  
                   _d_hum 0025                     _u_hum 0028                     _setup 040A  
       ?_separar_digitos8 007A                     pclath 000A        ??_separar_digitos8 0035  
                   status 0003                     wtemp0 007E          __end_of_Lcd_Init 01DC  
        __end_of_Lcd_Port 040A           __initialization 000F              __end_of_main 0281  
        ??_DHT11_response 0072                    ??_main 003B          ___awdiv@dividend 0074  
                  ?_setup 0070                    _ANSELH 0189                 ??_Lcd_Cmd 0073  
                  _TRISD0 0440                 ??___awdiv 0076                 ??___awmod 0076  
                  _d_temp 002B          DHT11_read_byte@i 0073          ___awdiv@quotient 0078  
         ___awmod@divisor 0072                    _u_temp 002E           ___awmod@counter 0076  
            __pdataCOMMON 007B                    saved_w 007E           Lcd_Set_Cursor@a 0035  
         Lcd_Set_Cursor@b 0076           Lcd_Set_Cursor@y 0037           Lcd_Set_Cursor@z 0036  
 __end_of__initialization 001E         __end_of_Lcd_Clear 0479         ??_DHT11_read_data 0076  
       ??_DHT11_read_byte 0072            __pcstackCOMMON 0070             __end_of_setup 0428  
          _Lcd_Set_Cursor 0281              ??_LDC_output 007B                 ?_Lcd_Init 0070  
               ?_Lcd_Port 0070                   ??_setup 0078                __pbssBANK0 0020  
              __pmaintext 0235                __pintentry 0004        __end_of_LDC_output 00A0  
  __end_of_Lcd_Set_Cursor 02CD                ??_Lcd_Init 0076                ??_Lcd_Port 0072  
              __stringtab 0391            _Lcd_Write_Char 035C                   _Lcd_Cmd 0443  
           ??_DHT11_start 0072                   ___awdiv 0118                   ___awmod 01DC  
                 _data_ok 007B           ?_Lcd_Set_Cursor 0076                   __ptext1 040A  
                 __ptext2 017F                   __ptext3 046C                   __ptext4 0022  
                 __ptext5 02CD                   __ptext6 01DC                   __ptext7 0118  
                 __ptext8 0318                   __ptext9 035C                   _humedad 0033  
        ___awmod@dividend 0074                   clrloop0 047A    __end_of_Lcd_Write_Char 0391  
    end_of_initialization 001E                 Lcd_Port@a 0072       __end_of_DHT11_start 0443  
               _PORTDbits 0008   separar_digitos8@decenas 0038           ?_Lcd_Write_Char 0070  
   DHT11_read_data@parity 0036           _DHT11_read_data 00A0         Lcd_Write_String@a 0077  
       Lcd_Write_String@i 0079           _DHT11_read_byte 03BD                 _Lcd_Clear 046C  
        _Lcd_Write_String 0318             __pidataCOMMON 0488       start_initialization 000F  
             __end_of_isr 0488               _DHT11_start 0428                ?_Lcd_Clear 0070  
        _separar_digitos8 02CD           Lcd_Write_Char@a 0076           Lcd_Write_Char@y 0075  
 __end_of_DHT11_read_data 0118       DHT11_read_data@temp 0075   __end_of_DHT11_read_byte 03E8  
               ___latbits 0002             __pcstackBANK0 0035                  ?_Lcd_Cmd 0070  
        ??_Lcd_Set_Cursor 0077       DHT11_read_byte@data 0074                  ?___awdiv 0072  
                ?___awmod 0072                 __pstrings 0391         interrupt_function 0004  
               clear_ram0 0479                  Lcd_Cmd@a 0075               ??_Lcd_Clear 0076  
             __stringbase 03A0          ??_Lcd_Write_Char 0073          ?_DHT11_read_data 0075  
        ?_DHT11_read_byte 0070                  _Lcd_Init 017F                  _Lcd_Port 03E8  
          _DHT11_response 045D  __end_of_Lcd_Write_String 035C        DHT11_read_data@hum 0035  
      __end_of__stringtab 03A1    __end_of_DHT11_response 046C                  __ptext10 0281  
                __ptext11 0443                  __ptext12 03E8                  __ptext13 00A0  
                __ptext14 0428                  __ptext15 045D                  __ptext16 03BD  
                __ptext17 0481  __end_of_separar_digitos8 0318              ?_DHT11_start 0070  
         ?_DHT11_response 0070                _LDC_output 0022        Lcd_Write_Char@temp 0074  
                intlevel1 0000                 stringcode 039B                _OSCCONbits 008F  
    separar_digitos8@dig8 007A      separar_digitos8@div1 0037        Lcd_Set_Cursor@temp 0038  
             _temperatura 0031                  stringdir 039B                  stringtab 0391  
     separar_digitos8@num 003A  
