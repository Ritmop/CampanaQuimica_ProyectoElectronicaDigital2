

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Aug 18 20:36:06 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33     0000                     
    34                           ; Generated 22/03/2023 GMT
    35                           ; 
    36                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F887 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68     0000                     	;# 
    69     0001                     	;# 
    70     0002                     	;# 
    71     0003                     	;# 
    72     0004                     	;# 
    73     0005                     	;# 
    74     0006                     	;# 
    75     0007                     	;# 
    76     0008                     	;# 
    77     0009                     	;# 
    78     000A                     	;# 
    79     000B                     	;# 
    80     000C                     	;# 
    81     000D                     	;# 
    82     000E                     	;# 
    83     000E                     	;# 
    84     000F                     	;# 
    85     0010                     	;# 
    86     0011                     	;# 
    87     0012                     	;# 
    88     0013                     	;# 
    89     0014                     	;# 
    90     0015                     	;# 
    91     0015                     	;# 
    92     0016                     	;# 
    93     0017                     	;# 
    94     0018                     	;# 
    95     0019                     	;# 
    96     001A                     	;# 
    97     001B                     	;# 
    98     001B                     	;# 
    99     001C                     	;# 
   100     001D                     	;# 
   101     001E                     	;# 
   102     001F                     	;# 
   103     0081                     	;# 
   104     0085                     	;# 
   105     0086                     	;# 
   106     0087                     	;# 
   107     0088                     	;# 
   108     0089                     	;# 
   109     008C                     	;# 
   110     008D                     	;# 
   111     008E                     	;# 
   112     008F                     	;# 
   113     0090                     	;# 
   114     0091                     	;# 
   115     0092                     	;# 
   116     0093                     	;# 
   117     0093                     	;# 
   118     0093                     	;# 
   119     0094                     	;# 
   120     0095                     	;# 
   121     0096                     	;# 
   122     0097                     	;# 
   123     0098                     	;# 
   124     0099                     	;# 
   125     009A                     	;# 
   126     009B                     	;# 
   127     009C                     	;# 
   128     009D                     	;# 
   129     009E                     	;# 
   130     009F                     	;# 
   131     0105                     	;# 
   132     0107                     	;# 
   133     0108                     	;# 
   134     0109                     	;# 
   135     010C                     	;# 
   136     010C                     	;# 
   137     010D                     	;# 
   138     010E                     	;# 
   139     010F                     	;# 
   140     0185                     	;# 
   141     0187                     	;# 
   142     0188                     	;# 
   143     0189                     	;# 
   144     018C                     	;# 
   145     018D                     	;# 
   146     0000                     	;# 
   147     0001                     	;# 
   148     0002                     	;# 
   149     0003                     	;# 
   150     0004                     	;# 
   151     0005                     	;# 
   152     0006                     	;# 
   153     0007                     	;# 
   154     0008                     	;# 
   155     0009                     	;# 
   156     000A                     	;# 
   157     000B                     	;# 
   158     000C                     	;# 
   159     000D                     	;# 
   160     000E                     	;# 
   161     000E                     	;# 
   162     000F                     	;# 
   163     0010                     	;# 
   164     0011                     	;# 
   165     0012                     	;# 
   166     0013                     	;# 
   167     0014                     	;# 
   168     0015                     	;# 
   169     0015                     	;# 
   170     0016                     	;# 
   171     0017                     	;# 
   172     0018                     	;# 
   173     0019                     	;# 
   174     001A                     	;# 
   175     001B                     	;# 
   176     001B                     	;# 
   177     001C                     	;# 
   178     001D                     	;# 
   179     001E                     	;# 
   180     001F                     	;# 
   181     0081                     	;# 
   182     0085                     	;# 
   183     0086                     	;# 
   184     0087                     	;# 
   185     0088                     	;# 
   186     0089                     	;# 
   187     008C                     	;# 
   188     008D                     	;# 
   189     008E                     	;# 
   190     008F                     	;# 
   191     0090                     	;# 
   192     0091                     	;# 
   193     0092                     	;# 
   194     0093                     	;# 
   195     0093                     	;# 
   196     0093                     	;# 
   197     0094                     	;# 
   198     0095                     	;# 
   199     0096                     	;# 
   200     0097                     	;# 
   201     0098                     	;# 
   202     0099                     	;# 
   203     009A                     	;# 
   204     009B                     	;# 
   205     009C                     	;# 
   206     009D                     	;# 
   207     009E                     	;# 
   208     009F                     	;# 
   209     0105                     	;# 
   210     0107                     	;# 
   211     0108                     	;# 
   212     0109                     	;# 
   213     010C                     	;# 
   214     010C                     	;# 
   215     010D                     	;# 
   216     010E                     	;# 
   217     010F                     	;# 
   218     0185                     	;# 
   219     0187                     	;# 
   220     0188                     	;# 
   221     0189                     	;# 
   222     018C                     	;# 
   223     018D                     	;# 
   224     0000                     	;# 
   225     0001                     	;# 
   226     0002                     	;# 
   227     0003                     	;# 
   228     0004                     	;# 
   229     0005                     	;# 
   230     0006                     	;# 
   231     0007                     	;# 
   232     0008                     	;# 
   233     0009                     	;# 
   234     000A                     	;# 
   235     000B                     	;# 
   236     000C                     	;# 
   237     000D                     	;# 
   238     000E                     	;# 
   239     000E                     	;# 
   240     000F                     	;# 
   241     0010                     	;# 
   242     0011                     	;# 
   243     0012                     	;# 
   244     0013                     	;# 
   245     0014                     	;# 
   246     0015                     	;# 
   247     0015                     	;# 
   248     0016                     	;# 
   249     0017                     	;# 
   250     0018                     	;# 
   251     0019                     	;# 
   252     001A                     	;# 
   253     001B                     	;# 
   254     001B                     	;# 
   255     001C                     	;# 
   256     001D                     	;# 
   257     001E                     	;# 
   258     001F                     	;# 
   259     0081                     	;# 
   260     0085                     	;# 
   261     0086                     	;# 
   262     0087                     	;# 
   263     0088                     	;# 
   264     0089                     	;# 
   265     008C                     	;# 
   266     008D                     	;# 
   267     008E                     	;# 
   268     008F                     	;# 
   269     0090                     	;# 
   270     0091                     	;# 
   271     0092                     	;# 
   272     0093                     	;# 
   273     0093                     	;# 
   274     0093                     	;# 
   275     0094                     	;# 
   276     0095                     	;# 
   277     0096                     	;# 
   278     0097                     	;# 
   279     0098                     	;# 
   280     0099                     	;# 
   281     009A                     	;# 
   282     009B                     	;# 
   283     009C                     	;# 
   284     009D                     	;# 
   285     009E                     	;# 
   286     009F                     	;# 
   287     0105                     	;# 
   288     0107                     	;# 
   289     0108                     	;# 
   290     0109                     	;# 
   291     010C                     	;# 
   292     010C                     	;# 
   293     010D                     	;# 
   294     010E                     	;# 
   295     010F                     	;# 
   296     0185                     	;# 
   297     0187                     	;# 
   298     0188                     	;# 
   299     0189                     	;# 
   300     018C                     	;# 
   301     018D                     	;# 
   302     0000                     	;# 
   303     0001                     	;# 
   304     0002                     	;# 
   305     0003                     	;# 
   306     0004                     	;# 
   307     0005                     	;# 
   308     0006                     	;# 
   309     0007                     	;# 
   310     0008                     	;# 
   311     0009                     	;# 
   312     000A                     	;# 
   313     000B                     	;# 
   314     000C                     	;# 
   315     000D                     	;# 
   316     000E                     	;# 
   317     000E                     	;# 
   318     000F                     	;# 
   319     0010                     	;# 
   320     0011                     	;# 
   321     0012                     	;# 
   322     0013                     	;# 
   323     0014                     	;# 
   324     0015                     	;# 
   325     0015                     	;# 
   326     0016                     	;# 
   327     0017                     	;# 
   328     0018                     	;# 
   329     0019                     	;# 
   330     001A                     	;# 
   331     001B                     	;# 
   332     001B                     	;# 
   333     001C                     	;# 
   334     001D                     	;# 
   335     001E                     	;# 
   336     001F                     	;# 
   337     0081                     	;# 
   338     0085                     	;# 
   339     0086                     	;# 
   340     0087                     	;# 
   341     0088                     	;# 
   342     0089                     	;# 
   343     008C                     	;# 
   344     008D                     	;# 
   345     008E                     	;# 
   346     008F                     	;# 
   347     0090                     	;# 
   348     0091                     	;# 
   349     0092                     	;# 
   350     0093                     	;# 
   351     0093                     	;# 
   352     0093                     	;# 
   353     0094                     	;# 
   354     0095                     	;# 
   355     0096                     	;# 
   356     0097                     	;# 
   357     0098                     	;# 
   358     0099                     	;# 
   359     009A                     	;# 
   360     009B                     	;# 
   361     009C                     	;# 
   362     009D                     	;# 
   363     009E                     	;# 
   364     009F                     	;# 
   365     0105                     	;# 
   366     0107                     	;# 
   367     0108                     	;# 
   368     0109                     	;# 
   369     010C                     	;# 
   370     010C                     	;# 
   371     010D                     	;# 
   372     010E                     	;# 
   373     010F                     	;# 
   374     0185                     	;# 
   375     0187                     	;# 
   376     0188                     	;# 
   377     0189                     	;# 
   378     018C                     	;# 
   379     018D                     	;# 
   380                           
   381                           	psect	idataBANK0
   382     04AD                     __pidataBANK0:
   383                           
   384                           ;initializer for _d_hum
   385     04AD  3430               	retlw	48
   386     04AE  3430               	retlw	48
   387     04AF  3400               	retlw	0
   388                           
   389                           ;initializer for _u_hum
   390     04B0  3430               	retlw	48
   391     04B1  3430               	retlw	48
   392     04B2  3400               	retlw	0
   393                           
   394                           ;initializer for _d_temp
   395     04B3  3430               	retlw	48
   396     04B4  3430               	retlw	48
   397     04B5  3400               	retlw	0
   398                           
   399                           ;initializer for _u_temp
   400     04B6  3430               	retlw	48
   401     04B7  3430               	retlw	48
   402     04B8  3400               	retlw	0
   403     0008                     _PORTDbits	set	8
   404     0008                     _PORTD	set	8
   405     0006                     _PORTB	set	6
   406     0005                     _PORTA	set	5
   407     0040                     _RD0	set	64
   408     0043                     _RD3	set	67
   409     0047                     _RD7	set	71
   410     0046                     _RD6	set	70
   411     0045                     _RD5	set	69
   412     0044                     _RD4	set	68
   413     0088                     _TRISDbits	set	136
   414     008F                     _OSCCONbits	set	143
   415     0088                     _TRISD	set	136
   416     0086                     _TRISB	set	134
   417     0085                     _TRISA	set	133
   418     0478                     _SCS	set	1144
   419     0189                     _ANSELH	set	393
   420     0188                     _ANSEL	set	392
   421                           
   422                           	psect	strings
   423     0378                     __pstrings:
   424     0378                     stringtab:
   425     0378                     __stringtab:
   426                           
   427                           ;	String table - string pointers are 1 byte each
   428     0378  1BFF               	btfsc	btemp+1,7
   429     0379  2B82               	ljmp	stringcode
   430     037A  1383               	bcf	3,7
   431     037B  187F               	btfsc	btemp+1,0
   432     037C  1783               	bsf	3,7
   433     037D  0800               	movf	0,w
   434     037E  0A84               	incf	4,f
   435     037F  1903               	skipnz
   436     0380  0AFF               	incf	btemp+1,f
   437     0381  0008               	return
   438     0382                     stringcode:
   439     0382                     stringdir:
   440     0382  3003               	movlw	high stringdir
   441     0383  008A               	movwf	10
   442     0384  0804               	movf	4,w
   443     0385  0A84               	incf	4,f
   444     0386  0782               	addwf	2,f
   445     0387                     __stringbase:
   446     0387  3400               	retlw	0
   447     0388                     __end_of__stringtab:
   448     0388                     STR_1:
   449     0388  3445               	retlw	69	;'E'
   450     0389  3452               	retlw	82	;'R'
   451     038A  3452               	retlw	82	;'R'
   452     038B  344F               	retlw	79	;'O'
   453     038C  3452               	retlw	82	;'R'
   454     038D  3420               	retlw	32	;' '
   455     038E  3464               	retlw	100	;'d'
   456     038F  3475               	retlw	117	;'u'
   457     0390  3472               	retlw	114	;'r'
   458     0391  3461               	retlw	97	;'a'
   459     0392  346E               	retlw	110	;'n'
   460     0393  3474               	retlw	116	;'t'
   461     0394  3465               	retlw	101	;'e'
   462     0395  3420               	retlw	32	;' '
   463     0396  346C               	retlw	108	;'l'
   464     0397  3465               	retlw	101	;'e'
   465     0398  3463               	retlw	99	;'c'
   466     0399  3474               	retlw	116	;'t'
   467     039A  3475               	retlw	117	;'u'
   468     039B  3472               	retlw	114	;'r'
   469     039C  3461               	retlw	97	;'a'
   470     039D  3400               	retlw	0
   471     039E                     STR_4:
   472     039E  3448               	retlw	72	;'H'
   473     039F  343A               	retlw	58	;':'
   474     03A0  3420               	retlw	32	;' '
   475     03A1  3400               	retlw	0
   476     03A2                     STR_2:
   477     03A2  3454               	retlw	84	;'T'
   478     03A3  343A               	retlw	58	;':'
   479     03A4  3420               	retlw	32	;' '
   480     03A5  3400               	retlw	0
   481     03A6                     STR_5:
   482     03A6  3425               	retlw	37	;'%'
   483     03A7  3452               	retlw	82	;'R'
   484     03A8  3448               	retlw	72	;'H'
   485     03A9  3400               	retlw	0
   486     03AA                     STR_3:
   487     03AA  3427               	retlw	39	;'''
   488     03AB  3443               	retlw	67	;'C'
   489     03AC  3400               	retlw	0
   490                           
   491                           	psect	cinit
   492     000F                     start_initialization:	
   493                           ; #config settings
   494                           
   495     000F                     __initialization:
   496                           
   497                           ; Initialize objects allocated to BANK0
   498     000F  1383               	bcf	3,7	;select IRP bank0
   499     0010  302C               	movlw	low (__pdataBANK0+12)
   500     0011  00FD               	movwf	btemp+-1
   501     0012  3004               	movlw	high __pidataBANK0
   502     0013  00FE               	movwf	btemp
   503     0014  30AD               	movlw	low __pidataBANK0
   504     0015  00FF               	movwf	btemp+1
   505     0016  3020               	movlw	low __pdataBANK0
   506     0017  0084               	movwf	4
   507     0018  120A  118A  248F  120A  118A  	fcall	init_ram0
   508                           
   509                           ; Clear objects allocated to BANK0
   510     001D  01B6               	clrf	__pbssBANK0& (0+127)
   511     001E  01B7               	clrf	(__pbssBANK0+1)& (0+127)
   512     001F  01B8               	clrf	(__pbssBANK0+2)& (0+127)
   513     0020  01B9               	clrf	(__pbssBANK0+3)& (0+127)
   514     0021  01BA               	clrf	(__pbssBANK0+4)& (0+127)
   515     0022  01BB               	clrf	(__pbssBANK0+5)& (0+127)
   516     0023  01BC               	clrf	(__pbssBANK0+6)& (0+127)
   517     0024  01BD               	clrf	(__pbssBANK0+7)& (0+127)
   518                           
   519                           ; Clear objects allocated to COMMON
   520     0025  01FA               	clrf	__pbssCOMMON& (0+127)
   521     0026  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   522     0027                     end_of_initialization:	
   523                           ;End of C runtime variable initialization code
   524                           
   525     0027                     __end_of__initialization:
   526     0027  0183               	clrf	3
   527     0028  120A  118A  2A4C   	ljmp	_main	;jump to C main() function
   528                           
   529                           	psect	bssCOMMON
   530     007A                     __pbssCOMMON:
   531     007A                     _temperatura:
   532     007A                     	ds	2
   533                           
   534                           	psect	bssBANK0
   535     0036                     __pbssBANK0:
   536     0036                     _bits:
   537     0036                     	ds	5
   538     003B                     _data_ok:
   539     003B                     	ds	1
   540     003C                     _humedad:
   541     003C                     	ds	2
   542                           
   543                           	psect	dataBANK0
   544     0020                     __pdataBANK0:
   545     0020                     _d_hum:
   546     0020                     	ds	3
   547     0023                     _u_hum:
   548     0023                     	ds	3
   549     0026                     _d_temp:
   550     0026                     	ds	3
   551     0029                     _u_temp:
   552     0029                     	ds	3
   553                           
   554                           	psect	inittext
   555     048B                     init_fetch0:	
   556                           ;	Called with low address in FSR and high address in W
   557                           
   558     048B  087E               	movf	btemp,w
   559     048C  008A               	movwf	10
   560     048D  087F               	movf	btemp+1,w
   561     048E  0082               	movwf	2
   562     048F                     init_ram0:	
   563                           ;Called with:
   564                           ;	high address of idata address in btemp 
   565                           ;	low address of idata address in btemp+1 
   566                           ;	low address of data in FSR
   567                           ;	high address + 1 of data in btemp-1
   568                           
   569     048F  120A  118A  248B  120A  118A  	fcall	init_fetch0
   570     0494  0080               	movwf	0
   571     0495  0A84               	incf	4,f
   572     0496  0804               	movf	4,w
   573     0497  067D               	xorwf	btemp+-1,w
   574     0498  1903               	btfsc	3,2
   575     0499  3400               	retlw	0
   576     049A  0AFF               	incf	btemp+1,f
   577     049B  1903               	btfsc	3,2
   578     049C  0AFE               	incf	btemp,f
   579     049D  2C8F               	goto	init_ram0
   580                           
   581                           	psect	cstackCOMMON
   582     0070                     __pcstackCOMMON:
   583     0070                     ?_setup:
   584     0070                     ?_LDC_output:	
   585                           ; 1 bytes @ 0x0
   586                           
   587     0070                     ?_Lcd_Init:	
   588                           ; 1 bytes @ 0x0
   589                           
   590     0070                     ?_Lcd_Write_Char:	
   591                           ; 1 bytes @ 0x0
   592                           
   593     0070                     ?_isr:	
   594                           ; 1 bytes @ 0x0
   595                           
   596     0070                     ??_isr:	
   597                           ; 1 bytes @ 0x0
   598                           
   599     0070                     ?_Lcd_Port:	
   600                           ; 1 bytes @ 0x0
   601                           
   602     0070                     ?_Lcd_Cmd:	
   603                           ; 1 bytes @ 0x0
   604                           
   605     0070                     ?_DHT11_start:	
   606                           ; 1 bytes @ 0x0
   607                           
   608     0070                     ?_DHT11_response:	
   609                           ; 1 bytes @ 0x0
   610                           
   611     0070                     ?_DHT11_read_byte:	
   612                           ; 1 bytes @ 0x0
   613                           
   614     0070                     ?_main:	
   615                           ; 1 bytes @ 0x0
   616                           
   617                           
   618                           ; 2 bytes @ 0x0
   619     0070                     	ds	2
   620     0072                     ??_Lcd_Port:
   621     0072                     ??_DHT11_start:	
   622                           ; 1 bytes @ 0x2
   623                           
   624     0072                     ??_DHT11_response:	
   625                           ; 1 bytes @ 0x2
   626                           
   627     0072                     ??_DHT11_read_byte:	
   628                           ; 1 bytes @ 0x2
   629                           
   630     0072                     ?___awdiv:	
   631                           ; 1 bytes @ 0x2
   632                           
   633     0072                     ?___awmod:	
   634                           ; 2 bytes @ 0x2
   635                           
   636     0072                     Lcd_Port@a:	
   637                           ; 2 bytes @ 0x2
   638                           
   639     0072                     ___awdiv@divisor:	
   640                           ; 1 bytes @ 0x2
   641                           
   642     0072                     ___awmod@divisor:	
   643                           ; 2 bytes @ 0x2
   644                           
   645                           
   646                           ; 2 bytes @ 0x2
   647     0072                     	ds	1
   648     0073                     ??_Lcd_Write_Char:
   649     0073                     ??_Lcd_Cmd:	
   650                           ; 1 bytes @ 0x3
   651                           
   652     0073                     DHT11_read_byte@i:	
   653                           ; 1 bytes @ 0x3
   654                           
   655                           
   656                           ; 1 bytes @ 0x3
   657     0073                     	ds	1
   658     0074                     Lcd_Write_Char@temp:
   659     0074                     DHT11_read_byte@data:	
   660                           ; 1 bytes @ 0x4
   661                           
   662     0074                     ___awdiv@dividend:	
   663                           ; 1 bytes @ 0x4
   664                           
   665     0074                     ___awmod@dividend:	
   666                           ; 2 bytes @ 0x4
   667                           
   668                           
   669                           ; 2 bytes @ 0x4
   670     0074                     	ds	1
   671     0075                     ?_DHT11_read_data:
   672     0075                     Lcd_Cmd@a:	
   673                           ; 1 bytes @ 0x5
   674                           
   675     0075                     Lcd_Write_Char@y:	
   676                           ; 1 bytes @ 0x5
   677                           
   678     0075                     DHT11_read_data@temp:	
   679                           ; 1 bytes @ 0x5
   680                           
   681                           
   682                           ; 1 bytes @ 0x5
   683     0075                     	ds	1
   684     0076                     ??_DHT11_read_data:
   685     0076                     ?_Lcd_Set_Cursor:	
   686                           ; 1 bytes @ 0x6
   687                           
   688     0076                     ??_Lcd_Init:	
   689                           ; 1 bytes @ 0x6
   690                           
   691     0076                     ??___awdiv:	
   692                           ; 1 bytes @ 0x6
   693                           
   694     0076                     ??___awmod:	
   695                           ; 1 bytes @ 0x6
   696                           
   697     0076                     Lcd_Set_Cursor@b:	
   698                           ; 1 bytes @ 0x6
   699                           
   700     0076                     Lcd_Write_Char@a:	
   701                           ; 1 bytes @ 0x6
   702                           
   703     0076                     ___awdiv@counter:	
   704                           ; 1 bytes @ 0x6
   705                           
   706     0076                     ___awmod@counter:	
   707                           ; 1 bytes @ 0x6
   708                           
   709                           
   710                           ; 1 bytes @ 0x6
   711     0076                     	ds	1
   712     0077                     ??_Lcd_Set_Cursor:
   713     0077                     ?_Lcd_Write_String:	
   714                           ; 1 bytes @ 0x7
   715                           
   716     0077                     ___awdiv@sign:	
   717                           ; 1 bytes @ 0x7
   718                           
   719     0077                     ___awmod@sign:	
   720                           ; 1 bytes @ 0x7
   721                           
   722     0077                     Lcd_Write_String@a:	
   723                           ; 1 bytes @ 0x7
   724                           
   725                           
   726                           ; 2 bytes @ 0x7
   727     0077                     	ds	1
   728     0078                     ??_setup:
   729     0078                     ___awdiv@quotient:	
   730                           ; 1 bytes @ 0x8
   731                           
   732                           
   733                           ; 2 bytes @ 0x8
   734     0078                     	ds	2
   735     007A                     ??_LDC_output:
   736                           
   737                           	psect	cstackBANK0
   738     002C                     __pcstackBANK0:	
   739                           ; 1 bytes @ 0xA
   740                           
   741     002C                     ??_Lcd_Write_String:
   742     002C                     ?_separar_digitos8:	
   743                           ; 1 bytes @ 0x0
   744                           
   745     002C                     separar_digitos8@dig8:	
   746                           ; 1 bytes @ 0x0
   747                           
   748     002C                     Lcd_Set_Cursor@a:	
   749                           ; 1 bytes @ 0x0
   750                           
   751     002C                     DHT11_read_data@hum:	
   752                           ; 1 bytes @ 0x0
   753                           
   754                           
   755                           ; 1 bytes @ 0x0
   756     002C                     	ds	1
   757     002D                     ??_separar_digitos8:
   758     002D                     Lcd_Set_Cursor@z:	
   759                           ; 1 bytes @ 0x1
   760                           
   761     002D                     DHT11_read_data@parity:	
   762                           ; 1 bytes @ 0x1
   763                           
   764                           
   765                           ; 1 bytes @ 0x1
   766     002D                     	ds	1
   767     002E                     Lcd_Set_Cursor@y:
   768                           
   769                           ; 1 bytes @ 0x2
   770     002E                     	ds	1
   771     002F                     separar_digitos8@div1:
   772     002F                     Lcd_Set_Cursor@temp:	
   773                           ; 1 bytes @ 0x3
   774                           
   775     002F                     Lcd_Write_String@i:	
   776                           ; 1 bytes @ 0x3
   777                           
   778                           
   779                           ; 2 bytes @ 0x3
   780     002F                     	ds	1
   781     0030                     separar_digitos8@decenas:
   782                           
   783                           ; 1 bytes @ 0x4
   784     0030                     	ds	1
   785     0031                     separar_digitos8@unidades:
   786                           
   787                           ; 1 bytes @ 0x5
   788     0031                     	ds	1
   789     0032                     separar_digitos8@num:
   790                           
   791                           ; 1 bytes @ 0x6
   792     0032                     	ds	1
   793     0033                     ??_main:
   794                           
   795                           ; 1 bytes @ 0x7
   796     0033                     	ds	3
   797                           
   798                           	psect	maintext
   799     024C                     __pmaintext:	
   800 ;;
   801 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   802 ;;
   803 ;; *************** function _main *****************
   804 ;; Defined at:
   805 ;;		line 62 in file "slave_DHT11.c"
   806 ;; Parameters:    Size  Location     Type
   807 ;;		None
   808 ;; Auto vars:     Size  Location     Type
   809 ;;		None
   810 ;; Return value:  Size  Location     Type
   811 ;;                  2   61[None  ] int 
   812 ;; Registers used:
   813 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   814 ;; Tracked objects:
   815 ;;		On entry : B00/0
   816 ;;		On exit  : 0/0
   817 ;;		Unchanged: 0/0
   818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   819 ;;      Params:         0       0       0       0       0
   820 ;;      Locals:         0       0       0       0       0
   821 ;;      Temps:          0       3       0       0       0
   822 ;;      Totals:         0       3       0       0       0
   823 ;;Total ram usage:        3 bytes
   824 ;; Hardware stack levels required when called: 5
   825 ;; This function calls:
   826 ;;		_DHT11_read_data
   827 ;;		_LDC_output
   828 ;;		_Lcd_Set_Cursor
   829 ;;		_Lcd_Write_String
   830 ;;		_setup
   831 ;; This function is called by:
   832 ;;		Startup code after reset
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836     024C                     _main:	
   837                           ;psect for function _main
   838                           
   839     024C                     l1502:	
   840                           ;incstack = 0
   841                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   842                           
   843                           
   844                           ;slave_DHT11.c: 63: 
   845     024C  120A  118A  240D  120A  118A  	fcall	_setup
   846     0251                     l1504:
   847                           
   848                           ;slave_DHT11.c: 64:     Lcd_Init();
   849     0251  301A               	movlw	26
   850     0252  1283               	bcf	3,5	;RP0=0, select bank0
   851     0253  1303               	bcf	3,6	;RP1=0, select bank0
   852     0254  00B4               	movwf	??_main+1
   853     0255  30F7               	movlw	247
   854     0256  00B3               	movwf	??_main
   855     0257                     u1087:
   856     0257  0BB3               	decfsz	??_main,f
   857     0258  2A57               	goto	u1087
   858     0259  0BB4               	decfsz	??_main+1,f
   859     025A  2A57               	goto	u1087
   860     025B  2A5C               	nop2
   861     025C                     l1506:
   862                           
   863                           ;slave_DHT11.c: 68: void LDC_output(void){
   864     025C  307A               	movlw	(low (_temperatura| 0))& (0+255)
   865     025D  00F5               	movwf	DHT11_read_data@temp
   866     025E  303C               	movlw	(low (_humedad| 0))& (0+255)
   867     025F  120A  118A  20B8  120A  118A  	fcall	_DHT11_read_data
   868     0264  1283               	bcf	3,5	;RP0=0, select bank0
   869     0265  1303               	bcf	3,6	;RP1=0, select bank0
   870     0266  00BB               	movwf	_data_ok
   871     0267                     l1508:
   872                           
   873                           ;slave_DHT11.c: 70:     separar_digitos8((temperatura & 0xFF00)>>8,u_temp);
   874     0267  083B               	movf	_data_ok,w
   875     0268  1903               	btfsc	3,2
   876     0269  2A6B               	goto	u1071
   877     026A  2A6C               	goto	u1070
   878     026B                     u1071:
   879     026B  2A72               	goto	l1512
   880     026C                     u1070:
   881     026C                     l1510:
   882                           
   883                           ;slave_DHT11.c: 71:     separar_digitos8((temperatura & 0x00FF),d_temp);
   884     026C  120A  118A  202B  120A  118A  	fcall	_LDC_output
   885                           
   886                           ;slave_DHT11.c: 72:     separar_digitos8((humedad & 0xFF00)>>8,u_hum);
   887     0271  2A83               	goto	l1516
   888     0272                     l1512:
   889                           
   890                           ;slave_DHT11.c: 74: 
   891     0272  01F6               	clrf	Lcd_Set_Cursor@b
   892     0273  0AF6               	incf	Lcd_Set_Cursor@b,f
   893     0274  3002               	movlw	2
   894     0275  120A  118A  229B  120A  118A  	fcall	_Lcd_Set_Cursor
   895     027A                     l1514:
   896                           
   897                           ;slave_DHT11.c: 75:     Lcd_Set_Cursor(1,1);
   898     027A  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   899     027B  00F7               	movwf	Lcd_Write_String@a
   900     027C  3080               	movlw	128
   901     027D  00F8               	movwf	Lcd_Write_String@a+1
   902     027E  120A  118A  2332  120A  118A  	fcall	_Lcd_Write_String
   903     0283                     l1516:
   904                           
   905                           ;slave_DHT11.c: 77:     Lcd_Write_String(u_temp);
   906     0283  087B               	movf	_temperatura+1,w
   907     0284  1283               	bcf	3,5	;RP0=0, select bank0
   908     0285  1303               	bcf	3,6	;RP1=0, select bank0
   909     0286  0085               	movwf	5	;volatile
   910     0287                     l1518:
   911                           
   912                           ;slave_DHT11.c: 78:     Lcd_Write_Char('.');
   913     0287  087A               	movf	_temperatura,w
   914     0288  0086               	movwf	6	;volatile
   915     0289                     l1520:
   916                           
   917                           ;slave_DHT11.c: 79:     Lcd_Write_String(d_temp);
   918     0289  3006               	movlw	6
   919     028A  1283               	bcf	3,5	;RP0=0, select bank0
   920     028B  1303               	bcf	3,6	;RP1=0, select bank0
   921     028C  00B5               	movwf	??_main+2
   922     028D  3013               	movlw	19
   923     028E  00B4               	movwf	??_main+1
   924     028F  30AD               	movlw	173
   925     0290  00B3               	movwf	??_main
   926     0291                     u1097:
   927     0291  0BB3               	decfsz	??_main,f
   928     0292  2A91               	goto	u1097
   929     0293  0BB4               	decfsz	??_main+1,f
   930     0294  2A91               	goto	u1097
   931     0295  0BB5               	decfsz	??_main+2,f
   932     0296  2A91               	goto	u1097
   933     0297  2A5C               	goto	l1506
   934     0298  120A  118A  280C   	ljmp	start
   935     029B                     __end_of_main:
   936                           
   937                           	psect	text1
   938     040D                     __ptext1:	
   939 ;; *************** function _setup *****************
   940 ;; Defined at:
   941 ;;		line 84 in file "slave_DHT11.c"
   942 ;; Parameters:    Size  Location     Type
   943 ;;		None
   944 ;; Auto vars:     Size  Location     Type
   945 ;;		None
   946 ;; Return value:  Size  Location     Type
   947 ;;                  1    wreg      void 
   948 ;; Registers used:
   949 ;;		wreg, status,2, status,0, pclath, cstack
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   955 ;;      Params:         0       0       0       0       0
   956 ;;      Locals:         0       0       0       0       0
   957 ;;      Temps:          2       0       0       0       0
   958 ;;      Totals:         2       0       0       0       0
   959 ;;Total ram usage:        2 bytes
   960 ;; Hardware stack levels used: 1
   961 ;; Hardware stack levels required when called: 4
   962 ;; This function calls:
   963 ;;		_Lcd_Init
   964 ;; This function is called by:
   965 ;;		_main
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969     040D                     _setup:	
   970                           ;psect for function _setup
   971                           
   972     040D                     l1442:	
   973                           ;incstack = 0
   974                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   975                           
   976                           
   977                           ;slave_DHT11.c: 85:     Lcd_Write_Char('.');
   978     040D  1683               	bsf	3,5	;RP0=1, select bank3
   979     040E  1703               	bsf	3,6	;RP1=1, select bank3
   980     040F  0188               	clrf	8	;volatile
   981                           
   982                           ;slave_DHT11.c: 86:     Lcd_Write_String(d_hum);
   983     0410  0189               	clrf	9	;volatile
   984                           
   985                           ;slave_DHT11.c: 88: 
   986     0411  1683               	bsf	3,5	;RP0=1, select bank1
   987     0412  1303               	bcf	3,6	;RP1=0, select bank1
   988     0413  0185               	clrf	5	;volatile
   989                           
   990                           ;slave_DHT11.c: 89: }
   991     0414  1283               	bcf	3,5	;RP0=0, select bank0
   992     0415  1303               	bcf	3,6	;RP1=0, select bank0
   993     0416  0185               	clrf	5	;volatile
   994                           
   995                           ;slave_DHT11.c: 90: 
   996     0417  1683               	bsf	3,5	;RP0=1, select bank1
   997     0418  1303               	bcf	3,6	;RP1=0, select bank1
   998     0419  0186               	clrf	6	;volatile
   999                           
  1000                           ;slave_DHT11.c: 91: void separar_digitos8(uint8_t num, char dig8[]){
  1001     041A  1283               	bcf	3,5	;RP0=0, select bank0
  1002     041B  1303               	bcf	3,6	;RP1=0, select bank0
  1003     041C  0186               	clrf	6	;volatile
  1004                           
  1005                           ;slave_DHT11.c: 93:     div1 = num / 10;
  1006     041D  1683               	bsf	3,5	;RP0=1, select bank1
  1007     041E  1303               	bcf	3,6	;RP1=0, select bank1
  1008     041F  0188               	clrf	8	;volatile
  1009                           
  1010                           ;slave_DHT11.c: 94:     unidades = num % 10;
  1011     0420  1283               	bcf	3,5	;RP0=0, select bank0
  1012     0421  1303               	bcf	3,6	;RP1=0, select bank0
  1013     0422  0188               	clrf	8	;volatile
  1014     0423                     l1444:
  1015                           
  1016                           ;slave_DHT11.c: 97:     dig8[1] = unidades + 0x30;
  1017     0423  3070               	movlw	112
  1018     0424  1683               	bsf	3,5	;RP0=1, select bank1
  1019     0425  1303               	bcf	3,6	;RP1=0, select bank1
  1020     0426  048F               	iorwf	15,f	;volatile
  1021     0427                     l1446:
  1022                           
  1023                           ;slave_DHT11.c: 98:     dig8[0] = decenas + 0x30;
  1024     0427  140F               	bsf	15,0	;volatile
  1025     0428                     l1448:
  1026     0428  120A  118A  2196  120A  118A  	fcall	_Lcd_Init
  1027     042D                     l1450:
  1028     042D  301A               	movlw	26
  1029     042E  00F9               	movwf	??_setup+1
  1030     042F  30F8               	movlw	248
  1031     0430  00F8               	movwf	??_setup
  1032     0431                     u1107:
  1033     0431  0BF8               	decfsz	??_setup,f
  1034     0432  2C31               	goto	u1107
  1035     0433  0BF9               	decfsz	??_setup+1,f
  1036     0434  2C31               	goto	u1107
  1037     0435  0000               	nop
  1038     0436                     l70:
  1039     0436  0008               	return
  1040     0437                     __end_of_setup:
  1041                           
  1042                           	psect	text2
  1043     0196                     __ptext2:	
  1044 ;; *************** function _Lcd_Init *****************
  1045 ;; Defined at:
  1046 ;;		line 65 in file "LCD4b.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;		None
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;		None
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  1    wreg      void 
  1053 ;; Registers used:
  1054 ;;		wreg, status,2, status,0, pclath, cstack
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1060 ;;      Params:         0       0       0       0       0
  1061 ;;      Locals:         0       0       0       0       0
  1062 ;;      Temps:          2       0       0       0       0
  1063 ;;      Totals:         2       0       0       0       0
  1064 ;;Total ram usage:        2 bytes
  1065 ;; Hardware stack levels used: 1
  1066 ;; Hardware stack levels required when called: 3
  1067 ;; This function calls:
  1068 ;;		_Lcd_Cmd
  1069 ;;		_Lcd_Port
  1070 ;; This function is called by:
  1071 ;;		_setup
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075     0196                     _Lcd_Init:	
  1076                           ;psect for function _Lcd_Init
  1077                           
  1078     0196                     l1396:	
  1079                           ;incstack = 0
  1080                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1081                           
  1082                           
  1083                           ;LCD4b.c: 66:     Lcd_Port(0x00);
  1084     0196  3000               	movlw	0
  1085     0197  120A  118A  2437  120A  118A  	fcall	_Lcd_Port
  1086     019C                     l1398:
  1087                           
  1088                           ;LCD4b.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1089     019C  3034               	movlw	52
  1090     019D  00F7               	movwf	??_Lcd_Init+1
  1091     019E  30F1               	movlw	241
  1092     019F  00F6               	movwf	??_Lcd_Init
  1093     01A0                     u1117:
  1094     01A0  0BF6               	decfsz	??_Lcd_Init,f
  1095     01A1  29A0               	goto	u1117
  1096     01A2  0BF7               	decfsz	??_Lcd_Init+1,f
  1097     01A3  29A0               	goto	u1117
  1098     01A4  29A5               	nop2
  1099     01A5                     l1400:
  1100                           
  1101                           ;LCD4b.c: 68:     Lcd_Cmd(0x03);
  1102     01A5  3003               	movlw	3
  1103     01A6  120A  118A  2459  120A  118A  	fcall	_Lcd_Cmd
  1104                           
  1105                           ;LCD4b.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1106     01AB  300D               	movlw	13
  1107     01AC  00F7               	movwf	??_Lcd_Init+1
  1108     01AD  30FB               	movlw	251
  1109     01AE  00F6               	movwf	??_Lcd_Init
  1110     01AF                     u1127:
  1111     01AF  0BF6               	decfsz	??_Lcd_Init,f
  1112     01B0  29AF               	goto	u1127
  1113     01B1  0BF7               	decfsz	??_Lcd_Init+1,f
  1114     01B2  29AF               	goto	u1127
  1115     01B3  29B4               	nop2
  1116     01B4                     l1402:
  1117                           
  1118                           ;LCD4b.c: 70:     Lcd_Cmd(0x03);
  1119     01B4  3003               	movlw	3
  1120     01B5  120A  118A  2459  120A  118A  	fcall	_Lcd_Cmd
  1121     01BA                     l1404:
  1122                           
  1123                           ;LCD4b.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  1124     01BA  301D               	movlw	29
  1125     01BB  00F7               	movwf	??_Lcd_Init+1
  1126     01BC  3091               	movlw	145
  1127     01BD  00F6               	movwf	??_Lcd_Init
  1128     01BE                     u1137:
  1129     01BE  0BF6               	decfsz	??_Lcd_Init,f
  1130     01BF  29BE               	goto	u1137
  1131     01C0  0BF7               	decfsz	??_Lcd_Init+1,f
  1132     01C1  29BE               	goto	u1137
  1133                           
  1134                           ;LCD4b.c: 72:     Lcd_Cmd(0x03);
  1135     01C2  3003               	movlw	3
  1136     01C3  120A  118A  2459  120A  118A  	fcall	_Lcd_Cmd
  1137                           
  1138                           ;LCD4b.c: 74:     Lcd_Cmd(0x02);
  1139     01C8  3002               	movlw	2
  1140     01C9  120A  118A  2459  120A  118A  	fcall	_Lcd_Cmd
  1141                           
  1142                           ;LCD4b.c: 75:     Lcd_Cmd(0x02);
  1143     01CE  3002               	movlw	2
  1144     01CF  120A  118A  2459  120A  118A  	fcall	_Lcd_Cmd
  1145                           
  1146                           ;LCD4b.c: 76:     Lcd_Cmd(0x08);
  1147     01D4  3008               	movlw	8
  1148     01D5  120A  118A  2459  120A  118A  	fcall	_Lcd_Cmd
  1149                           
  1150                           ;LCD4b.c: 77:     Lcd_Cmd(0x00);
  1151     01DA  3000               	movlw	0
  1152     01DB  120A  118A  2459  120A  118A  	fcall	_Lcd_Cmd
  1153                           
  1154                           ;LCD4b.c: 78:     Lcd_Cmd(0x0C);
  1155     01E0  300C               	movlw	12
  1156     01E1  120A  118A  2459  120A  118A  	fcall	_Lcd_Cmd
  1157                           
  1158                           ;LCD4b.c: 79:     Lcd_Cmd(0x00);
  1159     01E6  3000               	movlw	0
  1160     01E7  120A  118A  2459  120A  118A  	fcall	_Lcd_Cmd
  1161                           
  1162                           ;LCD4b.c: 80:     Lcd_Cmd(0x06);
  1163     01EC  3006               	movlw	6
  1164     01ED  120A  118A  2459  120A  118A  	fcall	_Lcd_Cmd
  1165     01F2                     l116:
  1166     01F2  0008               	return
  1167     01F3                     __end_of_Lcd_Init:
  1168                           
  1169                           	psect	text3
  1170     002B                     __ptext3:	
  1171 ;; *************** function _LDC_output *****************
  1172 ;; Defined at:
  1173 ;;		line 105 in file "slave_DHT11.c"
  1174 ;; Parameters:    Size  Location     Type
  1175 ;;		None
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;		None
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  1    wreg      void 
  1180 ;; Registers used:
  1181 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1187 ;;      Params:         0       0       0       0       0
  1188 ;;      Locals:         0       0       0       0       0
  1189 ;;      Temps:          0       0       0       0       0
  1190 ;;      Totals:         0       0       0       0       0
  1191 ;;Total ram usage:        0 bytes
  1192 ;; Hardware stack levels used: 1
  1193 ;; Hardware stack levels required when called: 4
  1194 ;; This function calls:
  1195 ;;		_Lcd_Set_Cursor
  1196 ;;		_Lcd_Write_Char
  1197 ;;		_Lcd_Write_String
  1198 ;;		_separar_digitos8
  1199 ;; This function is called by:
  1200 ;;		_main
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204     002B                     _LDC_output:	
  1205                           ;psect for function _LDC_output
  1206                           
  1207     002B                     l1484:	
  1208                           ;incstack = 0
  1209                           ; Regs used in _LDC_output: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1210                           
  1211     002B  3029               	movlw	(low (_u_temp| 0))& (0+255)
  1212     002C  1283               	bcf	3,5	;RP0=0, select bank0
  1213     002D  1303               	bcf	3,6	;RP1=0, select bank0
  1214     002E  00AC               	movwf	separar_digitos8@dig8
  1215     002F  087B               	movf	_temperatura+1,w
  1216     0030  120A  118A  22E7  120A  118A  	fcall	_separar_digitos8
  1217     0035  3026               	movlw	(low (_d_temp| 0))& (0+255)
  1218     0036  1283               	bcf	3,5	;RP0=0, select bank0
  1219     0037  1303               	bcf	3,6	;RP1=0, select bank0
  1220     0038  00AC               	movwf	separar_digitos8@dig8
  1221     0039  087A               	movf	_temperatura,w
  1222     003A  120A  118A  22E7  120A  118A  	fcall	_separar_digitos8
  1223     003F  3023               	movlw	(low (_u_hum| 0))& (0+255)
  1224     0040  1283               	bcf	3,5	;RP0=0, select bank0
  1225     0041  1303               	bcf	3,6	;RP1=0, select bank0
  1226     0042  00AC               	movwf	separar_digitos8@dig8
  1227     0043  083D               	movf	_humedad+1,w
  1228     0044  120A  118A  22E7  120A  118A  	fcall	_separar_digitos8
  1229     0049  3020               	movlw	(low (_d_hum| 0))& (0+255)
  1230     004A  1283               	bcf	3,5	;RP0=0, select bank0
  1231     004B  1303               	bcf	3,6	;RP1=0, select bank0
  1232     004C  00AC               	movwf	separar_digitos8@dig8
  1233     004D  083C               	movf	_humedad,w
  1234     004E  120A  118A  22E7  120A  118A  	fcall	_separar_digitos8
  1235     0053                     l1486:
  1236     0053  01F6               	clrf	Lcd_Set_Cursor@b
  1237     0054  0AF6               	incf	Lcd_Set_Cursor@b,f
  1238     0055  3001               	movlw	1
  1239     0056  120A  118A  229B  120A  118A  	fcall	_Lcd_Set_Cursor
  1240     005B                     l1488:
  1241     005B  301B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1242     005C  00F7               	movwf	Lcd_Write_String@a
  1243     005D  3080               	movlw	128
  1244     005E  00F8               	movwf	Lcd_Write_String@a+1
  1245     005F  120A  118A  2332  120A  118A  	fcall	_Lcd_Write_String
  1246     0064                     l1490:
  1247     0064  3029               	movlw	(low (_u_temp| 0))& (0+255)
  1248     0065  00F7               	movwf	Lcd_Write_String@a
  1249     0066  3000               	movlw	0
  1250     0067  00F8               	movwf	Lcd_Write_String@a+1
  1251     0068  120A  118A  2332  120A  118A  	fcall	_Lcd_Write_String
  1252     006D                     l1492:
  1253     006D  302E               	movlw	46
  1254     006E  120A  118A  23AD  120A  118A  	fcall	_Lcd_Write_Char
  1255     0073  3026               	movlw	(low (_d_temp| 0))& (0+255)
  1256     0074  00F7               	movwf	Lcd_Write_String@a
  1257     0075  3000               	movlw	0
  1258     0076  00F8               	movwf	Lcd_Write_String@a+1
  1259     0077  120A  118A  2332  120A  118A  	fcall	_Lcd_Write_String
  1260     007C  3023               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1261     007D  00F7               	movwf	Lcd_Write_String@a
  1262     007E  3080               	movlw	128
  1263     007F  00F8               	movwf	Lcd_Write_String@a+1
  1264     0080  120A  118A  2332  120A  118A  	fcall	_Lcd_Write_String
  1265     0085                     l1494:
  1266     0085  01F6               	clrf	Lcd_Set_Cursor@b
  1267     0086  0AF6               	incf	Lcd_Set_Cursor@b,f
  1268     0087  3002               	movlw	2
  1269     0088  120A  118A  229B  120A  118A  	fcall	_Lcd_Set_Cursor
  1270     008D                     l1496:
  1271     008D  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1272     008E  00F7               	movwf	Lcd_Write_String@a
  1273     008F  3080               	movlw	128
  1274     0090  00F8               	movwf	Lcd_Write_String@a+1
  1275     0091  120A  118A  2332  120A  118A  	fcall	_Lcd_Write_String
  1276     0096                     l1498:
  1277     0096  3023               	movlw	(low (_u_hum| 0))& (0+255)
  1278     0097  00F7               	movwf	Lcd_Write_String@a
  1279     0098  3000               	movlw	0
  1280     0099  00F8               	movwf	Lcd_Write_String@a+1
  1281     009A  120A  118A  2332  120A  118A  	fcall	_Lcd_Write_String
  1282     009F                     l1500:
  1283     009F  302E               	movlw	46
  1284     00A0  120A  118A  23AD  120A  118A  	fcall	_Lcd_Write_Char
  1285     00A5  3020               	movlw	(low (_d_hum| 0))& (0+255)
  1286     00A6  00F7               	movwf	Lcd_Write_String@a
  1287     00A7  3000               	movlw	0
  1288     00A8  00F8               	movwf	Lcd_Write_String@a+1
  1289     00A9  120A  118A  2332  120A  118A  	fcall	_Lcd_Write_String
  1290     00AE  301F               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1291     00AF  00F7               	movwf	Lcd_Write_String@a
  1292     00B0  3080               	movlw	128
  1293     00B1  00F8               	movwf	Lcd_Write_String@a+1
  1294     00B2  120A  118A  2332  120A  118A  	fcall	_Lcd_Write_String
  1295     00B7                     l73:
  1296     00B7  0008               	return
  1297     00B8                     __end_of_LDC_output:
  1298                           
  1299                           	psect	text4
  1300     02E7                     __ptext4:	
  1301 ;; *************** function _separar_digitos8 *****************
  1302 ;; Defined at:
  1303 ;;		line 128 in file "slave_DHT11.c"
  1304 ;; Parameters:    Size  Location     Type
  1305 ;;  num             1    wreg     unsigned char 
  1306 ;;  dig8            1    0[BANK0 ] PTR unsigned char 
  1307 ;;		 -> d_hum(3), u_hum(3), d_temp(3), u_temp(3), 
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;  num             1    6[BANK0 ] unsigned char 
  1310 ;;  unidades        1    5[BANK0 ] unsigned char 
  1311 ;;  decenas         1    4[BANK0 ] unsigned char 
  1312 ;;  div1            1    3[BANK0 ] unsigned char 
  1313 ;; Return value:  Size  Location     Type
  1314 ;;                  1    wreg      void 
  1315 ;; Registers used:
  1316 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1317 ;; Tracked objects:
  1318 ;;		On entry : 0/0
  1319 ;;		On exit  : 0/0
  1320 ;;		Unchanged: 0/0
  1321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1322 ;;      Params:         0       1       0       0       0
  1323 ;;      Locals:         0       4       0       0       0
  1324 ;;      Temps:          0       2       0       0       0
  1325 ;;      Totals:         0       7       0       0       0
  1326 ;;Total ram usage:        7 bytes
  1327 ;; Hardware stack levels used: 1
  1328 ;; Hardware stack levels required when called: 2
  1329 ;; This function calls:
  1330 ;;		___awdiv
  1331 ;;		___awmod
  1332 ;; This function is called by:
  1333 ;;		_LDC_output
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337     02E7                     _separar_digitos8:	
  1338                           ;psect for function _separar_digitos8
  1339                           
  1340                           
  1341                           ;incstack = 0
  1342                           ; Regs used in _separar_digitos8: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1343                           ;separar_digitos8@num stored from wreg
  1344     02E7  1283               	bcf	3,5	;RP0=0, select bank0
  1345     02E8  1303               	bcf	3,6	;RP1=0, select bank0
  1346     02E9  00B2               	movwf	separar_digitos8@num
  1347     02EA                     l1406:
  1348     02EA  300A               	movlw	10
  1349     02EB  00F2               	movwf	___awdiv@divisor
  1350     02EC  3000               	movlw	0
  1351     02ED  00F3               	movwf	___awdiv@divisor+1
  1352     02EE  0832               	movf	separar_digitos8@num,w
  1353     02EF  00AD               	movwf	??_separar_digitos8
  1354     02F0  01AE               	clrf	??_separar_digitos8+1
  1355     02F1  082D               	movf	??_separar_digitos8,w
  1356     02F2  00F4               	movwf	___awdiv@dividend
  1357     02F3  082E               	movf	??_separar_digitos8+1,w
  1358     02F4  00F5               	movwf	___awdiv@dividend+1
  1359     02F5  120A  118A  212F  120A  118A  	fcall	___awdiv
  1360     02FA  0872               	movf	?___awdiv,w
  1361     02FB  1283               	bcf	3,5	;RP0=0, select bank0
  1362     02FC  1303               	bcf	3,6	;RP1=0, select bank0
  1363     02FD  00AF               	movwf	separar_digitos8@div1
  1364     02FE  300A               	movlw	10
  1365     02FF  00F2               	movwf	___awmod@divisor
  1366     0300  3000               	movlw	0
  1367     0301  00F3               	movwf	___awmod@divisor+1
  1368     0302  0832               	movf	separar_digitos8@num,w
  1369     0303  00AD               	movwf	??_separar_digitos8
  1370     0304  01AE               	clrf	??_separar_digitos8+1
  1371     0305  082D               	movf	??_separar_digitos8,w
  1372     0306  00F4               	movwf	___awmod@dividend
  1373     0307  082E               	movf	??_separar_digitos8+1,w
  1374     0308  00F5               	movwf	___awmod@dividend+1
  1375     0309  120A  118A  21F3  120A  118A  	fcall	___awmod
  1376     030E  0872               	movf	?___awmod,w
  1377     030F  1283               	bcf	3,5	;RP0=0, select bank0
  1378     0310  1303               	bcf	3,6	;RP1=0, select bank0
  1379     0311  00B1               	movwf	separar_digitos8@unidades
  1380     0312  300A               	movlw	10
  1381     0313  00F2               	movwf	___awmod@divisor
  1382     0314  3000               	movlw	0
  1383     0315  00F3               	movwf	___awmod@divisor+1
  1384     0316  082F               	movf	separar_digitos8@div1,w
  1385     0317  00AD               	movwf	??_separar_digitos8
  1386     0318  01AE               	clrf	??_separar_digitos8+1
  1387     0319  082D               	movf	??_separar_digitos8,w
  1388     031A  00F4               	movwf	___awmod@dividend
  1389     031B  082E               	movf	??_separar_digitos8+1,w
  1390     031C  00F5               	movwf	___awmod@dividend+1
  1391     031D  120A  118A  21F3  120A  118A  	fcall	___awmod
  1392     0322  0872               	movf	?___awmod,w
  1393     0323  1283               	bcf	3,5	;RP0=0, select bank0
  1394     0324  1303               	bcf	3,6	;RP1=0, select bank0
  1395     0325  00B0               	movwf	separar_digitos8@decenas
  1396     0326                     l1408:
  1397     0326  0A2C               	incf	separar_digitos8@dig8,w
  1398     0327  0084               	movwf	4
  1399     0328  0831               	movf	separar_digitos8@unidades,w
  1400     0329  3E30               	addlw	48
  1401     032A  1383               	bcf	3,7	;select IRP bank0
  1402     032B  0080               	movwf	0
  1403     032C                     l1410:
  1404     032C  082C               	movf	separar_digitos8@dig8,w
  1405     032D  0084               	movwf	4
  1406     032E  0830               	movf	separar_digitos8@decenas,w
  1407     032F  3E30               	addlw	48
  1408     0330  0080               	movwf	0
  1409     0331                     l76:
  1410     0331  0008               	return
  1411     0332                     __end_of_separar_digitos8:
  1412                           
  1413                           	psect	text5
  1414     01F3                     __ptext5:	
  1415 ;; *************** function ___awmod *****************
  1416 ;; Defined at:
  1417 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  1418 ;; Parameters:    Size  Location     Type
  1419 ;;  divisor         2    2[COMMON] int 
  1420 ;;  dividend        2    4[COMMON] int 
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;  sign            1    7[COMMON] unsigned char 
  1423 ;;  counter         1    6[COMMON] unsigned char 
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  2    2[COMMON] int 
  1426 ;; Registers used:
  1427 ;;		wreg, status,2, status,0, btemp+1
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1433 ;;      Params:         4       0       0       0       0
  1434 ;;      Locals:         2       0       0       0       0
  1435 ;;      Temps:          0       0       0       0       0
  1436 ;;      Totals:         6       0       0       0       0
  1437 ;;Total ram usage:        6 bytes
  1438 ;; Hardware stack levels used: 1
  1439 ;; Hardware stack levels required when called: 1
  1440 ;; This function calls:
  1441 ;;		Nothing
  1442 ;; This function is called by:
  1443 ;;		_separar_digitos8
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447     01F3                     ___awmod:	
  1448                           ;psect for function ___awmod
  1449                           
  1450     01F3                     l1130:	
  1451                           ;incstack = 0
  1452                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  1453                           
  1454     01F3  01F7               	clrf	___awmod@sign
  1455     01F4                     l1132:
  1456     01F4  1FF5               	btfss	___awmod@dividend+1,7
  1457     01F5  29F7               	goto	u581
  1458     01F6  29F8               	goto	u580
  1459     01F7                     u581:
  1460     01F7  29FF               	goto	l1138
  1461     01F8                     u580:
  1462     01F8                     l1134:
  1463     01F8  09F4               	comf	___awmod@dividend,f
  1464     01F9  09F5               	comf	___awmod@dividend+1,f
  1465     01FA  0AF4               	incf	___awmod@dividend,f
  1466     01FB  1903               	skipnz
  1467     01FC  0AF5               	incf	___awmod@dividend+1,f
  1468     01FD                     l1136:
  1469     01FD  01F7               	clrf	___awmod@sign
  1470     01FE  0AF7               	incf	___awmod@sign,f
  1471     01FF                     l1138:
  1472     01FF  1FF3               	btfss	___awmod@divisor+1,7
  1473     0200  2A02               	goto	u591
  1474     0201  2A03               	goto	u590
  1475     0202                     u591:
  1476     0202  2A08               	goto	l1142
  1477     0203                     u590:
  1478     0203                     l1140:
  1479     0203  09F2               	comf	___awmod@divisor,f
  1480     0204  09F3               	comf	___awmod@divisor+1,f
  1481     0205  0AF2               	incf	___awmod@divisor,f
  1482     0206  1903               	skipnz
  1483     0207  0AF3               	incf	___awmod@divisor+1,f
  1484     0208                     l1142:
  1485     0208  0872               	movf	___awmod@divisor,w
  1486     0209  0473               	iorwf	___awmod@divisor+1,w
  1487     020A  1903               	btfsc	3,2
  1488     020B  2A0D               	goto	u601
  1489     020C  2A0E               	goto	u600
  1490     020D                     u601:
  1491     020D  2A3D               	goto	l1160
  1492     020E                     u600:
  1493     020E                     l1144:
  1494     020E  01F6               	clrf	___awmod@counter
  1495     020F  0AF6               	incf	___awmod@counter,f
  1496     0210  2A1C               	goto	l1150
  1497     0211                     l1146:
  1498     0211  3001               	movlw	1
  1499     0212                     u615:
  1500     0212  1003               	clrc
  1501     0213  0DF2               	rlf	___awmod@divisor,f
  1502     0214  0DF3               	rlf	___awmod@divisor+1,f
  1503     0215  3EFF               	addlw	-1
  1504     0216  1D03               	skipz
  1505     0217  2A12               	goto	u615
  1506     0218                     l1148:
  1507     0218  3001               	movlw	1
  1508     0219  00FF               	movwf	btemp+1
  1509     021A  087F               	movf	btemp+1,w
  1510     021B  07F6               	addwf	___awmod@counter,f
  1511     021C                     l1150:
  1512     021C  1FF3               	btfss	___awmod@divisor+1,7
  1513     021D  2A1F               	goto	u621
  1514     021E  2A20               	goto	u620
  1515     021F                     u621:
  1516     021F  2A11               	goto	l1146
  1517     0220                     u620:
  1518     0220                     l1152:
  1519     0220  0873               	movf	___awmod@divisor+1,w
  1520     0221  0275               	subwf	___awmod@dividend+1,w
  1521     0222  1D03               	skipz
  1522     0223  2A26               	goto	u635
  1523     0224  0872               	movf	___awmod@divisor,w
  1524     0225  0274               	subwf	___awmod@dividend,w
  1525     0226                     u635:
  1526     0226  1C03               	skipc
  1527     0227  2A29               	goto	u631
  1528     0228  2A2A               	goto	u630
  1529     0229                     u631:
  1530     0229  2A30               	goto	l1156
  1531     022A                     u630:
  1532     022A                     l1154:
  1533     022A  0872               	movf	___awmod@divisor,w
  1534     022B  02F4               	subwf	___awmod@dividend,f
  1535     022C  0873               	movf	___awmod@divisor+1,w
  1536     022D  1C03               	skipc
  1537     022E  03F5               	decf	___awmod@dividend+1,f
  1538     022F  02F5               	subwf	___awmod@dividend+1,f
  1539     0230                     l1156:
  1540     0230  3001               	movlw	1
  1541     0231                     u645:
  1542     0231  1003               	clrc
  1543     0232  0CF3               	rrf	___awmod@divisor+1,f
  1544     0233  0CF2               	rrf	___awmod@divisor,f
  1545     0234  3EFF               	addlw	-1
  1546     0235  1D03               	skipz
  1547     0236  2A31               	goto	u645
  1548     0237                     l1158:
  1549     0237  3001               	movlw	1
  1550     0238  02F6               	subwf	___awmod@counter,f
  1551     0239  1D03               	btfss	3,2
  1552     023A  2A3C               	goto	u651
  1553     023B  2A3D               	goto	u650
  1554     023C                     u651:
  1555     023C  2A20               	goto	l1152
  1556     023D                     u650:
  1557     023D                     l1160:
  1558     023D  0877               	movf	___awmod@sign,w
  1559     023E  1903               	btfsc	3,2
  1560     023F  2A41               	goto	u661
  1561     0240  2A42               	goto	u660
  1562     0241                     u661:
  1563     0241  2A47               	goto	l1164
  1564     0242                     u660:
  1565     0242                     l1162:
  1566     0242  09F4               	comf	___awmod@dividend,f
  1567     0243  09F5               	comf	___awmod@dividend+1,f
  1568     0244  0AF4               	incf	___awmod@dividend,f
  1569     0245  1903               	skipnz
  1570     0246  0AF5               	incf	___awmod@dividend+1,f
  1571     0247                     l1164:
  1572     0247  0875               	movf	___awmod@dividend+1,w
  1573     0248  00F3               	movwf	?___awmod+1
  1574     0249  0874               	movf	___awmod@dividend,w
  1575     024A  00F2               	movwf	?___awmod
  1576     024B                     l424:
  1577     024B  0008               	return
  1578     024C                     __end_of___awmod:
  1579                           
  1580                           	psect	text6
  1581     012F                     __ptext6:	
  1582 ;; *************** function ___awdiv *****************
  1583 ;; Defined at:
  1584 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;  divisor         2    2[COMMON] int 
  1587 ;;  dividend        2    4[COMMON] int 
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;  quotient        2    8[COMMON] int 
  1590 ;;  sign            1    7[COMMON] unsigned char 
  1591 ;;  counter         1    6[COMMON] unsigned char 
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  2    2[COMMON] int 
  1594 ;; Registers used:
  1595 ;;		wreg, status,2, status,0, btemp+1
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1601 ;;      Params:         4       0       0       0       0
  1602 ;;      Locals:         4       0       0       0       0
  1603 ;;      Temps:          0       0       0       0       0
  1604 ;;      Totals:         8       0       0       0       0
  1605 ;;Total ram usage:        8 bytes
  1606 ;; Hardware stack levels used: 1
  1607 ;; Hardware stack levels required when called: 1
  1608 ;; This function calls:
  1609 ;;		Nothing
  1610 ;; This function is called by:
  1611 ;;		_separar_digitos8
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           
  1615     012F                     ___awdiv:	
  1616                           ;psect for function ___awdiv
  1617                           
  1618     012F                     l1086:	
  1619                           ;incstack = 0
  1620                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  1621                           
  1622     012F  01F7               	clrf	___awdiv@sign
  1623     0130                     l1088:
  1624     0130  1FF3               	btfss	___awdiv@divisor+1,7
  1625     0131  2933               	goto	u481
  1626     0132  2934               	goto	u480
  1627     0133                     u481:
  1628     0133  293B               	goto	l1094
  1629     0134                     u480:
  1630     0134                     l1090:
  1631     0134  09F2               	comf	___awdiv@divisor,f
  1632     0135  09F3               	comf	___awdiv@divisor+1,f
  1633     0136  0AF2               	incf	___awdiv@divisor,f
  1634     0137  1903               	skipnz
  1635     0138  0AF3               	incf	___awdiv@divisor+1,f
  1636     0139                     l1092:
  1637     0139  01F7               	clrf	___awdiv@sign
  1638     013A  0AF7               	incf	___awdiv@sign,f
  1639     013B                     l1094:
  1640     013B  1FF5               	btfss	___awdiv@dividend+1,7
  1641     013C  293E               	goto	u491
  1642     013D  293F               	goto	u490
  1643     013E                     u491:
  1644     013E  2948               	goto	l1100
  1645     013F                     u490:
  1646     013F                     l1096:
  1647     013F  09F4               	comf	___awdiv@dividend,f
  1648     0140  09F5               	comf	___awdiv@dividend+1,f
  1649     0141  0AF4               	incf	___awdiv@dividend,f
  1650     0142  1903               	skipnz
  1651     0143  0AF5               	incf	___awdiv@dividend+1,f
  1652     0144                     l1098:
  1653     0144  3001               	movlw	1
  1654     0145  00FF               	movwf	btemp+1
  1655     0146  087F               	movf	btemp+1,w
  1656     0147  06F7               	xorwf	___awdiv@sign,f
  1657     0148                     l1100:
  1658     0148  01F8               	clrf	___awdiv@quotient
  1659     0149  01F9               	clrf	___awdiv@quotient+1
  1660     014A                     l1102:
  1661     014A  0872               	movf	___awdiv@divisor,w
  1662     014B  0473               	iorwf	___awdiv@divisor+1,w
  1663     014C  1903               	btfsc	3,2
  1664     014D  294F               	goto	u501
  1665     014E  2950               	goto	u500
  1666     014F                     u501:
  1667     014F  2987               	goto	l1122
  1668     0150                     u500:
  1669     0150                     l1104:
  1670     0150  01F6               	clrf	___awdiv@counter
  1671     0151  0AF6               	incf	___awdiv@counter,f
  1672     0152  295E               	goto	l1110
  1673     0153                     l1106:
  1674     0153  3001               	movlw	1
  1675     0154                     u515:
  1676     0154  1003               	clrc
  1677     0155  0DF2               	rlf	___awdiv@divisor,f
  1678     0156  0DF3               	rlf	___awdiv@divisor+1,f
  1679     0157  3EFF               	addlw	-1
  1680     0158  1D03               	skipz
  1681     0159  2954               	goto	u515
  1682     015A                     l1108:
  1683     015A  3001               	movlw	1
  1684     015B  00FF               	movwf	btemp+1
  1685     015C  087F               	movf	btemp+1,w
  1686     015D  07F6               	addwf	___awdiv@counter,f
  1687     015E                     l1110:
  1688     015E  1FF3               	btfss	___awdiv@divisor+1,7
  1689     015F  2961               	goto	u521
  1690     0160  2962               	goto	u520
  1691     0161                     u521:
  1692     0161  2953               	goto	l1106
  1693     0162                     u520:
  1694     0162                     l1112:
  1695     0162  3001               	movlw	1
  1696     0163                     u535:
  1697     0163  1003               	clrc
  1698     0164  0DF8               	rlf	___awdiv@quotient,f
  1699     0165  0DF9               	rlf	___awdiv@quotient+1,f
  1700     0166  3EFF               	addlw	-1
  1701     0167  1D03               	skipz
  1702     0168  2963               	goto	u535
  1703     0169  0873               	movf	___awdiv@divisor+1,w
  1704     016A  0275               	subwf	___awdiv@dividend+1,w
  1705     016B  1D03               	skipz
  1706     016C  296F               	goto	u545
  1707     016D  0872               	movf	___awdiv@divisor,w
  1708     016E  0274               	subwf	___awdiv@dividend,w
  1709     016F                     u545:
  1710     016F  1C03               	skipc
  1711     0170  2972               	goto	u541
  1712     0171  2973               	goto	u540
  1713     0172                     u541:
  1714     0172  297A               	goto	l1118
  1715     0173                     u540:
  1716     0173                     l1114:
  1717     0173  0872               	movf	___awdiv@divisor,w
  1718     0174  02F4               	subwf	___awdiv@dividend,f
  1719     0175  0873               	movf	___awdiv@divisor+1,w
  1720     0176  1C03               	skipc
  1721     0177  03F5               	decf	___awdiv@dividend+1,f
  1722     0178  02F5               	subwf	___awdiv@dividend+1,f
  1723     0179                     l1116:
  1724     0179  1478               	bsf	___awdiv@quotient,0
  1725     017A                     l1118:
  1726     017A  3001               	movlw	1
  1727     017B                     u555:
  1728     017B  1003               	clrc
  1729     017C  0CF3               	rrf	___awdiv@divisor+1,f
  1730     017D  0CF2               	rrf	___awdiv@divisor,f
  1731     017E  3EFF               	addlw	-1
  1732     017F  1D03               	skipz
  1733     0180  297B               	goto	u555
  1734     0181                     l1120:
  1735     0181  3001               	movlw	1
  1736     0182  02F6               	subwf	___awdiv@counter,f
  1737     0183  1D03               	btfss	3,2
  1738     0184  2986               	goto	u561
  1739     0185  2987               	goto	u560
  1740     0186                     u561:
  1741     0186  2962               	goto	l1112
  1742     0187                     u560:
  1743     0187                     l1122:
  1744     0187  0877               	movf	___awdiv@sign,w
  1745     0188  1903               	btfsc	3,2
  1746     0189  298B               	goto	u571
  1747     018A  298C               	goto	u570
  1748     018B                     u571:
  1749     018B  2991               	goto	l1126
  1750     018C                     u570:
  1751     018C                     l1124:
  1752     018C  09F8               	comf	___awdiv@quotient,f
  1753     018D  09F9               	comf	___awdiv@quotient+1,f
  1754     018E  0AF8               	incf	___awdiv@quotient,f
  1755     018F  1903               	skipnz
  1756     0190  0AF9               	incf	___awdiv@quotient+1,f
  1757     0191                     l1126:
  1758     0191  0879               	movf	___awdiv@quotient+1,w
  1759     0192  00F3               	movwf	?___awdiv+1
  1760     0193  0878               	movf	___awdiv@quotient,w
  1761     0194  00F2               	movwf	?___awdiv
  1762     0195                     l411:
  1763     0195  0008               	return
  1764     0196                     __end_of___awdiv:
  1765                           
  1766                           	psect	text7
  1767     0332                     __ptext7:	
  1768 ;; *************** function _Lcd_Write_String *****************
  1769 ;; Defined at:
  1770 ;;		line 98 in file "LCD4b.c"
  1771 ;; Parameters:    Size  Location     Type
  1772 ;;  a               2    7[COMMON] PTR unsigned char 
  1773 ;;		 -> STR_5(4), STR_4(4), STR_3(3), STR_2(4), 
  1774 ;;		 -> d_hum(3), u_hum(3), d_temp(3), u_temp(3), 
  1775 ;;		 -> STR_1(22), 
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;  i               2    3[BANK0 ] int 
  1778 ;; Return value:  Size  Location     Type
  1779 ;;                  1    wreg      void 
  1780 ;; Registers used:
  1781 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1787 ;;      Params:         2       0       0       0       0
  1788 ;;      Locals:         0       2       0       0       0
  1789 ;;      Temps:          0       3       0       0       0
  1790 ;;      Totals:         2       5       0       0       0
  1791 ;;Total ram usage:        7 bytes
  1792 ;; Hardware stack levels used: 1
  1793 ;; Hardware stack levels required when called: 3
  1794 ;; This function calls:
  1795 ;;		_Lcd_Write_Char
  1796 ;; This function is called by:
  1797 ;;		_main
  1798 ;;		_LDC_output
  1799 ;; This function uses a non-reentrant model
  1800 ;;
  1801                           
  1802     0332                     _Lcd_Write_String:	
  1803                           ;psect for function _Lcd_Write_String
  1804                           
  1805     0332                     l1388:	
  1806                           ;incstack = 0
  1807                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1808                           
  1809                           
  1810                           ;LCD4b.c: 99:     int i;;LCD4b.c: 100:     for (i = 0; a[i] != '\0'; i++)
  1811     0332  1283               	bcf	3,5	;RP0=0, select bank0
  1812     0333  1303               	bcf	3,6	;RP1=0, select bank0
  1813     0334  01AF               	clrf	Lcd_Write_String@i
  1814     0335  01B0               	clrf	Lcd_Write_String@i+1
  1815     0336  2B5B               	goto	l1394
  1816     0337                     l1390:
  1817                           
  1818                           ;LCD4b.c: 101:         Lcd_Write_Char(a[i]);
  1819     0337  082F               	movf	Lcd_Write_String@i,w
  1820     0338  0777               	addwf	Lcd_Write_String@a,w
  1821     0339  00AD               	movwf	??_Lcd_Write_String+1
  1822     033A  0878               	movf	Lcd_Write_String@a+1,w
  1823     033B  00AC               	movwf	??_Lcd_Write_String
  1824     033C  1803               	skipnc
  1825     033D  0AAC               	incf	??_Lcd_Write_String,f
  1826     033E  1FAF               	btfss	Lcd_Write_String@i,7
  1827     033F  2B41               	goto	u940
  1828     0340  03AC               	decf	??_Lcd_Write_String,f
  1829     0341                     u940:
  1830     0341  1283               	bcf	3,5	;RP0=0, select bank0
  1831     0342  1303               	bcf	3,6	;RP1=0, select bank0
  1832     0343  082C               	movf	??_Lcd_Write_String,w
  1833     0344  00AE               	movwf	??_Lcd_Write_String+2
  1834     0345  082E               	movf	??_Lcd_Write_String+2,w
  1835     0346  00FF               	movwf	btemp+1
  1836     0347  082D               	movf	??_Lcd_Write_String+1,w
  1837     0348  0084               	movwf	4
  1838     0349  120A  118A  2378  120A  118A  	fcall	stringtab
  1839     034E  120A  118A  23AD  120A  118A  	fcall	_Lcd_Write_Char
  1840     0353                     l1392:
  1841     0353  3001               	movlw	1
  1842     0354  1283               	bcf	3,5	;RP0=0, select bank0
  1843     0355  1303               	bcf	3,6	;RP1=0, select bank0
  1844     0356  07AF               	addwf	Lcd_Write_String@i,f
  1845     0357  1803               	skipnc
  1846     0358  0AB0               	incf	Lcd_Write_String@i+1,f
  1847     0359  3000               	movlw	0
  1848     035A  07B0               	addwf	Lcd_Write_String@i+1,f
  1849     035B                     l1394:
  1850     035B  082F               	movf	Lcd_Write_String@i,w
  1851     035C  0777               	addwf	Lcd_Write_String@a,w
  1852     035D  00AD               	movwf	??_Lcd_Write_String+1
  1853     035E  0878               	movf	Lcd_Write_String@a+1,w
  1854     035F  00AC               	movwf	??_Lcd_Write_String
  1855     0360  1803               	skipnc
  1856     0361  0AAC               	incf	??_Lcd_Write_String,f
  1857     0362  1FAF               	btfss	Lcd_Write_String@i,7
  1858     0363  2B65               	goto	u950
  1859     0364  03AC               	decf	??_Lcd_Write_String,f
  1860     0365                     u950:
  1861     0365  1283               	bcf	3,5	;RP0=0, select bank0
  1862     0366  1303               	bcf	3,6	;RP1=0, select bank0
  1863     0367  082C               	movf	??_Lcd_Write_String,w
  1864     0368  00AE               	movwf	??_Lcd_Write_String+2
  1865     0369  082E               	movf	??_Lcd_Write_String+2,w
  1866     036A  00FF               	movwf	btemp+1
  1867     036B  082D               	movf	??_Lcd_Write_String+1,w
  1868     036C  0084               	movwf	4
  1869     036D  120A  118A  2378  120A  118A  	fcall	stringtab
  1870     0372  3A00               	xorlw	0
  1871     0373  1D03               	skipz
  1872     0374  2B76               	goto	u961
  1873     0375  2B77               	goto	u960
  1874     0376                     u961:
  1875     0376  2B37               	goto	l1390
  1876     0377                     u960:
  1877     0377                     l125:
  1878     0377  0008               	return
  1879     0378                     __end_of_Lcd_Write_String:
  1880                           
  1881                           	psect	text8
  1882     03AD                     __ptext8:	
  1883 ;; *************** function _Lcd_Write_Char *****************
  1884 ;; Defined at:
  1885 ;;		line 83 in file "LCD4b.c"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;  a               1    wreg     unsigned char 
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;  a               1    6[COMMON] unsigned char 
  1890 ;;  y               1    5[COMMON] unsigned char 
  1891 ;;  temp            1    4[COMMON] unsigned char 
  1892 ;; Return value:  Size  Location     Type
  1893 ;;                  1    wreg      void 
  1894 ;; Registers used:
  1895 ;;		wreg, status,2, status,0, pclath, cstack
  1896 ;; Tracked objects:
  1897 ;;		On entry : 0/0
  1898 ;;		On exit  : 0/0
  1899 ;;		Unchanged: 0/0
  1900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1901 ;;      Params:         0       0       0       0       0
  1902 ;;      Locals:         3       0       0       0       0
  1903 ;;      Temps:          1       0       0       0       0
  1904 ;;      Totals:         4       0       0       0       0
  1905 ;;Total ram usage:        4 bytes
  1906 ;; Hardware stack levels used: 1
  1907 ;; Hardware stack levels required when called: 2
  1908 ;; This function calls:
  1909 ;;		_Lcd_Port
  1910 ;; This function is called by:
  1911 ;;		_LDC_output
  1912 ;;		_Lcd_Write_String
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916     03AD                     _Lcd_Write_Char:	
  1917                           ;psect for function _Lcd_Write_Char
  1918                           
  1919                           
  1920                           ;incstack = 0
  1921                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1922                           ;Lcd_Write_Char@a stored from wreg
  1923     03AD  00F6               	movwf	Lcd_Write_Char@a
  1924     03AE                     l1338:
  1925                           
  1926                           ;LCD4b.c: 84:     char temp, y;;LCD4b.c: 85:     temp = a & 0x0F;
  1927     03AE  0876               	movf	Lcd_Write_Char@a,w
  1928     03AF  390F               	andlw	15
  1929     03B0  00F4               	movwf	Lcd_Write_Char@temp
  1930                           
  1931                           ;LCD4b.c: 86:     y = a & 0xF0;
  1932     03B1  0876               	movf	Lcd_Write_Char@a,w
  1933     03B2  39F0               	andlw	240
  1934     03B3  00F5               	movwf	Lcd_Write_Char@y
  1935     03B4                     l1340:
  1936                           
  1937                           ;LCD4b.c: 87:     PORTDbits.RD2 = 1;
  1938     03B4  1283               	bcf	3,5	;RP0=0, select bank0
  1939     03B5  1303               	bcf	3,6	;RP1=0, select bank0
  1940     03B6  1508               	bsf	8,2	;volatile
  1941     03B7                     l1342:
  1942                           
  1943                           ;LCD4b.c: 88:     Lcd_Port(y >> 4);
  1944     03B7  0875               	movf	Lcd_Write_Char@y,w
  1945     03B8  00F3               	movwf	??_Lcd_Write_Char
  1946     03B9  3004               	movlw	4
  1947     03BA                     u895:
  1948     03BA  1003               	clrc
  1949     03BB  0CF3               	rrf	??_Lcd_Write_Char,f
  1950     03BC  3EFF               	addlw	-1
  1951     03BD  1D03               	skipz
  1952     03BE  2BBA               	goto	u895
  1953     03BF  0873               	movf	??_Lcd_Write_Char,w
  1954     03C0  120A  118A  2437  120A  118A  	fcall	_Lcd_Port
  1955     03C5                     l1344:
  1956                           
  1957                           ;LCD4b.c: 89:     RD3 = 1;
  1958     03C5  1283               	bcf	3,5	;RP0=0, select bank0
  1959     03C6  1303               	bcf	3,6	;RP1=0, select bank0
  1960     03C7  1588               	bsf	8,3	;volatile
  1961     03C8                     l1346:
  1962                           
  1963                           ;LCD4b.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1964     03C8  301A               	movlw	26
  1965     03C9  00F3               	movwf	??_Lcd_Write_Char
  1966     03CA                     u1147:
  1967     03CA  0BF3               	decfsz	??_Lcd_Write_Char,f
  1968     03CB  2BCA               	goto	u1147
  1969     03CC  0000               	nop
  1970     03CD                     l1348:
  1971                           
  1972                           ;LCD4b.c: 91:     RD3 = 0;
  1973     03CD  1283               	bcf	3,5	;RP0=0, select bank0
  1974     03CE  1303               	bcf	3,6	;RP1=0, select bank0
  1975     03CF  1188               	bcf	8,3	;volatile
  1976     03D0                     l1350:
  1977                           
  1978                           ;LCD4b.c: 92:     Lcd_Port(temp);
  1979     03D0  0874               	movf	Lcd_Write_Char@temp,w
  1980     03D1  120A  118A  2437  120A  118A  	fcall	_Lcd_Port
  1981     03D6                     l1352:
  1982                           
  1983                           ;LCD4b.c: 93:     RD3 = 1;
  1984     03D6  1283               	bcf	3,5	;RP0=0, select bank0
  1985     03D7  1303               	bcf	3,6	;RP1=0, select bank0
  1986     03D8  1588               	bsf	8,3	;volatile
  1987     03D9                     l1354:
  1988                           
  1989                           ;LCD4b.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1990     03D9  301A               	movlw	26
  1991     03DA  00F3               	movwf	??_Lcd_Write_Char
  1992     03DB                     u1157:
  1993     03DB  0BF3               	decfsz	??_Lcd_Write_Char,f
  1994     03DC  2BDB               	goto	u1157
  1995     03DD  0000               	nop
  1996     03DE                     l1356:
  1997                           
  1998                           ;LCD4b.c: 95:     RD3 = 0;
  1999     03DE  1283               	bcf	3,5	;RP0=0, select bank0
  2000     03DF  1303               	bcf	3,6	;RP1=0, select bank0
  2001     03E0  1188               	bcf	8,3	;volatile
  2002     03E1                     l119:
  2003     03E1  0008               	return
  2004     03E2                     __end_of_Lcd_Write_Char:
  2005                           
  2006                           	psect	text9
  2007     029B                     __ptext9:	
  2008 ;; *************** function _Lcd_Set_Cursor *****************
  2009 ;; Defined at:
  2010 ;;		line 48 in file "LCD4b.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;  a               1    wreg     unsigned char 
  2013 ;;  b               1    6[COMMON] unsigned char 
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;  a               1    0[BANK0 ] unsigned char 
  2016 ;;  temp            1    3[BANK0 ] unsigned char 
  2017 ;;  y               1    2[BANK0 ] unsigned char 
  2018 ;;  z               1    1[BANK0 ] unsigned char 
  2019 ;; Return value:  Size  Location     Type
  2020 ;;                  1    wreg      void 
  2021 ;; Registers used:
  2022 ;;		wreg, status,2, status,0, pclath, cstack
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2028 ;;      Params:         1       0       0       0       0
  2029 ;;      Locals:         0       4       0       0       0
  2030 ;;      Temps:          1       0       0       0       0
  2031 ;;      Totals:         2       4       0       0       0
  2032 ;;Total ram usage:        6 bytes
  2033 ;; Hardware stack levels used: 1
  2034 ;; Hardware stack levels required when called: 3
  2035 ;; This function calls:
  2036 ;;		_Lcd_Cmd
  2037 ;; This function is called by:
  2038 ;;		_main
  2039 ;;		_LDC_output
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043     029B                     _Lcd_Set_Cursor:	
  2044                           ;psect for function _Lcd_Set_Cursor
  2045                           
  2046                           
  2047                           ;incstack = 0
  2048                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2049                           ;Lcd_Set_Cursor@a stored from wreg
  2050     029B  1283               	bcf	3,5	;RP0=0, select bank0
  2051     029C  1303               	bcf	3,6	;RP1=0, select bank0
  2052     029D  00AC               	movwf	Lcd_Set_Cursor@a
  2053     029E                     l1368:
  2054                           
  2055                           ;LCD4b.c: 49:     char temp, z, y;;LCD4b.c: 50:     if (a == 1) {
  2056     029E  032C               	decf	Lcd_Set_Cursor@a,w
  2057     029F  1D03               	btfss	3,2
  2058     02A0  2AA2               	goto	u901
  2059     02A1  2AA3               	goto	u900
  2060     02A2                     u901:
  2061     02A2  2AC2               	goto	l1378
  2062     02A3                     u900:
  2063     02A3                     l1370:
  2064                           
  2065                           ;LCD4b.c: 51:         temp = 0x80 + b - 1;
  2066     02A3  0876               	movf	Lcd_Set_Cursor@b,w
  2067     02A4  3E7F               	addlw	127
  2068     02A5  00AF               	movwf	Lcd_Set_Cursor@temp
  2069                           
  2070                           ;LCD4b.c: 52:         z = temp >> 4;
  2071     02A6  082F               	movf	Lcd_Set_Cursor@temp,w
  2072     02A7  00F7               	movwf	??_Lcd_Set_Cursor
  2073     02A8  3004               	movlw	4
  2074     02A9                     u915:
  2075     02A9  1003               	clrc
  2076     02AA  0CF7               	rrf	??_Lcd_Set_Cursor,f
  2077     02AB  3EFF               	addlw	-1
  2078     02AC  1D03               	skipz
  2079     02AD  2AA9               	goto	u915
  2080     02AE  0877               	movf	??_Lcd_Set_Cursor,w
  2081     02AF  00AD               	movwf	Lcd_Set_Cursor@z
  2082     02B0                     l1372:
  2083                           
  2084                           ;LCD4b.c: 53:         y = temp & 0x0F;
  2085     02B0  082F               	movf	Lcd_Set_Cursor@temp,w
  2086     02B1  390F               	andlw	15
  2087     02B2  00AE               	movwf	Lcd_Set_Cursor@y
  2088     02B3                     l1374:
  2089                           
  2090                           ;LCD4b.c: 54:         Lcd_Cmd(z);
  2091     02B3  082D               	movf	Lcd_Set_Cursor@z,w
  2092     02B4  120A  118A  2459  120A  118A  	fcall	_Lcd_Cmd
  2093     02B9                     l1376:
  2094                           
  2095                           ;LCD4b.c: 55:         Lcd_Cmd(y);
  2096     02B9  1283               	bcf	3,5	;RP0=0, select bank0
  2097     02BA  1303               	bcf	3,6	;RP1=0, select bank0
  2098     02BB  082E               	movf	Lcd_Set_Cursor@y,w
  2099     02BC  120A  118A  2459  120A  118A  	fcall	_Lcd_Cmd
  2100                           
  2101                           ;LCD4b.c: 56:     } else if (a == 2) {
  2102     02C1  2AE6               	goto	l113
  2103     02C2                     l1378:
  2104     02C2  3002               	movlw	2
  2105     02C3  062C               	xorwf	Lcd_Set_Cursor@a,w
  2106     02C4  1D03               	btfss	3,2
  2107     02C5  2AC7               	goto	u921
  2108     02C6  2AC8               	goto	u920
  2109     02C7                     u921:
  2110     02C7  2AE6               	goto	l113
  2111     02C8                     u920:
  2112     02C8                     l1380:
  2113                           
  2114                           ;LCD4b.c: 57:         temp = 0xC0 + b - 1;
  2115     02C8  0876               	movf	Lcd_Set_Cursor@b,w
  2116     02C9  3EBF               	addlw	191
  2117     02CA  00AF               	movwf	Lcd_Set_Cursor@temp
  2118                           
  2119                           ;LCD4b.c: 58:         z = temp >> 4;
  2120     02CB  082F               	movf	Lcd_Set_Cursor@temp,w
  2121     02CC  00F7               	movwf	??_Lcd_Set_Cursor
  2122     02CD  3004               	movlw	4
  2123     02CE                     u935:
  2124     02CE  1003               	clrc
  2125     02CF  0CF7               	rrf	??_Lcd_Set_Cursor,f
  2126     02D0  3EFF               	addlw	-1
  2127     02D1  1D03               	skipz
  2128     02D2  2ACE               	goto	u935
  2129     02D3  0877               	movf	??_Lcd_Set_Cursor,w
  2130     02D4  00AD               	movwf	Lcd_Set_Cursor@z
  2131     02D5                     l1382:
  2132                           
  2133                           ;LCD4b.c: 59:         y = temp & 0x0F;
  2134     02D5  082F               	movf	Lcd_Set_Cursor@temp,w
  2135     02D6  390F               	andlw	15
  2136     02D7  00AE               	movwf	Lcd_Set_Cursor@y
  2137     02D8                     l1384:
  2138                           
  2139                           ;LCD4b.c: 60:         Lcd_Cmd(z);
  2140     02D8  082D               	movf	Lcd_Set_Cursor@z,w
  2141     02D9  120A  118A  2459  120A  118A  	fcall	_Lcd_Cmd
  2142     02DE                     l1386:
  2143                           
  2144                           ;LCD4b.c: 61:         Lcd_Cmd(y);
  2145     02DE  1283               	bcf	3,5	;RP0=0, select bank0
  2146     02DF  1303               	bcf	3,6	;RP1=0, select bank0
  2147     02E0  082E               	movf	Lcd_Set_Cursor@y,w
  2148     02E1  120A  118A  2459  120A  118A  	fcall	_Lcd_Cmd
  2149     02E6                     l113:
  2150     02E6  0008               	return
  2151     02E7                     __end_of_Lcd_Set_Cursor:
  2152                           
  2153                           	psect	text10
  2154     0459                     __ptext10:	
  2155 ;; *************** function _Lcd_Cmd *****************
  2156 ;; Defined at:
  2157 ;;		line 35 in file "LCD4b.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;  a               1    wreg     unsigned char 
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;  a               1    5[COMMON] unsigned char 
  2162 ;; Return value:  Size  Location     Type
  2163 ;;                  1    wreg      void 
  2164 ;; Registers used:
  2165 ;;		wreg, status,2, status,0, pclath, cstack
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2171 ;;      Params:         0       0       0       0       0
  2172 ;;      Locals:         1       0       0       0       0
  2173 ;;      Temps:          2       0       0       0       0
  2174 ;;      Totals:         3       0       0       0       0
  2175 ;;Total ram usage:        3 bytes
  2176 ;; Hardware stack levels used: 1
  2177 ;; Hardware stack levels required when called: 2
  2178 ;; This function calls:
  2179 ;;		_Lcd_Port
  2180 ;; This function is called by:
  2181 ;;		_Lcd_Set_Cursor
  2182 ;;		_Lcd_Init
  2183 ;;		_Lcd_Clear
  2184 ;;		_Lcd_Shift_Right
  2185 ;;		_Lcd_Shift_Left
  2186 ;; This function uses a non-reentrant model
  2187 ;;
  2188                           
  2189     0459                     _Lcd_Cmd:	
  2190                           ;psect for function _Lcd_Cmd
  2191                           
  2192                           
  2193                           ;incstack = 0
  2194                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2195                           ;Lcd_Cmd@a stored from wreg
  2196     0459  00F5               	movwf	Lcd_Cmd@a
  2197     045A                     l1358:
  2198                           
  2199                           ;LCD4b.c: 36:     PORTDbits.RD2 = 0;
  2200     045A  1283               	bcf	3,5	;RP0=0, select bank0
  2201     045B  1303               	bcf	3,6	;RP1=0, select bank0
  2202     045C  1108               	bcf	8,2	;volatile
  2203     045D                     l1360:
  2204                           
  2205                           ;LCD4b.c: 37:     Lcd_Port(a);
  2206     045D  0875               	movf	Lcd_Cmd@a,w
  2207     045E  120A  118A  2437  120A  118A  	fcall	_Lcd_Port
  2208     0463                     l1362:
  2209                           
  2210                           ;LCD4b.c: 38:     RD3 = 1;
  2211     0463  1283               	bcf	3,5	;RP0=0, select bank0
  2212     0464  1303               	bcf	3,6	;RP1=0, select bank0
  2213     0465  1588               	bsf	8,3	;volatile
  2214     0466                     l1364:
  2215                           
  2216                           ;LCD4b.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2217     0466  300B               	movlw	11
  2218     0467  00F4               	movwf	??_Lcd_Cmd+1
  2219     0468  3062               	movlw	98
  2220     0469  00F3               	movwf	??_Lcd_Cmd
  2221     046A                     u1167:
  2222     046A  0BF3               	decfsz	??_Lcd_Cmd,f
  2223     046B  2C6A               	goto	u1167
  2224     046C  0BF4               	decfsz	??_Lcd_Cmd+1,f
  2225     046D  2C6A               	goto	u1167
  2226     046E  0000               	nop
  2227     046F                     l1366:
  2228                           
  2229                           ;LCD4b.c: 40:     RD3 = 0;
  2230     046F  1283               	bcf	3,5	;RP0=0, select bank0
  2231     0470  1303               	bcf	3,6	;RP1=0, select bank0
  2232     0471  1188               	bcf	8,3	;volatile
  2233     0472                     l104:
  2234     0472  0008               	return
  2235     0473                     __end_of_Lcd_Cmd:
  2236                           
  2237                           	psect	text11
  2238     0437                     __ptext11:	
  2239 ;; *************** function _Lcd_Port *****************
  2240 ;; Defined at:
  2241 ;;		line 13 in file "LCD4b.c"
  2242 ;; Parameters:    Size  Location     Type
  2243 ;;  a               1    wreg     unsigned char 
  2244 ;; Auto vars:     Size  Location     Type
  2245 ;;  a               1    2[COMMON] unsigned char 
  2246 ;; Return value:  Size  Location     Type
  2247 ;;                  1    wreg      void 
  2248 ;; Registers used:
  2249 ;;		wreg
  2250 ;; Tracked objects:
  2251 ;;		On entry : 0/0
  2252 ;;		On exit  : 0/0
  2253 ;;		Unchanged: 0/0
  2254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2255 ;;      Params:         0       0       0       0       0
  2256 ;;      Locals:         1       0       0       0       0
  2257 ;;      Temps:          0       0       0       0       0
  2258 ;;      Totals:         1       0       0       0       0
  2259 ;;Total ram usage:        1 bytes
  2260 ;; Hardware stack levels used: 1
  2261 ;; Hardware stack levels required when called: 1
  2262 ;; This function calls:
  2263 ;;		Nothing
  2264 ;; This function is called by:
  2265 ;;		_Lcd_Cmd
  2266 ;;		_Lcd_Init
  2267 ;;		_Lcd_Write_Char
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271     0437                     _Lcd_Port:	
  2272                           ;psect for function _Lcd_Port
  2273                           
  2274                           
  2275                           ;incstack = 0
  2276                           ; Regs used in _Lcd_Port: [wreg]
  2277                           ;Lcd_Port@a stored from wreg
  2278     0437  00F2               	movwf	Lcd_Port@a
  2279     0438                     l1328:
  2280                           
  2281                           ;LCD4b.c: 14:     if (a & 1)
  2282     0438  1C72               	btfss	Lcd_Port@a,0
  2283     0439  2C3B               	goto	u851
  2284     043A  2C3C               	goto	u850
  2285     043B                     u851:
  2286     043B  2C40               	goto	l93
  2287     043C                     u850:
  2288     043C                     l1330:
  2289                           
  2290                           ;LCD4b.c: 15:         RD4 = 1;
  2291     043C  1283               	bcf	3,5	;RP0=0, select bank0
  2292     043D  1303               	bcf	3,6	;RP1=0, select bank0
  2293     043E  1608               	bsf	8,4	;volatile
  2294     043F  2C43               	goto	l94
  2295     0440                     l93:	
  2296                           ;LCD4b.c: 16:     else
  2297                           
  2298                           
  2299                           ;LCD4b.c: 17:         RD4 = 0;
  2300     0440  1283               	bcf	3,5	;RP0=0, select bank0
  2301     0441  1303               	bcf	3,6	;RP1=0, select bank0
  2302     0442  1208               	bcf	8,4	;volatile
  2303     0443                     l94:
  2304                           
  2305                           ;LCD4b.c: 19:     if (a & 2)
  2306     0443  1CF2               	btfss	Lcd_Port@a,1
  2307     0444  2C46               	goto	u861
  2308     0445  2C47               	goto	u860
  2309     0446                     u861:
  2310     0446  2C49               	goto	l95
  2311     0447                     u860:
  2312     0447                     l1332:
  2313                           
  2314                           ;LCD4b.c: 20:         RD5 = 1;
  2315     0447  1688               	bsf	8,5	;volatile
  2316     0448  2C4A               	goto	l96
  2317     0449                     l95:	
  2318                           ;LCD4b.c: 21:     else
  2319                           
  2320                           
  2321                           ;LCD4b.c: 22:         RD5 = 0;
  2322     0449  1288               	bcf	8,5	;volatile
  2323     044A                     l96:
  2324                           
  2325                           ;LCD4b.c: 24:     if (a & 4)
  2326     044A  1D72               	btfss	Lcd_Port@a,2
  2327     044B  2C4D               	goto	u871
  2328     044C  2C4E               	goto	u870
  2329     044D                     u871:
  2330     044D  2C50               	goto	l97
  2331     044E                     u870:
  2332     044E                     l1334:
  2333                           
  2334                           ;LCD4b.c: 25:         RD6 = 1;
  2335     044E  1708               	bsf	8,6	;volatile
  2336     044F  2C51               	goto	l98
  2337     0450                     l97:	
  2338                           ;LCD4b.c: 26:     else
  2339                           
  2340                           
  2341                           ;LCD4b.c: 27:         RD6 = 0;
  2342     0450  1308               	bcf	8,6	;volatile
  2343     0451                     l98:
  2344                           
  2345                           ;LCD4b.c: 29:     if (a & 8)
  2346     0451  1DF2               	btfss	Lcd_Port@a,3
  2347     0452  2C54               	goto	u881
  2348     0453  2C55               	goto	u880
  2349     0454                     u881:
  2350     0454  2C57               	goto	l99
  2351     0455                     u880:
  2352     0455                     l1336:
  2353                           
  2354                           ;LCD4b.c: 30:         RD7 = 1;
  2355     0455  1788               	bsf	8,7	;volatile
  2356     0456  2C58               	goto	l101
  2357     0457                     l99:	
  2358                           ;LCD4b.c: 31:     else
  2359                           
  2360                           
  2361                           ;LCD4b.c: 32:         RD7 = 0;
  2362     0457  1388               	bcf	8,7	;volatile
  2363     0458                     l101:
  2364     0458  0008               	return
  2365     0459                     __end_of_Lcd_Port:
  2366                           
  2367                           	psect	text12
  2368     00B8                     __ptext12:	
  2369 ;; *************** function _DHT11_read_data *****************
  2370 ;; Defined at:
  2371 ;;		line 49 in file "DHT11.c"
  2372 ;; Parameters:    Size  Location     Type
  2373 ;;  hum             1    wreg     PTR int 
  2374 ;;		 -> humedad(2), 
  2375 ;;  temp            1    5[COMMON] PTR int 
  2376 ;;		 -> temperatura(2), 
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;  hum             1    0[BANK0 ] PTR int 
  2379 ;;		 -> humedad(2), 
  2380 ;;  parity          1    1[BANK0 ] char 
  2381 ;; Return value:  Size  Location     Type
  2382 ;;                  1    wreg      char 
  2383 ;; Registers used:
  2384 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2385 ;; Tracked objects:
  2386 ;;		On entry : 0/0
  2387 ;;		On exit  : 0/0
  2388 ;;		Unchanged: 0/0
  2389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2390 ;;      Params:         1       0       0       0       0
  2391 ;;      Locals:         0       2       0       0       0
  2392 ;;      Temps:          4       0       0       0       0
  2393 ;;      Totals:         5       2       0       0       0
  2394 ;;Total ram usage:        7 bytes
  2395 ;; Hardware stack levels used: 1
  2396 ;; Hardware stack levels required when called: 2
  2397 ;; This function calls:
  2398 ;;		_DHT11_read_byte
  2399 ;;		_DHT11_response
  2400 ;;		_DHT11_start
  2401 ;; This function is called by:
  2402 ;;		_main
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406     00B8                     _DHT11_read_data:	
  2407                           ;psect for function _DHT11_read_data
  2408                           
  2409                           
  2410                           ;incstack = 0
  2411                           ; Regs used in _DHT11_read_data: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2412                           ;DHT11_read_data@hum stored from wreg
  2413     00B8  1283               	bcf	3,5	;RP0=0, select bank0
  2414     00B9  1303               	bcf	3,6	;RP1=0, select bank0
  2415     00BA  00AC               	movwf	DHT11_read_data@hum
  2416     00BB                     l1452:
  2417     00BB                     l1454:
  2418                           
  2419                           ;DHT11.c: 52:    DHT11_start();
  2420     00BB  120A  118A  2473  120A  118A  	fcall	_DHT11_start
  2421     00C0                     l1456:
  2422                           
  2423                           ;DHT11.c: 53:    DHT11_response();
  2424     00C0  120A  118A  249E  120A  118A  	fcall	_DHT11_response
  2425     00C5                     l1458:
  2426                           
  2427                           ;DHT11.c: 54:    bits[0] = DHT11_read_byte();
  2428     00C5  120A  118A  23E2  120A  118A  	fcall	_DHT11_read_byte
  2429     00CA  1283               	bcf	3,5	;RP0=0, select bank0
  2430     00CB  1303               	bcf	3,6	;RP1=0, select bank0
  2431     00CC  00B6               	movwf	_bits
  2432     00CD                     l1460:
  2433                           
  2434                           ;DHT11.c: 55:    bits[1] = DHT11_read_byte();
  2435     00CD  120A  118A  23E2  120A  118A  	fcall	_DHT11_read_byte
  2436     00D2  1283               	bcf	3,5	;RP0=0, select bank0
  2437     00D3  1303               	bcf	3,6	;RP1=0, select bank0
  2438     00D4  00B7               	movwf	_bits+1
  2439     00D5                     l1462:
  2440                           
  2441                           ;DHT11.c: 56:    bits[2] = DHT11_read_byte();
  2442     00D5  120A  118A  23E2  120A  118A  	fcall	_DHT11_read_byte
  2443     00DA  1283               	bcf	3,5	;RP0=0, select bank0
  2444     00DB  1303               	bcf	3,6	;RP1=0, select bank0
  2445     00DC  00B8               	movwf	_bits+2
  2446     00DD                     l1464:
  2447                           
  2448                           ;DHT11.c: 57:    bits[3] = DHT11_read_byte();
  2449     00DD  120A  118A  23E2  120A  118A  	fcall	_DHT11_read_byte
  2450     00E2  1283               	bcf	3,5	;RP0=0, select bank0
  2451     00E3  1303               	bcf	3,6	;RP1=0, select bank0
  2452     00E4  00B9               	movwf	_bits+3
  2453     00E5                     l1466:
  2454                           
  2455                           ;DHT11.c: 58:    bits[4] = DHT11_read_byte();
  2456     00E5  120A  118A  23E2  120A  118A  	fcall	_DHT11_read_byte
  2457     00EA  1283               	bcf	3,5	;RP0=0, select bank0
  2458     00EB  1303               	bcf	3,6	;RP1=0, select bank0
  2459     00EC  00BA               	movwf	_bits+4
  2460     00ED                     l1468:
  2461                           
  2462                           ;DHT11.c: 59:    parity = bits[0] + bits[1] + bits[2] + bits[3];
  2463     00ED  0838               	movf	_bits+2,w
  2464     00EE  0737               	addwf	_bits+1,w
  2465     00EF  00F6               	movwf	??_DHT11_read_data
  2466     00F0  0839               	movf	_bits+3,w
  2467     00F1  0776               	addwf	??_DHT11_read_data,w
  2468     00F2  00F7               	movwf	??_DHT11_read_data+1
  2469     00F3  0836               	movf	_bits,w
  2470     00F4  0777               	addwf	??_DHT11_read_data+1,w
  2471     00F5  00AD               	movwf	DHT11_read_data@parity
  2472     00F6                     l1470:
  2473                           
  2474                           ;DHT11.c: 60:    if (parity == bits[4]){
  2475     00F6  083A               	movf	_bits+4,w
  2476     00F7  062D               	xorwf	DHT11_read_data@parity,w
  2477     00F8  1D03               	skipz
  2478     00F9  28FB               	goto	u1041
  2479     00FA  28FC               	goto	u1040
  2480     00FB                     u1041:
  2481     00FB  292D               	goto	l1480
  2482     00FC                     u1040:
  2483     00FC                     l1472:
  2484                           
  2485                           ;DHT11.c: 61:       *hum = bits[0]<<8 | bits[1];
  2486     00FC  0836               	movf	_bits,w
  2487     00FD  00F6               	movwf	??_DHT11_read_data
  2488     00FE  01F7               	clrf	??_DHT11_read_data+1
  2489     00FF  0876               	movf	??_DHT11_read_data,w
  2490     0100  00F7               	movwf	??_DHT11_read_data+1
  2491     0101  01F6               	clrf	??_DHT11_read_data
  2492     0102  0837               	movf	_bits+1,w
  2493     0103  0476               	iorwf	??_DHT11_read_data,w
  2494     0104  00F8               	movwf	??_DHT11_read_data+2
  2495     0105  01F9               	clrf	??_DHT11_read_data+3
  2496     0106  1FB7               	btfss	_bits+1,7
  2497     0107  2909               	goto	u1054
  2498     0108  03F9               	decf	??_DHT11_read_data+3,f
  2499     0109                     u1054:
  2500     0109  0877               	movf	??_DHT11_read_data+1,w
  2501     010A  04F9               	iorwf	??_DHT11_read_data+3,f
  2502     010B  1283               	bcf	3,5	;RP0=0, select bank0
  2503     010C  1303               	bcf	3,6	;RP1=0, select bank0
  2504     010D  082C               	movf	DHT11_read_data@hum,w
  2505     010E  0084               	movwf	4
  2506     010F  0878               	movf	??_DHT11_read_data+2,w
  2507     0110  1383               	bcf	3,7	;select IRP bank0
  2508     0111  0080               	movwf	0
  2509     0112  0A84               	incf	4,f
  2510     0113  0879               	movf	??_DHT11_read_data+3,w
  2511     0114  0080               	movwf	0
  2512                           
  2513                           ;DHT11.c: 62:       *temp = bits[2]<<8 | bits[3];
  2514     0115  0838               	movf	_bits+2,w
  2515     0116  00F6               	movwf	??_DHT11_read_data
  2516     0117  01F7               	clrf	??_DHT11_read_data+1
  2517     0118  0876               	movf	??_DHT11_read_data,w
  2518     0119  00F7               	movwf	??_DHT11_read_data+1
  2519     011A  01F6               	clrf	??_DHT11_read_data
  2520     011B  0839               	movf	_bits+3,w
  2521     011C  0476               	iorwf	??_DHT11_read_data,w
  2522     011D  00F8               	movwf	??_DHT11_read_data+2
  2523     011E  01F9               	clrf	??_DHT11_read_data+3
  2524     011F  1FB9               	btfss	_bits+3,7
  2525     0120  2922               	goto	u1064
  2526     0121  03F9               	decf	??_DHT11_read_data+3,f
  2527     0122                     u1064:
  2528     0122  0877               	movf	??_DHT11_read_data+1,w
  2529     0123  04F9               	iorwf	??_DHT11_read_data+3,f
  2530     0124  0875               	movf	DHT11_read_data@temp,w
  2531     0125  0084               	movwf	4
  2532     0126  0878               	movf	??_DHT11_read_data+2,w
  2533     0127  0080               	movwf	0
  2534     0128  0A84               	incf	4,f
  2535     0129  0879               	movf	??_DHT11_read_data+3,w
  2536     012A  0080               	movwf	0
  2537     012B                     l1474:
  2538                           
  2539                           ;DHT11.c: 63:       return 1;
  2540     012B  3001               	movlw	1
  2541     012C  292E               	goto	l171
  2542     012D                     l1480:
  2543                           
  2544                           ;DHT11.c: 66:       return 0;
  2545     012D  3000               	movlw	0
  2546     012E                     l171:
  2547     012E  0008               	return
  2548     012F                     __end_of_DHT11_read_data:
  2549                           
  2550                           	psect	text13
  2551     0473                     __ptext13:	
  2552 ;; *************** function _DHT11_start *****************
  2553 ;; Defined at:
  2554 ;;		line 15 in file "DHT11.c"
  2555 ;; Parameters:    Size  Location     Type
  2556 ;;		None
  2557 ;; Auto vars:     Size  Location     Type
  2558 ;;		None
  2559 ;; Return value:  Size  Location     Type
  2560 ;;                  1    wreg      void 
  2561 ;; Registers used:
  2562 ;;		wreg
  2563 ;; Tracked objects:
  2564 ;;		On entry : 0/0
  2565 ;;		On exit  : 0/0
  2566 ;;		Unchanged: 0/0
  2567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2568 ;;      Params:         0       0       0       0       0
  2569 ;;      Locals:         0       0       0       0       0
  2570 ;;      Temps:          2       0       0       0       0
  2571 ;;      Totals:         2       0       0       0       0
  2572 ;;Total ram usage:        2 bytes
  2573 ;; Hardware stack levels used: 1
  2574 ;; Hardware stack levels required when called: 1
  2575 ;; This function calls:
  2576 ;;		Nothing
  2577 ;; This function is called by:
  2578 ;;		_DHT11_read_data
  2579 ;; This function uses a non-reentrant model
  2580 ;;
  2581                           
  2582     0473                     _DHT11_start:	
  2583                           ;psect for function _DHT11_start
  2584                           
  2585     0473                     l1412:	
  2586                           ;incstack = 0
  2587                           ; Regs used in _DHT11_start: [wreg]
  2588                           
  2589                           
  2590                           ;DHT11.c: 16:     TRISDbits.TRISD0 = 0;
  2591     0473  1683               	bsf	3,5	;RP0=1, select bank1
  2592     0474  1303               	bcf	3,6	;RP1=0, select bank1
  2593     0475  1008               	bcf	8,0	;volatile
  2594                           
  2595                           ;DHT11.c: 17:     RD0 = 0;
  2596     0476  1283               	bcf	3,5	;RP0=0, select bank0
  2597     0477  1303               	bcf	3,6	;RP1=0, select bank0
  2598     0478  1008               	bcf	8,0	;volatile
  2599     0479                     l1414:
  2600                           
  2601                           ;DHT11.c: 18:     _delay((unsigned long)((25)*(8000000/4000.0)));
  2602     0479  3041               	movlw	65
  2603     047A  00F3               	movwf	??_DHT11_start+1
  2604     047B  30EE               	movlw	238
  2605     047C  00F2               	movwf	??_DHT11_start
  2606     047D                     u1177:
  2607     047D  0BF2               	decfsz	??_DHT11_start,f
  2608     047E  2C7D               	goto	u1177
  2609     047F  0BF3               	decfsz	??_DHT11_start+1,f
  2610     0480  2C7D               	goto	u1177
  2611     0481  0000               	nop
  2612     0482                     l1416:
  2613                           
  2614                           ;DHT11.c: 19:     TRISDbits.TRISD0 = 1;
  2615     0482  1683               	bsf	3,5	;RP0=1, select bank1
  2616     0483  1303               	bcf	3,6	;RP1=0, select bank1
  2617     0484  1408               	bsf	8,0	;volatile
  2618                           
  2619                           ;DHT11.c: 20:     _delay((unsigned long)((30)*(8000000/4000000.0)));
  2620     0485  3013               	movlw	19
  2621     0486  00F2               	movwf	??_DHT11_start
  2622     0487                     u1187:
  2623     0487  0BF2               	decfsz	??_DHT11_start,f
  2624     0488  2C87               	goto	u1187
  2625     0489  2C8A               	nop2
  2626     048A                     l142:
  2627     048A  0008               	return
  2628     048B                     __end_of_DHT11_start:
  2629                           
  2630                           	psect	text14
  2631     049E                     __ptext14:	
  2632 ;; *************** function _DHT11_response *****************
  2633 ;; Defined at:
  2634 ;;		line 23 in file "DHT11.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;		None
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;		None
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  1    wreg      void 
  2641 ;; Registers used:
  2642 ;;		None
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2648 ;;      Params:         0       0       0       0       0
  2649 ;;      Locals:         0       0       0       0       0
  2650 ;;      Temps:          0       0       0       0       0
  2651 ;;      Totals:         0       0       0       0       0
  2652 ;;Total ram usage:        0 bytes
  2653 ;; Hardware stack levels used: 1
  2654 ;; Hardware stack levels required when called: 1
  2655 ;; This function calls:
  2656 ;;		Nothing
  2657 ;; This function is called by:
  2658 ;;		_DHT11_read_data
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662     049E                     _DHT11_response:	
  2663                           ;psect for function _DHT11_response
  2664                           
  2665     049E                     l1418:	
  2666                           ;incstack = 0
  2667                           ; Regs used in _DHT11_response: []
  2668                           
  2669     049E                     l145:	
  2670                           ;DHT11.c: 24:     while(RD0);
  2671                           
  2672     049E  1283               	bcf	3,5	;RP0=0, select bank0
  2673     049F  1303               	bcf	3,6	;RP1=0, select bank0
  2674     04A0  1808               	btfsc	8,0	;volatile
  2675     04A1  2CA3               	goto	u971
  2676     04A2  2CA4               	goto	u970
  2677     04A3                     u971:
  2678     04A3  2C9E               	goto	l145
  2679     04A4                     u970:
  2680     04A4                     l148:
  2681     04A4  1C08               	btfss	8,0	;volatile
  2682     04A5  2CA7               	goto	u981
  2683     04A6  2CA8               	goto	u980
  2684     04A7                     u981:
  2685     04A7  2CA4               	goto	l148
  2686     04A8                     u980:
  2687     04A8                     l151:
  2688     04A8  1808               	btfsc	8,0	;volatile
  2689     04A9  2CAB               	goto	u991
  2690     04AA  2CAC               	goto	u990
  2691     04AB                     u991:
  2692     04AB  2CA8               	goto	l151
  2693     04AC                     u990:
  2694     04AC                     l154:
  2695     04AC  0008               	return
  2696     04AD                     __end_of_DHT11_response:
  2697                           
  2698                           	psect	text15
  2699     03E2                     __ptext15:	
  2700 ;; *************** function _DHT11_read_byte *****************
  2701 ;; Defined at:
  2702 ;;		line 29 in file "DHT11.c"
  2703 ;; Parameters:    Size  Location     Type
  2704 ;;		None
  2705 ;; Auto vars:     Size  Location     Type
  2706 ;;  data            1    4[COMMON] char 
  2707 ;;  i               1    3[COMMON] char 
  2708 ;; Return value:  Size  Location     Type
  2709 ;;                  1    wreg      char 
  2710 ;; Registers used:
  2711 ;;		wreg, status,2, status,0, btemp+1
  2712 ;; Tracked objects:
  2713 ;;		On entry : 0/0
  2714 ;;		On exit  : 0/0
  2715 ;;		Unchanged: 0/0
  2716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2717 ;;      Params:         0       0       0       0       0
  2718 ;;      Locals:         2       0       0       0       0
  2719 ;;      Temps:          1       0       0       0       0
  2720 ;;      Totals:         3       0       0       0       0
  2721 ;;Total ram usage:        3 bytes
  2722 ;; Hardware stack levels used: 1
  2723 ;; Hardware stack levels required when called: 1
  2724 ;; This function calls:
  2725 ;;		Nothing
  2726 ;; This function is called by:
  2727 ;;		_DHT11_read_data
  2728 ;; This function uses a non-reentrant model
  2729 ;;
  2730                           
  2731     03E2                     _DHT11_read_byte:	
  2732                           ;psect for function _DHT11_read_byte
  2733                           
  2734     03E2                     l1420:	
  2735                           ;incstack = 0
  2736                           ; Regs used in _DHT11_read_byte: [wreg+status,2+status,0+btemp+1]
  2737                           
  2738                           
  2739                           ;DHT11.c: 31:    int8_t i;;DHT11.c: 32:    int8_t data = 0;
  2740     03E2  01F4               	clrf	DHT11_read_byte@data
  2741                           
  2742                           ;DHT11.c: 33:    for(i=0; i<8; i++){
  2743     03E3  01F3               	clrf	DHT11_read_byte@i
  2744     03E4                     l159:	
  2745                           ;DHT11.c: 35:       }
  2746                           
  2747                           
  2748                           ;DHT11.c: 34:       while(!RD0){
  2749     03E4  1283               	bcf	3,5	;RP0=0, select bank0
  2750     03E5  1303               	bcf	3,6	;RP1=0, select bank0
  2751     03E6  1C08               	btfss	8,0	;volatile
  2752     03E7  2BE9               	goto	u1001
  2753     03E8  2BEA               	goto	u1000
  2754     03E9                     u1001:
  2755     03E9  2BE4               	goto	l159
  2756     03EA                     u1000:
  2757     03EA                     l1426:
  2758                           
  2759                           ;DHT11.c: 36:       _delay((unsigned long)((30)*(8000000/4000000.0)));
  2760     03EA  3013               	movlw	19
  2761     03EB  00F2               	movwf	??_DHT11_read_byte
  2762     03EC                     u1197:
  2763     03EC  0BF2               	decfsz	??_DHT11_read_byte,f
  2764     03ED  2BEC               	goto	u1197
  2765     03EE  2BEF               	nop2
  2766     03EF                     l1428:
  2767                           
  2768                           ;DHT11.c: 37:       if(RD0){
  2769     03EF  1283               	bcf	3,5	;RP0=0, select bank0
  2770     03F0  1303               	bcf	3,6	;RP1=0, select bank0
  2771     03F1  1C08               	btfss	8,0	;volatile
  2772     03F2  2BF4               	goto	u1011
  2773     03F3  2BF5               	goto	u1010
  2774     03F4                     u1011:
  2775     03F4  2BF8               	goto	l1432
  2776     03F5                     u1010:
  2777     03F5                     l1430:
  2778                           
  2779                           ;DHT11.c: 38:         data = (data<<1 | 1);
  2780     03F5  1403               	setc
  2781     03F6  0DF4               	rlf	DHT11_read_byte@data,f
  2782                           
  2783                           ;DHT11.c: 39:       }
  2784     03F7  2BFC               	goto	l164
  2785     03F8                     l1432:
  2786                           
  2787                           ;DHT11.c: 41:         data = (data<<1);
  2788     03F8  0874               	movf	DHT11_read_byte@data,w
  2789     03F9  00F2               	movwf	??_DHT11_read_byte
  2790     03FA  0772               	addwf	??_DHT11_read_byte,w
  2791     03FB  00F4               	movwf	DHT11_read_byte@data
  2792     03FC                     l164:	
  2793                           ;DHT11.c: 44:       }
  2794                           
  2795                           
  2796                           ;DHT11.c: 43:       while(RD0){
  2797     03FC  1808               	btfsc	8,0	;volatile
  2798     03FD  2BFF               	goto	u1021
  2799     03FE  2C00               	goto	u1020
  2800     03FF                     u1021:
  2801     03FF  2BFC               	goto	l164
  2802     0400                     u1020:
  2803     0400                     l1434:
  2804                           
  2805                           ;DHT11.c: 45:    }
  2806     0400  3001               	movlw	1
  2807     0401  00FF               	movwf	btemp+1
  2808     0402  087F               	movf	btemp+1,w
  2809     0403  07F3               	addwf	DHT11_read_byte@i,f
  2810     0404                     l1436:
  2811     0404  0873               	movf	DHT11_read_byte@i,w
  2812     0405  3A80               	xorlw	128
  2813     0406  3E78               	addlw	-136
  2814     0407  1C03               	skipc
  2815     0408  2C0A               	goto	u1031
  2816     0409  2C0B               	goto	u1030
  2817     040A                     u1031:
  2818     040A  2BE4               	goto	l159
  2819     040B                     u1030:
  2820     040B                     l1438:
  2821                           
  2822                           ;DHT11.c: 46:    return data;
  2823     040B  0874               	movf	DHT11_read_byte@data,w
  2824     040C                     l167:
  2825     040C  0008               	return
  2826     040D                     __end_of_DHT11_read_byte:
  2827                           
  2828                           	psect	text16
  2829     04B9                     __ptext16:	
  2830 ;; *************** function _isr *****************
  2831 ;; Defined at:
  2832 ;;		line 53 in file "slave_DHT11.c"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;		None
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;		None
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  1    wreg      void 
  2839 ;; Registers used:
  2840 ;;		None
  2841 ;; Tracked objects:
  2842 ;;		On entry : 0/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2846 ;;      Params:         0       0       0       0       0
  2847 ;;      Locals:         0       0       0       0       0
  2848 ;;      Temps:          2       0       0       0       0
  2849 ;;      Totals:         2       0       0       0       0
  2850 ;;Total ram usage:        2 bytes
  2851 ;; Hardware stack levels used: 1
  2852 ;; This function calls:
  2853 ;;		Nothing
  2854 ;; This function is called by:
  2855 ;;		Interrupt level 1
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859     04B9                     _isr:	
  2860                           ;psect for function _isr
  2861                           
  2862     04B9                     i1l57:
  2863     04B9  0871               	movf	??_isr+1,w
  2864     04BA  008A               	movwf	10
  2865     04BB  0E70               	swapf	??_isr,w
  2866     04BC  0083               	movwf	3
  2867     04BD  0EFE               	swapf	btemp,f
  2868     04BE  0E7E               	swapf	btemp,w
  2869     04BF  0009               	retfie
  2870     04C0                     __end_of_isr:
  2871     007E                     btemp	set	126	;btemp
  2872     007E                     wtemp0	set	126
  2873                           
  2874                           	psect	intentry
  2875     0004                     __pintentry:	
  2876                           ;incstack = 0
  2877                           ; Regs used in _isr: []
  2878                           
  2879     0004                     interrupt_function:
  2880     007E                     saved_w	set	btemp
  2881     0004  00FE               	movwf	btemp
  2882     0005  0E03               	swapf	3,w
  2883     0006  00F0               	movwf	??_isr
  2884     0007  080A               	movf	10,w
  2885     0008  00F1               	movwf	??_isr+1
  2886     0009  120A  118A  2CB9   	ljmp	_isr
  2887                           
  2888                           	psect	config
  2889                           
  2890                           ;Config register CONFIG1 @ 0x2007
  2891                           ;	Oscillator Selection bits
  2892                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2893                           ;	Watchdog Timer Enable bit
  2894                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2895                           ;	Power-up Timer Enable bit
  2896                           ;	PWRTE = OFF, PWRT disabled
  2897                           ;	RE3/MCLR pin function select bit
  2898                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2899                           ;	Code Protection bit
  2900                           ;	CP = OFF, Program memory code protection is disabled
  2901                           ;	Data Code Protection bit
  2902                           ;	CPD = OFF, Data memory code protection is disabled
  2903                           ;	Brown Out Reset Selection bits
  2904                           ;	BOREN = OFF, BOR disabled
  2905                           ;	Internal External Switchover bit
  2906                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2907                           ;	Fail-Safe Clock Monitor Enabled bit
  2908                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2909                           ;	Low Voltage Programming Enable bit
  2910                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2911                           ;	In-Circuit Debugger Mode bit
  2912                           ;	DEBUG = 0x1, unprogrammed default
  2913     2007                     	org	8199
  2914     2007  20D4               	dw	8404
  2915                           
  2916                           ;Config register CONFIG2 @ 0x2008
  2917                           ;	Brown-out Reset Selection bit
  2918                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2919                           ;	Flash Program Memory Self Write Enable bits
  2920                           ;	WRT = OFF, Write protection off
  2921     2008                     	org	8200
  2922     2008  3FFF               	dw	16383

Data Sizes:
    Strings     37
    Constant    0
    Data        12
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     10      30
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    DHT11_read_data@temp	PTR int  size(1) Largest target is 2
		 -> temperatura(COMMON[2]), 

    DHT11_read_data@hum	PTR int  size(1) Largest target is 2
		 -> humedad(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 22
		 -> STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[3]), STR_2(CODE[4]), 
		 -> d_hum(BANK0[3]), u_hum(BANK0[3]), d_temp(BANK0[3]), u_temp(BANK0[3]), 
		 -> STR_1(CODE[22]), 

    separar_digitos8@dig8	PTR unsigned char  size(1) Largest target is 3
		 -> d_hum(BANK0[3]), u_hum(BANK0[3]), d_temp(BANK0[3]), u_temp(BANK0[3]), 


Critical Paths under _main in COMMON

    _main->_DHT11_read_data
    _main->_setup
    _setup->_Lcd_Init
    _Lcd_Init->_Lcd_Cmd
    _separar_digitos8->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _DHT11_read_data->_DHT11_read_byte

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _LDC_output->_separar_digitos8

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    6584
                                              7 BANK0      3     3      0
                    _DHT11_read_data
                         _LDC_output
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                2     2      0     279
                                              8 COMMON     2     2      0
                           _Lcd_Init
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     279
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _LDC_output                                           0     0      0    3901
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                   _separar_digitos8
 ---------------------------------------------------------------------------------
 (2) _separar_digitos8                                     7     6      1    1638
                                              0 BANK0      7     6      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     600
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2    1194
                                              7 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     254
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     815
                                              6 COMMON     2     1      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     155
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_read_data                                      7     6      1     395
                                              5 COMMON     5     4      1
                                              0 BANK0      2     2      0
                    _DHT11_read_byte
                     _DHT11_response
                        _DHT11_start
 ---------------------------------------------------------------------------------
 (2) _DHT11_start                                          2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _DHT11_response                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DHT11_read_byte                                      3     3      0     170
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DHT11_read_data
     _DHT11_read_byte
     _DHT11_response
     _DHT11_start
   _LDC_output
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
     _separar_digitos8
       ___awdiv
       ___awmod
   _Lcd_Set_Cursor
   _Lcd_Write_String
   _setup
     _Lcd_Init
       _Lcd_Cmd
       _Lcd_Port

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      A      1E       5       37.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2A      12        0.0%
ABS                  0      0      2A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Aug 18 20:36:06 2023

                       pc 0002                        l70 0436                        l73 00B7  
                      l76 0331                        l93 0440                        l94 0443  
                      l95 0449                        l96 044A                        l97 0450  
                      l98 0451                        l99 0457              ___awdiv@sign 0077  
                      fsr 0004                       l101 0458                       l104 0472  
                     l113 02E6                       l116 01F2                       l125 0377  
                     l142 048A                       l151 04A8                       l119 03E1  
                     l145 049E                       l154 04AC                       l171 012E  
                     l411 0195                       l164 03FC                       l148 04A4  
                     l167 040C                       l159 03E4                       l424 024B  
                     _RD0 0040                       _RD3 0043                       _RD4 0044  
                     _RD5 0045                       _RD6 0046                       _RD7 0047  
                     u500 0150                       u501 014F                       u520 0162  
                     u600 020E                       u521 0161                       u601 020D  
                     u515 0154                       u540 0173                       u620 0220  
                     u541 0172                       u621 021F                       u630 022A  
                     u535 0163                       u631 0229                       u615 0212  
                     u560 0187                       u480 0134                       u561 0186  
                     u545 016F                       u481 0133                       u570 018C  
                     u490 013F                       u650 023D                       u571 018B  
                     u555 017B                       u491 013E                       u651 023C  
                     u635 0226                       u900 02A3                       u660 0242  
                     u580 01F8                       u901 02A2                       u661 0241  
                     u645 0231                       u581 01F7                       _SCS 0478  
                     u590 0203                       u591 0202                       u920 02C8  
                     u921 02C7                       u850 043C                       u851 043B  
                     u915 02A9                       u860 0447                       u940 0341  
                     u861 0446                       u870 044E                       u950 0365  
                     u871 044D                       u935 02CE                       u880 0455  
                     u960 0377                       u881 0454                       u961 0376  
                     u970 04A4                       u971 04A3                       u980 04A8  
                     u981 04A7                       u990 04AC                       u991 04AB  
                     u895 03BA                       _isr 04B9                       fsr0 0004  
                     indf 0000              ___awmod@sign 0077               ?_LDC_output 0070  
                    l1100 0148                      l1110 015E                      l1102 014A  
                    l1120 0181                      l1112 0162                      l1104 0150  
                    l1114 0173                      l1106 0153                      l1122 0187  
                    l1130 01F3  separar_digitos8@unidades 0031                      l1124 018C  
                    l1116 0179                      l1108 015A                      l1140 0203  
                    l1132 01F4                      l1126 0191                      l1118 017A  
                    l1150 021C                      l1142 0208                      l1134 01F8  
                    l1152 0220                      l1144 020E                      l1160 023D  
                    l1136 01FD                      l1400 01A5                      l1330 043C  
                    l1090 0134                      l1162 0242                      l1154 022A  
                    l1146 0211                      l1138 01FF                      l1410 032C  
                    l1402 01B4                      l1420 03E2                      l1412 0473  
                    l1332 0447                      l1340 03B4                      l1092 0139  
                    l1164 0247                      l1156 0230                      l1148 0218  
                    l1500 009F                      l1404 01BA                      l1430 03F5  
                    l1414 0479                      l1334 044E                      l1350 03D0  
                    l1342 03B7                      l1094 013B                      l1086 012F  
                    l1158 0237                      l1406 02EA                      l1510 026C  
                    l1502 024C                      l1432 03F8                      l1416 0482  
                    l1336 0455                      l1328 0438                      l1360 045D  
                    l1352 03D6                      l1344 03C5                      l1096 013F  
                    l1088 0130                      l1408 0326                      l1520 0289  
                    l1512 0272                      l1504 0251                      l1434 0400  
                    l1426 03EA                      l1418 049E                      l1362 0463  
                    l1370 02A3                      l1354 03D9                      l1346 03C8  
                    l1338 03AE                      l1098 0144                      l1450 042D  
                    l1442 040D                      l1514 027A                      l1506 025C  
                    l1436 0404                      l1428 03EF                      l1460 00CD  
                    l1452 00BB                      l1364 0466                      l1380 02C8  
                    l1372 02B0                      l1356 03DE                      l1348 03CD  
                    l1444 0423                      l1516 0283                      l1508 0267  
                    l1438 040B                      l1470 00F6                      l1462 00D5  
                    l1454 00BB                      l1366 046F                      l1358 045A  
                    l1382 02D5                      l1374 02B3                      l1390 0337  
                    l1446 0427                      l1518 0287                      l1472 00FC  
                    l1480 012D                      l1464 00DD                      l1456 00C0  
                    l1384 02D8                      l1376 02B9                      l1368 029E  
                    l1392 0353                      l1448 0428                      l1474 012B  
                    l1466 00E5                      l1458 00C5                      l1386 02DE  
                    l1378 02C2                      l1394 035B                      l1490 0064  
                    l1468 00ED                      l1388 0332                      l1492 006D  
                    l1484 002B                      l1396 0196                      l1494 0085  
                    l1486 0053                      l1398 019C                      l1496 008D  
                    l1488 005B                      l1498 0096                      ?_isr 0070  
                    STR_1 0388                      STR_2 03A2                      STR_3 03AA  
                    STR_4 039E                      STR_5 03A6                      u1000 03EA  
                    u1001 03E9                      u1010 03F5                      u1011 03F4  
                    u1020 0400                      u1021 03FF                      u1030 040B  
                    u1031 040A                      u1040 00FC                      u1041 00FB  
                    u1107 0431                      u1117 01A0                      u1054 0109  
                    u1070 026C                      u1127 01AF                      u1071 026B  
                    u1064 0122                      u1137 01BE                      u1147 03CA  
                    u1157 03DB                      u1167 046A                      u1087 0257  
                    u1177 047D                      u1097 0291                      u1187 0487  
                    u1197 03EC                      i1l57 04B9         ?_Lcd_Write_String 0077  
                    _bits 0036                      _main 024C                      btemp 007E  
                    start 000C        ??_Lcd_Write_String 002C           __end_of_Lcd_Cmd 0473  
                   ??_isr 0070                     ?_main 0070           __end_of___awdiv 0196  
         __end_of___awmod 024C                     _ANSEL 0188           ___awdiv@divisor 0072  
         ___awdiv@counter 0076                     _PORTA 0005                     _PORTB 0006  
                   _PORTD 0008                     _TRISA 0085                     _TRISB 0086  
                   _TRISD 0088                     _d_hum 0020                     _u_hum 0023  
                   _setup 040D         ?_separar_digitos8 002C                     pclath 000A  
      ??_separar_digitos8 002D                     status 0003                     wtemp0 007E  
        __end_of_Lcd_Init 01F3          __end_of_Lcd_Port 0459           __initialization 000F  
            __end_of_main 029B          ??_DHT11_response 0072                    ??_main 0033  
        ___awdiv@dividend 0074                    ?_setup 0070                    _ANSELH 0189  
               ??_Lcd_Cmd 0073                 ??___awdiv 0076                 ??___awmod 0076  
                  _d_temp 0026          DHT11_read_byte@i 0073          ___awdiv@quotient 0078  
         ___awmod@divisor 0072                    _u_temp 0029           ___awmod@counter 0076  
                  saved_w 007E           Lcd_Set_Cursor@a 002C           Lcd_Set_Cursor@b 0076  
         Lcd_Set_Cursor@y 002E           Lcd_Set_Cursor@z 002D   __end_of__initialization 0027  
       ??_DHT11_read_data 0076         ??_DHT11_read_byte 0072            __pcstackCOMMON 0070  
            __pidataBANK0 04AD             __end_of_setup 0437            _Lcd_Set_Cursor 029B  
            ??_LDC_output 007A                 ?_Lcd_Init 0070                 ?_Lcd_Port 0070  
                 ??_setup 0078                __pbssBANK0 0036                __pmaintext 024C  
              __pintentry 0004        __end_of_LDC_output 00B8    __end_of_Lcd_Set_Cursor 02E7  
              ??_Lcd_Init 0076                ??_Lcd_Port 0072                __stringtab 0378  
          _Lcd_Write_Char 03AD                   _Lcd_Cmd 0459             ??_DHT11_start 0072  
                 ___awdiv 012F                   ___awmod 01F3                   _data_ok 003B  
         ?_Lcd_Set_Cursor 0076                   __ptext1 040D                   __ptext2 0196  
                 __ptext3 002B                   __ptext4 02E7                   __ptext5 01F3  
                 __ptext6 012F                   __ptext7 0332                   __ptext8 03AD  
                 __ptext9 029B                   _humedad 003C          ___awmod@dividend 0074  
  __end_of_Lcd_Write_Char 03E2      end_of_initialization 0027                 Lcd_Port@a 0072  
     __end_of_DHT11_start 048B                 _PORTDbits 0008   separar_digitos8@decenas 0030  
               _TRISDbits 0088           ?_Lcd_Write_Char 0070     DHT11_read_data@parity 002D  
         _DHT11_read_data 00B8         Lcd_Write_String@a 0077         Lcd_Write_String@i 002F  
         _DHT11_read_byte 03E2          _Lcd_Write_String 0332       start_initialization 000F  
             __end_of_isr 04C0               _DHT11_start 0473          _separar_digitos8 02E7  
              init_fetch0 048B               __pdataBANK0 0020           Lcd_Write_Char@a 0076  
         Lcd_Write_Char@y 0075   __end_of_DHT11_read_data 012F       DHT11_read_data@temp 0075  
             __pbssCOMMON 007A   __end_of_DHT11_read_byte 040D                 ___latbits 0002  
           __pcstackBANK0 002C                  ?_Lcd_Cmd 0070          ??_Lcd_Set_Cursor 0077  
     DHT11_read_byte@data 0074                  ?___awdiv 0072                  ?___awmod 0072  
               __pstrings 0378         interrupt_function 0004                  Lcd_Cmd@a 0075  
             __stringbase 0387          ??_Lcd_Write_Char 0073          ?_DHT11_read_data 0075  
        ?_DHT11_read_byte 0070                  _Lcd_Init 0196                  _Lcd_Port 0437  
          _DHT11_response 049E  __end_of_Lcd_Write_String 0378        DHT11_read_data@hum 002C  
      __end_of__stringtab 0388    __end_of_DHT11_response 04AD                  __ptext10 0459  
                __ptext11 0437                  __ptext12 00B8                  __ptext13 0473  
                __ptext14 049E                  __ptext15 03E2                  __ptext16 04B9  
__end_of_separar_digitos8 0332              ?_DHT11_start 0070           ?_DHT11_response 0070  
              _LDC_output 002B                  init_ram0 048F        Lcd_Write_Char@temp 0074  
                intlevel1 0000                 stringcode 0382                _OSCCONbits 008F  
    separar_digitos8@dig8 002C      separar_digitos8@div1 002F        Lcd_Set_Cursor@temp 002F  
             _temperatura 007A                  stringdir 0382                  stringtab 0378  
     separar_digitos8@num 0032  
